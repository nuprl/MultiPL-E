language: d
name: HumanEval_8_sum_product
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\n\
    \    {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8i31tv90.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp8i31tv90.d(16): Error: found `)` when expecting `;`

    /tmp/tmp8i31tv90.d(21): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8i31tv90.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(number in numbers)\n\t\
    {\n\t\tsum += number;\n\t\tproduct *= number;\n\t}\n\treturn Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl2y9gziw.d(16): Error: no identifier for declarator `number`

    /tmp/tmpl2y9gziw.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl2y9gziw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x, numbers)\
    \ {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9die_lx0.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp9die_lx0.d(16): Error: found `)` when expecting `;`

    /tmp/tmp9die_lx0.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9die_lx0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tfor (long i : numbers)\n\t{\n\t\
    \tsum += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk5aehcsn.d(16): Error: semicolon expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: expression expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5aehcsn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5t8553vl.d(16): Error: semicolon expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: expression expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5t8553vl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5t8553vl.d(16): Error: semicolon expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: expression expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5t8553vl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\
    \ {\n        sum += number;\n        product *= number;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvin6eol4.d(16): Error: no identifier for declarator `number`

    /tmp/tmpvin6eol4.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvin6eol4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5t8553vl.d(16): Error: semicolon expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: expression expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5t8553vl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpddkd97dt.d(16): Error: no identifier for declarator `number`

    /tmp/tmpddkd97dt.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpddkd97dt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpddkd97dt.d(16): Error: no identifier for declarator `number`

    /tmp/tmpddkd97dt.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpddkd97dt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(long i, numbers)\n\t{\n\
    \t\tsum += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplfm_vb_w.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmplfm_vb_w.d(16): Error: found `)` when expecting `;`

    /tmp/tmplfm_vb_w.d(21): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplfm_vb_w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i = 0; i < numbers.length;\
    \ ++i)\n    {\n        sum += numbers[i];\n        product *= numbers[i];\n  \
    \  }\n    return Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate =\
    \ sum_product;\n\n    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L,\
    \ 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L,\
    \ 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `sum` as
    parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `product`
    as parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614):
    Error: CTFE failed because of previous errors in `injectNamedFields`

    /tmp/tmpd04v6_u_.d(21): Error: template instance `tmpd04v6_u_.sum_product.Tuple!(sum,
    product)` error instantiating

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd04v6_u_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5t8553vl.d(16): Error: semicolon expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: expression expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5t8553vl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpddkd97dt.d(16): Error: no identifier for declarator `number`

    /tmp/tmpddkd97dt.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpddkd97dt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5t8553vl.d(16): Error: semicolon expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: expression expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5t8553vl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i = 0; i < numbers.length;\
    \ ++i)\n    {\n        sum += numbers[i];\n        product *= numbers[i];\n  \
    \  }\n    return Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate =\
    \ sum_product;\n\n    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L,\
    \ 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L,\
    \ 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `sum` as
    parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `product`
    as parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614):
    Error: CTFE failed because of previous errors in `injectNamedFields`

    /tmp/tmpd04v6_u_.d(21): Error: template instance `tmpd04v6_u_.sum_product.Tuple!(sum,
    product)` error instantiating

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd04v6_u_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long i, numbers)\
    \ {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum, product);\n\
    }\n/*\n For a given list of integers, return a tuple consisting of a sum and a\
    \ product of all the integers in a list.\n    Empty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n    >>> sum_product([])\n    tuple(0L,\
    \ 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\n\
    Tuple!(long, long) sum_product(long[] numbers) \n{\n    long sum = 0;\n    long\
    \ product = 1;\n    foreach(long i, numbers) {\n        sum += i;\n        product\
    \ *= i;\n    }\n    return Tuple!(sum, product);\n}\n/*\n For a given list of\
    \ integers, return a tuple consisting of a sum and a product of all the integers\
    \ in a list.\n    Empty sum should be equal to 0 and empty product should be equal\
    \ to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L,\
    \ 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[]\
    \ numbers) \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long i,\
    \ numbers) {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\n/*\n For a given list of integers, return a tuple consisting of\
    \ a sum and a product of all the integers in a list.\n    Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n\
    \    \n*/\nTuple!(long, long) sum_product(long[] numbers) \n{\n    long sum =\
    \ 0;\n    long product = 1;\n    foreach(long i, numbers) {\n        sum += i;\n\
    \        product *= i;\n    }\n    return Tuple!(sum, product);\n}\n/*\n For a\
    \ given list of integers, return a tuple consisting of a sum and a product of\
    \ all the integers in a list.\n    Empty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L,\
    \ 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[]\
    \ numbers) \n{\n    long sum = 0;\n    long product = 1;\n\nunittest\n{\n    alias\
    \ candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L, 1L));\n  \
    \  assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnhei_j0l.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmpnhei_j0l.d(16): Error: found `)` when expecting `;`

    /tmp/tmpnhei_j0l.d(20): Error: found `return` when expecting `)`

    /tmp/tmpnhei_j0l.d(35): Error: no identifier for declarator `numbers`

    /tmp/tmpnhei_j0l.d(35): Error: found `)` when expecting `;`

    /tmp/tmpnhei_j0l.d(39): Error: found `return` when expecting `)`

    /tmp/tmpnhei_j0l.d(54): Error: no identifier for declarator `numbers`

    /tmp/tmpnhei_j0l.d(54): Error: found `)` when expecting `;`

    /tmp/tmpnhei_j0l.d(58): Error: found `return` when expecting `)`

    /tmp/tmpnhei_j0l.d(73): Error: no identifier for declarator `numbers`

    /tmp/tmpnhei_j0l.d(73): Error: found `)` when expecting `;`

    /tmp/tmpnhei_j0l.d(77): Error: found `return` when expecting `)`

    /tmp/tmpnhei_j0l.d(93): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnhei_j0l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x, numbers)\
    \ {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9die_lx0.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp9die_lx0.d(16): Error: found `)` when expecting `;`

    /tmp/tmp9die_lx0.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9die_lx0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(number in numbers)\n\t\
    {\n\t\tsum += number;\n\t\tproduct *= number;\n\t}\n\treturn Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl2y9gziw.d(16): Error: no identifier for declarator `number`

    /tmp/tmpl2y9gziw.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl2y9gziw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\
    \ {\n        sum += number;\n        product *= number;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp96n_l96w.d(16): Error: semicolon expected, not `:`

    /tmp/tmp96n_l96w.d(16): Error: expression expected, not `:`

    /tmp/tmp96n_l96w.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp96n_l96w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x, numbers)\
    \ {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9die_lx0.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp9die_lx0.d(16): Error: found `)` when expecting `;`

    /tmp/tmp9die_lx0.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9die_lx0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(i : numbers)\n  \
    \  {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp606olajk.d(16): Error: no identifier for declarator `i`

    /tmp/tmp606olajk.d(16): Error: found `:` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp606olajk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long i, numbers)\
    \ {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9sufepi9.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp9sufepi9.d(16): Error: found `)` when expecting `;`

    /tmp/tmp9sufepi9.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9sufepi9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\
    \ {\n        sum += number;\n        product *= number;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp96n_l96w.d(16): Error: semicolon expected, not `:`

    /tmp/tmp96n_l96w.d(16): Error: expression expected, not `:`

    /tmp/tmp96n_l96w.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp96n_l96w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\
    \ {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8jog4vw8.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp8jog4vw8.d(16): Error: found `)` when expecting `;`

    /tmp/tmp8jog4vw8.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8jog4vw8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i = 0; i < numbers.length;\
    \ ++i)\n    {\n        sum += numbers[i];\n        product *= numbers[i];\n  \
    \  }\n    return Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate =\
    \ sum_product;\n\n    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L,\
    \ 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L,\
    \ 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `sum` as
    parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `product`
    as parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614):
    Error: CTFE failed because of previous errors in `injectNamedFields`

    /tmp/tmpd04v6_u_.d(21): Error: template instance `tmpd04v6_u_.sum_product.Tuple!(sum,
    product)` error instantiating

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd04v6_u_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x, numbers)\
    \ {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9die_lx0.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp9die_lx0.d(16): Error: found `)` when expecting `;`

    /tmp/tmp9die_lx0.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9die_lx0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(i : numbers)\n\t{\n\t\t\
    sum += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaxls7ef6.d(16): Error: no identifier for declarator `i`

    /tmp/tmpaxls7ef6.d(16): Error: found `:` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaxls7ef6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tfor (long i : numbers)\n\t{\n\t\
    \tsum += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk5aehcsn.d(16): Error: semicolon expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: expression expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5aehcsn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\n\
    \    {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8i31tv90.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp8i31tv90.d(16): Error: found `)` when expecting `;`

    /tmp/tmp8i31tv90.d(21): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8i31tv90.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\
    \ {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8jog4vw8.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp8jog4vw8.d(16): Error: found `)` when expecting `;`

    /tmp/tmp8jog4vw8.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8jog4vw8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpddkd97dt.d(16): Error: no identifier for declarator `number`

    /tmp/tmpddkd97dt.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpddkd97dt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(long n, numbers)\n\t{\n\
    \t\tsum += n;\n\t\tproduct *= n;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw75sons3.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmpw75sons3.d(16): Error: found `)` when expecting `;`

    /tmp/tmpw75sons3.d(21): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw75sons3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\
    \ {\n        sum += number;\n        product *= number;\n    }\n    return Tuple!(sum,\
    \ product);\n}\n/*\n For a given list of integers, return a tuple consisting of\
    \ a sum and a product of all the integers in a list.\n    Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n\
    \    \n*/\nTuple!(long, long) sum_product(long[] numbers) \n{\n    long sum =\
    \ 0;\n    long product = 1;\n    for (long number : numbers) {\n        sum +=\
    \ number;\n        product *= number;\n    }\n    return Tuple!(sum, product);\n\
    }\n/*\n For a given list of integers, return a tuple consisting of a sum and a\
    \ product of all the integers in a list.\n    Empty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n    >>> sum_product([])\n    tuple(0L,\
    \ 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\n\
    Tuple!(long, long) sum_product(long[] numbers) \n{\n    long sum = 0;\n    long\
    \ product = 1;\n    for (long number : numbers) {\n        sum += number;\n  \
    \      product *= number;\n    }\n    return Tuple!(sum, product);\n}\n/*\n For\
    \ a given list of integers, return a tuple consisting of a sum and a product of\
    \ all the integers in a list.\n    Empty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L,\
    \ 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[]\
    \ numbers) \n{\n    long sum = 0;\n    long product = 1;\n    for (long number\
    \ : numbers) {\n        sum += number;\n        product *= number;\n    }\n  \
    \  return Tuple!(sum, product);\n}\n/*\n For a given list of integers, return\
    \ a tuple consisting of a sum and a product of all the integers in a list.\n \
    \   Empty sum should be equal to 0 and empty product should be equal to 1.\n \
    \   >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n\
    \    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : \nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa2r1hgp4.d(16): Error: semicolon expected, not `:`

    /tmp/tmpa2r1hgp4.d(16): Error: expression expected, not `:`

    /tmp/tmpa2r1hgp4.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpa2r1hgp4.d(35): Error: semicolon expected, not `:`

    /tmp/tmpa2r1hgp4.d(35): Error: expression expected, not `:`

    /tmp/tmpa2r1hgp4.d(35): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpa2r1hgp4.d(54): Error: semicolon expected, not `:`

    /tmp/tmpa2r1hgp4.d(54): Error: expression expected, not `:`

    /tmp/tmpa2r1hgp4.d(54): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpa2r1hgp4.d(73): Error: semicolon expected, not `:`

    /tmp/tmpa2r1hgp4.d(73): Error: expression expected, not `:`

    /tmp/tmpa2r1hgp4.d(73): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpa2r1hgp4.d(92): Error: semicolon expected, not `:`

    /tmp/tmpa2r1hgp4.d(92): Error: expression expected, not `:`

    /tmp/tmpa2r1hgp4.d(93): Error: found `unittest` when expectin'
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpddkd97dt.d(16): Error: no identifier for declarator `number`

    /tmp/tmpddkd97dt.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpddkd97dt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number, numbers)\
    \ {\n        sum += number;\n        product *= number;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp935prydt.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp935prydt.d(16): Error: found `)` when expecting `;`

    /tmp/tmp935prydt.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp935prydt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x, numbers)\
    \ {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9die_lx0.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp9die_lx0.d(16): Error: found `)` when expecting `;`

    /tmp/tmp9die_lx0.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9die_lx0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\
    \ {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8jog4vw8.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp8jog4vw8.d(16): Error: found `)` when expecting `;`

    /tmp/tmp8jog4vw8.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8jog4vw8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\
    \ {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8jog4vw8.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp8jog4vw8.d(16): Error: found `)` when expecting `;`

    /tmp/tmp8jog4vw8.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8jog4vw8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(number, numbers) {\n\t\t\
    sum += number;\n\t\tproduct *= number;\n\t}\n\treturn Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp19c5vx_5.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp19c5vx_5.d(16): Error: found `)` when expecting `;`

    /tmp/tmp19c5vx_5.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp19c5vx_5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5t8553vl.d(16): Error: semicolon expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: expression expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5t8553vl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\
    \ {\n        sum += number;\n        product *= number;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp96n_l96w.d(16): Error: semicolon expected, not `:`

    /tmp/tmp96n_l96w.d(16): Error: expression expected, not `:`

    /tmp/tmp96n_l96w.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp96n_l96w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x, numbers)\
    \ {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum, product);\n\
    }\n/*\n For a given list of integers, return a tuple consisting of a sum and a\
    \ product of all the integers in a list.\n    Empty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n    >>> sum_product([])\n    tuple(0L,\
    \ 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\n\
    Tuple!(long, long) sum_product(long[] numbers) \n{\n    long sum = 0;\n    long\
    \ product = 1;\n    foreach(long x, numbers) {\n        sum += x;\n        product\
    \ *= x;\n    }\n    return Tuple!(sum, product);\n}\n/*\n For a given list of\
    \ integers, return a tuple consisting of a sum and a product of all the integers\
    \ in a list.\n    Empty sum should be equal to 0 and empty product should be equal\
    \ to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L,\
    \ 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[]\
    \ numbers) \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x,\
    \ numbers) {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum,\
    \ product);\n}\n/*\n For a given list of integers, return a tuple consisting of\
    \ a sum and a product of all the integers in a list.\n    Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n\
    \    \n*/\nTuple!(long, long) sum_product(long[] numbers) \n{\n    long sum =\
    \ 0;\n    long product = 1;\n    foreach(long x, numbers) {\n        sum += x;\n\
    \        product *= x;\n    }\n    return Tuple!(sum, product);\n}\n/*\n For a\
    \ given list of integers, return a tuple consisting of a sum and a product of\
    \ all the integers in a list.\n    Empty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L,\
    \ 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[]\
    \ numbers) \n{\n    long sum = 0;\n    long product = 1;\n\nunittest\n{\n    alias\
    \ candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L, 1L));\n  \
    \  assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpftmd02m6.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmpftmd02m6.d(16): Error: found `)` when expecting `;`

    /tmp/tmpftmd02m6.d(20): Error: found `return` when expecting `)`

    /tmp/tmpftmd02m6.d(35): Error: no identifier for declarator `numbers`

    /tmp/tmpftmd02m6.d(35): Error: found `)` when expecting `;`

    /tmp/tmpftmd02m6.d(39): Error: found `return` when expecting `)`

    /tmp/tmpftmd02m6.d(54): Error: no identifier for declarator `numbers`

    /tmp/tmpftmd02m6.d(54): Error: found `)` when expecting `;`

    /tmp/tmpftmd02m6.d(58): Error: found `return` when expecting `)`

    /tmp/tmpftmd02m6.d(73): Error: no identifier for declarator `numbers`

    /tmp/tmpftmd02m6.d(73): Error: found `)` when expecting `;`

    /tmp/tmpftmd02m6.d(77): Error: found `return` when expecting `)`

    /tmp/tmpftmd02m6.d(93): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpftmd02m6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i = 0; i < numbers.length;\
    \ ++i)\n    {\n        sum += numbers[i];\n        product *= numbers[i];\n  \
    \  }\n    return Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate =\
    \ sum_product;\n\n    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L,\
    \ 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L,\
    \ 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `sum` as
    parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `product`
    as parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614):
    Error: CTFE failed because of previous errors in `injectNamedFields`

    /tmp/tmpd04v6_u_.d(21): Error: template instance `tmpd04v6_u_.sum_product.Tuple!(sum,
    product)` error instantiating

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd04v6_u_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\n/*\n For a given list of integers, return a tuple consisting of\
    \ a sum and a product of all the integers in a list.\n    Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n\
    \    \n*/\nTuple!(int, int) sum_product(int[] numbers) \n{\n    int sum = 0;\n\
    \    int product = 1;\n    for (int i : numbers)\n    {\n        sum += i;\n \
    \       product *= i;\n    }\n    return Tuple!(sum, product);\n}\n/*\n For a\
    \ given list of integers, return a tuple consisting of a sum and a product of\
    \ all the integers in a list.\n    Empty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L,\
    \ 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(double, double) sum_product(double[]\
    \ numbers) \n{\n    double sum = 0;\n    double product = 1;\n    for (double\
    \ i : numbers)\n    {\n        sum += i;\n        product *= i;\n    }\n    return\
    \ Tuple!(sum, product);\n}\n/*\n For a given list of integers, return a tuple\
    \ consisting of a sum and a product of all the integers in a list.\n    Empty\
    \ sum should be equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n\
    \    \n*/\nTuple!(bool, bool) sum_product(bool[] numbers) \n{\n    bool sum =\
    \ false;\n    bool product = true;\n    for (bool i : numbers)\n    {\n      \
    \  sum += i;\n        product *= i;\n    }\n    return Tuple!(sum, product);\n\
    }\n/*\n For a given list of integers, return a tuple consisting of a sum and a\
    \ product of all the integers in a list.\n    Empty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n    >>> sum_product([])\n    tuple(0L,\
    \ 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\n\
    Tuple!(string, string) sum_product(string[] numbers) \n{\n    string sum = \"\"\
    ;\n    string product\nunittest\n{\n    alias candidate = sum_product;\n\n   \
    \ assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpchsf1jat.d(16): Error: semicolon expected, not `:`

    /tmp/tmpchsf1jat.d(16): Error: expression expected, not `:`

    /tmp/tmpchsf1jat.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpchsf1jat.d(36): Error: semicolon expected, not `:`

    /tmp/tmpchsf1jat.d(36): Error: expression expected, not `:`

    /tmp/tmpchsf1jat.d(36): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpchsf1jat.d(56): Error: semicolon expected, not `:`

    /tmp/tmpchsf1jat.d(56): Error: expression expected, not `:`

    /tmp/tmpchsf1jat.d(56): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpchsf1jat.d(76): Error: semicolon expected, not `:`

    /tmp/tmpchsf1jat.d(76): Error: expression expected, not `:`

    /tmp/tmpchsf1jat.d(76): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpchsf1jat.d(95): Error: found `product` when expecting `;` following statement

    /tmp/tmpchsf1jat.d(96): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittes'
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5t8553vl.d(16): Error: semicolon expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: expression expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5t8553vl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\n/*\n For a given list of integers, return a tuple consisting of\
    \ a sum and a product of all the integers in a list.\n    Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n\
    \    \n*/\nTuple!(int, int) sum_product(int[] numbers) \n{\n    int sum = 0;\n\
    \    int product = 1;\n    for (int i : numbers)\n    {\n        sum += i;\n \
    \       product *= i;\n    }\n    return Tuple!(sum, product);\n}\n/*\n For a\
    \ given list of integers, return a tuple consisting of a sum and a product of\
    \ all the integers in a list.\n    Empty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L,\
    \ 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(float, float) sum_product(float[]\
    \ numbers) \n{\n    float sum = 0;\n    float product = 1;\n    for (float i :\
    \ numbers)\n    {\n        sum += i;\n        product *= i;\n    }\n    return\
    \ Tuple!(sum, product);\n}\n/*\n For a given list of integers, return a tuple\
    \ consisting of a sum and a product of all the integers in a list.\n    Empty\
    \ sum should be equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n\
    \    \n*/\nTuple!(double, double) sum_product(double[] numbers) \n{\n    double\
    \ sum = 0;\n    double product = 1;\n    for (double i : numbers)\n    {\n   \
    \     sum += i;\n        product *= i;\n    }\n    return Tuple!(sum, product);\n\
    }\n/*\n For a given list of integers, return a tuple consisting of a sum and a\
    \ product of all the integers in a list.\n    Empty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n    >>> sum_product([])\n    tuple(0L,\
    \ 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\n\
    Tuple!(bool, bool) sum_product(bool[] numbers) \n{\n    bool sum = false;\n  \
    \  bool product\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpglx214d4.d(16): Error: semicolon expected, not `:`

    /tmp/tmpglx214d4.d(16): Error: expression expected, not `:`

    /tmp/tmpglx214d4.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpglx214d4.d(36): Error: semicolon expected, not `:`

    /tmp/tmpglx214d4.d(36): Error: expression expected, not `:`

    /tmp/tmpglx214d4.d(36): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpglx214d4.d(56): Error: semicolon expected, not `:`

    /tmp/tmpglx214d4.d(56): Error: expression expected, not `:`

    /tmp/tmpglx214d4.d(56): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpglx214d4.d(76): Error: semicolon expected, not `:`

    /tmp/tmpglx214d4.d(76): Error: expression expected, not `:`

    /tmp/tmpglx214d4.d(76): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpglx214d4.d(96): Error: semicolon expected, not `unittest`

    /tmp/tmpglx214d4.d(96): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/t'
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5t8553vl.d(16): Error: semicolon expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: expression expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5t8553vl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(number in numbers)\n\t\
    {\n\t\tsum += number;\n\t\tproduct *= number;\n\t}\n\treturn Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl2y9gziw.d(16): Error: no identifier for declarator `number`

    /tmp/tmpl2y9gziw.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl2y9gziw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x, numbers)\
    \ {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9die_lx0.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp9die_lx0.d(16): Error: found `)` when expecting `;`

    /tmp/tmp9die_lx0.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9die_lx0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(number, numbers) {\n\t\t\
    sum += number;\n\t\tproduct *= number;\n\t}\n\treturn Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp19c5vx_5.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp19c5vx_5.d(16): Error: found `)` when expecting `;`

    /tmp/tmp19c5vx_5.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp19c5vx_5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number, numbers)\
    \ {\n        sum += number;\n        product *= number;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp935prydt.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp935prydt.d(16): Error: found `)` when expecting `;`

    /tmp/tmp935prydt.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp935prydt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(long x, numbers)\n\t{\n\
    \t\tsum += x;\n\t\tproduct *= x;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6j2u_wk5.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp6j2u_wk5.d(16): Error: found `)` when expecting `;`

    /tmp/tmp6j2u_wk5.d(21): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6j2u_wk5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\
    \ {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8jog4vw8.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp8jog4vw8.d(16): Error: found `)` when expecting `;`

    /tmp/tmp8jog4vw8.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8jog4vw8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\
    \ {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8jog4vw8.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp8jog4vw8.d(16): Error: found `)` when expecting `;`

    /tmp/tmp8jog4vw8.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8jog4vw8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x, numbers)\
    \ {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9die_lx0.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp9die_lx0.d(16): Error: found `)` when expecting `;`

    /tmp/tmp9die_lx0.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9die_lx0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\
    \ {\n        sum += number;\n        product *= number;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp96n_l96w.d(16): Error: semicolon expected, not `:`

    /tmp/tmp96n_l96w.d(16): Error: expression expected, not `:`

    /tmp/tmp96n_l96w.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp96n_l96w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\
    \ {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8jog4vw8.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp8jog4vw8.d(16): Error: found `)` when expecting `;`

    /tmp/tmp8jog4vw8.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8jog4vw8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(number in numbers)\n\t\
    {\n\t\tsum += number;\n\t\tproduct *= number;\n\t}\n\treturn Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl2y9gziw.d(16): Error: no identifier for declarator `number`

    /tmp/tmpl2y9gziw.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl2y9gziw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(i : numbers) {\n\
    \        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpko9bexv4.d(16): Error: no identifier for declarator `i`

    /tmp/tmpko9bexv4.d(16): Error: found `:` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpko9bexv4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\n/*\n For a given list of integers, return a tuple consisting of\
    \ a sum and a product of all the integers in a list.\n    Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n\
    \    \n*/\nTuple!(int, int) sum_product(int[] numbers) \n{\n    int sum = 0;\n\
    \    int product = 1;\n    for (long i : numbers)\n    {\n        sum += i;\n\
    \        product *= i;\n    }\n    return Tuple!(sum, product);\n}\n/*\n For a\
    \ given list of integers, return a tuple consisting of a sum and a product of\
    \ all the integers in a list.\n    Empty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L,\
    \ 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(int, int) sum_product(long[]\
    \ numbers) \n{\n    int sum = 0;\n    int product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\n/*\n For a given list of integers, return a tuple consisting of\
    \ a sum and a product of all the integers in a list.\n    Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n\
    \    \n*/\nTuple!(int, int) sum_product(float[] numbers) \n{\n    int sum = 0;\n\
    \    int product = 1;\n    for (long i : numbers)\n    {\n        sum += i;\n\
    \        product *= i;\n    }\n    return Tuple!(sum, product);\n}\n/*\n For a\
    \ given list of integers, return a tuple consisting of a sum and a product of\
    \ all the integers in a list.\n    Empty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L,\
    \ 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(int, int) sum_product(double[]\
    \ numbers) \n{\n    int sum = 0;\n    int product = 1;\n    for (long i : \nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4pyulzka.d(16): Error: semicolon expected, not `:`

    /tmp/tmp4pyulzka.d(16): Error: expression expected, not `:`

    /tmp/tmp4pyulzka.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmp4pyulzka.d(36): Error: semicolon expected, not `:`

    /tmp/tmp4pyulzka.d(36): Error: expression expected, not `:`

    /tmp/tmp4pyulzka.d(36): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmp4pyulzka.d(56): Error: semicolon expected, not `:`

    /tmp/tmp4pyulzka.d(56): Error: expression expected, not `:`

    /tmp/tmp4pyulzka.d(56): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmp4pyulzka.d(76): Error: semicolon expected, not `:`

    /tmp/tmp4pyulzka.d(76): Error: expression expected, not `:`

    /tmp/tmp4pyulzka.d(76): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmp4pyulzka.d(96): Error: semicolon expected, not `:`

    /tmp/tmp4pyulzka.d(96): Error: expression expected, not `:`

    /tmp/tmp4pyulzka.d(97): Error: found `unittest` when expectin'
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\
    \ {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8jog4vw8.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp8jog4vw8.d(16): Error: found `)` when expecting `;`

    /tmp/tmp8jog4vw8.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8jog4vw8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\
    \ {\n        sum += number;\n        product *= number;\n    }\n    return Tuple!(sum,\
    \ product);\n}\n/*\n For a given list of integers, return a tuple consisting of\
    \ a sum and a product of all the integers in a list.\n    Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n    >>> sum_product_recursive([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product_recursive([1L, 2L, 3L, 4L])\n    tuple(10L,\
    \ 24L)\n    \n*/\nTuple!(long, long) sum_product_recursive(long[] numbers) \n\
    {\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers) {\n\
    \        sum += number;\n        product *= number;\n    }\n    return Tuple!(sum,\
    \ product);\n}\n/*\n For a given list of integers, return a tuple consisting of\
    \ a sum and a product of all the integers in a list.\n    Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n    >>> sum_product_iterative([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product_iterative([1L, 2L, 3L, 4L])\n    tuple(10L,\
    \ 24L)\n    \n*/\nTuple!(long, long) sum_product_iterative(long[] numbers) \n\
    {\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers) {\n\
    \        sum += number;\n        product *= number;\n    }\n    return Tuple!(sum,\
    \ product);\n}\n/*\n For a given list of integers, return a tuple consisting of\
    \ a sum and a product of all the integers in a list.\n    Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n    >>> sum_product_iterative_recursive([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product_iterative_recursive([1L, 2L, 3L, 4L])\n\
    \    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product_iterative_recursive(long[]\
    \ numbers) \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in\
    \ numbers) {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\n/*\n For a given list of integers, return a tuple\
    \ consisting of a sum and a product of all the integers in a list.\n    Empty\
    \ sum should be equal to 0 and empty product should be equal to 1.\n    >>> sum_product_iterative_recursive2([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product_iterative_recursive2([1L, 2L, 3L, 4L])\n\
    \    \nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmphrgmndqu.d(16): Error: no identifier for declarator `number`

    /tmp/tmphrgmndqu.d(16): Error: found `in` when expecting `;`

    /tmp/tmphrgmndqu.d(35): Error: no identifier for declarator `number`

    /tmp/tmphrgmndqu.d(35): Error: found `in` when expecting `;`

    /tmp/tmphrgmndqu.d(54): Error: no identifier for declarator `number`

    /tmp/tmphrgmndqu.d(54): Error: found `in` when expecting `;`

    /tmp/tmphrgmndqu.d(73): Error: no identifier for declarator `number`

    /tmp/tmphrgmndqu.d(73): Error: found `in` when expecting `;`

    /tmp/tmphrgmndqu.d(79): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphrgmndqu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpddkd97dt.d(16): Error: no identifier for declarator `number`

    /tmp/tmpddkd97dt.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpddkd97dt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\
    \ {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8jog4vw8.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp8jog4vw8.d(16): Error: found `)` when expecting `;`

    /tmp/tmp8jog4vw8.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8jog4vw8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(long x, numbers)\n\t{\n\
    \t\tsum += x;\n\t\tproduct *= x;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6j2u_wk5.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp6j2u_wk5.d(16): Error: found `)` when expecting `;`

    /tmp/tmp6j2u_wk5.d(21): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6j2u_wk5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(number in numbers)\n\t\
    {\n\t\tsum += number;\n\t\tproduct *= number;\n\t}\n\treturn Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl2y9gziw.d(16): Error: no identifier for declarator `number`

    /tmp/tmpl2y9gziw.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl2y9gziw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5t8553vl.d(16): Error: semicolon expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: expression expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5t8553vl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(long n, numbers)\n\t{\n\
    \t\tsum += n;\n\t\tproduct *= n;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw75sons3.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmpw75sons3.d(16): Error: found `)` when expecting `;`

    /tmp/tmpw75sons3.d(21): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw75sons3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5t8553vl.d(16): Error: semicolon expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: expression expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5t8553vl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpddkd97dt.d(16): Error: no identifier for declarator `number`

    /tmp/tmpddkd97dt.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpddkd97dt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(number in numbers)\n\t\
    {\n\t\tsum += number;\n\t\tproduct *= number;\n\t}\n\treturn Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl2y9gziw.d(16): Error: no identifier for declarator `number`

    /tmp/tmpl2y9gziw.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl2y9gziw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpddkd97dt.d(16): Error: no identifier for declarator `number`

    /tmp/tmpddkd97dt.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpddkd97dt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5t8553vl.d(16): Error: semicolon expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: expression expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5t8553vl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(long n, numbers)\n\t{\n\
    \t\tsum += n;\n\t\tproduct *= n;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw75sons3.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmpw75sons3.d(16): Error: found `)` when expecting `;`

    /tmp/tmpw75sons3.d(21): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw75sons3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\n\
    \    {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum,\
    \ product);\n}\n/*\n For a given list of integers, return a tuple consisting of\
    \ a sum and a product of all the integers in a list.\n    Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n    >>> sum_product_recursive([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product_recursive([1L, 2L, 3L, 4L])\n    tuple(10L,\
    \ 24L)\n    \n*/\nTuple!(long, long) sum_product_recursive(long[] numbers) \n\
    {\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\n  \
    \  {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum,\
    \ product);\n}\n/*\n For a given list of integers, return a tuple consisting of\
    \ a sum and a product of all the integers in a list.\n    Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n    >>> sum_product_iterative([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product_iterative([1L, 2L, 3L, 4L])\n    tuple(10L,\
    \ 24L)\n    \n*/\nTuple!(long, long) sum_product_iterative(long[] numbers) \n\
    {\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\n  \
    \  {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum,\
    \ product);\n}\n/*\n For a given list of integers, return a tuple consisting of\
    \ a sum and a product of all the integers in a list.\n    Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n    >>> sum_product_iterative_iterate([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product_iterative_iterate([1L, 2L, 3L, 4L])\n\
    \    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product_iterative_iterate(long[]\
    \ numbers) \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long n,\
    \ numbers)\n    {\n        sum += n;\n        product *= n;\n    }\n    return\
    \ Tuple!(sum, product);\n}\n/*\n For a given list of integers, return a tuple\
    \ consisting of a sum and a product of all the integers in a list.\n    Empty\
    \ sum should be equal to 0 and empty product should be equal to 1.\n    >>> sum_product_iterative_recursive([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product_iterative_recursive([1L, 2L, 3L, \nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb2lbpxyz.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmpb2lbpxyz.d(16): Error: found `)` when expecting `;`

    /tmp/tmpb2lbpxyz.d(21): Error: found `return` when expecting `)`

    /tmp/tmpb2lbpxyz.d(36): Error: no identifier for declarator `numbers`

    /tmp/tmpb2lbpxyz.d(36): Error: found `)` when expecting `;`

    /tmp/tmpb2lbpxyz.d(41): Error: found `return` when expecting `)`

    /tmp/tmpb2lbpxyz.d(56): Error: no identifier for declarator `numbers`

    /tmp/tmpb2lbpxyz.d(56): Error: found `)` when expecting `;`

    /tmp/tmpb2lbpxyz.d(61): Error: found `return` when expecting `)`

    /tmp/tmpb2lbpxyz.d(76): Error: no identifier for declarator `numbers`

    /tmp/tmpb2lbpxyz.d(76): Error: found `)` when expecting `;`

    /tmp/tmpb2lbpxyz.d(81): Error: found `return` when expecting `)`

    /tmp/tmpb2lbpxyz.d(83): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb2lbpxyz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tfor (long i : numbers)\n\t{\n\t\
    \tsum += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk5aehcsn.d(16): Error: semicolon expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: expression expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5aehcsn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i = 0; i < numbers.length;\
    \ ++i)\n    {\n        sum += numbers[i];\n        product *= numbers[i];\n  \
    \  }\n    return Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate =\
    \ sum_product;\n\n    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L,\
    \ 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L,\
    \ 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `sum` as
    parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `product`
    as parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614):
    Error: CTFE failed because of previous errors in `injectNamedFields`

    /tmp/tmpd04v6_u_.d(21): Error: template instance `tmpd04v6_u_.sum_product.Tuple!(sum,
    product)` error instantiating

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd04v6_u_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i = 0; i < numbers.length;\
    \ ++i)\n    {\n        sum += numbers[i];\n        product *= numbers[i];\n  \
    \  }\n    return Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate =\
    \ sum_product;\n\n    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L,\
    \ 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L,\
    \ 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `sum` as
    parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `product`
    as parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614):
    Error: CTFE failed because of previous errors in `injectNamedFields`

    /tmp/tmpd04v6_u_.d(21): Error: template instance `tmpd04v6_u_.sum_product.Tuple!(sum,
    product)` error instantiating

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd04v6_u_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x, numbers)\
    \ {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9die_lx0.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp9die_lx0.d(16): Error: found `)` when expecting `;`

    /tmp/tmp9die_lx0.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9die_lx0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\n/*\n For a given list of integers, return a tuple consisting of\
    \ a sum and a product of all the integers in a list.\n    Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n    >>> sum_product_recursive([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product_recursive([1L, 2L, 3L, 4L])\n    tuple(10L,\
    \ 24L)\n    \n*/\nTuple!(long, long) sum_product_recursive(long[] numbers) \n\
    {\n    if (numbers.length == 0)\n        return Tuple!(0L, 1L);\n    long sum\
    \ = numbers[0];\n    long product = 1;\n    for (long i : numbers)\n    {\n  \
    \      sum += i;\n        product *= i;\n    }\n    return Tuple!(sum, product);\n\
    }\n/*\n For a given list of integers, return a tuple consisting of a sum and a\
    \ product of all the integers in a list.\n    Empty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n    >>> sum_product_iterative([])\n   \
    \ tuple(0L, 1L)\n    >>> sum_product_iterative([1L, 2L, 3L, 4L])\n    tuple(10L,\
    \ 24L)\n    \n*/\nTuple!(long, long) sum_product_iterative(long[] numbers) \n\
    {\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n    {\n\
    \        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum, product);\n\
    }\n/*\n For a given list of integers, return a tuple consisting of a sum and a\
    \ product of all the integers in a list.\n    Empty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n    >>> sum_product_iterative_recursive([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product_iterative_recursive([1L, 2L, 3L, 4L])\n\
    \    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product_iterative_recursive(long[]\
    \ numbers) \n{\n    if (numbers.length == 0)\n        return Tuple!(0L, 1L);\n\
    \    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n    {\n\
    \        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum, product);\n\
    }\n/*\n For a given list of integers, return a tuple consisting of a sum and a\
    \ product of all the integers in a list.\n    Empty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n    >>> sum_\nunittest\n{\n    alias candidate\
    \ = sum_product;\n\n    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L,\
    \ 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L,\
    \ 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0o8j3wsg.d(16): Error: semicolon expected, not `:`

    /tmp/tmp0o8j3wsg.d(16): Error: expression expected, not `:`

    /tmp/tmp0o8j3wsg.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmp0o8j3wsg.d(38): Error: semicolon expected, not `:`

    /tmp/tmp0o8j3wsg.d(38): Error: expression expected, not `:`

    /tmp/tmp0o8j3wsg.d(38): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmp0o8j3wsg.d(58): Error: semicolon expected, not `:`

    /tmp/tmp0o8j3wsg.d(58): Error: expression expected, not `:`

    /tmp/tmp0o8j3wsg.d(58): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmp0o8j3wsg.d(80): Error: semicolon expected, not `:`

    /tmp/tmp0o8j3wsg.d(80): Error: expression expected, not `:`

    /tmp/tmp0o8j3wsg.d(80): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmp0o8j3wsg.d(87): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0o8j3wsg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5t8553vl.d(16): Error: semicolon expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: expression expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5t8553vl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(i : numbers) {\n\t\tsum\
    \ += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzjktdnu_.d(16): Error: no identifier for declarator `i`

    /tmp/tmpzjktdnu_.d(16): Error: found `:` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzjktdnu_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpddkd97dt.d(16): Error: no identifier for declarator `number`

    /tmp/tmpddkd97dt.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpddkd97dt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x, numbers)\
    \ {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9die_lx0.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp9die_lx0.d(16): Error: found `)` when expecting `;`

    /tmp/tmp9die_lx0.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9die_lx0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long number, numbers)\
    \ {\n        sum += number;\n        product *= number;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplaej237s.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmplaej237s.d(16): Error: found `)` when expecting `;`

    /tmp/tmplaej237s.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplaej237s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\n/*\n For a given list of integers, return a tuple\
    \ consisting of a sum and a product of all the integers in a list.\n    Empty\
    \ sum should be equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n\
    \    \n*/\nTuple!(long, long) sum_product(long[] numbers) \n{\n    long sum =\
    \ 0;\n    long product = 1;\n    foreach(number in numbers)\n    {\n        sum\
    \ += number;\n        product *= number;\n    }\n    return Tuple!(sum, product);\n\
    }\n/*\n For a given list of integers, return a tuple consisting of a sum and a\
    \ product of all the integers in a list.\n    Empty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n    >>> sum_product([])\n    tuple(0L,\
    \ 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\n\
    Tuple!(long, long) sum_product(long[] numbers) \n{\n    long sum = 0;\n    long\
    \ product = 1;\n    foreach(number in numbers)\n    {\n        sum += number;\n\
    \        product *= number;\n    }\n    return Tuple!(sum, product);\n}\n/*\n\
    \ For a given list of integers, return a tuple consisting of a sum and a product\
    \ of all the integers in a list.\n    Empty sum should be equal to 0 and empty\
    \ product should be equal to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n\
    \    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long,\
    \ long) sum_product(long[] numbers) \n{\n    long sum = 0;\n    long product =\
    \ 1;\n    foreach(number in numbers)\n    {\n        sum += number;\n        product\
    \ *= number;\n    }\n    return Tuple!(sum, product);\n}\n/*\n For a given list\
    \ of integers, return a tuple consisting of a sum and a product of all the integers\
    \ in a list.\n    Empty sum should be equal to 0 and empty product should be equal\
    \ to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L,\
    \ 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[]\
    \ numbers) \n{\n    long \nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps32g8p3a.d(16): Error: no identifier for declarator `number`

    /tmp/tmps32g8p3a.d(16): Error: found `in` when expecting `;`

    /tmp/tmps32g8p3a.d(36): Error: no identifier for declarator `number`

    /tmp/tmps32g8p3a.d(36): Error: found `in` when expecting `;`

    /tmp/tmps32g8p3a.d(56): Error: no identifier for declarator `number`

    /tmp/tmps32g8p3a.d(56): Error: found `in` when expecting `;`

    /tmp/tmps32g8p3a.d(76): Error: no identifier for declarator `number`

    /tmp/tmps32g8p3a.d(76): Error: found `in` when expecting `;`

    /tmp/tmps32g8p3a.d(95): Error: no identifier for declarator `long`

    /tmp/tmps32g8p3a.d(95): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps32g8p3a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\
    \ {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8jog4vw8.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp8jog4vw8.d(16): Error: found `)` when expecting `;`

    /tmp/tmp8jog4vw8.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8jog4vw8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tfor (long i : numbers)\n\t{\n\t\
    \tsum += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk5aehcsn.d(16): Error: semicolon expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: expression expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5aehcsn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long number, numbers)\
    \ {\n        sum += number;\n        product *= number;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplaej237s.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmplaej237s.d(16): Error: found `)` when expecting `;`

    /tmp/tmplaej237s.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplaej237s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number, numbers)\
    \ {\n        sum += number;\n        product *= number;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp935prydt.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp935prydt.d(16): Error: found `)` when expecting `;`

    /tmp/tmp935prydt.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp935prydt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\n/*\n For a given list of integers, return a tuple consisting of\
    \ a sum and a product of all the integers in a list.\n    Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n\
    \    \n*/\nTuple!(int, int) sum_product(int[] numbers) \n{\n    int sum = 0;\n\
    \    int product = 1;\n    for (int i : numbers)\n    {\n        sum += i;\n \
    \       product *= i;\n    }\n    return Tuple!(sum, product);\n}\n/*\n For a\
    \ given list of integers, return a tuple consisting of a sum and a product of\
    \ all the integers in a list.\n    Empty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L,\
    \ 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(double, double) sum_product(double[]\
    \ numbers) \n{\n    double sum = 0;\n    double product = 1;\n    for (double\
    \ i : numbers)\n    {\n        sum += i;\n        product *= i;\n    }\n    return\
    \ Tuple!(sum, product);\n}\n/*\n For a given list of integers, return a tuple\
    \ consisting of a sum and a product of all the integers in a list.\n    Empty\
    \ sum should be equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n\
    \    \n*/\nTuple!(bool, bool) sum_product(bool[] numbers) \n{\n    bool sum =\
    \ false;\n    bool product = true;\n    for (bool i : numbers)\n    {\n      \
    \  sum += i;\n        product *= i;\n    }\n    return Tuple!(sum, product);\n\
    }\n/*\n For a given list of integers, return a tuple consisting of a sum and a\
    \ product of all the integers in a list.\n    Empty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n    >>> sum_product([])\n    tuple(0L,\
    \ 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\n\
    Tuple!(string, string) sum_product(string[] numbers) \n{\n    string sum = \"\"\
    ;\n    string product\nunittest\n{\n    alias candidate = sum_product;\n\n   \
    \ assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpchsf1jat.d(16): Error: semicolon expected, not `:`

    /tmp/tmpchsf1jat.d(16): Error: expression expected, not `:`

    /tmp/tmpchsf1jat.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpchsf1jat.d(36): Error: semicolon expected, not `:`

    /tmp/tmpchsf1jat.d(36): Error: expression expected, not `:`

    /tmp/tmpchsf1jat.d(36): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpchsf1jat.d(56): Error: semicolon expected, not `:`

    /tmp/tmpchsf1jat.d(56): Error: expression expected, not `:`

    /tmp/tmpchsf1jat.d(56): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpchsf1jat.d(76): Error: semicolon expected, not `:`

    /tmp/tmpchsf1jat.d(76): Error: expression expected, not `:`

    /tmp/tmpchsf1jat.d(76): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpchsf1jat.d(95): Error: found `product` when expecting `;` following statement

    /tmp/tmpchsf1jat.d(96): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittes'
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tfor (long i : numbers)\n\t{\n\t\
    \tsum += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk5aehcsn.d(16): Error: semicolon expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: expression expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5aehcsn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(long x, numbers) {\n\t\t\
    sum += x;\n\t\tproduct *= x;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ki7ztxf.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp6ki7ztxf.d(16): Error: found `)` when expecting `;`

    /tmp/tmp6ki7ztxf.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ki7ztxf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\n/*\n For a given list of integers, return a tuple\
    \ consisting of a sum and a product of all the integers in a list.\n    Empty\
    \ sum should be equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n\
    \    \n*/\nTuple!(long, long) sum_product(long[] numbers) \n{\n    long sum =\
    \ 0;\n    long product = 1;\n    for (long number : numbers)\n    {\n        sum\
    \ += number;\n        product *= number;\n    }\n    return Tuple!(sum, product);\n\
    }\n/*\n For a given list of integers, return a tuple consisting of a sum and a\
    \ product of all the integers in a list.\n    Empty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n    >>> sum_product([])\n    tuple(0L,\
    \ 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\n\
    Tuple!(long, long) sum_product(long[] numbers) \n{\n    long sum = 0;\n    long\
    \ product = 1;\n    for (long number : numbers)\n    {\n        sum += number;\n\
    \        product *= number;\n    }\n    return Tuple!(sum, product);\n}\n/*\n\
    \ For a given list of integers, return a tuple consisting of a sum and a product\
    \ of all the integers in a list.\n    Empty sum should be equal to 0 and empty\
    \ product should be equal to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n\
    \    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long,\
    \ long) sum_product(long[] numbers) \n{\n    long sum = 0;\n    long product =\
    \ 1;\n    for (long number : numbers)\n    {\n        sum += number;\n       \
    \ product *= number;\n    }\n    return Tuple!(sum, product);\n}\n/*\n For a given\
    \ list of integers, return a tuple consisting of a sum and a product of all the\
    \ integers in a list.\n    Empty sum should be equal to 0 and empty product should\
    \ be equal to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L,\
    \ 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[]\
    \ numbers) \n{\n    long sum = 0;\n    \nunittest\n{\n    alias candidate = sum_product;\n\
    \n    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvojbecmv.d(16): Error: semicolon expected, not `:`

    /tmp/tmpvojbecmv.d(16): Error: expression expected, not `:`

    /tmp/tmpvojbecmv.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpvojbecmv.d(36): Error: semicolon expected, not `:`

    /tmp/tmpvojbecmv.d(36): Error: expression expected, not `:`

    /tmp/tmpvojbecmv.d(36): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpvojbecmv.d(56): Error: semicolon expected, not `:`

    /tmp/tmpvojbecmv.d(56): Error: expression expected, not `:`

    /tmp/tmpvojbecmv.d(56): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpvojbecmv.d(76): Error: semicolon expected, not `:`

    /tmp/tmpvojbecmv.d(76): Error: expression expected, not `:`

    /tmp/tmpvojbecmv.d(76): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpvojbecmv.d(96): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvojbecmv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5t8553vl.d(16): Error: semicolon expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: expression expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5t8553vl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5t8553vl.d(16): Error: semicolon expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: expression expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5t8553vl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpddkd97dt.d(16): Error: no identifier for declarator `number`

    /tmp/tmpddkd97dt.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpddkd97dt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tfor (long i : numbers)\n\t{\n\t\
    \tsum += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk5aehcsn.d(16): Error: semicolon expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: expression expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5aehcsn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpddkd97dt.d(16): Error: no identifier for declarator `number`

    /tmp/tmpddkd97dt.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpddkd97dt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number, numbers)\
    \ {\n        sum += number;\n        product *= number;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp935prydt.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp935prydt.d(16): Error: found `)` when expecting `;`

    /tmp/tmp935prydt.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp935prydt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tfor (long i : numbers)\n\t{\n\t\
    \tsum += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk5aehcsn.d(16): Error: semicolon expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: expression expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5aehcsn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpddkd97dt.d(16): Error: no identifier for declarator `number`

    /tmp/tmpddkd97dt.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpddkd97dt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(i : numbers) {\n\
    \        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpko9bexv4.d(16): Error: no identifier for declarator `i`

    /tmp/tmpko9bexv4.d(16): Error: found `:` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpko9bexv4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(number, numbers) {\n\t\t\
    sum += number;\n\t\tproduct *= number;\n\t}\n\treturn Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp19c5vx_5.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp19c5vx_5.d(16): Error: found `)` when expecting `;`

    /tmp/tmp19c5vx_5.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp19c5vx_5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers) {\n\
    \        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpph4dxx2o.d(16): Error: semicolon expected, not `:`

    /tmp/tmpph4dxx2o.d(16): Error: expression expected, not `:`

    /tmp/tmpph4dxx2o.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpph4dxx2o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpddkd97dt.d(16): Error: no identifier for declarator `number`

    /tmp/tmpddkd97dt.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpddkd97dt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(number in numbers)\n\t\
    {\n\t\tsum += number;\n\t\tproduct *= number;\n\t}\n\treturn Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl2y9gziw.d(16): Error: no identifier for declarator `number`

    /tmp/tmpl2y9gziw.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl2y9gziw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\
    \ {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8jog4vw8.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp8jog4vw8.d(16): Error: found `)` when expecting `;`

    /tmp/tmp8jog4vw8.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8jog4vw8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpddkd97dt.d(16): Error: no identifier for declarator `number`

    /tmp/tmpddkd97dt.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpddkd97dt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x, numbers)\
    \ {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9die_lx0.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp9die_lx0.d(16): Error: found `)` when expecting `;`

    /tmp/tmp9die_lx0.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9die_lx0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tfor (long i = 0; i < numbers.length;\
    \ ++i)\n\t{\n\t\tsum += numbers[i];\n\t\tproduct *= numbers[i];\n\t}\n\treturn\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `sum` as
    parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `product`
    as parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614):
    Error: CTFE failed because of previous errors in `injectNamedFields`

    /tmp/tmppb82fkeq.d(21): Error: template instance `tmppb82fkeq.sum_product.Tuple!(sum,
    product)` error instantiating

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppb82fkeq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(number, numbers) {\n\t\t\
    sum += number;\n\t\tproduct *= number;\n\t}\n\treturn Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp19c5vx_5.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp19c5vx_5.d(16): Error: found `)` when expecting `;`

    /tmp/tmp19c5vx_5.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp19c5vx_5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(number, numbers) {\n\t\t\
    sum += number;\n\t\tproduct *= number;\n\t}\n\treturn Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp19c5vx_5.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp19c5vx_5.d(16): Error: found `)` when expecting `;`

    /tmp/tmp19c5vx_5.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp19c5vx_5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\
    \ {\n        sum += number;\n        product *= number;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvin6eol4.d(16): Error: no identifier for declarator `number`

    /tmp/tmpvin6eol4.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvin6eol4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(number in numbers)\n\t\
    {\n\t\tsum += number;\n\t\tproduct *= number;\n\t}\n\treturn Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl2y9gziw.d(16): Error: no identifier for declarator `number`

    /tmp/tmpl2y9gziw.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl2y9gziw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i = 0; i < numbers.length;\
    \ ++i)\n    {\n        sum += numbers[i];\n        product *= numbers[i];\n  \
    \  }\n    return Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate =\
    \ sum_product;\n\n    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L,\
    \ 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L,\
    \ 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `sum` as
    parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `product`
    as parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614):
    Error: CTFE failed because of previous errors in `injectNamedFields`

    /tmp/tmpd04v6_u_.d(21): Error: template instance `tmpd04v6_u_.sum_product.Tuple!(sum,
    product)` error instantiating

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd04v6_u_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(i : numbers) {\n\t\tsum\
    \ += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzjktdnu_.d(16): Error: no identifier for declarator `i`

    /tmp/tmpzjktdnu_.d(16): Error: found `:` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzjktdnu_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x, numbers)\
    \ {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9die_lx0.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp9die_lx0.d(16): Error: found `)` when expecting `;`

    /tmp/tmp9die_lx0.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9die_lx0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x, numbers)\
    \ {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9die_lx0.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp9die_lx0.d(16): Error: found `)` when expecting `;`

    /tmp/tmp9die_lx0.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9die_lx0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long i, numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpswippz5y.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmpswippz5y.d(16): Error: found `)` when expecting `;`

    /tmp/tmpswippz5y.d(21): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpswippz5y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\
    \ {\n        sum += number;\n        product *= number;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvin6eol4.d(16): Error: no identifier for declarator `number`

    /tmp/tmpvin6eol4.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvin6eol4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(long n, numbers)\n\t{\n\
    \t\tsum += n;\n\t\tproduct *= n;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw75sons3.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmpw75sons3.d(16): Error: found `)` when expecting `;`

    /tmp/tmpw75sons3.d(21): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw75sons3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\n/*\n For a given list of integers, return a tuple\
    \ consisting of a sum and a product of all the integers in a list.\n    Empty\
    \ sum should be equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n\
    \    \n*/\nTuple!(int, int) sum_product(int[] numbers) \n{\n    int sum = 0;\n\
    \    int product = 1;\n    foreach(number in numbers)\n    {\n        sum += number;\n\
    \        product *= number;\n    }\n    return Tuple!(sum, product);\n}\n/*\n\
    \ For a given list of integers, return a tuple consisting of a sum and a product\
    \ of all the integers in a list.\n    Empty sum should be equal to 0 and empty\
    \ product should be equal to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n\
    \    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(double,\
    \ double) sum_product(double[] numbers) \n{\n    double sum = 0;\n    double product\
    \ = 1;\n    foreach(number in numbers)\n    {\n        sum += number;\n      \
    \  product *= number;\n    }\n    return Tuple!(sum, product);\n}\n/*\n For a\
    \ given list of integers, return a tuple consisting of a sum and a product of\
    \ all the integers in a list.\n    Empty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L,\
    \ 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(bool, bool) sum_product(bool[]\
    \ numbers) \n{\n    bool sum = false;\n    bool product = true;\n    foreach(number\
    \ in numbers)\n    {\n        sum += number;\n        product *= number;\n   \
    \ }\n    return Tuple!(sum, product);\n}\n/*\n For a given list of integers, return\
    \ a tuple consisting of a sum and a product of all the integers in a list.\n \
    \   Empty sum should be equal to 0 and empty product should be equal to 1.\n \
    \   >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n\
    \    tuple(10L, 24L)\n    \n*/\nTuple!(string, string) sum_product(string[] numbers)\
    \ \n{\n    string sum\nunittest\n{\n    alias candidate = sum_product;\n\n   \
    \ assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplq6rrvz3.d(16): Error: no identifier for declarator `number`

    /tmp/tmplq6rrvz3.d(16): Error: found `in` when expecting `;`

    /tmp/tmplq6rrvz3.d(36): Error: no identifier for declarator `number`

    /tmp/tmplq6rrvz3.d(36): Error: found `in` when expecting `;`

    /tmp/tmplq6rrvz3.d(56): Error: no identifier for declarator `number`

    /tmp/tmplq6rrvz3.d(56): Error: found `in` when expecting `;`

    /tmp/tmplq6rrvz3.d(76): Error: no identifier for declarator `number`

    /tmp/tmplq6rrvz3.d(76): Error: found `in` when expecting `;`

    /tmp/tmplq6rrvz3.d(94): Error: found `sum` when expecting `;` following statement

    /tmp/tmplq6rrvz3.d(95): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplq6rrvz3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(i : numbers)\n\t{\n\t\t\
    sum += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaxls7ef6.d(16): Error: no identifier for declarator `i`

    /tmp/tmpaxls7ef6.d(16): Error: found `:` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaxls7ef6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x, numbers)\
    \ {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9die_lx0.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp9die_lx0.d(16): Error: found `)` when expecting `;`

    /tmp/tmp9die_lx0.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9die_lx0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(number in numbers)\n\t\
    {\n\t\tsum += number;\n\t\tproduct *= number;\n\t}\n\treturn Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl2y9gziw.d(16): Error: no identifier for declarator `number`

    /tmp/tmpl2y9gziw.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl2y9gziw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(number, numbers) {\n\t\t\
    sum += number;\n\t\tproduct *= number;\n\t}\n\treturn Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp19c5vx_5.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp19c5vx_5.d(16): Error: found `)` when expecting `;`

    /tmp/tmp19c5vx_5.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp19c5vx_5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i = 0; i < numbers.length;\
    \ ++i)\n    {\n        sum += numbers[i];\n        product *= numbers[i];\n  \
    \  }\n    return Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate =\
    \ sum_product;\n\n    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L,\
    \ 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L,\
    \ 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `sum` as
    parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `product`
    as parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614):
    Error: CTFE failed because of previous errors in `injectNamedFields`

    /tmp/tmpd04v6_u_.d(21): Error: template instance `tmpd04v6_u_.sum_product.Tuple!(sum,
    product)` error instantiating

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd04v6_u_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long i, numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpswippz5y.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmpswippz5y.d(16): Error: found `)` when expecting `;`

    /tmp/tmpswippz5y.d(21): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpswippz5y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tfor (long i = 0; i < numbers.length;\
    \ ++i)\n\t{\n\t\tsum += numbers[i];\n\t\tproduct *= numbers[i];\n\t}\n\treturn\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `sum` as
    parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `product`
    as parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614):
    Error: CTFE failed because of previous errors in `injectNamedFields`

    /tmp/tmppb82fkeq.d(21): Error: template instance `tmppb82fkeq.sum_product.Tuple!(sum,
    product)` error instantiating

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppb82fkeq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpddkd97dt.d(16): Error: no identifier for declarator `number`

    /tmp/tmpddkd97dt.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpddkd97dt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(number, numbers) {\n\t\t\
    sum += number;\n\t\tproduct *= number;\n\t}\n\treturn Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp19c5vx_5.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp19c5vx_5.d(16): Error: found `)` when expecting `;`

    /tmp/tmp19c5vx_5.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp19c5vx_5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\
    \ {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8jog4vw8.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp8jog4vw8.d(16): Error: found `)` when expecting `;`

    /tmp/tmp8jog4vw8.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8jog4vw8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x, numbers)\n\
    \    {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwml20g46.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmpwml20g46.d(16): Error: found `)` when expecting `;`

    /tmp/tmpwml20g46.d(21): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwml20g46.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\
    \ {\n        sum += number;\n        product *= number;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvin6eol4.d(16): Error: no identifier for declarator `number`

    /tmp/tmpvin6eol4.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvin6eol4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\
    \ {\n        sum += number;\n        product *= number;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp96n_l96w.d(16): Error: semicolon expected, not `:`

    /tmp/tmp96n_l96w.d(16): Error: expression expected, not `:`

    /tmp/tmp96n_l96w.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp96n_l96w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(long i, numbers)\n\t{\n\
    \t\tsum += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplfm_vb_w.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmplfm_vb_w.d(16): Error: found `)` when expecting `;`

    /tmp/tmplfm_vb_w.d(21): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplfm_vb_w.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5t8553vl.d(16): Error: semicolon expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: expression expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5t8553vl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x, numbers)\
    \ {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum, product);\n\
    }\n/*\n For a given list of integers, return a tuple consisting of a sum and a\
    \ product of all the integers in a list.\n    Empty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n    >>> sum_product([])\n    tuple(0L,\
    \ 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\n\
    Tuple!(long, long) sum_product(long[] numbers) \n{\n    long sum = 0;\n    long\
    \ product = 1;\n    foreach(long x, numbers) {\n        sum += x;\n        product\
    \ *= x;\n    }\n    return Tuple!(sum, product);\n}\n/*\n For a given list of\
    \ integers, return a tuple consisting of a sum and a product of all the integers\
    \ in a list.\n    Empty sum should be equal to 0 and empty product should be equal\
    \ to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L,\
    \ 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[]\
    \ numbers) \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x,\
    \ numbers) {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum,\
    \ product);\n}\n/*\n For a given list of integers, return a tuple consisting of\
    \ a sum and a product of all the integers in a list.\n    Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n\
    \    \n*/\nTuple!(long, long) sum_product(long[] numbers) \n{\n    long sum =\
    \ 0;\n    long product = 1;\n    foreach(long x, numbers) {\n        sum += x;\n\
    \        product *= x;\n    }\n    return Tuple!(sum, product);\n}\n/*\n For a\
    \ given list of integers, return a tuple consisting of a sum and a product of\
    \ all the integers in a list.\n    Empty sum should be equal to 0 and empty product\
    \ should be equal to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L,\
    \ 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[]\
    \ numbers) \n{\n    long sum = 0;\n    long product = 1;\n\nunittest\n{\n    alias\
    \ candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L, 1L));\n  \
    \  assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpftmd02m6.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmpftmd02m6.d(16): Error: found `)` when expecting `;`

    /tmp/tmpftmd02m6.d(20): Error: found `return` when expecting `)`

    /tmp/tmpftmd02m6.d(35): Error: no identifier for declarator `numbers`

    /tmp/tmpftmd02m6.d(35): Error: found `)` when expecting `;`

    /tmp/tmpftmd02m6.d(39): Error: found `return` when expecting `)`

    /tmp/tmpftmd02m6.d(54): Error: no identifier for declarator `numbers`

    /tmp/tmpftmd02m6.d(54): Error: found `)` when expecting `;`

    /tmp/tmpftmd02m6.d(58): Error: found `return` when expecting `)`

    /tmp/tmpftmd02m6.d(73): Error: no identifier for declarator `numbers`

    /tmp/tmpftmd02m6.d(73): Error: found `)` when expecting `;`

    /tmp/tmpftmd02m6.d(77): Error: found `return` when expecting `)`

    /tmp/tmpftmd02m6.d(93): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpftmd02m6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(long x, numbers) {\n\t\t\
    sum += x;\n\t\tproduct *= x;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6ki7ztxf.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp6ki7ztxf.d(16): Error: found `)` when expecting `;`

    /tmp/tmp6ki7ztxf.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6ki7ztxf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(long n, numbers)\n\t{\n\
    \t\tsum += n;\n\t\tproduct *= n;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw75sons3.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmpw75sons3.d(16): Error: found `)` when expecting `;`

    /tmp/tmpw75sons3.d(21): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw75sons3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(long x, numbers)\n\t{\n\
    \t\tsum += x;\n\t\tproduct *= x;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp6j2u_wk5.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp6j2u_wk5.d(16): Error: found `)` when expecting `;`

    /tmp/tmp6j2u_wk5.d(21): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6j2u_wk5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i = 0; i < numbers.length;\
    \ ++i)\n    {\n        sum += numbers[i];\n        product *= numbers[i];\n  \
    \  }\n    return Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate =\
    \ sum_product;\n\n    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L,\
    \ 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L,\
    \ 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `sum` as
    parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `product`
    as parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614):
    Error: CTFE failed because of previous errors in `injectNamedFields`

    /tmp/tmpd04v6_u_.d(21): Error: template instance `tmpd04v6_u_.sum_product.Tuple!(sum,
    product)` error instantiating

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd04v6_u_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tfor (long i : numbers)\n\t{\n\t\
    \tsum += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk5aehcsn.d(16): Error: semicolon expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: expression expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5aehcsn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tfor (long i : numbers)\n\t{\n\t\
    \tsum += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk5aehcsn.d(16): Error: semicolon expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: expression expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5aehcsn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\
    \ {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8jog4vw8.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp8jog4vw8.d(16): Error: found `)` when expecting `;`

    /tmp/tmp8jog4vw8.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8jog4vw8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\n/*\n For a given list of integers, return a tuple consisting of\
    \ a sum and a product of all the integers in a list.\n    Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n\
    \    \n*/\nTuple!(long, long) sum_product(long[] numbers) \n{\n    long sum =\
    \ 0;\n    long product = 1;\n    for (long i : numbers)\n    {\n        sum +=\
    \ i;\n        product *= i;\n    }\n    return Tuple!(sum, product);\n}\n/*\n\
    \ For a given list of integers, return a tuple consisting of a sum and a product\
    \ of all the integers in a list.\n    Empty sum should be equal to 0 and empty\
    \ product should be equal to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n\
    \    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long,\
    \ long) sum_product(long[] numbers) \n{\n    long sum = 0;\n    long product =\
    \ 1;\n    for (long i : numbers)\n    {\n        sum += i;\n        product *=\
    \ i;\n    }\n    return Tuple!(sum, product);\n}\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\n/*\n For a given list of integers, return a tuple consisting of\
    \ a sum and a product of all the integers in a list.\n    Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n\
    \    \n*/\nTuple!(long, long) sum_product(long[] numbers) \n{\n    long sum =\
    \ 0;\n    \nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc1uejout.d(16): Error: semicolon expected, not `:`

    /tmp/tmpc1uejout.d(16): Error: expression expected, not `:`

    /tmp/tmpc1uejout.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpc1uejout.d(36): Error: semicolon expected, not `:`

    /tmp/tmpc1uejout.d(36): Error: expression expected, not `:`

    /tmp/tmpc1uejout.d(36): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpc1uejout.d(56): Error: semicolon expected, not `:`

    /tmp/tmpc1uejout.d(56): Error: expression expected, not `:`

    /tmp/tmpc1uejout.d(56): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpc1uejout.d(76): Error: semicolon expected, not `:`

    /tmp/tmpc1uejout.d(76): Error: expression expected, not `:`

    /tmp/tmpc1uejout.d(76): Error: found `numbers` when expecting `;` following `for`
    condition

    /tmp/tmpc1uejout.d(96): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc1uejout.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\n\
    \    {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8i31tv90.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp8i31tv90.d(16): Error: found `)` when expecting `;`

    /tmp/tmp8i31tv90.d(21): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8i31tv90.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpddkd97dt.d(16): Error: no identifier for declarator `number`

    /tmp/tmpddkd97dt.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpddkd97dt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpddkd97dt.d(16): Error: no identifier for declarator `number`

    /tmp/tmpddkd97dt.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpddkd97dt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x, numbers)\n\
    \    {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwml20g46.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmpwml20g46.d(16): Error: found `)` when expecting `;`

    /tmp/tmpwml20g46.d(21): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwml20g46.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i = 0; i < numbers.length;\
    \ ++i)\n    {\n        sum += numbers[i];\n        product *= numbers[i];\n  \
    \  }\n    return Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate =\
    \ sum_product;\n\n    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L,\
    \ 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L,\
    \ 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `sum` as
    parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `product`
    as parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614):
    Error: CTFE failed because of previous errors in `injectNamedFields`

    /tmp/tmpd04v6_u_.d(21): Error: template instance `tmpd04v6_u_.sum_product.Tuple!(sum,
    product)` error instantiating

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd04v6_u_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tfor (long i : numbers)\n\t{\n\t\
    \tsum += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk5aehcsn.d(16): Error: semicolon expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: expression expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5aehcsn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long number : numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5t8553vl.d(16): Error: semicolon expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: expression expected, not `:`

    /tmp/tmp5t8553vl.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5t8553vl.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i = 0; i < numbers.length;\
    \ ++i)\n    {\n        sum += numbers[i];\n        product *= numbers[i];\n  \
    \  }\n    return Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate =\
    \ sum_product;\n\n    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L,\
    \ 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L,\
    \ 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `sum` as
    parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `product`
    as parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614):
    Error: CTFE failed because of previous errors in `injectNamedFields`

    /tmp/tmpd04v6_u_.d(21): Error: template instance `tmpd04v6_u_.sum_product.Tuple!(sum,
    product)` error instantiating

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd04v6_u_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(number in numbers)\n\t\
    {\n\t\tsum += number;\n\t\tproduct *= number;\n\t}\n\treturn Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpl2y9gziw.d(16): Error: no identifier for declarator `number`

    /tmp/tmpl2y9gziw.d(16): Error: found `in` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl2y9gziw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long i, numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpswippz5y.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmpswippz5y.d(16): Error: found `)` when expecting `;`

    /tmp/tmpswippz5y.d(21): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpswippz5y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i = 0; i < numbers.length;\
    \ ++i)\n    {\n        sum += numbers[i];\n        product *= numbers[i];\n  \
    \  }\n    return Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate =\
    \ sum_product;\n\n    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L,\
    \ 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L,\
    \ 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `sum` as
    parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `product`
    as parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614):
    Error: CTFE failed because of previous errors in `injectNamedFields`

    /tmp/tmpd04v6_u_.d(21): Error: template instance `tmpd04v6_u_.sum_product.Tuple!(sum,
    product)` error instantiating

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd04v6_u_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(number, numbers) {\n\t\t\
    sum += number;\n\t\tproduct *= number;\n\t}\n\treturn Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp19c5vx_5.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp19c5vx_5.d(16): Error: found `)` when expecting `;`

    /tmp/tmp19c5vx_5.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp19c5vx_5.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x, numbers)\
    \ {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9die_lx0.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp9die_lx0.d(16): Error: found `)` when expecting `;`

    /tmp/tmp9die_lx0.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9die_lx0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tfor (long i : numbers)\n\t{\n\t\
    \tsum += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk5aehcsn.d(16): Error: semicolon expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: expression expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5aehcsn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(long i, numbers) {\n\t\t\
    sum += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpysoe47ha.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmpysoe47ha.d(16): Error: found `)` when expecting `;`

    /tmp/tmpysoe47ha.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpysoe47ha.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i : numbers)\n\
    \    {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum,\
    \ product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_we4oaxi.d(16): Error: semicolon expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: expression expected, not `:`

    /tmp/tmp_we4oaxi.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_we4oaxi.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\n/*\n For a given list of integers, return a tuple\
    \ consisting of a sum and a product of all the integers in a list.\n    Empty\
    \ sum should be equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n\
    \    \n*/\nTuple!(long, long) sum_product(long[] numbers) \n{\n    long sum =\
    \ 0;\n    long product = 1;\n    foreach(number in numbers)\n    {\n        sum\
    \ += number;\n        product *= number;\n    }\n    return Tuple!(sum, product);\n\
    }\n/*\n For a given list of integers, return a tuple consisting of a sum and a\
    \ product of all the integers in a list.\n    Empty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n    >>> sum_product([])\n    tuple(0L,\
    \ 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\n\
    Tuple!(long, long) sum_product(long[] numbers) \n{\n    long sum = 0;\n    long\
    \ product = 1;\n    foreach(number in numbers)\n    {\n        sum += number;\n\
    \        product *= number;\n    }\n    return Tuple!(sum, product);\n}\n/*\n\
    \ For a given list of integers, return a tuple consisting of a sum and a product\
    \ of all the integers in a list.\n    Empty sum should be equal to 0 and empty\
    \ product should be equal to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n\
    \    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long,\
    \ long) sum_product(long[] numbers) \n{\n    long sum = 0;\n    long product =\
    \ 1;\n    foreach(number in numbers)\n    {\n        sum += number;\n        product\
    \ *= number;\n    }\n    return Tuple!(sum, product);\n}\n/*\n For a given list\
    \ of integers, return a tuple consisting of a sum and a product of all the integers\
    \ in a list.\n    Empty sum should be equal to 0 and empty product should be equal\
    \ to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L,\
    \ 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[]\
    \ numbers) \n{\n    long \nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps32g8p3a.d(16): Error: no identifier for declarator `number`

    /tmp/tmps32g8p3a.d(16): Error: found `in` when expecting `;`

    /tmp/tmps32g8p3a.d(36): Error: no identifier for declarator `number`

    /tmp/tmps32g8p3a.d(36): Error: found `in` when expecting `;`

    /tmp/tmps32g8p3a.d(56): Error: no identifier for declarator `number`

    /tmp/tmps32g8p3a.d(56): Error: found `in` when expecting `;`

    /tmp/tmps32g8p3a.d(76): Error: no identifier for declarator `number`

    /tmp/tmps32g8p3a.d(76): Error: found `in` when expecting `;`

    /tmp/tmps32g8p3a.d(95): Error: no identifier for declarator `long`

    /tmp/tmps32g8p3a.d(95): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps32g8p3a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long i, numbers)\
    \ {\n        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9sufepi9.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp9sufepi9.d(16): Error: found `)` when expecting `;`

    /tmp/tmp9sufepi9.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9sufepi9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i = 0; i < numbers.length;\
    \ ++i)\n    {\n        sum += numbers[i];\n        product *= numbers[i];\n  \
    \  }\n    return Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate =\
    \ sum_product;\n\n    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L,\
    \ 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L,\
    \ 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `sum` as
    parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `product`
    as parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614):
    Error: CTFE failed because of previous errors in `injectNamedFields`

    /tmp/tmpd04v6_u_.d(21): Error: template instance `tmpd04v6_u_.sum_product.Tuple!(sum,
    product)` error instantiating

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd04v6_u_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tforeach(i : numbers)\n\t{\n\t\t\
    sum += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpaxls7ef6.d(16): Error: no identifier for declarator `i`

    /tmp/tmpaxls7ef6.d(16): Error: found `:` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaxls7ef6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tfor (long i = 0; i < numbers.length;\
    \ ++i)\n\t{\n\t\tsum += numbers[i];\n\t\tproduct *= numbers[i];\n\t}\n\treturn\
    \ Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `sum` as
    parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `product`
    as parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614):
    Error: CTFE failed because of previous errors in `injectNamedFields`

    /tmp/tmppb82fkeq.d(21): Error: template instance `tmppb82fkeq.sum_product.Tuple!(sum,
    product)` error instantiating

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppb82fkeq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long x, numbers)\
    \ {\n        sum += x;\n        product *= x;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9die_lx0.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp9die_lx0.d(16): Error: found `)` when expecting `;`

    /tmp/tmp9die_lx0.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9die_lx0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    for (long i = 0; i < numbers.length;\
    \ ++i)\n    {\n        sum += numbers[i];\n        product *= numbers[i];\n  \
    \  }\n    return Tuple!(sum, product);\n}\nunittest\n{\n    alias candidate =\
    \ sum_product;\n\n    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L,\
    \ 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L,\
    \ 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `sum` as
    parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(sum, product)` cannot use local `product`
    as parameter to non-global template `parseSpecs(Specs...)`

    /home/a.guha/repos/spack/opt/spack/linux-centos7-haswell/gcc-9.2.0/dmd-2.081.1-jzbhflp3vff4u2dqrltybjq3in2pa22f/linux/bin64/../../src/phobos/std/typecons.d(614):
    Error: CTFE failed because of previous errors in `injectNamedFields`

    /tmp/tmpd04v6_u_.d(21): Error: template instance `tmpd04v6_u_.sum_product.Tuple!(sum,
    product)` error instantiating

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd04v6_u_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(i : numbers) {\n\
    \        sum += i;\n        product *= i;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpko9bexv4.d(16): Error: no identifier for declarator `i`

    /tmp/tmpko9bexv4.d(16): Error: found `:` when expecting `;`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpko9bexv4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n\tlong sum = 0;\n\tlong product = 1;\n\tfor (long i : numbers)\n\t{\n\t\
    \tsum += i;\n\t\tproduct *= i;\n\t}\n\treturn Tuple!(sum, product);\n}\nunittest\n\
    {\n    alias candidate = sum_product;\n\n    assert(candidate([]) == tuple(0L,\
    \ 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n    assert(candidate([100L,\
    \ 0L]) == tuple(100L, 0L));\n    assert(candidate([3L, 5L, 7L]) == tuple(15L,\
    \ 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpk5aehcsn.d(16): Error: semicolon expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: expression expected, not `:`

    /tmp/tmpk5aehcsn.d(16): Error: found `numbers` when expecting `;` following `for`
    condition

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5aehcsn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164491
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(number in numbers)\n\
    \    {\n        sum += number;\n        product *= number;\n    }\n    return\
    \ Tuple!(sum, product);\n}\n/*\n For a given list of integers, return a tuple\
    \ consisting of a sum and a product of all the integers in a list.\n    Empty\
    \ sum should be equal to 0 and empty product should be equal to 1.\n    >>> sum_product([])\n\
    \    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n\
    \    \n*/\nTuple!(long, long) sum_product(long[] numbers) \n{\n    long sum =\
    \ 0;\n    long product = 1;\n    foreach(number in numbers)\n    {\n        sum\
    \ += number;\n        product *= number;\n    }\n    return Tuple!(sum, product);\n\
    }\n/*\n For a given list of integers, return a tuple consisting of a sum and a\
    \ product of all the integers in a list.\n    Empty sum should be equal to 0 and\
    \ empty product should be equal to 1.\n    >>> sum_product([])\n    tuple(0L,\
    \ 1L)\n    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\n\
    Tuple!(long, long) sum_product(long[] numbers) \n{\n    long sum = 0;\n    long\
    \ product = 1;\n    foreach(number in numbers)\n    {\n        sum += number;\n\
    \        product *= number;\n    }\n    return Tuple!(sum, product);\n}\n/*\n\
    \ For a given list of integers, return a tuple consisting of a sum and a product\
    \ of all the integers in a list.\n    Empty sum should be equal to 0 and empty\
    \ product should be equal to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n\
    \    >>> sum_product([1L, 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long,\
    \ long) sum_product(long[] numbers) \n{\n    long sum = 0;\n    long product =\
    \ 1;\n    foreach(number in numbers)\n    {\n        sum += number;\n        product\
    \ *= number;\n    }\n    return Tuple!(sum, product);\n}\n/*\n For a given list\
    \ of integers, return a tuple consisting of a sum and a product of all the integers\
    \ in a list.\n    Empty sum should be equal to 0 and empty product should be equal\
    \ to 1.\n    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L,\
    \ 2L, 3L, 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[]\
    \ numbers) \n{\n    long \nunittest\n{\n    alias candidate = sum_product;\n\n\
    \    assert(candidate([]) == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L])\
    \ == tuple(3L, 1L));\n    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n\
    \    assert(candidate([3L, 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L])\
    \ == tuple(10L, 10L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmps32g8p3a.d(16): Error: no identifier for declarator `number`

    /tmp/tmps32g8p3a.d(16): Error: found `in` when expecting `;`

    /tmp/tmps32g8p3a.d(36): Error: no identifier for declarator `number`

    /tmp/tmps32g8p3a.d(36): Error: found `in` when expecting `;`

    /tmp/tmps32g8p3a.d(56): Error: no identifier for declarator `number`

    /tmp/tmps32g8p3a.d(56): Error: found `in` when expecting `;`

    /tmp/tmps32g8p3a.d(76): Error: no identifier for declarator `number`

    /tmp/tmps32g8p3a.d(76): Error: found `in` when expecting `;`

    /tmp/tmps32g8p3a.d(95): Error: no identifier for declarator `long`

    /tmp/tmps32g8p3a.d(95): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps32g8p3a.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given list of integers,\
    \ return a tuple consisting of a sum and a product of all the integers in a list.\n\
    \    Empty sum should be equal to 0 and empty product should be equal to 1.\n\
    \    >>> sum_product([])\n    tuple(0L, 1L)\n    >>> sum_product([1L, 2L, 3L,\
    \ 4L])\n    tuple(10L, 24L)\n    \n*/\nTuple!(long, long) sum_product(long[] numbers)\
    \ \n{\n    long sum = 0;\n    long product = 1;\n    foreach(long n, numbers)\
    \ {\n        sum += n;\n        product *= n;\n    }\n    return Tuple!(sum, product);\n\
    }\nunittest\n{\n    alias candidate = sum_product;\n\n    assert(candidate([])\
    \ == tuple(0L, 1L));\n    assert(candidate([1L, 1L, 1L]) == tuple(3L, 1L));\n\
    \    assert(candidate([100L, 0L]) == tuple(100L, 0L));\n    assert(candidate([3L,\
    \ 5L, 7L]) == tuple(15L, 105L));\n    assert(candidate([10L]) == tuple(10L, 10L));\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8jog4vw8.d(16): Error: no identifier for declarator `numbers`

    /tmp/tmp8jog4vw8.d(16): Error: found `)` when expecting `;`

    /tmp/tmp8jog4vw8.d(20): Error: found `return` when expecting `)`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8jog4vw8.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164492

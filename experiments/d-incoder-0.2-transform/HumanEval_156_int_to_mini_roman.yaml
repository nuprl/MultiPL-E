name: HumanEval_156_int_to_mini_roman
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\n\n    Given a positive integer,\
  \ obtain its roman numeral equivalent as a string,\n    and return it in lowercase.\n\
  \    Restrictions: 1 <= num <= 1000\n\n    Examples:\n    >>> int_to_mini_roman(19L)\n\
  \    \"xix\"\n    >>> int_to_mini_roman(152L)\n    \"clii\"\n    >>> int_to_mini_roman(426L)\n\
  \    \"cdxxvi\"\n    \n*/\nstring int_to_mini_roman(long number) \n"
tests: "unittest\n{\n    alias candidate = int_to_mini_roman;\n\n    assert(candidate(19L)\
  \ == \"xix\");\n    assert(candidate(152L) == \"clii\");\n    assert(candidate(251L)\
  \ == \"ccli\");\n    assert(candidate(426L) == \"cdxxvi\");\n    assert(candidate(500L)\
  \ == \"d\");\n    assert(candidate(1L) == \"i\");\n    assert(candidate(4L) == \"\
  iv\");\n    assert(candidate(43L) == \"xliii\");\n    assert(candidate(90L) == \"\
  xc\");\n    assert(candidate(94L) == \"xciv\");\n    assert(candidate(532L) == \"\
  dxxxii\");\n    assert(candidate(900L) == \"cm\");\n    assert(candidate(994L) ==\
  \ \"cmxciv\");\n    assert(candidate(1000L) == \"m\");\n}\nvoid main(){}"
completions: ["{\n    string roman = \"\";\n    long num;\n    long i;\n    long j;\n\
    \    long k;\n    long l;\n    long m;\n    long n;\n    long o;\n    long p;\n\
    \    long q;\n    long r;\n    long s;\n    long t;\n    long u;\n    long v;\n\
    \    long w;\n    long x;\n    long y;\n    long z;\n    long A;\n    long B;\n\
    \    long C;\n    long D;\n    long E;\n    long F;\n    long G;\n    long H;\n\
    \    long I;\n    long J;\n    long K;\n    long L;\n    long M;\n    long N;\n\
    \    long O;\n    long P;\n    long Q;\n    long R;\n    long S;\n    long T;\n\
    \    long U;\n    long V;\n    long W;\n    long X;\n    long Y;\n    long Z;\n\
    \    long _;\n    long _;\n    long _;\n    long _;\n    long _;\n    long _;\n\
    \    long _;\n    long _;\n    long _;\n    long _;\n    long _;\n    long _;\n\
    \    long _;\n    long _;\n    long _;\n    long _;\n    long _;\n    long _;\n\
    \    long _;\n    long _;\n    long _;\n    long _;\n    long _;\n    long _;\n\
    \    long _;\n    long _;\n    long _;\n    long _;\n    long _;\n    long _;\n\
    \    long _;\n    long _;\n    long _;\n    long _;\n    long _;\n    long _;\n\
    \    long _;\n    long _;\n    long _;\n    long _;\n    long _;\n    long _;\n\
    \    long _;\n    long _;\n    long _;\n    long _;\n    long _;\n    long _;\n\
    \    long _;\n    long _;\n    long _;\n    long _;\n    long _;\n    long _;\n\
    \    long _;\n    long _;\n    long _;\n    long _;\n    long _;\n", "{\n    string\
    \ roman = \"\";\n    long num;\n    long temp;\n    long romanNum;\n    long romanNumCount;\n\
    \    long romanNumCount2;\n    long romanNumCount3;\n    long romanNumCount4;\n\
    \    long romanNumCount5;\n    long romanNumCount6;\n    long romanNumCount7;\n\
    \    long romanNumCount8;\n    long romanNumCount9;\n    long romanNumCount10;\n\
    \    long romanNumCount11;\n    long romanNumCount12;\n    long romanNumCount13;\n\
    \    long romanNumCount14;\n    long romanNumCount15;\n    long romanNumCount16;\n\
    \    long romanNumCount17;\n    long romanNumCount18;\n    long romanNumCount19;\n\
    \    long romanNumCount20;\n    long romanNumCount21;\n    long romanNumCount22;\n\
    \    long romanNumCount23;\n    long romanNumCount24;\n    long romanNumCount25;\n\
    \    long romanNumCount26;\n    long romanNumCount27;\n    long romanNumCount28;\n\
    \    long romanNumCount29;\n    long romanNumCount30;\n    long romanNumCount31;\n\
    \    long romanNumCount32;\n    long romanNumCount33;\n    long romanNumCount34;\n\
    \    long romanNumCount35;\n    long romanNumCount36;\n    long romanNumCount37;\n\
    \    long romanNumCount38;\n    long romanNumCount39;\n    long romanNumCount40;\n\
    \    long romanNumCount41;\n    long romanNumCount42;\n    long romanNumCount43;\n\
    \    long romanNumCount44;\n    long romanNumCount45;\n    long romanNumCount46;\n\
    \    long romanNumCount47;\n    long romanNumCount48;\n    long romanNumCount49;\n\
    \    long romanNumCount50;\n    long romanNumCount51;\n    long romanNumCount52;\n\
    \    long romanNumCount53;\n    long romanNumCount54;\n    long romanNumCount55;\n\
    \    long romanNumCount56;\n    long ", "{\n    string roman = \"\";\n    long\
    \ num;\n    long temp;\n    long roman_num;\n    long roman_num2;\n    long roman_num3;\n\
    \    long roman_num4;\n    long roman_num5;\n    long roman_num6;\n    long roman_num7;\n\
    \    long roman_num8;\n    long roman_num9;\n    long roman_num10;\n    long roman_num11;\n\
    \    long roman_num12;\n    long roman_num13;\n    long roman_num14;\n    long\
    \ roman_num15;\n    long roman_num16;\n    long roman_num17;\n    long roman_num18;\n\
    \    long roman_num19;\n    long roman_num20;\n    long roman_num21;\n    long\
    \ roman_num22;\n    long roman_num23;\n    long roman_num24;\n    long roman_num25;\n\
    \    long roman_num26;\n    long roman_num27;\n    long roman_num28;\n    long\
    \ roman_num29;\n    long roman_num30;\n    long roman_num31;\n    long roman_num32;\n\
    \    long roman_num33;\n    long roman_num34;\n    long roman_num35;\n    long\
    \ roman_num36;\n    long roman_num37;\n    long roman_num38;\n    long roman_num39;\n\
    \    long roman_num40;\n    long roman_num41;\n    long roman_num42;\n    long\
    \ roman_num43;\n    long roman_num44;\n    long roman_num45;\n    long roman_num46;\n\
    \    long roman_num47;\n    long roman_num48;\n    long roman_num49;\n    long\
    \ roman_num50;\n    long roman_num51;\n    long roman_num52;\n    long roman_num53;\n\
    \    long roman_num54;\n    long roman_num55;\n    long roman_num56;\n    long\
    \ roman_num57;\n    long roman_num58;\n    long roman_num59;\n    long roman_num60;\n\
    \    long roman_num61;\n    long roman_num62;\n    long roman_num63;\n    long\
    \ roman_num64;\n    long ", "{\n    string roman = \"\";\n    long temp = number;\n\
    \    while(temp > 0)\n    {\n        roman += int_to_roman(temp % 10);\n     \
    \   temp /= 10;\n    }\n    return roman;\n}", "{\n    string roman = \"\";\n\
    \    long n = number;\n    long num;\n    long den;\n    long num2;\n    long\
    \ den2;\n    long num3;\n    long den3;\n    long num4;\n    long den4;\n    long\
    \ num5;\n    long den5;\n    long num6;\n    long den6;\n    long num7;\n    long\
    \ den7;\n    long num8;\n    long den8;\n    long num9;\n    long den9;\n    long\
    \ num10;\n    long den10;\n    long num11;\n    long den11;\n    long num12;\n\
    \    long den12;\n    long num13;\n    long den13;\n    long num14;\n    long\
    \ den14;\n    long num15;\n    long den15;\n    long num16;\n    long den16;\n\
    \    long num17;\n    long den17;\n    long num18;\n    long den18;\n    long\
    \ num19;\n    long den19;\n    long num20;\n    long den20;\n    long num21;\n\
    \    long den21;\n    long num22;\n    long den22;\n    long num23;\n    long\
    \ den23;\n    long num24;\n    long den24;\n    long num25;\n    long den25;\n\
    \    long num26;\n    long den26;\n    long num27;\n    long den27;\n    long\
    \ num28;\n    long den28;\n    long num29;\n    long den29;\n    long num30;\n\
    \    long den30;\n    long num31;\n    long den31;\n    long num32;\n    long\
    \ den32;\n    long num33;\n    long den33;\n    long num34;\n    long den34;\n\
    \    long num35;\n    long den35;\n    long num36;\n    long den36;\n    long\
    \ num37;\n    long den37;\n    long num38;\n    long den38;\n    long num39;\n\
    \    long den39;\n    long num40;\n    long den40;\n    long num41;\n    long\
    \ den41;\n    long num42;\n    long den42;\n    long num43;\n    long den43;\n\
    \    long num44;\n    long den44;\n    long num45;\n    long den", "{\n    string\
    \ roman = \"\";\n    long temp;\n    long temp2;\n    long temp3;\n    long temp4;\n\
    \    long temp5;\n    long temp6;\n    long temp7;\n    long temp8;\n    long\
    \ temp9;\n    long temp10;\n    long temp11;\n    long temp12;\n    long temp13;\n\
    \    long temp14;\n    long temp15;\n    long temp16;\n    long temp17;\n    long\
    \ temp18;\n    long temp19;\n    long temp20;\n    long temp21;\n    long temp22;\n\
    \    long temp23;\n    long temp24;\n    long temp25;\n    long temp26;\n    long\
    \ temp27;\n    long temp28;\n    long temp29;\n    long temp30;\n    long temp31;\n\
    \    long temp32;\n    long temp33;\n    long temp34;\n    long temp35;\n    long\
    \ temp36;\n    long temp37;\n    long temp38;\n    long temp39;\n    long temp40;\n\
    \    long temp41;\n    long temp42;\n    long temp43;\n    long temp44;\n    long\
    \ temp45;\n    long temp46;\n    long temp47;\n    long temp48;\n    long temp49;\n\
    \    long temp50;\n    long temp51;\n    long temp52;\n    long temp53;\n    long\
    \ temp54;\n    long temp55;\n    long temp56;\n    long temp57;\n    long temp58;\n\
    \    long temp59;\n    long temp60;\n    long temp61;\n    long temp62;\n    long\
    \ temp63;\n    long temp64;\n    long temp65;\n    long temp66;\n    long temp67;\n\
    \    long temp68;\n    long temp69;\n    long temp70;\n    long temp71;\n    long\
    \ temp72;\n    long temp73;\n    long temp74;\n    long temp75;\n    long temp76;\n\
    \    long temp77;\n    long temp78;\n    long temp79;\n    long temp80;\n    long\
    \ temp81;\n    long temp82;\n    long temp83;\n    long temp84;\n    long temp85;\n\
    \    long temp86;\n    long temp87;\n    long ", "{\n    string roman = \"\";\n\
    \    long temp;\n    \n    while(number > 0)\n    {\n        temp = number % 10;\n\
    \        roman += mini_roman[temp];\n        number /= 10;\n    }\n    \n    return\
    \ roman;\n}", "{\n    string roman = \"\";\n    long romanNum = number;\n    string\
    \ romanNumStr = to_string(romanNum);\n    string romanNumStrCap = romanNumStr.substr(0,\
    \ romanNumStr.length() - 1);\n    string romanNumStrCapCap = romanNumStrCap.substr(0,\
    \ romanNumStrCap.length() - 1);\n    string romanNumStrCapCapCap = romanNumStrCapCap.substr(0,\
    \ romanNumStrCapCap.length() - 1);\n    string romanNumStrCapCapCapCap = romanNumStrCapCapCap.substr(0,\
    \ romanNumStrCapCapCap.length() - 1);\n    string romanNumStrCapCapCapCapCap =\
    \ romanNumStrCapCapCapCap.substr(0, romanNumStrCapCapCapCap.length() - 1);\n \
    \   string romanNumStrCapCapCapCapCap = romanNumStrCapCapCapCapCap.substr(0, romanNumStrCapCapCapCapCap.length()\
    \ - 1);\n    string romanNumStrCapCapCapCapCapCap = romanNumStrCapCapCapCapCap.substr(0,\
    \ romanNumStrCapCapCapCapCap.length() - 1);\n    string romanNumStrCapCapCapCapCapCap\
    \ = romanNumStrCapCapCapCapCapCap.substr(0, romanNumStrCapCapCapCapCap.length()\
    \ - 1);\n    string romanNumStrCapCapCapCapCapCap = romanNumStrCapCapCapCapCapCapCap.substr(0,\
    \ romanNumStrCapCapCapCapCapCap.length() - 1);\n    string romanNumStrCapCapCapCapCapCap\
    \ = romanNumStrCapCapCapCapCapCapCap.substr(0, romanNumStrCapCapCapCapCapCap.length()\
    \ - 1);\n    string romanNumStrCapCapCapCapCapCapCap = romanNumStrCapCapCapCapCapCapCap.substr(0,\
    \ romanNumStrCapCapCapCapCapCapCap.length() - 1);\n    string romanNumStrCapCapCapCapCapCapCap\
    \ = romanNumStrCapCapCapCapCapCapCapCap.substr(0, romanNumStrCapCapCapCapCapCapCap.length()\
    \ - 1);\n    string romanNumStrCapCapCapCapCapCapCap = romanNumStrCapCapCapCapCapCapCapCap.substr(0,\
    \ romanNumStrCapCapCapCapCapCapCap.length() - 1);\n    string romanNumStrCapCapCapCapCap",
  "{\n    string roman = \"\";\n    long temp;\n    \n    while (number > 0)\n   \
    \ {\n        temp = number % 10;\n        roman += (char)('M' + temp);\n     \
    \   number /= 10;\n    }\n    \n    return roman;\n}", "{\n    string roman =\
    \ \"\";\n    long n = number;\n    long romanNum = 0;\n    long romanNumDigit\
    \ = 0;\n    long romanNumDigitCount = 0;\n    long romanNumDigitCountMax = 0;\n\
    \    long romanNumDigitCountMaxIndex = 0;\n    long romanNumDigitCountMaxIndex2\
    \ = 0;\n    long romanNumDigitCountMaxIndex3 = 0;\n    long romanNumDigitCountMaxIndex4\
    \ = 0;\n    long romanNumDigitCountMaxIndex5 = 0;\n    long romanNumDigitCountMaxIndex6\
    \ = 0;\n    long romanNumDigitCountMaxIndex7 = 0;\n    long romanNumDigitCountMaxIndex8\
    \ = 0;\n    long romanNumDigitCountMaxIndex9 = 0;\n    long romanNumDigitCountMaxIndex10\
    \ = 0;\n    long romanNumDigitCountMaxIndex11 = 0;\n    long romanNumDigitCountMaxIndex12\
    \ = 0;\n    long romanNumDigitCountMaxIndex13 = 0;\n    long romanNumDigitCountMaxIndex14\
    \ = 0;\n    long romanNumDigitCountMaxIndex15 = 0;\n    long romanNumDigitCountMaxIndex16\
    \ = 0;\n    long romanNumDigitCountMaxIndex17 = 0;\n    long romanNumDigitCountMaxIndex18\
    \ = 0;\n    long romanNumDigitCountMaxIndex19 = 0;\n    long romanNumDigitCountMaxIndex20\
    \ = 0;\n    long romanNumDigitCountMaxIndex21 = 0;\n    long romanNumDigitCountMaxIndex22\
    \ = 0;\n    long romanNumDigitCountMaxIndex23 = 0;\n    long romanNumDigitCountMaxIndex24\
    \ = 0;\n    long romanNumDigitCountMaxIndex25 = 0;\n    long romanNumDigitCountMaxIndex26\
    \ = 0;\n    long romanNumDigitCountMaxIndex27 = 0;\n    long romanNumDigitCountMaxIndex28\
    \ = 0;\n    long romanNumDigitCountMaxIndex29 = 0;\n    long romanNumDigitCountMaxIndex30\
    \ = 0;\n    long romanNumDigitCountMaxIndex31 = 0;\n    long romanNumDigitCountMaxIndex32\
    \ = 0;\n    long romanNumDigitCountMaxIndex33 = 0;\n    long romanNumDigitCountMaxIndex34\
    \ = 0;\n    long romanNumDigitCountMaxIndex35 = 0;\n    long romanNumDigitCountMaxIndex36\
    \ = 0;\n    long romanNumDigitCountMaxIndex37 = 0;\n    long romanNumDigitCountMaxIndex38\
    \ = 0;\n    long romanNumDigitCountMaxIndex39 = 0;\n    long ", "{\n    string\
    \ roman = \"\";\n    long num;\n    \n    num = number;\n    \n    while(num >\
    \ 0)\n    {\n        roman += int_to_roman(num%10);\n        num /= 10;\n    }\n\
    \    \n    return roman;\n}", "{\n    long roman = number;\n    string roman_numeral\
    \ = \"\";\n    \n    while(roman > 0)\n    {\n        long remainder = roman %\
    \ 10;\n        roman_numeral += mini_roman[remainder];\n        roman = roman\
    \ / 10;\n    }\n    \n    return roman_numeral.toLower();\n}", "{\n    string\
    \ roman = \"\";\n    long num;\n    bool isNegative = false;\n    \n    if (number\
    \ < 0)\n    {\n        isNegative = true;\n        number = -number;\n    }\n\
    \    \n    num = number;\n    \n    while (num > 0)\n    {\n        roman += int_to_roman(num\
    \ % 10);\n        num /= 10;\n    }\n    \n    if (isNegative)\n    {\n      \
    \  roman = \"-\" + roman;\n    }\n    \n    return roman;\n}", "{\n    string\
    \ roman = \"\";\n    long temp;\n    long roman_num;\n    long roman_num_temp;\n\
    \    long roman_num_temp2;\n    long roman_num_temp3;\n    long roman_num_temp4;\n\
    \    long roman_num_temp5;\n    long roman_num_temp6;\n    long roman_num_temp7;\n\
    \    long roman_num_temp8;\n    long roman_num_temp9;\n    long roman_num_temp10;\n\
    \    long roman_num_temp11;\n    long roman_num_temp12;\n    long roman_num_temp13;\n\
    \    long roman_num_temp14;\n    long roman_num_temp15;\n    long roman_num_temp16;\n\
    \    long roman_num_temp17;\n    long roman_num_temp18;\n    long roman_num_temp19;\n\
    \    long roman_num_temp20;\n    long roman_num_temp21;\n    long roman_num_temp22;\n\
    \    long roman_num_temp23;\n    long roman_num_temp24;\n    long roman_num_temp25;\n\
    \    long roman_num_temp26;\n    long roman_num_temp27;\n    long roman_num_temp28;\n\
    \    long roman_num_temp29;\n    long roman_num_temp30;\n    long roman_num_temp31;\n\
    \    long roman_num_temp32;\n    long roman_num_temp33;\n    long roman_num_temp34;\n\
    \    long roman_num_temp35;\n    long roman_num_temp36;\n    long roman_num_temp37;\n\
    \    long roman_num_temp38;\n    long roman_num_temp39;\n    long roman_num_temp40;\n\
    \    long roman_num_temp41;\n    long roman_num_temp42;\n    long roman_num_temp43;\n\
    \    long roman_num_temp44;\n    long roman_num_temp45;\n    long roman_num_temp46;\n\
    \    long roman_num_temp47;\n    long roman_num_temp48;\n    long roman_num_temp49;\n\
    \    long roman_num_temp50;\n    long roman_num_temp51;\n    long roman_num_temp52;\n\
    \    long roman_num_temp53;\n    long roman_num_temp54;\n    long roman_num_temp55;\n\
    \    long roman_num_temp56;\n    long roman_num_temp57", "{\n    string roman\
    \ = \"\";\n    long n = number;\n    long roman_numeral = 1;\n    long roman_numeral_previous\
    \ = 0;\n    long roman_numeral_next = 0;\n    long roman_numeral_next_previous\
    \ = 0;\n    long roman_numeral_next_next_previous = 0;\n    long roman_numeral_next_next_next_previous\
    \ = 0;\n    long roman_numeral_next_next_next_next_previous = 0;\n    long roman_numeral_next_next_next_next_next_previous\
    \ = 0;\n    long roman_numeral_next_next_next_next_next_next_previous = 0;\n \
    \   long roman_numeral_next_next_next_next_next_next_next_previous = 0;\n    long\
    \ roman_numeral_next_next_next_next_next_next_next_next_previous = 0;\n    long\
    \ roman_numeral_next_next_next_next_next_next_next_next_next_previous = 0;\n \
    \   long roman_numeral_next_next_next_next_next_next_next_next_next_previous =\
    \ 0;\n    long roman_numeral_next_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    long roman_numeral_next_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    long roman_numeral_next_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    long roman_numeral_next_next_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    long roman_numeral_next_next_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    long roman_numeral_next_next_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    long roman_numeral_next_next_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    long roman_numeral_next_next_next_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    long roman_numeral_next_next_next_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    long roman_numeral_next_next_next_next_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    long roman_numeral_next_next_next_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    long roman_numeral_next_next_next_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    long roman_numeral_next_next_next_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    long roman_numeral_next_next_next_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    long roman_numeral_next_next_next_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    long roman_numeral_next_next_next_next_next_next_next_next_next_next_next_next_next_previous\
    \ = 0;\n    ", "{\n    string roman = \"\";\n    long counter = 1;\n    while(number\
    \ > 0)\n    {\n        roman += int_to_roman(number % 10);\n        number /=\
    \ 10;\n        counter++;\n    }\n    while(counter > 0)\n    {\n        roman\
    \ = roman.substr(0, roman.length() - 1) + int_to_roman(counter);\n        counter--;\n\
    \    }\n    return roman;\n}", "{\n    string roman = \"\";\n    long temp;\n\
    \    \n    temp = number;\n    \n    while (temp > 0)\n    {\n        roman +=\
    \ int_to_roman(temp % 10);\n        temp /= 10;\n    }\n    \n    return roman;\n\
    }", "{\n    string roman = \"\";\n    long n = number;\n    long roman_numeral\
    \ = 1;\n    long roman_numeral_prev = 1;\n    long roman_numeral_next = 1;\n \
    \   long roman_numeral_prev2 = 1;\n    long roman_numeral_next2 = 1;\n    long\
    \ roman_numeral_prev3 = 1;\n    long roman_numeral_next3 = 1;\n    long roman_numeral_prev4\
    \ = 1;\n    long roman_numeral_next4 = 1;\n    long roman_numeral_prev5 = 1;\n\
    \    long roman_numeral_next5 = 1;\n    long roman_numeral_prev6 = 1;\n    long\
    \ roman_numeral_next6 = 1;\n    long roman_numeral_prev7 = 1;\n    long roman_numeral_next7\
    \ = 1;\n    long roman_numeral_prev8 = 1;\n    long roman_numeral_next8 = 1;\n\
    \    long roman_numeral_prev9 = 1;\n    long roman_numeral_next9 = 1;\n    long\
    \ roman_numeral_prev10 = 1;\n    long roman_numeral_next10 = 1;\n    long roman_numeral_prev11\
    \ = 1;\n    long roman_numeral_next11 = 1;\n    long roman_numeral_prev12 = 1;\n\
    \    long roman_numeral_next12 = 1;\n    long roman_numeral_prev13 = 1;\n    long\
    \ roman_numeral_next13 = 1;\n    long roman_numeral_prev14 = 1;\n    long roman_numeral_next14\
    \ = 1;\n    long roman_numeral_prev15 = 1;\n    long roman_numeral_next15 = 1;\n\
    \    long roman_numeral_prev16 = 1;\n    long roman_numeral_next16 = 1;\n    long\
    \ roman_numeral_prev17 = 1;\n    long roman_numeral_next17 = 1;\n    long roman_numeral_prev18\
    \ = 1;\n    long roman_numeral_next18 = 1;\n    long roman_numeral_prev19 = 1;\n\
    \    long roman_numeral_next19 = 1;\n    long roman_numeral_prev20 = 1;\n    long\
    \ roman_numeral_next20 = 1;\n    long roman_numeral_prev21 = 1;\n    long roman_numeral_next21\
    \ = 1;\n    long roman_numeral_prev22 = 1;\n    long roman_numeral_next22 = 1;\n\
    \    long roman_numeral_prev23 = 1;\n    long roman_numeral_next23 = 1;\n    long\
    \ roman_numeral_prev24 = 1;\n    long roman_numeral_next24 = 1;\n    long roman_numeral_prev25\
    \ = 1;\n    long roman_numer", "{\n    string roman = \"\";\n    long n = number;\n\
    \    long roman_numeral = 1;\n    long roman_numeral_digit = 0;\n    long roman_numeral_digit_count\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n    long roman_numeral_digit_count_min\
    \ = 0;\n    long roman_numeral_digit_count_max = 0;\n", "{\n    string roman =\
    \ \"\";\n    long num = number;\n    long num2 = num;\n    long num3 = num;\n\
    \    long num4 = num;\n    long num5 = num;\n    long num6 = num;\n    long num7\
    \ = num;\n    long num8 = num;\n    long num9 = num;\n    long num10 = num;\n\
    \    long num11 = num;\n    long num12 = num;\n    long num13 = num;\n    long\
    \ num14 = num;\n    long num15 = num;\n    long num16 = num;\n    long num17 =\
    \ num;\n    long num18 = num;\n    long num19 = num;\n    long num20 = num;\n\
    \    long num21 = num;\n    long num22 = num;\n    long num23 = num;\n    long\
    \ num24 = num;\n    long num25 = num;\n    long num26 = num;\n    long num27 =\
    \ num;\n    long num28 = num;\n    long num29 = num;\n    long num30 = num;\n\
    \    long num31 = num;\n    long num32 = num;\n    long num33 = num;\n    long\
    \ num34 = num;\n    long num35 = num;\n    long num36 = num;\n    long num37 =\
    \ num;\n    long num38 = num;\n    long num39 = num;\n    long num40 = num;\n\
    \    long num41 = num;\n    long num42 = num;\n    long num43 = num;\n    long\
    \ num44 = num;\n    long num45 = num;\n    long num46 = num;\n    long num47 =\
    \ num;\n    long num48 = num;\n    long num49 = num;\n    long num50 = num;\n\
    \    long num51 = num;\n    long num52 = num;\n    long num53 = num;\n    long\
    \ num54 = num;\n    long num55 = num;\n    long num56 = num;\n    long num57 =\
    \ num;\n    long num58 = num;\n    long num59 = num;\n    long num60 = num;\n\
    \    long num61 = num;\n    long num62 = num;\n    long num63 = num;\n    long\
    \ num64 = num;\n    long num65 = num"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

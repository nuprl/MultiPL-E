language: d
name: HumanEval_133_sum_squares
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    foreach(float x, lst)\n    {\n        sum +=\
    \ x * x;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_squares;\n\
    \n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 2.0,\
    \ 3.0]) == 14L);\n    assert(candidate([1.0, 3.0, 5.0, 7.0]) == 84L);\n    assert(candidate([1.4,\
    \ 4.2, 0.0]) == 29L);\n    assert(candidate([-2.4, 1.0, 1.0]) == 6L);\n    assert(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230L);\n    assert(candidate([10000.0, 10000.0]) == 200000000L);\n\
    \    assert(candidate([-1.4, 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086L);\n    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0])\
    \ == 1L);\n    assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbfri908y.d(25): Error: no identifier for declarator `lst`\n/tmp/tmpbfri908y.d(25):
    Error: found `)` when expecting `;`\n/tmp/tmpbfri908y.d(29): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbfri908y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    foreach(float x, lst)\n    {\n        sum +=\
    \ x * x;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_squares;\n\
    \n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 2.0,\
    \ 3.0]) == 14L);\n    assert(candidate([1.0, 3.0, 5.0, 7.0]) == 84L);\n    assert(candidate([1.4,\
    \ 4.2, 0.0]) == 29L);\n    assert(candidate([-2.4, 1.0, 1.0]) == 6L);\n    assert(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230L);\n    assert(candidate([10000.0, 10000.0]) == 200000000L);\n\
    \    assert(candidate([-1.4, 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086L);\n    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0])\
    \ == 1L);\n    assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbfri908y.d(25): Error: no identifier for declarator `lst`\n/tmp/tmpbfri908y.d(25):
    Error: found `)` when expecting `;`\n/tmp/tmpbfri908y.d(29): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbfri908y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n\
    \        sum += lst[i] * lst[i];\n    }\n    return sum;\n}\nunittest\n{\n   \
    \ alias candidate = sum_squares;\n\n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n\
    \    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84L);\n    assert(candidate([1.4, 4.2, 0.0]) == 29L);\n    assert(candidate([-2.4,\
    \ 1.0, 1.0]) == 6L);\n    assert(candidate([100.0, 1.0, 15.0, 2.0]) == 10230L);\n\
    \    assert(candidate([10000.0, 10000.0]) == 200000000L);\n    assert(candidate([-1.4,\
    \ 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4, 17.9, 18.9, 19.9]) == 1086L);\n\
    \    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0]) == 1L);\n \
    \   assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptm25zb99.d(25): Error: no property `size` for type `float[]`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptm25zb99.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n\
    \        sum += lst[i] * lst[i];\n    }\n    return sum;\n}\nunittest\n{\n   \
    \ alias candidate = sum_squares;\n\n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n\
    \    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84L);\n    assert(candidate([1.4, 4.2, 0.0]) == 29L);\n    assert(candidate([-2.4,\
    \ 1.0, 1.0]) == 6L);\n    assert(candidate([100.0, 1.0, 15.0, 2.0]) == 10230L);\n\
    \    assert(candidate([10000.0, 10000.0]) == 200000000L);\n    assert(candidate([-1.4,\
    \ 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4, 17.9, 18.9, 19.9]) == 1086L);\n\
    \    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0]) == 1L);\n \
    \   assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptm25zb99.d(25): Error: no property `size` for type `float[]`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptm25zb99.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    foreach(float x, lst) sum += x * x;\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = sum_squares;\n\n    assert(candidate([1.0,\
    \ 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84L);\n    assert(candidate([1.4, 4.2, 0.0]) == 29L);\n \
    \   assert(candidate([-2.4, 1.0, 1.0]) == 6L);\n    assert(candidate([100.0, 1.0,\
    \ 15.0, 2.0]) == 10230L);\n    assert(candidate([10000.0, 10000.0]) == 200000000L);\n\
    \    assert(candidate([-1.4, 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086L);\n    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0])\
    \ == 1L);\n    assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbz58m97f.d(25): Error: no identifier for declarator `lst`\n/tmp/tmpbz58m97f.d(25):
    Error: found `)` when expecting `;`\n/tmp/tmpbz58m97f.d(25): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbz58m97f.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    foreach(float f, lst)\n    {\n        sum +=\
    \ std.math.pow(f, 2);\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate\
    \ = sum_squares;\n\n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0,\
    \ 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 3.0, 5.0, 7.0]) == 84L);\n \
    \   assert(candidate([1.4, 4.2, 0.0]) == 29L);\n    assert(candidate([-2.4, 1.0,\
    \ 1.0]) == 6L);\n    assert(candidate([100.0, 1.0, 15.0, 2.0]) == 10230L);\n \
    \   assert(candidate([10000.0, 10000.0]) == 200000000L);\n    assert(candidate([-1.4,\
    \ 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4, 17.9, 18.9, 19.9]) == 1086L);\n\
    \    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0]) == 1L);\n \
    \   assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxpp1q7uh.d(25): Error: no identifier for declarator `lst`\n/tmp/tmpxpp1q7uh.d(25):
    Error: found `)` when expecting `;`\n/tmp/tmpxpp1q7uh.d(29): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxpp1q7uh.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    foreach(float f, lst)\n        sum += std.math.pow(f,\
    \ 2);\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_squares;\n\n\
    \    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 2.0,\
    \ 3.0]) == 14L);\n    assert(candidate([1.0, 3.0, 5.0, 7.0]) == 84L);\n    assert(candidate([1.4,\
    \ 4.2, 0.0]) == 29L);\n    assert(candidate([-2.4, 1.0, 1.0]) == 6L);\n    assert(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230L);\n    assert(candidate([10000.0, 10000.0]) == 200000000L);\n\
    \    assert(candidate([-1.4, 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086L);\n    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0])\
    \ == 1L);\n    assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc_qoyy04.d(25): Error: no identifier for declarator `lst`\n/tmp/tmpc_qoyy04.d(25):
    Error: found `)` when expecting `;`\n/tmp/tmpc_qoyy04.d(26): Error: found `;`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc_qoyy04.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    foreach(float f, lst)\n    {\n        sum +=\
    \ std.math.pow(f, 2);\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate\
    \ = sum_squares;\n\n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0,\
    \ 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 3.0, 5.0, 7.0]) == 84L);\n \
    \   assert(candidate([1.4, 4.2, 0.0]) == 29L);\n    assert(candidate([-2.4, 1.0,\
    \ 1.0]) == 6L);\n    assert(candidate([100.0, 1.0, 15.0, 2.0]) == 10230L);\n \
    \   assert(candidate([10000.0, 10000.0]) == 200000000L);\n    assert(candidate([-1.4,\
    \ 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4, 17.9, 18.9, 19.9]) == 1086L);\n\
    \    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0]) == 1L);\n \
    \   assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxpp1q7uh.d(25): Error: no identifier for declarator `lst`\n/tmp/tmpxpp1q7uh.d(25):
    Error: found `)` when expecting `;`\n/tmp/tmpxpp1q7uh.d(29): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxpp1q7uh.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    foreach(float f, lst)\n    {\n        sum +=\
    \ std.math.pow(f, 2);\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate\
    \ = sum_squares;\n\n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0,\
    \ 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 3.0, 5.0, 7.0]) == 84L);\n \
    \   assert(candidate([1.4, 4.2, 0.0]) == 29L);\n    assert(candidate([-2.4, 1.0,\
    \ 1.0]) == 6L);\n    assert(candidate([100.0, 1.0, 15.0, 2.0]) == 10230L);\n \
    \   assert(candidate([10000.0, 10000.0]) == 200000000L);\n    assert(candidate([-1.4,\
    \ 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4, 17.9, 18.9, 19.9]) == 1086L);\n\
    \    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0]) == 1L);\n \
    \   assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxpp1q7uh.d(25): Error: no identifier for declarator `lst`\n/tmp/tmpxpp1q7uh.d(25):
    Error: found `)` when expecting `;`\n/tmp/tmpxpp1q7uh.d(29): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxpp1q7uh.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    foreach(float x, lst)\n    {\n        sum +=\
    \ x * x;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_squares;\n\
    \n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 2.0,\
    \ 3.0]) == 14L);\n    assert(candidate([1.0, 3.0, 5.0, 7.0]) == 84L);\n    assert(candidate([1.4,\
    \ 4.2, 0.0]) == 29L);\n    assert(candidate([-2.4, 1.0, 1.0]) == 6L);\n    assert(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230L);\n    assert(candidate([10000.0, 10000.0]) == 200000000L);\n\
    \    assert(candidate([-1.4, 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086L);\n    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0])\
    \ == 1L);\n    assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbfri908y.d(25): Error: no identifier for declarator `lst`\n/tmp/tmpbfri908y.d(25):
    Error: found `)` when expecting `;`\n/tmp/tmpbfri908y.d(29): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbfri908y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    foreach(float f, lst)\n    {\n        sum +=\
    \ std.math.pow(f, 2);\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate\
    \ = sum_squares;\n\n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0,\
    \ 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 3.0, 5.0, 7.0]) == 84L);\n \
    \   assert(candidate([1.4, 4.2, 0.0]) == 29L);\n    assert(candidate([-2.4, 1.0,\
    \ 1.0]) == 6L);\n    assert(candidate([100.0, 1.0, 15.0, 2.0]) == 10230L);\n \
    \   assert(candidate([10000.0, 10000.0]) == 200000000L);\n    assert(candidate([-1.4,\
    \ 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4, 17.9, 18.9, 19.9]) == 1086L);\n\
    \    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0]) == 1L);\n \
    \   assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxpp1q7uh.d(25): Error: no identifier for declarator `lst`\n/tmp/tmpxpp1q7uh.d(25):
    Error: found `)` when expecting `;`\n/tmp/tmpxpp1q7uh.d(29): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxpp1q7uh.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    foreach(float f, lst)\n    {\n        sum +=\
    \ std.math.pow(f, 2);\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate\
    \ = sum_squares;\n\n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0,\
    \ 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 3.0, 5.0, 7.0]) == 84L);\n \
    \   assert(candidate([1.4, 4.2, 0.0]) == 29L);\n    assert(candidate([-2.4, 1.0,\
    \ 1.0]) == 6L);\n    assert(candidate([100.0, 1.0, 15.0, 2.0]) == 10230L);\n \
    \   assert(candidate([10000.0, 10000.0]) == 200000000L);\n    assert(candidate([-1.4,\
    \ 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4, 17.9, 18.9, 19.9]) == 1086L);\n\
    \    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0]) == 1L);\n \
    \   assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxpp1q7uh.d(25): Error: no identifier for declarator `lst`\n/tmp/tmpxpp1q7uh.d(25):
    Error: found `)` when expecting `;`\n/tmp/tmpxpp1q7uh.d(29): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxpp1q7uh.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n\
    \        sum += lst[i] * lst[i];\n    }\n    return sum;\n}\n/*\nYou are given\
    \ a list of numbers.\n    You need to return the sum of squared numbers in the\
    \ given list,\n    round each element in the list to the upper int(Ceiling) first.\n\
    \    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0,\
    \ 9.0])\n    98L\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4,\
    \ 4.2, 0.0])\n    29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \nunittest\n\
    {\n    alias candidate = sum_squares;\n\n    assert(candidate([1.0, 2.0, 3.0])\
    \ == 14L);\n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84L);\n    assert(candidate([1.4, 4.2, 0.0]) == 29L);\n \
    \   assert(candidate([-2.4, 1.0, 1.0]) == 6L);\n    assert(candidate([100.0, 1.0,\
    \ 15.0, 2.0]) == 10230L);\n    assert(candidate([10000.0, 10000.0]) == 200000000L);\n\
    \    assert(candidate([-1.4, 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086L);\n    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0])\
    \ == 1L);\n    assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpubpltond.d(31): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpubpltond.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n     \
    \   sum += lst[i] * lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate\
    \ = sum_squares;\n\n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0,\
    \ 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 3.0, 5.0, 7.0]) == 84L);\n \
    \   assert(candidate([1.4, 4.2, 0.0]) == 29L);\n    assert(candidate([-2.4, 1.0,\
    \ 1.0]) == 6L);\n    assert(candidate([100.0, 1.0, 15.0, 2.0]) == 10230L);\n \
    \   assert(candidate([10000.0, 10000.0]) == 200000000L);\n    assert(candidate([-1.4,\
    \ 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4, 17.9, 18.9, 19.9]) == 1086L);\n\
    \    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0]) == 1L);\n \
    \   assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfly3clh8.d(25): Error: no property `size` for type `float[]`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfly3clh8.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n\
    \        sum += lst[i] * lst[i];\n    }\n    return sum;\n}\nunittest\n{\n   \
    \ alias candidate = sum_squares;\n\n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n\
    \    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84L);\n    assert(candidate([1.4, 4.2, 0.0]) == 29L);\n    assert(candidate([-2.4,\
    \ 1.0, 1.0]) == 6L);\n    assert(candidate([100.0, 1.0, 15.0, 2.0]) == 10230L);\n\
    \    assert(candidate([10000.0, 10000.0]) == 200000000L);\n    assert(candidate([-1.4,\
    \ 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4, 17.9, 18.9, 19.9]) == 1086L);\n\
    \    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0]) == 1L);\n \
    \   assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptm25zb99.d(25): Error: no property `size` for type `float[]`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptm25zb99.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    foreach(float f, lst)\n    {\n        sum +=\
    \ std.math.pow(f, 2);\n    }\n    return sum;\n}\n/*\nYou are given a list of\
    \ numbers.\n    You need to return the sum of squared numbers in the given list,\n\
    \    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n\
    \    >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \nunittest\n{\n    alias candidate\
    \ = sum_squares;\n\n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0,\
    \ 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 3.0, 5.0, 7.0]) == 84L);\n \
    \   assert(candidate([1.4, 4.2, 0.0]) == 29L);\n    assert(candidate([-2.4, 1.0,\
    \ 1.0]) == 6L);\n    assert(candidate([100.0, 1.0, 15.0, 2.0]) == 10230L);\n \
    \   assert(candidate([10000.0, 10000.0]) == 200000000L);\n    assert(candidate([-1.4,\
    \ 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4, 17.9, 18.9, 19.9]) == 1086L);\n\
    \    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0]) == 1L);\n \
    \   assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpayr26rat.d(25): Error: no identifier for declarator `lst`\n/tmp/tmpayr26rat.d(25):
    Error: found `)` when expecting `;`\n/tmp/tmpayr26rat.d(29): Error: found `return`
    when expecting `)`\n/tmp/tmpayr26rat.d(31): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpayr26rat.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    for(float f : lst)\n        sum += std.math.pow(f,\
    \ 2);\n    return std.math.round(sum);\n}\nunittest\n{\n    alias candidate =\
    \ sum_squares;\n\n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0,\
    \ 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 3.0, 5.0, 7.0]) == 84L);\n \
    \   assert(candidate([1.4, 4.2, 0.0]) == 29L);\n    assert(candidate([-2.4, 1.0,\
    \ 1.0]) == 6L);\n    assert(candidate([100.0, 1.0, 15.0, 2.0]) == 10230L);\n \
    \   assert(candidate([10000.0, 10000.0]) == 200000000L);\n    assert(candidate([-1.4,\
    \ 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4, 17.9, 18.9, 19.9]) == 1086L);\n\
    \    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0]) == 1L);\n \
    \   assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpx0a49vz2.d(25): Error: semicolon expected, not `:`\n/tmp/tmpx0a49vz2.d(25):
    Error: expression expected, not `:`\n/tmp/tmpx0a49vz2.d(25): Error: found `lst`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpx0a49vz2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n     \
    \   sum += lst[i] * lst[i];\n    return sum;\n}\nunittest\n{\n    alias candidate\
    \ = sum_squares;\n\n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0,\
    \ 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 3.0, 5.0, 7.0]) == 84L);\n \
    \   assert(candidate([1.4, 4.2, 0.0]) == 29L);\n    assert(candidate([-2.4, 1.0,\
    \ 1.0]) == 6L);\n    assert(candidate([100.0, 1.0, 15.0, 2.0]) == 10230L);\n \
    \   assert(candidate([10000.0, 10000.0]) == 200000000L);\n    assert(candidate([-1.4,\
    \ 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4, 17.9, 18.9, 19.9]) == 1086L);\n\
    \    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0]) == 1L);\n \
    \   assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5fewt1rs.d(25): Error: no property `size` for type `float[]`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5fewt1rs.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    foreach(float f, lst)\n    {\n        sum +=\
    \ f * f;\n    }\n    return sum;\n}\nunittest\n{\n    alias candidate = sum_squares;\n\
    \n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 2.0,\
    \ 3.0]) == 14L);\n    assert(candidate([1.0, 3.0, 5.0, 7.0]) == 84L);\n    assert(candidate([1.4,\
    \ 4.2, 0.0]) == 29L);\n    assert(candidate([-2.4, 1.0, 1.0]) == 6L);\n    assert(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230L);\n    assert(candidate([10000.0, 10000.0]) == 200000000L);\n\
    \    assert(candidate([-1.4, 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086L);\n    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0])\
    \ == 1L);\n    assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpx3f67kks.d(25): Error: no identifier for declarator `lst`\n/tmp/tmpx3f67kks.d(25):
    Error: found `)` when expecting `;`\n/tmp/tmpx3f67kks.d(29): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx3f67kks.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nYou are given a list of numbers.\n\
    \    You need to return the sum of squared numbers in the given list,\n    round\
    \ each element in the list to the upper int(Ceiling) first.\n    Examples:\n \
    \   >>> lst([1.0, 2.0, 3.0])\n    14L\n    >>> lst([1.0, 4.0, 9.0])\n    98L\n\
    \    >>> lst([1.0, 3.0, 5.0, 7.0])\n    84L\n    >>> lst([1.4, 4.2, 0.0])\n  \
    \  29L\n    >>> lst([-2.4, 1.0, 1.0])\n    6L\n    \n\n    \n*/\nlong sum_squares(float[]\
    \ lst) \n{\n    long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n\
    \        sum += lst[i] * lst[i];\n    }\n    return sum;\n}\nunittest\n{\n   \
    \ alias candidate = sum_squares;\n\n    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n\
    \    assert(candidate([1.0, 2.0, 3.0]) == 14L);\n    assert(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84L);\n    assert(candidate([1.4, 4.2, 0.0]) == 29L);\n    assert(candidate([-2.4,\
    \ 1.0, 1.0]) == 6L);\n    assert(candidate([100.0, 1.0, 15.0, 2.0]) == 10230L);\n\
    \    assert(candidate([10000.0, 10000.0]) == 200000000L);\n    assert(candidate([-1.4,\
    \ 4.6, 6.3]) == 75L);\n    assert(candidate([-1.4, 17.9, 18.9, 19.9]) == 1086L);\n\
    \    assert(candidate([0.0]) == 0L);\n    assert(candidate([-1.0]) == 1L);\n \
    \   assert(candidate([-1.0, 1.0, 0.0]) == 2L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptm25zb99.d(25): Error: no property `size` for type `float[]`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptm25zb99.d", "-I/tmp"]\n'''
  stdout: b''

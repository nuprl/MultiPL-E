name: HumanEval_91_is_bored
language: d
prompt: "import std.math;\n/*\n\n    You'll be given a string of words, and your task\
  \ is to count the number\n    of boredoms. A boredom is a sentence that starts with\
  \ the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For\
  \ example:\n    >>> is_bored(\"Hello world\")\n    0L\n    >>> is_bored(\"The sky\
  \ is blue. The sun is shining. I love this weather\")\n    1L\n    \n*/\nlong is_bored(string\
  \ S) \n"
tests: "unittest\n{\n    alias candidate = is_bored;\n\n    assert(candidate(\"Hello\
  \ world\") == 0L);\n    assert(candidate(\"Is the sky blue?\") == 0L);\n    assert(candidate(\"\
  I love It !\") == 1L);\n    assert(candidate(\"bIt\") == 0L);\n    assert(candidate(\"\
  I feel good today. I will be productive. will kill It\") == 2L);\n    assert(candidate(\"\
  You and I are going for a walk\") == 0L);\n}\nvoid main(){}"
completions: ["{\n    long boredoms = 0;\n    \n    for(int i = 0; i < S.length();\
    \ i++)\n    {\n        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\n       \
    \ {\n            boredoms++;\n        }\n    }\n    \n    return boredoms;\n}",
  "{\n    long boredoms = 0;\n    \n    for(int i = 0; i < S.length(); i++)\n    {\n\
    \        if(S[i] == 'I')\n        {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}", "{\n    long boredoms = 0;\n    \n    foreach(char\
    \ c in S)\n    {\n        if(c == '.' || c == '?' || c == '!')\n        {\n  \
    \          boredoms++;\n        }\n    }\n    return boredoms;\n}", "{\n    long\
    \ boredoms = 0;\n    \n    foreach(char c in S)\n    {\n        if(c == '.' ||\
    \ c == '?' || c == '!')\n        {\n            boredoms += 1;\n        }\n  \
    \  }\n    \n    return boredoms;\n}", "{\n    long boredoms = 0;\n    \n    for(int\
    \ i = 0; i < S.length(); i++)\n    {\n        if(S[i] == 'I')\n        {\n   \
    \         boredoms += 1;\n        }\n    }\n    return boredoms;\n}\n</code>\n\
    <|/ a tags=c++,string |>\n<| c |>\nThanks so much! I really appreciate it!\n<|/\
    \ c |>\n<| c |>\nNo problem! If this answer solved your problem, please mark it\
    \ as accepted by clicking the check mark next to it. Thanks!\n<|/ c |>\n<| a tags=c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    long boredoms = 0;\n    \n    foreach(char c in S)\n    {\n        if(c ==\
    \ '.' || c == '?' || c == '!')\n        {\n            boredoms++;\n        }\n\
    \    }\n    \n    return boredoms;\n}", "{\n    long boredoms = 0;\n    \n   \
    \ foreach(char c in S)\n    {\n        if(c == '.' || c == '?' || c == '!')\n\
    \        {\n            boredoms++;\n        }\n    }\n    return boredoms;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you for your answer. I am not allowed\
    \ to use any libraries. I am not allowed to use any loops. I am not allowed to\
    \ use any string functions. I am not allowed to use any string manipulation functions.\
    \ I am not allowed to use any string comparison functions. I am not allowed to\
    \ use any string comparison functions. I am not allowed to use any string manipulation\
    \ functions. I am not allowed to use any string comparison functions. I am not\
    \ allowed to use any string manipulation functions. I am not allowed to use any\
    \ string comparison functions. I am not allowed to use any string manipulation\
    \ functions. I am not allowed to use any string comparison functions. I am not\
    \ allowed to use any string manipulation functions. I am not allowed to use any\
    \ string comparison functions. I am not allowed to use any string manipulation\
    \ functions. I am not allowed to use any string comparison functions. I am not\
    \ allowed to use any string manipulation functions. I am not allowed to use any\
    \ string comparison functions. I am not allowed to use any string manipulation\
    \ functions. I am not allowed to use any string comparison functions. I am not\
    \ allowed to use any string manipulation functions. I am not allowed to use any\
    \ string comparison functions. I am not allowed to use any string manipulation\
    \ functions. I am not allowed to use any string comparison functions. I am not\
    \ allowed to use any string manipulation functions. I am not allowed to use any\
    \ string comparison functions. I am not allowed to use any string manipulation\
    \ functions. I am not allowed to use any string comparison functions. I am not\
    \ allowed to use any string manipulation functions. I am not allowed to use any\
    \ string comparison functions. I am not allowed to use any string manipulation\
    \ functions. I am not allowed to use any string comparison functions. I am not\
    \ allowed to use any string manipulation functions. I am not allowed to use any\
    \ string comparison functions. I am not allowed to use any string manipulation\
    \ functions. I am not allowed to use any string comparison functions. I am not\
    \ allowed to use any string manipulation functions. I am not allowed to use any\
    \ string comparison functions. I am not allowed to use any string manipulation\
    \ functions. I am not allowed to use any string comparison functions. I am not\
    \ allowed to use any string manipulation functions. I am not allowed to use any\
    \ string comparison functions. I am not allowed to use any string manipulation\
    \ functions. I am not allowed to use any string comparison functions. I am not\
    \ allowed to use any string manipulation functions. I am not allowed to use any\
    \ string comparison functions. I am not allowed to use any string manipul", "{\n\
    \    long boredoms = 0;\n    \n    for(int i = 0; i < S.length(); i++)\n    {\n\
    \        if(S[i] == '.' || S[i] == '?' || S[i] == '!')\n        {\n          \
    \  boredoms++;\n        }\n    }\n    \n    return boredoms;\n}", "{\n    long\
    \ boredoms = 0;\n    \n    foreach(char c in S)\n    {\n        if(c == '.' ||\
    \ c == '?' || c == '!')\n        {\n            boredoms++;\n        }\n    }\n\
    \    \n    return boredoms;\n}", "{\n    long boredoms = 0;\n    \n    for(int\
    \ i = 0; i < S.length(); i++)\n    {\n        if(S[i] == 'I')\n        {\n   \
    \         boredoms += 1;\n        }\n    }\n    return boredoms;\n}", "{\n   \
    \ long boredoms = 0;\n    for(int i = 0; i < S.length(); i++)\n    {\n       \
    \ if(S[i] == '.' || S[i] == '?' || S[i] == '!')\n        {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n</code>\n<|/ a |>\n<| c |>\nThis answer\
    \ would be better if you explained what was wrong with OP's code and how you fixed\
    \ it.\n<|/ c |>\n<| c |>\nI added some explanation to the answer. Hope it helps.\n\
    <|/ c |>\n<| a |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace\
    \ std;", "{\n    long boredoms = 0;\n    \n    for(int i = 0; i < S.length();\
    \ i++)\n    {\n        if(S[i] == 'I')\n        {\n            boredoms++;\n \
    \       }\n    }\n    return boredoms;\n}", "{\n    long boredoms = 0;\n    \n\
    \    for(int i = 0; i < S.length(); i++)\n    {\n        if(S[i] == 'I')\n   \
    \     {\n            boredoms++;\n        }\n    }\n    \n    return boredoms;\n\
    }", "{\n    long boredoms = 0;\n    for(int i = 0; i < S.length(); i++)\n    {\n\
    \        if(S[i] == 'I')\n        {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}", "{\n    long boredoms = 0;\n    \n    for(int i = 0;\
    \ i < S.length(); i++)\n    {\n        if(S[i] == '.' || S[i] == '?' || S[i] ==\
    \ '!')\n        {\n            boredoms++;\n        }\n    }\n    \n    return\
    \ boredoms;\n}", "{\n    long boredoms = 0;\n    \n    foreach(char c in S)\n\
    \    {\n        if(c == '.' || c == '?' || c == '!')\n        {\n            boredoms++;\n\
    \        }\n    }\n    return boredoms;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    Thank you for your help. I appreciate it.\n<|/ c |>\n<| a tags=c++,string |>\n\
    <code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n  \
    \  long boredoms = 0;\n    \n    for(int i = 0; i < S.length(); i++)\n    {\n\
    \        if(S[i] == 'I')\n        {\n            boredoms++;\n        }\n    }\n\
    \    return boredoms;\n}", "{\n    long boredoms = 0;\n    \n    foreach(char\
    \ c in S)\n    {\n        if(c == '.' || c == '?' || c == '!')\n            boredoms\
    \ += 1;\n    }\n    \n    return boredoms;\n}\n</code>\n<|/ a tags=c++,string\
    \ |>\n<| c |>\nThank you very much for the help! I appreciate it!\n<|/ c |>\n\
    <| a tags=c++,string |>\n<code>\n#include <iostream>\n#include <string>\nusing\
    \ namespace std;", "{\n    long boredoms = 0;\n    \n    foreach(char c in S)\
    \ \n    {\n        if(c == '.' || c == '?' || c == '!') \n        {\n        \
    \    boredoms++;\n        }\n    }\n    return boredoms;\n}\n</code>\n<|/ a tags=c++,string\
    \ |>\n<| c |>\nI like your solution, but I believe that `std::count_if` would\
    \ be more efficient than a manual loop. Also, `std::count_if` would allow you\
    \ to count the number of occurrences of any character in the string, not just\
    \ `.`, `?`, and `!`.\n<|/ c |>\n<| c |>\n: Yes, `std::count_if` would be more\
    \ efficient, but I thought the OP was interested in counting only those characters\
    \ that he mentioned, and I wanted to keep it simple for him. Also, I didn't know\
    \ about `std::count_if`, thanks for pointing it out.\n<|/ c |>\n<| c |>\n: I didn't\
    \ know about `std::count_if`, thanks for pointing it out. I'll add it to my answer.\n\
    <|/ c |>\n<| c |>\nI didn't know about `std::count_if`, thanks for pointing it\
    \ out. I'll add it to my answer.\n<|/ c |>\n<| c |>\n: I didn't know about `std::count_if`,\
    \ thanks for pointing it out. I'll add it to my answer.\n<|/ c |>\n<| a |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    long boredoms = 0;\n    \n    for(int i = 0; i < S.length();\
    \ i++)\n    {\n        if(S[i] == 'I')\n        {\n            boredoms += 1;\n\
    \        }\n    }\n    \n    return boredoms;\n}\n</code>\n<|/ a |>\n<| c |>\n\
    Thanks for your help! I appreciate it!\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

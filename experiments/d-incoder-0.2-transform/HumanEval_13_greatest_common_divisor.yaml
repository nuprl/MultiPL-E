name: HumanEval_13_greatest_common_divisor
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common divisor\
  \ of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n    1L\n   \
  \ >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
  \ a, long b) \n"
tests: "unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
  \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
  \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
completions: ["{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n    if\
    \ (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    \n    if (gcd\
    \ == 0)\n        return a;\n    \n    return gcd;\n}", "{\n\tlong gcd;\n\t\n\t\
    gcd = 1;\n\twhile (b != 0) {\n\t\tif (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\
    \t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\t}\n\treturn gcd;\n}", "{\n    long gcd =\
    \ 1;\n    long t;\n    \n    while (b != 0) {\n        t = b;\n        b = a %\
    \ t;\n        a = t;\n        gcd = gcd > a ? gcd : a;\n    }\n    \n    return\
    \ gcd;\n}", "{\n    long gcd;\n    \n    if (a == 0) return b;\n    if (b == 0)\
    \ return a;\n    \n    gcd = __gcd(a, b);\n    if (gcd == 0) return a;\n    return\
    \ gcd;\n}", "{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n \
    \       a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    while (a != 0)\
    \ {\n        long r = a % b;\n        a = b;\n        b = r;\n    }\n    \n  \
    \  return gcd;\n}", "{\n    long long gcd = 1;\n    long long remainder;\n   \
    \ \n    while (b != 0) {\n        remainder = b % a;\n        gcd = std.math.max(gcd,\
    \ remainder);\n        b = remainder;\n    }\n    return gcd;\n}", "{\n\tlong\
    \ gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\ta = b;\n\t\
    \tb = r;\n\t\tgcd = (gcd > b) ? gcd : b;\n\t}\n\treturn gcd;\n}", "{\n\tlong gcd;\n\
    \t\n\tgcd = 1;\n\twhile (b > 0) {\n\t\tlong t = b;\n\t\tb = a % b;\n\t\ta = t;\n\
    \t}\n\t\n\treturn gcd;\n}", "{\n    long gcd;\n    \n    if (a < b) {\n      \
    \  long tmp = a;\n        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n\
    \    \n    while (a != 0) {\n        if (a > b) {\n            gcd = b;\n    \
    \        b = a % b;\n            a = b;\n        } else {\n            gcd = a;\n\
    \            a = a % b;\n        }\n    }\n    \n    return gcd;\n}", "{\n   \
    \ long gcd;\n    \n    gcd = __gcd(a, b);\n    if (gcd == 0) return a;\n    return\
    \ gcd;\n}", "{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        if (a > b) {\n            a %= b;\n            gcd = b *\
    \ gcd;\n        }\n        else {\n            b %= a;\n            gcd = a *\
    \ gcd;\n        }\n    }\n    \n    return gcd;\n}", "{\n\tlong gcd;\n\t\n\tgcd\
    \ = a;\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\
    \tb %= a;\n\t\t}\n\t\tgcd = b;\n\t}\n\treturn gcd;\n}", "{\n    long gcd;\n  \
    \  \n    if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    \n\
    \    if (gcd > a)\n        return gcd;\n    \n    return __gcd(b, a);\n}", "{\n\
    \tlong gcd;\n\t\n\twhile (b != 0)\n\t{\n\t\tgcd = b;\n\t\tb = a % b;\n\t\ta =\
    \ gcd;\n\t}\n\treturn a;\n}", "{\n    long gcd;\n    \n    if (a < b) {\n    \
    \    long tmp = a;\n        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n\
    \    while (a != 0) {\n        if (a > b) {\n            a %= b;\n        } else\
    \ {\n            b %= a;\n        }\n        gcd *= b;\n    }\n    return gcd;\n\
    }", "{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\
    \t\tif (r != 0) {\n\t\t\tgcd = b;\n\t\t\tb = r;\n\t\t}\n\t\ta = a / b;\n\t}\n\t\
    return gcd;\n}", "{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n\
    \    \n    if (a < b)\n        std.swap(a, b);\n    \n    for (;;) {\n       \
    \ gcd = 0;\n        \n        while (b != 0) {\n            long temp = b;\n \
    \           b = a % b;\n            a = temp;\n            gcd = std.gcd(gcd,\
    \ b);\n        }\n        \n        if (a == 0)\n            return gcd;\n   \
    \     \n        if (a > 0)\n            std.swap(a, b);\n    }\n}", "{\n\tlong\
    \ gcd;\n\t\n\tgcd = __gcd(a, b);\n\tif (gcd == 0) return a;\n\treturn gcd;\n}",
  "{\n\tlong gcd;\n\t\n\tfor (;;) {\n\t\tif (a > b) {\n\t\t\ta %= b;\n\t\t\tif (a\
    \ == 0) return b;\n\t\t\tb %= a;\n\t\t\tif (b == 0) return a;\n\t\t}\n\t\telse\
    \ {\n\t\t\tb %= a;\n\t\t\tif (b == 0) return a;\n\t\t\ta %= b;\n\t\t\tif (a ==\
    \ 0) return b;\n\t\t}\n\t\tgcd = a % b;\n\t\tif (gcd == 0) return b;\n\t\ta =\
    \ b;\n\t\tb = gcd;\n\t}\n}", "{\n    long gcd;\n    \n    if (a < b) {\n     \
    \   long t = a;\n        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n \
    \   \n    while (a != 0) {\n        long r = a % b;\n        a = b;\n        b\
    \ = r;\n        gcd = (gcd > r) ? gcd : r;\n    }\n    \n    return gcd;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

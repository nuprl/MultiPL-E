name: HumanEval_49_modp
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\nReturn 2^n modulo p (be aware\
  \ of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n\
  \    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L,\
  \ 101L)\n    1L\n    \n*/\nlong modp(long n, long p) \n"
tests: "unittest\n{\n    alias candidate = modp;\n\n    assert(candidate(3L, 5L) ==\
  \ 3L);\n    assert(candidate(1101L, 101L) == 2L);\n    assert(candidate(0L, 101L)\
  \ == 1L);\n    assert(candidate(3L, 11L) == 8L);\n    assert(candidate(100L, 101L)\
  \ == 1L);\n    assert(candidate(30L, 5L) == 4L);\n    assert(candidate(31L, 5L)\
  \ == 3L);\n}\nvoid main(){}"
completions: ["{\n\tlong res = 1L;\n\twhile (n > p) {\n\t\tres *= 2L;\n\t\tn -= p;\n\
    \t}\n\treturn res - n;\n}", "{\n\tlong res = 1L;\n\twhile (n > p) \n\t{\n\t\t\
    res = (res * 2L) % p;\n\t\tn = (n * 2L) % p;\n\t}\n\treturn res;\n}\n/*\nReturn\
    \ 2^n modulo p (be aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>>\
    \ modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L,\
    \ 11L)\n    8L\n    >>> modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long n,\
    \ long p, long mod) \n{\n\tlong res = 1L;\n\twhile (n > p) \n\t{\n\t\tres = (res\
    \ * 2L) % mod;\n\t\tn = (n * 2L) % mod;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n\
    \ modulo p (be aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L,\
    \ 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n\
    \    >>> modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long n, long p, long mod,\
    \ long mod2) \n{\n\tlong res = 1L;\n\twhile (n > p) \n\t{\n\t\tres = (res * 2L)\
    \ % mod;\n\t\tn = (n * 2L) % mod;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo\
    \ p (be aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L,\
    \ 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n\
    \    >>> modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long n, long p, long mod,\
    \ long mod2, long mod3) \n{\n\tlong res = 1L;\n\twhile (n > p) \n\t{\n\t\tres\
    \ = (res * 2L) % mod;\n\t\tn = (n * 2L) % mod;\n\t}\n\treturn res;\n}\n/*\nReturn\
    \ 2^n modulo p (be aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>>\
    \ modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L,\
    \ 11L)\n    8L\n    >>> modp(100L, ", "{\n\tlong r = 1;\n\tlong t = 1;\n\tlong\
    \ q = 1;\n\tlong r = n;\n\tlong t = n;\n\tlong q = n;\n\twhile (r != 0) {\n\t\t\
    r = r / p;\n\t\tt = t % p;\n\t\tq = q * p;\n\t}\n\twhile (r != 0) {\n\t\tr = r\
    \ / p;\n\t\tt = t * p;\n\t\tq = q * p;\n\t}\n\twhile (r != 0) {\n\t\tr = r / p;\n\
    \t\tt = t % p;\n\t\tq = q * p;\n\t}\n\treturn t;\n}\n/*\nReturn 2^n modulo p (be\
    \ aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n\
    \    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>>\
    \ modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long n, long p, long q) \n{\n\t\
    long r = 1;\n\tlong t = 1;\n\tlong q = 1;\n\tlong r = n;\n\tlong t = n;\n\tlong\
    \ q = n;\n\twhile (r != 0) {\n\t\tr = r / p;\n\t\tt = t % p;\n\t\tq = q * p;\n\
    \t}\n\twhile (r != 0) {\n\t\tr = r / p;\n\t\tt = t * p;\n\t\tq = q * p;\n\t}\n\
    \twhile (r != 0) {\n\t\tr = r / p;\n\t\tt = t % p;\n\t\tq = q * p;\n\t}\n\treturn\
    \ t;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n    >>> modp(3L, 5L)\n\
    \    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n \
    \   >>> modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n    1L\n    \n*/\nlong\
    \ modp(long n, long p, long q, long r) \n{\n\tlong t = 1;\n\tlong q = 1;\n\tlong\
    \ r = n;\n\tlong t = n;\n\tlong q = n;\n\twhile (r != 0) {\n\t\tr = r / p;\n\t\
    \tt = t % p;\n\t\tq = q * p;\n\t}\n\twhile (r != 0) {\n\t\tr = r / p;\n\t\tt =\
    \ t * p;\n\t\tq = q * p;\n\t}\n\twhile (r != 0) {\n\t\tr = r / p;\n\t\tt = t %\
    \ p;\n\t\tq = q * p;\n\t}\n\treturn t;", "{\n\tlong res = 1;\n\twhile (n > p)\
    \ {\n\t\tres *= 2;\n\t\tn -= p;\n\t}\n\treturn res - n;\n}", "{\n\tlong res =\
    \ 1L;\n\twhile (n > p) \n\t{\n\t\tres = (res * 2L) % p;\n\t\tn = (n * 2L) % p;\n\
    \t}\n\treturn res;\n}", "{\n\tlong res = 1L;\n\t\n\twhile (n > p) {\n\t\tres *=\
    \ 2L;\n\t\tn -= p;\n\t}\n\t\n\treturn res;\n}", "{\n\tlong res = 1L;\n\twhile\
    \ (n) {\n\t\tres *= p;\n\t\tres %= n;\n\t\tn--;\n\t}\n\treturn res;\n}", "{\n\t\
    long r = 1;\n\twhile (n) {\n\t\tr = r * p % n;\n\t\tn = n / 2;\n\t}\n\treturn\
    \ r;\n}", "{\n\tlong res = 1L;\n\twhile (n) {\n\t\tres = (res * n) % p;\n\t\t\
    n = (n * 2L) % p;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo p (be aware of\
    \ numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n\
    \    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L,\
    \ 101L)\n    1L\n    \n*/\nlong modp(long n, long p, long mod) \n{\n\tlong res\
    \ = 1L;\n\twhile (n) {\n\t\tres = (res * n) % p;\n\t\tn = (n * 2L) % p;\n\t}\n\
    \treturn res;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n    >>> modp(3L,\
    \ 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n   \
    \ 1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n    1L\n    \n\
    */\nlong modp(long n, long p, long mod, long mod2) \n{\n\tlong res = 1L;\n\twhile\
    \ (n) {\n\t\tres = (res * n) % p;\n\t\tn = (n * 2L) % p;\n\t}\n\treturn res;\n\
    }\n/*\nReturn 2^n modulo p (be aware of numerics).\n    >>> modp(3L, 5L)\n   \
    \ 3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n    >>>\
    \ modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long\
    \ n, long p, long mod, long mod2, long mod3) \n{\n\tlong res = 1L;\n\twhile (n)\
    \ {\n\t\tres = (res * n) % p;\n\t\tn = (n * 2L) % p;\n\t}\n\treturn res;\n}\n\
    /*\nReturn 2^n modulo p (be aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n\
    \    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L,\
    \ 11L)\n    8L\n    >>> modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long n,\
    \ long p, long mod, long mod2, ", "{\n\tlong res = 1L;\n\tlong i;\n\t\n\tfor (i\
    \ = 1; i < p; i++) \n\t{\n\t\tres = (res * n) % p;\n\t\tn = (n * n) % p;\n\t}\n\
    \t\n\treturn res;\n}", "{\n\tlong res = 1;\n\tlong tmp;\n\t\n\twhile (n > 0)\n\
    \t{\n\t\ttmp = n % p;\n\t\tres = (res * tmp) % p;\n\t\tn = n / p;\n\t}\n\t\n\t\
    return res;\n}", "{\n\tlong res = 1L;\n\twhile (n) {\n\t\tif (n % p) \n\t\t\t\
    res *= p;\n\t\tn /= p;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo p (be aware\
    \ of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n   \
    \ 2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L,\
    \ 101L)\n    1L\n    \n*/\nlong modp(long n, long p, long mod) \n{\n\tlong res\
    \ = 1L;\n\twhile (n) {\n\t\tif (n % p) \n\t\t\tres *= mod;\n\t\tn /= p;\n\t}\n\
    \treturn res;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n    >>> modp(3L,\
    \ 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n   \
    \ 1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n    1L\n    \n\
    */\nlong modp(long n, long p, long mod, long mod2) \n{\n\tlong res = 1L;\n\twhile\
    \ (n) {\n\t\tif (n % p) \n\t\t\tres *= mod;\n\t\tn /= p;\n\t}\n\treturn res;\n\
    }\n/*\nReturn 2^n modulo p (be aware of numerics).\n    >>> modp(3L, 5L)\n   \
    \ 3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n    >>>\
    \ modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long\
    \ n, long p, long mod, long mod2, long mod3) \n{\n\tlong res = 1L;\n\twhile (n)\
    \ {\n\t\tif (n % p) \n\t\t\tres *= mod;\n\t\tn /= p;\n\t}\n\treturn res;\n}\n\
    /*\nReturn 2^n modulo p (be aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n\
    \    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L,\
    \ 11L)\n    8L\n    >>> modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long n,\
    \ long p, long mod, long mod2, long mod3, long mod", "{\n\tlong res = 1L;\n\t\
    while (n) {\n\t\tres *= p;\n\t\tres %= n;\n\t\tn /= p;\n\t}\n\treturn res;\n}",
  "{\n\tlong res = 1L;\n\t\n\twhile (n) {\n\t\tres = (res*p) % n;\n\t\tn--;\n\t}\n\
    \t\n\treturn res;\n}", "{\n\tlong res = 1L;\n\t\n\twhile (n) {\n\t\tif (n % p)\
    \ \n\t\t\tres = (res*2L) % p;\n\t\tn = (n-1L)/2L;\n\t}\n\t\n\treturn res;\n}",
  "{\n\tlong res = 1L;\n\twhile (n) {\n\t\tres *= n;\n\t\tn--;\n\t}\n\twhile (res\
    \ < p) {\n\t\tres *= p;\n\t\tp--;\n\t}\n\treturn res;\n}\n/*\nReturn 2^n modulo\
    \ p (be aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L,\
    \ 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n\
    \    >>> modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long n, long p, long mod)\
    \ \n{\n\tlong res = 1L;\n\twhile (n) {\n\t\tres *= n;\n\t\tn--;\n\t}\n\twhile\
    \ (res < p) {\n\t\tres *= p;\n\t\tp--;\n\t}\n\treturn res & mod;\n}\n/*\nReturn\
    \ 2^n modulo p (be aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>>\
    \ modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L,\
    \ 11L)\n    8L\n    >>> modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long n,\
    \ long p, long mod, long base) \n{\n\tlong res = 1L;\n\twhile (n) {\n\t\tres *=\
    \ n;\n\t\tn--;\n\t}\n\twhile (res < p) {\n\t\tres *= p;\n\t\tp--;\n\t}\n\treturn\
    \ res & mod;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n    >>> modp(3L,\
    \ 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L, 101L)\n   \
    \ 1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n    1L\n    \n\
    */\nlong modp(long n, long p, long mod, long base, long mod2) \n{\n\tlong res\
    \ = 1L;\n\twhile (n) {\n\t\tres *= n;\n\t\tn--;\n\t}\n\twhile (res < p) {\n\t\t\
    res *= p;\n\t\tp--;\n\t}\n\treturn res & mod;\n}\n/*\nReturn 2^n modulo p (be\
    \ aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n\
    \    2L\n    >>> modp(0L, 101L)\n    1L", "{\n\tlong res = 1L;\n\tlong t = n;\n\
    \twhile (t != 0L) {\n\t\tif (t % p == 0L) {\n\t\t\tres = (res * 2L) % p;\n\t\t\
    }\n\t\tt /= 2L;\n\t}\n\treturn res;\n}", "{\n\tlong res = 1L;\n\twhile (n) {\n\
    \t\tres *= p;\n\t\tn -= (n & -p);\n\t}\n\treturn res;\n}", "{\n    long res =\
    \ 1L;\n    \n    while (n > p) {\n        res = (1L << n) % (1L << p);\n     \
    \   n -= p;\n    }\n    return res;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n\
    \    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L,\
    \ 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n   \
    \ 1L\n    \n*/\nlong modp(long n, long p, long q) \n{\n    long res = 1L;\n  \
    \  \n    while (n > p) {\n        res = (1L << n) % (1L << p);\n        n -= p;\n\
    \    }\n    while (n > q) {\n        res = (1L << n) % (1L << q);\n        n -=\
    \ q;\n    }\n    return res;\n}\n/*\nReturn 2^n modulo p (be aware of numerics).\n\
    \    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n    2L\n    >>> modp(0L,\
    \ 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>> modp(100L, 101L)\n   \
    \ 1L\n    \n*/\nlong modp(long n, long p, long q, long r) \n{\n    long res =\
    \ 1L;\n    \n    while (n > p) {\n        res = (1L << n) % (1L << p);\n     \
    \   n -= p;\n    }\n    while (n > q) {\n        res = (1L << n) % (1L << q);\n\
    \        n -= q;\n    }\n    while (n > r) {\n        res = (1L << n) % (1L <<\
    \ r);\n        n -= r;\n    }\n    return res;\n}\n/*\nReturn 2^n modulo p (be\
    \ aware of numerics).\n    >>> modp(3L, 5L)\n    3L\n    >>> modp(1101L, 101L)\n\
    \    2L\n    >>> modp(0L, 101L)\n    1L\n    >>> modp(3L, 11L)\n    8L\n    >>>\
    \ modp(100L, 101L)\n    1L\n    \n*/\nlong modp(long n, long p, long q, long r,\
    \ long s) \n{\n    long res = 1L;\n    \n    while (n > p) {\n        res = (1L\
    \ << n) % (1L << p);\n        n -= p;\n    }\n    while (n > q) {\n        res\
    \ = (1L << ", "{\n\tlong res = 1L;\n\twhile (n != 0L) {\n\t\tres = (res * n) %\
    \ p;\n\t\tn = (n * n) % p;\n\t}\n\treturn res;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

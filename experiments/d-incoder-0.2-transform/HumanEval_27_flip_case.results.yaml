language: d
name: HumanEval_27_flip_case
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n        {\n            c = 'A';\n\
    \        }\n        else if(c == 'A')\n        {\n            c = 'a';\n     \
    \   }\n        result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgmm0dky1.d(11): Error: `string` is used as a type\n/tmp/tmpgmm0dky1.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpgmm0dky1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) result += toupper(c);\n    return\
    \ result;\n}\n/*\n For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n \
    \   \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n   \
    \ for (auto c : string) result += toupper(c);\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for (auto c : string) result +=\
    \ toupper(c);\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\"\
    )\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) result += toupper(c);\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring\
    \ flip_case(string string) \n{\n    string result = \"\";\n    for (auto c : string)\
    \ result += toupper(c);\n    return result;\n}\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) result += toupper(c);\n    return\
    \ result;\n}\n/*\n For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n \
    \   \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n   \
    \ for (auto c : string) result += toupper(c);\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for (auto c : string) result +=\
    \ toupper(c);\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n    >>> \nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi492rj56.d(12): Error: no identifier for declarator `c`\n/tmp/tmpi492rj56.d(12):
    Error: expression expected, not `:`\n/tmp/tmpi492rj56.d(12): Error: found `string`
    when expecting `;` following `for` condition\n/tmp/tmpi492rj56.d(24): Error: no
    identifier for declarator `c`\n/tmp/tmpi492rj56.d(24): Error: expression expected,
    not `:`\n/tmp/tmpi492rj56.d(24): Error: found `string` when expecting `;` following
    `for` condition\n/tmp/tmpi492rj56.d(36): Error: no identifier for declarator `c`\n/tmp/tmpi492rj56.d(36):
    Error: expression expected, not `:`\n/tmp/tmpi492rj56.d(36): Error: found `string`
    when expecting `;` following `for` condition\n/tmp/tmpi492rj56.d(48): Error: no
    identifier for declarator `c`\n/tmp/tmpi492rj56.d(48): Error: expression expected,
    not `:`\n/tmp/tmpi492rj56.d(48): Error: found `string` when expecting `;` following
    `for` condition\n/tmp/tmpi492rj56.d(60): Error: no identifier for declarator `c`\n/tmp/tmpi492rj56.d(60):
    Error: expression expected, not `:`\n/tmp/tmpi492rj56.d(60): Error: found `string`
    when expecting `;` following `for` condition\n/tmp/tmpi492rj56.d(72): Error: no
    identifier for declarator `c`\n/tmp/tmpi492rj56.d(72): Error: expression expected,
    not `:`\n/tmp/tmpi492rj56.d(72): Error: found `string` when expecting `;` following
    `for` condition\n/tmp/tmpi492rj56.d(84): Error: no identifier for declarator `c`\n/tmp/tmpi492rj56.d(84):
    Error: expression expected, not `:`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpi492rj56.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c\
    \ == 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnz7ge2i4.d(11): Error: `string` is used as a type\n/tmp/tmpnz7ge2i4.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnz7ge2i4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\
    \t\tif(islower(*it))\n\t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\t\t\
    {\n\t\t\t*it = tolower(*it);\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n \
    \   alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n   \
    \ assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    );\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp9zbwwnq.d(11): Error: no property `begin` for type `string`\n/tmp/tmpp9zbwwnq.d(12):
    Error: no property `end` for type `string`\n/tmp/tmpp9zbwwnq.d(15): Error: undefined
    identifier `islower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp9zbwwnq.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u')\n        {\n            result += toupper(c);\n        }\n    \
    \    else\n        {\n            result += tolower(c);\n        }\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzy_0llo4.d(11): Error: `string` is used as a type\n/tmp/tmpzy_0llo4.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpzy_0llo4.d(17): Error:
    undefined identifier `toupper`\n/tmp/tmpzy_0llo4.d(21): Error: undefined identifier
    `tolower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzy_0llo4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        else\n            c = toupper(c);\n \
    \       result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpj3knqrqe.d(11): Error: `string` is used as a type\n/tmp/tmpj3knqrqe.d(20):
    Error: undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpj3knqrqe.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\
    \t\tif(*it<='Z' && *it>='a')\n\t\t\t*it-=32;\n\t\telse if(*it>='A' && *it<='Z')\n\
    \t\t\t*it+=32;\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy3unf284.d(11): Error: no property `begin` for type `string`\n/tmp/tmpy3unf284.d(12):
    Error: no property `end` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpy3unf284.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(c == '_') {\n            result += string[i];\n \
    \       } else {\n            result += toupper(c);\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdpoerq03.d(11): Error: `string` is used as a type\n/tmp/tmpdpoerq03.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpdpoerq03.d(17): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdpoerq03.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'b')\n            c = 'B';\n        else if(c == 'c')\n            c\
    \ = 'C';\n        else if(c == 'd')\n            c = 'D';\n        else if(c ==\
    \ 'e')\n            c = 'E';\n        else if(c == 'f')\n            c = 'F';\n\
    \        else if(c == 'g')\n            c = 'G';\n        else if(c == 'h')\n\
    \            c = 'H';\n        else if(c == 'i')\n            c = 'I';\n     \
    \   else if(c == 'j')\n            c = 'J';\n        else if(c == 'k')\n     \
    \       c = 'K';\n        else if(c == 'l')\n            c = 'L';\n        else\
    \ if(c == 'm')\n            c = 'M';\n        else if(c == 'n')\n            c\
    \ = 'N';\n        else if(c == 'o')\n            c = 'O';\n        else if(c ==\
    \ 'p')\n            c = 'P';\n        else if(c == 'q')\n            c = 'Q';\n\
    \        else if(c == 'r')\n            c = 'R';\n        else if(c == 's')\n\
    \            c = 'S';\n        else if(c == 't')\n            c = 'T';\n     \
    \   else if(c == 'u')\n            c = 'U';\n        else if(c == 'v')\n     \
    \       c = 'V';\n        else if(c == 'w')\n            c = 'W';\n        else\
    \ if(c == 'x')\n            c = 'X';\n        else if(c == 'y')\n            c\
    \ = 'Y';\n        else if(c == 'z')\n            c = 'Z';\n        else\n    \
    \        c = toupper(c);\n        result += c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpawgjhiwm.d(11): Error: `string` is used as a type\n/tmp/tmpawgjhiwm.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpawgjhiwm.d(68): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpawgjhiwm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            result +=\
    \ string[i];\n        }\n        else if(c == 'a')\n        {\n            result\
    \ += 'A';\n        }\n        else if(c == 'A')\n        {\n            result\
    \ += 'a';\n        }\n        else\n        {\n            result += c;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpccrvvmxr.d(11): Error: `string` is used as a type\n/tmp/tmpccrvvmxr.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpccrvvmxr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\n/*\n For a given string,\
    \ flip lowercase characters to uppercase and uppercase to lowercase.\n    >>>\
    \ flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n        \
    \    result += string[i] - 'a' + 'A';\n        }\n        else\n        {\n  \
    \          result += string[i];\n        }\n    }\n    return result;\n}\n/*\n\
    \ For a given string, flip lowercase characters to uppercase and uppercase to\
    \ lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring\
    \ flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n \
    \       else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"\
    hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to upper\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4obi13nt.d(113): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4obi13nt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(c == ' ') {\n            result += c;\n        }\
    \ else {\n            result += toupper(c);\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp0eycmei.d(11): Error: `string` is used as a type\n/tmp/tmpp0eycmei.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpp0eycmei.d(17): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp0eycmei.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjwjjmcbd.d(11): Error: no property `length` for type `string`\n/tmp/tmpjwjjmcbd.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmpjwjjmcbd.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpjwjjmcbd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\
    \t\tif(islower(*it))\n\t\t\t*it = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\
    \t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpekvtffg9.d(11): Error: no property `begin` for type `string`\n/tmp/tmpekvtffg9.d(12):
    Error: no property `end` for type `string`\n/tmp/tmpekvtffg9.d(15): Error: undefined
    identifier `islower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekvtffg9.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toUpper())\n        {\n            result\
    \ += c.toLower();\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\n/*\n Given a string, return true if\
    \ it contains only letters, false otherwise.\n    >>> is_alpha(\"Hello\")\n  \
    \  True\n    >>> is_alpha(\"123\")\n    False\n*/\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk2gdw8bd.d(11): Error: `string` is used as a type\n/tmp/tmpk2gdw8bd.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpk2gdw8bd.d(15): Error:
    no property `toUpper` for type `char`\n/tmp/tmpk2gdw8bd.d(17): Error: no property
    `toLower` for type `char`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk2gdw8bd.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c\
    \ == 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnz7ge2i4.d(11): Error: `string` is used as a type\n/tmp/tmpnz7ge2i4.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnz7ge2i4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjwjjmcbd.d(11): Error: no property `length` for type `string`\n/tmp/tmpjwjjmcbd.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmpjwjjmcbd.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpjwjjmcbd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it) {\n\t\
    \tif(*it<='Z' && *it>='a')\n\t\t\t*it+=32;\n\t\telse if(*it>='A' && *it<='Z')\n\
    \t\t\t*it-=32;\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjh0__z3l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(islower(c))\n        {\n            result\
    \ += toupper(c);\n        }\n        else\n        {\n            result += tolower(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphdyf71zu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ result = string;\n\tfor (auto &c : string) c = toupper(c);\n\treturn result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpur2bc1jx.d(12): Error: basic type expected, not &\n/tmp/tmpur2bc1jx.d(12):
    Error: no identifier for declarator int\n/tmp/tmpur2bc1jx.d(12): Error: found
    \'':\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpur2bc1jx.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoy1wj36u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(islower(c)) {\n            result += toupper(c);\n\
    \        } else {\n            result += tolower(c);\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw1d7q_0x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c\
    \ == 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnz7ge2i4.d(11): Error: `string` is used as a type\n/tmp/tmpnz7ge2i4.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnz7ge2i4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpll1socvm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        result += c;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppq28y2h3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(islower(c))\n        {\n            result\
    \ += toupper(c);\n        }\n        else\n        {\n            result += tolower(c);\n\
    \        }\n    }\n    return result;\n}\n/*\n Given a string, return a string\
    \ where all characters are reversed.\n    >>> flip_case(\"Hello\")\n    \"olleH\"\
    \n    \n*/\nstring reverse_case(string string) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(islower(c))\n        {\n            result += toupper(c);\n      \
    \  }\n        else\n        {\n            result += tolower(c);\n        }\n\
    \    }\n    return result;\n}\n/*\n Given a string, return a string where all\
    \ characters are reversed.\n    >>> flip_case(\"Hello\")\n    \"olleH\"\n    \n\
    */\nstring reverse_case(string string) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n     \
    \   if(islower(c))\n        {\n            result += toupper(c);\n        }\n\
    \        else\n        {\n            result += tolower(c);\n        }\n    }\n\
    \    return result;\n}\n/*\n Given a string, return a string where all characters\
    \ are reversed.\n    >>> flip_case(\"Hello\")\n    \"olleH\"\n    \n*/\nstring\
    \ reverse_case(string string) \n{\n    string result = \"\";\n    for(int i =\
    \ 0; i < string.length(); i++)\n    {\n        char c = string[i];\n        if(islower(c))\n\
    \        {\n            result += toupper(c);\n        }\n        else\n     \
    \   {\n            result += tolower(c);\n        }\n    }\n    return result;\n\
    }\n/*\n Given a string, return a string where all characters are reversed.\n \
    \   >>> flip_case(\"Hello\")\n    \"olleH\"\n    \n*/\nstring reverse_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(islower(c))\n        {\n\
    \            result += toupper(c);\n        }\n        else\n        {\n     \
    \       result += tolower(c);\n        }\n    }\n    return result;\n}\n/*\n Given\
    \ a string, return a string where all characters are reversed.\n    >>> flip_case(\"\
    Hello\")\n    \"olleH\"\n    \n*/\nstring reverse_case(string string) \n{\n  \
    \  string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n\
    \        char c = string[i];\n        if(islower(c\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3hx_k8_6.d(131): Error: found \''unittest\'' when expecting
    \'',\''\n/tmp/tmp3hx_k8_6.d(139): Error: found \''void\'' when expecting \'',\''\n/tmp/tmp3hx_k8_6.d(139):
    Error: found \''{\'' when expecting \'',\''\n/tmp/tmp3hx_k8_6.d(139): Error: expression
    expected, not \''}\''\n/tmp/tmp3hx_k8_6.d(139): Error: found \''EOF\'' when expecting
    \'',\''\n/tmp/tmp3hx_k8_6.d(139): Error: found \''EOF\'' when expecting \'')\''\n/tmp/tmp3hx_k8_6.d(139):
    Error: found \''EOF\'' when expecting \'')\''\n/tmp/tmp3hx_k8_6.d(139): Error:
    found \''EOF\'' instead of statement\n/tmp/tmp3hx_k8_6.d(139): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\n/tmp/tmp3hx_k8_6.d(139):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3hx_k8_6.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == 'a' || c == 'A')\n        {\n            c =\
    \ 'A';\n        }\n        else if(c == 'b' || c == 'B')\n        {\n        \
    \    c = 'B';\n        }\n        else if(c == 'c' || c == 'C')\n        {\n \
    \           c = 'C';\n        }\n        else if(c == 'd' || c == 'D')\n     \
    \   {\n            c = 'D';\n        }\n        else if(c == 'e' || c == 'E')\n\
    \        {\n            c = 'E';\n        }\n        else if(c == 'f' || c ==\
    \ 'F')\n        {\n            c = 'F';\n        }\n        else if(c == 'g' ||\
    \ c == 'G')\n        {\n            c = 'G';\n        }\n        else if(c ==\
    \ 'h' || c == 'H')\n        {\n            c = 'H';\n        }\n        else if(c\
    \ == 'i' || c == 'I')\n        {\n            c = 'I';\n        }\n        else\
    \ if(c == 'j' || c == 'J')\n        {\n            c = 'J';\n        }\n     \
    \   else if(c == 'k' || c == 'K')\n        {\n            c = 'K';\n        }\n\
    \        else if(c == 'l' || c == 'L')\n        {\n            c = 'L';\n    \
    \    }\n        else if(c == 'm' || c == 'M')\n        {\n            c = 'M';\n\
    \        }\n        else if(c == 'n' || c == 'N')\n        {\n            c =\
    \ 'N';\n        }\n        else if(c == 'o' || c == 'O')\n        {\n        \
    \    c = 'O';\n        }\n        else if(c == 'p' || c == 'P')\n        {\n \
    \           c = 'P';\n        }\n        else if(c == 'q' || c == 'Q')\n     \
    \   {\n            c = 'Q';\n        }\n        else if(c == 'r' || c == 'R')\n\
    \        {\n            c = 'R';\n        }\n        else if(c == 's' || c ==\
    \ 'S')\n        {\n            c = 'S';\n        }\n        else if(c == 't' ||\
    \ c == 'T')\n        {\n            c = 'T';\n        }\n        else if(c ==\
    \ 'u' || c == 'U')\n        {\n            c = 'U';\n        }\n        else if(c\
    \ == 'v' || c == 'V')\n        {\n            c = 'V';\n        }\n        else\
    \ if(c == 'w' || c == 'W')\n        {\n            c = 'W';\n        }\n     \
    \   else if(c == 'x' || c == 'X')\n        {\n            c = 'X';\n        }\n\
    \        else if(c == 'y' || c == 'Y')\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbvoc621t.d(112): Error: found \''unittest\'' instead of statement\n/tmp/tmpbvoc621t.d(120):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbvoc621t.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == '_')\n        {\n            result += c;\n\
    \        }\n        else\n        {\n            result += toupper(c);\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaymucr3p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c\
    \ == 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnz7ge2i4.d(11): Error: `string` is used as a type\n/tmp/tmpnz7ge2i4.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnz7ge2i4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        else if(c == 'e')\n            c\
    \ = 'E';\n        else if(c == 'E')\n            c = 'e';\n        else if(c ==\
    \ 'i')\n            c = 'I';\n        else if(c == 'I')\n            c = 'i';\n\
    \        else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n\
    \            c = 'o';\n        else if(c == 'u')\n            c = 'U';\n     \
    \   else if(c == 'U')\n            c = 'u';\n        result += c;\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxkepqxup.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\n/*\n For a given string,\
    \ flip lowercase characters to uppercase and uppercase to lowercase.\n    >>>\
    \ flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n        \
    \    result += string[i] - 'a' + 'A';\n        }\n        else\n        {\n  \
    \          result += string[i];\n        }\n    }\n    return result;\n}\n/*\n\
    \ For a given string, flip lowercase characters to uppercase and uppercase to\
    \ lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring\
    \ flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n \
    \       else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"\
    hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to upper\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4obi13nt.d(113): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4obi13nt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp907c4po1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n        {\n            c = 'A';\n\
    \        }\n        else if(c == 'A')\n        {\n            c = 'a';\n     \
    \   }\n        result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgmm0dky1.d(11): Error: `string` is used as a type\n/tmp/tmpgmm0dky1.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpgmm0dky1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            c = string[i\
    \ + 1];\n            result += c;\n            ++i;\n        }\n        else if(c\
    \ == 'a')\n        {\n            c = 'A';\n        }\n        else if(c == 'A')\n\
    \        {\n            c = 'a';\n        }\n        result += c;\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpucbzod5d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(islower(c)) {\n            result += toupper(c);\n\
    \        } else {\n            result += tolower(c);\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw1d7q_0x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\n/*\n For a given string,\
    \ flip lowercase characters to uppercase and uppercase to lowercase.\n    >>>\
    \ flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n        \
    \    result += string[i] - 'a' + 'A';\n        }\n        else\n        {\n  \
    \          result += string[i];\n        }\n    }\n    return result;\n}\n/*\n\
    \ For a given string, flip lowercase characters to uppercase and uppercase to\
    \ lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring\
    \ flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n \
    \       else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"\
    hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to upper\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4obi13nt.d(113): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4obi13nt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == 'a' || c == 'A')\n            c = 'A';\n   \
    \     else if(c == 'b' || c == 'B')\n            c = 'B';\n        else if(c ==\
    \ 'c' || c == 'C')\n            c = 'C';\n        else if(c == 'd' || c == 'D')\n\
    \            c = 'D';\n        else if(c == 'e' || c == 'E')\n            c =\
    \ 'E';\n        else if(c == 'f' || c == 'F')\n            c = 'F';\n        else\
    \ if(c == 'g' || c == 'G')\n            c = 'G';\n        else if(c == 'h' ||\
    \ c == 'H')\n            c = 'H';\n        else if(c == 'i' || c == 'I')\n   \
    \         c = 'I';\n        else if(c == 'j' || c == 'J')\n            c = 'J';\n\
    \        else if(c == 'k' || c == 'K')\n            c = 'K';\n        else if(c\
    \ == 'l' || c == 'L')\n            c = 'L';\n        else if(c == 'm' || c ==\
    \ 'M')\n            c = 'M';\n        else if(c == 'n' || c == 'N')\n        \
    \    c = 'N';\n        else if(c == 'o' || c == 'O')\n            c = 'O';\n \
    \       else if(c == 'p' || c == 'P')\n            c = 'P';\n        else if(c\
    \ == 'q' || c == 'Q')\n            c = 'Q';\n        else if(c == 'r' || c ==\
    \ 'R')\n            c = 'R';\n        else if(c == 's' || c == 'S')\n        \
    \    c = 'S';\n        else if(c == 't' || c == 'T')\n            c = 'T';\n \
    \       else if(c == 'u' || c == 'U')\n            c = 'U';\n        else if(c\
    \ == 'v' || c == 'V')\n            c = 'V';\n        else if(c == 'w' || c ==\
    \ 'W')\n            c = 'W';\n        else if(c == 'x' || c == 'X')\n        \
    \    c = 'X';\n        else if(c == 'y' || c == 'Y')\n            c = 'Y';\n \
    \       else if(c == 'z' || c == 'Z')\n            c = 'Z';\n        else\n  \
    \      {\n            result += c;\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9umkpwup.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); ++i)\n    {\n        char c = string[i];\n     \
    \   if(c == '_')\n        {\n            string s = string[i];\n            string[i]\
    \ = string[string.length() - 1];\n            string[string.length() - 1] = s;\n\
    \        }\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbatty5pi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == ' ')\n            continue;\n        if(c\
    \ == '_')\n        {\n            c = string[i + 1];\n            if(c == '_')\n\
    \            {\n                c = string[i + 2];\n                if(c == '_')\n\
    \                {\n                    c = string[i + 3];\n                 \
    \   if(c == '_')\n                    {\n                        c = string[i\
    \ + 4];\n                        if(c == '_')\n                        {\n   \
    \                         c = string[i + 5];\n                            if(c\
    \ == '_')\n                            {\n                                c =\
    \ string[i + 6];\n                                if(c == '_')\n             \
    \                   {\n                                    c = string[i + 7];\n\
    \                                    if(c == '_')\n                          \
    \          {\n                                        c = string[i + 8];\n   \
    \                                     if(c == '_')\n                         \
    \               {\n                                            c = string[i +\
    \ 9];\n                                            if(c == '_')\n            \
    \                                {\n                                         \
    \       c = string[i + 10];\n                                                if(c\
    \ == '_')\n                                                {\n               \
    \                                     c = string[i + 11];\n                  \
    \                                  if(c == '_')\n                            \
    \                        {\n                                                 \
    \       c = string[i + 12];\n                                                \
    \        if(c == '_')\n                                                      \
    \  {\n                                                            c = string[i\
    \ + 13];\n                                                            if(c ==\
    \ '_')\n                                                            {\n      \
    \                                                          c = string[i + 14];\n\
    \                                                                if(c == '_')\n\
    \                                                                {\n         \
    \                                                           c = string[i + 15];\n\
    \                                                                    if(c == '_')\n\
    \                                                                    {\n     \
    \                                                                   c = string[i\
    \ + 16];\n                                                                   \
    \     if(c == '_')\n                                                         \
    \               {\n                                                          \
    \                  c = string[i + 17];\n                                     \
    \                                       if(c == '_')\n                       \
    \                                                     {\n                    \
    \                                                            c = string[i + 18];\n\
    \                                                                            \
    \    if(c == '_')\n                                                          \
    \                      {\n                                                   \
    \                                 c = string[i + 19];\n                      \
    \                                                              if(c == '_')\n\
    \                                                                            \
    \        {\n                                                                 \
    \                       c = string[i + 20];\n                                \
    \                                                        if(c == '_')\n      \
    \                                                                            \
    \      {\n                                                                   \
    \                         c = string[i + 21];\n                              \
    \                                                              if(c == '_')\n\
    \                                                                            \
    \                {\n                                                         \
    \                                       c = string[i + 22];\n                \
    \                                                                            \
    \    if(c == '_')\n                                                          \
    \                                      {\n                                   \
    \                                                                 c = string[i\
    \ + 23];\n                                                                   \
    \                                 if(c == '_')\n                             \
    \                                                                       {\n  \
    \                                                                            \
    \                          c = string[i + 24];\n                             \
    \                                                                           if(c\
    \ == '_')\n                                                                  \
    \                                      {\n                                   \
    \                                                                         c =\
    \ string[i + 25];\n                                                          \
    \                                                  if(c == '_')\n            \
    \                                                                            \
    \                    {\n                                                     \
    \                                                           c = string[i + 26];\n\
    \                                                                            \
    \                                    if(c == '_')\n                          \
    \                                                                            \
    \          {\n                                                               \
    \                                                     c = string\nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzb1oyo1l.d(98): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmpzb1oyo1l.d(106): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmpzb1oyo1l.d(106): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\n/tmp/tmpzb1oyo1l.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpzb1oyo1l.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpzb1oyo1l.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpzb1oyo1l.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpzb1oyo1l.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpzb1oyo1l.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpzb1oyo1l.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpzb1oyo1l.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpzb1oyo1l.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpzb1oyo1l.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpzb1oyo1l.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpzb1oyo1l.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpzb1oyo1l.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpzb1oyo1l.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpzb1oyo1l.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpzb1oyo1l.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpzb1oyo1l.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpzb1oyo1l.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd"'
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n        {\n            c = 'A';\n\
    \        }\n        else if(c == 'A')\n        {\n            c = 'a';\n     \
    \   }\n        result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgmm0dky1.d(11): Error: `string` is used as a type\n/tmp/tmpgmm0dky1.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpgmm0dky1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            result +=\
    \ string[i];\n        }\n        else\n        {\n            result += toupper(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp25_j7a9z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toLower())\n            c = c.toUpper();\n\
    \        else\n            c = c.toLower();\n        result += c;\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfp2fhbxk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(islower(c))\n        {\n            result\
    \ += toupper(c);\n        }\n        else\n        {\n            result += tolower(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphdyf71zu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == ' ' || c == '_')\n        {\n            result\
    \ += c;\n        }\n        else if(c == 'a')\n        {\n            result +=\
    \ 'A';\n        }\n        else if(c == 'A')\n        {\n            result +=\
    \ 'a';\n        }\n        else\n        {\n            result += toupper(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmeriphdg.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(c == ' ' || c == '\\t' || c == '\\n' || c == '\\\
    r' || c == '\\v' || c == '\\f' || c == '\\r') {\n            result += c;\n  \
    \      } else {\n            result += toupper(c);\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsr0elv3e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoy1wj36u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(islower(*it))\n\t\t\t*it = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\
    \t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqjypne8d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toUpper())\n        {\n            result\
    \ += c.toLower();\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp56lwz0q2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoy1wj36u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoy1wj36u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == ' ')\n        {\n            result +=\
    \ c;\n        }\n        else\n        {\n            result += toupper(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqxv64l2v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\
    \t\tif(islower(*it))\n\t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\t\t\
    {\n\t\t\t*it = tolower(*it);\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n \
    \   alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n   \
    \ assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    );\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp9zbwwnq.d(11): Error: no property `begin` for type `string`\n/tmp/tmpp9zbwwnq.d(12):
    Error: no property `end` for type `string`\n/tmp/tmpp9zbwwnq.d(15): Error: undefined
    identifier `islower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp9zbwwnq.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        result += c;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbinwq1w8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string)\n    {\n        if (c >= 'a' && c\
    \ <= 'z')\n        {\n            result += (char)(c - 'a' + 'A');\n        }\n\
    \        else if (c >= 'A' && c <= 'Z')\n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzub_pilv.d(12): Error: no identifier for declarator c\n/tmp/tmpzub_pilv.d(12):
    Error: expression expected, not \'':\''\n/tmp/tmpzub_pilv.d(12): Error: found
    \''string\'' when expecting \'';\'' following for condition\n/tmp/tmpzub_pilv.d(16):
    Error: C style cast illegal, use cast(char)(c - \''a\'' + \''A\'')\n/tmp/tmpzub_pilv.d(20):
    Error: C style cast illegal, use cast(char)(c - \''A\'' + \''a\'')\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpzub_pilv.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toLower())\n        {\n            result\
    \ += c.toUpper();\n        }\n        else\n        {\n            result += c.toLower();\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw_b1ba1n.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toUpper())\n        {\n            result\
    \ += c.toLower();\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp56lwz0q2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == ' ')\n        {\n            result +=\
    \ c;\n        }\n        else if(c == '_')\n        {\n            result += toupper(c);\n\
    \        }\n        else\n        {\n            result += tolower(c);\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp41hllv19.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toLower())\n            c = c.toUpper();\n\
    \        else\n            c = c.toLower();\n        result += c;\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfp2fhbxk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"\
    hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring\
    \ flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n \
    \       else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n           \
    \ result += string[i] - 'A' + 'a';\n        }\n        else\n        {\n     \
    \       result += string[i];\n        }\n    }\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            result += string[i] - 'A'\
    \ + 'a';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_5wcpvg7.d(107): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_5wcpvg7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            result +=\
    \ string[i];\n        }\n        else\n        {\n            result += toupper(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp25_j7a9z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ result = string;\n\tfor (auto &c : string) \n\t{\n\t\tif (islower(c)) \n\t\t\
    {\n\t\t\tresult = toupper(c);\n\t\t}\n\t\telse \n\t\t{\n\t\t\tresult = tolower(c);\n\
    \t\t}\n\t}\n\treturn result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa92sqv61.d(12): Error: basic type expected, not &\n/tmp/tmpa92sqv61.d(12):
    Error: no identifier for declarator int\n/tmp/tmpa92sqv61.d(12): Error: found
    \'':\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpa92sqv61.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp907c4po1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \ }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbsq_12az.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphno144z2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tstring\
    \ result = \"\";\n\tfor (auto c : string) result += toupper(c);\n\treturn result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpil4obtsm.d(12): Error: no identifier for declarator c\n/tmp/tmpil4obtsm.d(12):
    Error: expression expected, not \'':\''\n/tmp/tmpil4obtsm.d(12): Error: found
    \''string\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpil4obtsm.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdgr4y5al.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        result += c;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbinwq1w8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c\
    \ == 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnz7ge2i4.d(11): Error: `string` is used as a type\n/tmp/tmpnz7ge2i4.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnz7ge2i4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c\
    \ == 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnz7ge2i4.d(11): Error: `string` is used as a type\n/tmp/tmpnz7ge2i4.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnz7ge2i4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(*it >= 'a' && *it <= 'z')\n\t\t\t*it = (*it-'a'+'A');\n\t\telse if(*it\
    \ >= 'A' && *it <= 'Z')\n\t\t\t*it = (*it-'A'+'a');\n\t}\n\treturn string;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7x6uplij.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == ' ')\n        {\n            result +=\
    \ c;\n        }\n        else if(c == 'a')\n        {\n            result += 'A';\n\
    \        }\n        else if(c == 'A')\n        {\n            result += 'a';\n\
    \        }\n        else\n        {\n            result += c;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpspaf4weu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjwjjmcbd.d(11): Error: no property `length` for type `string`\n/tmp/tmpjwjjmcbd.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmpjwjjmcbd.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpjwjjmcbd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u')\n        {\n            result += toupper(c);\n        }\n    \
    \    else\n        {\n            result += tolower(c);\n        }\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzy_0llo4.d(11): Error: `string` is used as a type\n/tmp/tmpzy_0llo4.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpzy_0llo4.d(17): Error:
    undefined identifier `toupper`\n/tmp/tmpzy_0llo4.d(21): Error: undefined identifier
    `tolower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzy_0llo4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++) {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z') {\n            string[i] = string[i] - 32;\n        }\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z') {\n            string[i] = string[i] + 32;\n   \
    \     }\n    }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpulbgwk91.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp907c4po1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\
    \t\tif(islower(*it))\n\t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\t\t\
    {\n\t\t\t*it = tolower(*it);\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n \
    \   alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n   \
    \ assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    );\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp9zbwwnq.d(11): Error: no property `begin` for type `string`\n/tmp/tmpp9zbwwnq.d(12):
    Error: no property `end` for type `string`\n/tmp/tmpp9zbwwnq.d(15): Error: undefined
    identifier `islower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp9zbwwnq.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(islower(c)) {\n            result += toupper(c);\n\
    \        } else {\n            result += tolower(c);\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw1d7q_0x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'b')\n            c = 'B';\n        else if(c == 'c')\n            c\
    \ = 'C';\n        else if(c == 'd')\n            c = 'D';\n        else if(c ==\
    \ 'e')\n            c = 'E';\n        else if(c == 'f')\n            c = 'F';\n\
    \        else if(c == 'g')\n            c = 'G';\n        else if(c == 'h')\n\
    \            c = 'H';\n        else if(c == 'i')\n            c = 'I';\n     \
    \   else if(c == 'j')\n            c = 'J';\n        else if(c == 'k')\n     \
    \       c = 'K';\n        else if(c == 'l')\n            c = 'L';\n        else\
    \ if(c == 'm')\n            c = 'M';\n        else if(c == 'n')\n            c\
    \ = 'N';\n        else if(c == 'o')\n            c = 'O';\n        else if(c ==\
    \ 'p')\n            c = 'P';\n        else if(c == 'q')\n            c = 'Q';\n\
    \        else if(c == 'r')\n            c = 'R';\n        else if(c == 's')\n\
    \            c = 'S';\n        else if(c == 't')\n            c = 'T';\n     \
    \   else if(c == 'u')\n            c = 'U';\n        else if(c == 'v')\n     \
    \       c = 'V';\n        else if(c == 'w')\n            c = 'W';\n        else\
    \ if(c == 'x')\n            c = 'X';\n        else if(c == 'y')\n            c\
    \ = 'Y';\n        else if(c == 'z')\n            c = 'Z';\n        else if(c ==\
    \ 'A')\n            c = 'a';\n        else if(c == 'B')\n            c = 'b';\n\
    \        else if(c == 'C')\n            c = 'c';\n        else if(c == 'D')\n\
    \            c = 'd';\n        else if(c == 'E')\n            c = 'e';\n     \
    \   else if(c == 'F')\n            c = 'f';\n        else if(c == 'G')\n     \
    \       c = 'g';\n        else if(c == 'H')\n            c = 'h';\n        else\
    \ if(c == 'I')\n            c = 'i';\n        else if(c == 'J')\n            c\
    \ = 'j';\n        else if(c == 'K')\n            c = 'k';\n        else if(c ==\
    \ 'L')\n            c = 'l';\n        else if(c == 'M')\n            c = 'm';\n\
    \        else if(c == 'N')\n            c = 'n';\n        else if(c == 'O')\n\
    \            c = 'o';\n        else if(c == 'P')\n            c\nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpckbdb7tz.d(99): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmpckbdb7tz.d(107): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmpckbdb7tz.d(107): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpckbdb7tz.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == ' ')\n        {\n            result +=\
    \ c;\n        }\n        else\n        {\n            result += toupper(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqxv64l2v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(islower(c))\n        {\n            result\
    \ += toupper(c);\n        }\n        else\n        {\n            result += tolower(c);\n\
    \        }\n    }\n    return result;\n}\n/*\n Given a string, remove all spaces.\n\
    \    >>> remove_spaces(\"   Hello   \")\n    \"Hello\"\n    \n*/\nstring remove_spaces(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ ++i)\n    {\n        char c = string[i];\n        if(!isspace(c))\n        {\n\
    \            result += c;\n        }\n    }\n    return result;\n}\n/*\n Given\
    \ a string, remove all punctuation.\n    >>> remove_punctuation(\"!@#$%^&*()_+-={}[]\\\
    \\|;:'\\\",<>/?\")\n    \"Hello\"\n    \n*/\nstring remove_punctuation(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ ++i)\n    {\n        char c = string[i];\n        if(!ispunct(c))\n        {\n\
    \            result += c;\n        }\n    }\n    return result;\n}\n/*\n Given\
    \ a string, remove all numbers.\n    >>> remove_numbers(\"123abc456\")\n    \"\
    abc\"\n    \n*/\nstring remove_numbers(string string) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n        char c =\
    \ string[i];\n        if(!isdigit(c))\n        {\n            result += c;\n \
    \       }\n    }\n    return result;\n}\n/*\n Given a string, remove all letters.\n\
    \    >>> remove_letters(\"123abc456\")\n    \"abc\"\n    \n*/\nstring remove_letters(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ ++i)\n    {\n        char c = string[i];\n        if(!isalpha(c))\n        {\n\
    \            result += c;\n        }\n    }\n    return result;\n}\n/*\n Given\
    \ a string, remove all non-alphanumeric characters.\n    >>> remove_non_alphanumeric(\"\
    123abc456\")\n    \"abc\"\n    \n*/\nstring remove_non_alphanumeric(string string)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n\
    \    {\n        char c = string[i];\n        if(!isidigit(c) && !isialpha(c) &&\
    \ !isispace(c))\n        {\n            result += c;\n        }\n    }\n    return\
    \ result;\n}\n/*\n Given a string, remove all \nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp77u2upmj.d(121): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp77u2upmj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\"\
    )\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\"\
    )\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\"\
    )\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\"\
    )\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to upper\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplnrprw4k.d(113): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplnrprw4k.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n        {\n            c = 'A';\n\
    \        }\n        else if(c == 'A')\n        {\n            c = 'a';\n     \
    \   }\n        result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpiqz0kn_b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            result +=\
    \ string[i];\n        }\n        else if(c == 'a')\n        {\n            result\
    \ += 'A';\n        }\n        else if(c == 'A')\n        {\n            result\
    \ += 'a';\n        }\n        else\n        {\n            result += c;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8zgetrhk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c\
    \ == 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7cahj2b_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\n</code>\n<|/ a tags=c++,string\
    \ |>\n<| c |>\nThis is not the best solution. `string::length` does not return\
    \ the number of characters in a string. `string::length` returns the number of\
    \ characters in the string excluding the terminating null character. `string::length()`\
    \ returns the number of characters in the string excluding the terminating null\
    \ character. `string::length` returns the number of characters in the string excluding\
    \ the terminating null character. `string::length` returns the number of characters\
    \ in the string excluding the terminating null character. `string::length` returns\
    \ the number of characters in the string excluding the terminating null character.\
    \ `string::length` returns the number of characters in the string excluding the\
    \ terminating null character. `string::length` returns the number of characters\
    \ in the string excluding the terminating null character. `string::length` returns\
    \ the number of characters in the string excluding the terminating null character.\
    \ `string::length` returns the number of characters in the string excluding the\
    \ terminating null character. `string::length` returns the number of characters\
    \ in the string excluding the terminating null character. `string::length` returns\
    \ the number of characters in the string excluding the terminating null character.\
    \ `string::length` returns the number of characters in the string excluding the\
    \ terminating null character. `string::length` returns the number of characters\
    \ in the string excluding the terminating null character. `string::length` returns\
    \ the number of characters in the string excluding the terminating null character.\
    \ `string::length` returns the number of characters in the string excluding the\
    \ terminating null character. `string::length` returns the number of characters\
    \ in the string excluding the terminating null character. `string::length` returns\
    \ the number of characters in the string excluding the terminating null character.\
    \ `string::length` returns the number of characters in the string excluding the\
    \ terminating null character. `string::length` returns the number of characters\
    \ in the string excluding the terminating null character. `string::length` returns\
    \ the number of characters in the string excluding the terminating null character.\
    \ `string::length` returns the number of characters in the string excluding the\
    \ terminating null character. `string::length` returns the number of characters\
    \ in the string excluding the terminating null character. `string::length` returns\
    \ the number of characters in the string excluding the terminating null character.\
    \ `string::length` returns the number of characters in the string excluding the\
    \ terminating \nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcucqup74.d(24): Error: Declaration expected, not \''<\''\n/tmp/tmpcucqup74.d(32):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpcucqup74.d(33): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpcucqup74.d(34): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpcucqup74.d(35): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcucqup74.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c\
    \ <= 'z') \n        {\n            result += toupper(c);\n        }\n        else\
    \ if (c >= 'A' && c <= 'Z') \n        {\n            result += tolower(c);\n \
    \       }\n        else \n        {\n            result += c;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpprlclz9c.d(12): Error: no identifier for declarator c\n/tmp/tmpprlclz9c.d(12):
    Error: expression expected, not \'':\''\n/tmp/tmpprlclz9c.d(12): Error: found
    \''string\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpprlclz9c.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == ' ')\n            result += c;\n        else\
    \ if(c == '_')\n        {\n            result += string[i+1];\n            i++;\n\
    \        }\n        else\n        {\n            result += toupper(c);\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptc2hamvf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == toupper(c))\n        {\n            result +=\
    \ tolower(c);\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpet2g40l5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'A')\n            c = 'a';\n        else\
    \ if(c == 'a')\n            c = 'A';\n        else if(c == 'B')\n            c\
    \ = 'b';\n        else if(c == 'b')\n            c = 'B';\n        else if(c ==\
    \ 'C')\n            c = 'c';\n        else if(c == 'c')\n            c = 'C';\n\
    \        else if(c == 'D')\n            c = 'd';\n        else if(c == 'd')\n\
    \            c = 'D';\n        else if(c == 'E')\n            c = 'e';\n     \
    \   else if(c == 'e')\n            c = 'E';\n        else if(c == 'F')\n     \
    \       c = 'f';\n        else if(c == 'f')\n            c = 'F';\n        else\
    \ if(c == 'G')\n            c = 'g';\n        else if(c == 'g')\n            c\
    \ = 'G';\n        else if(c == 'H')\n            c = 'h';\n        else if(c ==\
    \ 'h')\n            c = 'H';\n        else if(c == 'I')\n            c = 'i';\n\
    \        else if(c == 'i')\n            c = 'I';\n        else if(c == 'J')\n\
    \            c = 'j';\n        else if(c == 'j')\n            c = 'J';\n     \
    \   else if(c == 'K')\n            c = 'k';\n        else if(c == 'k')\n     \
    \       c = 'K';\n        else if(c == 'L')\n            c = 'l';\n        else\
    \ if(c == 'l')\n            c = 'L';\n        else if(c == 'M')\n            c\
    \ = 'm';\n        else if(c == 'm')\n            c = 'M';\n        else if(c ==\
    \ 'N')\n            c = 'n';\n        else if(c == 'n')\n            c = 'N';\n\
    \        else if(c == 'O')\n            c = 'o';\n        else if(c == 'o')\n\
    \            c = 'O';\n        else if(c == 'P')\n            c = 'p';\n     \
    \   else if(c == 'p')\n            c = 'P';\n        else if(c == 'Q')\n     \
    \       c = 'q';\n        else if(c == 'q')\n            c = 'Q';\n        else\
    \ if(c == 'R')\n            c = 'r';\n        else if(c == 'r')\n            c\
    \ = 'R';\n        else if(c == 'S')\n            c = 's';\n        else if(c ==\
    \ 's')\n            c = 'S';\n        else if(c == 'T')\n            c = 't';\n\
    \        else if(c == 't')\n            c = 'T';\n        else if(c == 'U')\n\
    \            c = 'u';\n        else if(c == 'u')\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyo6wv51s.d(98): Error: found \''unittest\'' instead of statement\n/tmp/tmpyo6wv51s.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyo6wv51s.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a' || c == 'A')\n        {\n        \
    \    c = 'A';\n        }\n        else if(c == 'b' || c == 'B')\n        {\n \
    \           c = 'B';\n        }\n        else if(c == 'c' || c == 'C')\n     \
    \   {\n            c = 'C';\n        }\n        else if(c == 'd' || c == 'D')\n\
    \        {\n            c = 'D';\n        }\n        else if(c == 'e' || c ==\
    \ 'E')\n        {\n            c = 'E';\n        }\n        else if(c == 'f' ||\
    \ c == 'F')\n        {\n            c = 'F';\n        }\n        else if(c ==\
    \ 'g' || c == 'G')\n        {\n            c = 'G';\n        }\n        else if(c\
    \ == 'h' || c == 'H')\n        {\n            c = 'H';\n        }\n        else\
    \ if(c == 'i' || c == 'I')\n        {\n            c = 'I';\n        }\n     \
    \   else if(c == 'j' || c == 'J')\n        {\n            c = 'J';\n        }\n\
    \        else if(c == 'k' || c == 'K')\n        {\n            c = 'K';\n    \
    \    }\n        else if(c == 'l' || c == 'L')\n        {\n            c = 'L';\n\
    \        }\n        else if(c == 'm' || c == 'M')\n        {\n            c =\
    \ 'M';\n        }\n        else if(c == 'n' || c == 'N')\n        {\n        \
    \    c = 'N';\n        }\n        else if(c == 'o' || c == 'O')\n        {\n \
    \           c = 'O';\n        }\n        else if(c == 'p' || c == 'P')\n     \
    \   {\n            c = 'P';\n        }\n        else if(c == 'q' || c == 'Q')\n\
    \        {\n            c = 'Q';\n        }\n        else if(c == 'r' || c ==\
    \ 'R')\n        {\n            c = 'R';\n        }\n        else if(c == 's' ||\
    \ c == 'S')\n        {\n            c = 'S';\n        }\n        else if(c ==\
    \ 't' || c == 'T')\n        {\n            c = 'T';\n        }\n        else if(c\
    \ == 'u' || c == 'U')\n        {\n            c = 'U';\n        }\n        else\
    \ if(c == 'v' || c == 'V')\n        {\n            c = 'V';\n        }\n     \
    \   else if(c == 'w' || c == 'W')\n        {\n            c = 'W';\n        }\n\
    \        else if(c == 'x' || c == 'X')\n        {\n            c = 'X';\n    \
    \    }\n        else if(c == 'y' || c == 'Y')\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1t2lazi8.d(112): Error: found \''unittest\'' instead of statement\n/tmp/tmp1t2lazi8.d(120):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1t2lazi8.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ result = string;\n\tfor (auto &c : string) c = toupper(c);\n\treturn result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpur2bc1jx.d(12): Error: basic type expected, not &\n/tmp/tmpur2bc1jx.d(12):
    Error: no identifier for declarator int\n/tmp/tmpur2bc1jx.d(12): Error: found
    \'':\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpur2bc1jx.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c ==\
    \ 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj84gla9g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(c == ' ') {\n            result += c;\n        }\
    \ else {\n            result += toupper(c);\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp0eycmei.d(11): Error: `string` is used as a type\n/tmp/tmpp0eycmei.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpp0eycmei.d(17): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp0eycmei.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'b')\n            c = 'B';\n        else if(c == 'c')\n            c\
    \ = 'C';\n        else if(c == 'd')\n            c = 'D';\n        else if(c ==\
    \ 'e')\n            c = 'E';\n        else if(c == 'f')\n            c = 'F';\n\
    \        else if(c == 'g')\n            c = 'G';\n        else if(c == 'h')\n\
    \            c = 'H';\n        else if(c == 'i')\n            c = 'I';\n     \
    \   else if(c == 'j')\n            c = 'J';\n        else if(c == 'k')\n     \
    \       c = 'K';\n        else if(c == 'l')\n            c = 'L';\n        else\
    \ if(c == 'm')\n            c = 'M';\n        else if(c == 'n')\n            c\
    \ = 'N';\n        else if(c == 'o')\n            c = 'O';\n        else if(c ==\
    \ 'p')\n            c = 'P';\n        else if(c == 'q')\n            c = 'Q';\n\
    \        else if(c == 'r')\n            c = 'R';\n        else if(c == 's')\n\
    \            c = 'S';\n        else if(c == 't')\n            c = 'T';\n     \
    \   else if(c == 'u')\n            c = 'U';\n        else if(c == 'v')\n     \
    \       c = 'V';\n        else if(c == 'w')\n            c = 'W';\n        else\
    \ if(c == 'x')\n            c = 'X';\n        else if(c == 'y')\n            c\
    \ = 'Y';\n        else if(c == 'z')\n            c = 'Z';\n        else\n    \
    \        c = toupper(c);\n        result += c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ryocpw3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            c = string[i\
    \ + 1];\n            result += c;\n            i++;\n        }\n        else\n\
    \        {\n            result += toupper(c);\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnal7ut02.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(c == c.toLower()) {\n            result += c.toUpper();\n\
    \        } else {\n            result += c;\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplewylajw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\n/*\n For a given\
    \ string, flip uppercase characters to lowercase and lowercase to uppercase.\n\
    \    >>> flip_case(\"hELLO\")\n    \"Hello\"\n    \n*/\nstring flip_case_back(string\
    \ string) \n{\n    for(int i = 0; i < string.length(); ++i)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\n            string[i] = string[i] -\
    \ 32;\n        }\n        else if(string[i] >= 'a' && string[i] <= 'z')\n    \
    \    {\n            string[i] = string[i] + 32;\n        }\n    }\n    return\
    \ string;\n}\n/*\n For a given string, flip all characters to lowercase and uppercase\
    \ to uppercase.\n    >>> flip_case(\"hELLO\")\n    \"HELLO\"\n    \n*/\nstring\
    \ flip_case_both(string string) \n{\n    for(int i = 0; i < string.length(); ++i)\n\
    \    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n        \
    \    string[i] = string[i] - 32;\n        }\n        else if(string[i] >= 'A'\
    \ && string[i] <= 'Z')\n        {\n            string[i] = string[i] + 32;\n \
    \       }\n    }\n    return string;\n}\n/*\n For a given string, flip all characters\
    \ to uppercase and lowercase to lowercase.\n    >>> flip_case(\"HELLO\")\n   \
    \ \"hELLO\"\n    \n*/\nstring flip_case_both_back(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); ++i)\n    {\n        if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\n/*\n For a given\
    \ string, flip all characters to uppercase and uppercase to uppercase.\n    >>>\
    \ flip_case(\"hELLO\")\n    \"HELLO\"\n    \n*/\nstring flip_case_both_back(string\
    \ string) \n{\n    for(int i = 0; i < string.length(); ++i)\n    {\n        if(string[i]\
    \ >= 'A' && string[i] <= 'Z')\n        {\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp39p586e7.d(99): Error: found \''unittest\'' instead of statement\n/tmp/tmp39p586e7.d(107):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmp39p586e7.d(107):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp39p586e7.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\n\
    \        {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp907c4po1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c\
    \ <= 'z') \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n\
    \        else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3g2x1afp.d(12): Error: no identifier for declarator c\n/tmp/tmp3g2x1afp.d(12):
    Error: expression expected, not \'':\''\n/tmp/tmp3g2x1afp.d(12): Error: found
    \''string\'' when expecting \'';\'' following for condition\n/tmp/tmp3g2x1afp.d(16):
    Error: C style cast illegal, use cast(char)(c - \''a\'' + \''A\'')\n/tmp/tmp3g2x1afp.d(20):
    Error: C style cast illegal, use cast(char)(c - \''A\'' + \''a\'')\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp3g2x1afp.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'b')\n            c = 'B';\n        else if(c == 'c')\n            c\
    \ = 'C';\n        else if(c == 'd')\n            c = 'D';\n        else if(c ==\
    \ 'e')\n            c = 'E';\n        else if(c == 'f')\n            c = 'F';\n\
    \        else if(c == 'g')\n            c = 'G';\n        else if(c == 'h')\n\
    \            c = 'H';\n        else if(c == 'i')\n            c = 'I';\n     \
    \   else if(c == 'j')\n            c = 'J';\n        else if(c == 'k')\n     \
    \       c = 'K';\n        else if(c == 'l')\n            c = 'L';\n        else\
    \ if(c == 'm')\n            c = 'M';\n        else if(c == 'n')\n            c\
    \ = 'N';\n        else if(c == 'o')\n            c = 'O';\n        else if(c ==\
    \ 'p')\n            c = 'P';\n        else if(c == 'q')\n            c = 'Q';\n\
    \        else if(c == 'r')\n            c = 'R';\n        else if(c == 's')\n\
    \            c = 'S';\n        else if(c == 't')\n            c = 'T';\n     \
    \   else if(c == 'u')\n            c = 'U';\n        else if(c == 'v')\n     \
    \       c = 'V';\n        else if(c == 'w')\n            c = 'W';\n        else\
    \ if(c == 'x')\n            c = 'X';\n        else if(c == 'y')\n            c\
    \ = 'Y';\n        else if(c == 'z')\n            c = 'Z';\n        else\n    \
    \        c = toupper(c);\n        result += c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ryocpw3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \ }\n    return string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbsq_12az.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toLower())\n            c = c.toUpper();\n\
    \        else\n            c = c.toLower();\n        result += c;\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfp2fhbxk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjwjjmcbd.d(11): Error: no property `length` for type `string`\n/tmp/tmpjwjjmcbd.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmpjwjjmcbd.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpjwjjmcbd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == ' ')\n        {\n            result +=\
    \ c;\n        }\n        else if(c == 'A')\n        {\n            result += 'a';\n\
    \        }\n        else if(c == 'a')\n        {\n            result += 'A';\n\
    \        }\n        else\n        {\n            result += c;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd92ow9_w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u')\n        {\n            result += toupper(c);\n        }\n    \
    \    else\n        {\n            result += tolower(c);\n        }\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzy_0llo4.d(11): Error: `string` is used as a type\n/tmp/tmpzy_0llo4.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpzy_0llo4.d(17): Error:
    undefined identifier `toupper`\n/tmp/tmpzy_0llo4.d(21): Error: undefined identifier
    `tolower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzy_0llo4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjwjjmcbd.d(11): Error: no property `length` for type `string`\n/tmp/tmpjwjjmcbd.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmpjwjjmcbd.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpjwjjmcbd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(islower(c))\n        {\n            result\
    \ += toupper(c);\n        }\n        else\n        {\n            result += tolower(c);\n\
    \        }\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,string |>\n\
    <| c |>\n`string::length` returns a `size_t`, not a `int`. You should be using\
    \ `size_t` throughout your code.\n<|/ c |>\n<| c |>\nThanks, I fixed it.\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\nusing\
    \ namespace std;\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpg4mpzif5.d(26): Error: Declaration expected, not \''<\''\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg4mpzif5.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(islower(*it))\n\t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvu9u8sci.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        else if(c == 'e')\n            c\
    \ = 'E';\n        else if(c == 'E')\n            c = 'e';\n        else if(c ==\
    \ 'i')\n            c = 'I';\n        else if(c == 'I')\n            c = 'i';\n\
    \        else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n\
    \            c = 'o';\n        else if(c == 'u')\n            c = 'U';\n     \
    \   else if(c == 'U')\n            c = 'u';\n        else if(c == 'y')\n     \
    \       c = 'Y';\n        else if(c == 'Y')\n            c = 'y';\n        else\
    \ if(c == 's')\n            c = 'S';\n        else if(c == 'S')\n            c\
    \ = 's';\n        else if(c == 'd')\n            c = 'D';\n        else if(c ==\
    \ 'D')\n            c = 'd';\n        else if(c == 'f')\n            c = 'F';\n\
    \        else if(c == 'F')\n            c = 'f';\n        else if(c == 'h')\n\
    \            c = 'H';\n        else if(c == 'H')\n            c = 'h';\n     \
    \   else if(c == 'j')\n            c = 'J';\n        else if(c == 'J')\n     \
    \       c = 'j';\n        else if(c == 'k')\n            c = 'K';\n        else\
    \ if(c == 'K')\n            c = 'k';\n        else if(c == 'l')\n            c\
    \ = 'L';\n        else if(c == 'L')\n            c = 'l';\n        else if(c ==\
    \ 'n')\n            c = 'N';\n        else if(c == 'N')\n            c = 'n';\n\
    \        else if(c == 'p')\n            c = 'P';\n        else if(c == 'P')\n\
    \            c = 'p';\n        else if(c == 'r')\n            c = 'R';\n     \
    \   else if(c == 'R')\n            c = 'r';\n        else if(c == 't')\n     \
    \       c = 'T';\n        else if(c == 'T')\n            c = 't';\n        else\
    \ if(c == 'w')\n            c = 'W';\n        else if(c == 'W')\n            c\
    \ = 'w';\n        else if(c == 'v')\n            c = 'V';\n        else if(c ==\
    \ 'V')\n            c = 'v';\n        else if(c == 'b')\n            c = 'B';\n\
    \        else if(c == 'B')\n            c = 'b';\n        else if(c == 'm')\n\
    \            c = 'M';\n        else if(c == 'M')\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0acwp4y4.d(98): Error: found \''unittest\'' instead of statement\n/tmp/tmp0acwp4y4.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0acwp4y4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] + string[i].toUpper();\n\
    \        }\n        else\n        {\n            result += string[i];\n      \
    \  }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmycol18b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjwjjmcbd.d(11): Error: no property `length` for type `string`\n/tmp/tmpjwjjmcbd.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmpjwjjmcbd.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpjwjjmcbd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(*it >= 'a' && *it <= 'z')\n\t\t{\n\t\t\t*it = (*it) - 32;\n\t\t}\n\
    \t\telse if(*it >= 'A' && *it <= 'Z')\n\t\t{\n\t\t\t*it = (*it) + 32;\n\t\t}\n\
    \t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaafw44zu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(islower(c))\n            c = toupper(c);\n\
    \        else\n            c = tolower(c);\n        result += c;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2kq1ohg4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            result +=\
    \ string[i];\n        }\n        else\n        {\n            result += toupper(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk2x8o8qf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            c = string[i\
    \ + 1];\n            i++;\n        }\n        if(c == '_')\n        {\n      \
    \      c = string[i + 1];\n            i++;\n        }\n        if(c == '_')\n\
    \        {\n            c = string[i + 1];\n            i++;\n        }\n    \
    \    if(c == '_')\n        {\n            c = string[i + 1];\n            i++;\n\
    \        }\n        if(c == '_')\n        {\n            c = string[i + 1];\n\
    \            i++;\n        }\n        if(c == '_')\n        {\n            c =\
    \ string[i + 1];\n            i++;\n        }\n        if(c == '_')\n        {\n\
    \            c = string[i + 1];\n            i++;\n        }\n        if(c ==\
    \ '_')\n        {\n            c = string[i + 1];\n            i++;\n        }\n\
    \        if(c == '_')\n        {\n            c = string[i + 1];\n           \
    \ i++;\n        }\n        if(c == '_')\n        {\n            c = string[i +\
    \ 1];\n            i++;\n        }\n        if(c == '_')\n        {\n        \
    \    c = string[i + 1];\n            i++;\n        }\n        if(c == '_')\n \
    \       {\n            c = string[i + 1];\n            i++;\n        }\n     \
    \   if(c == '_')\n        {\n            c = string[i + 1];\n            i++;\n\
    \        }\n        if(c == '_')\n        {\n            c = string[i + 1];\n\
    \            i++;\n        }\n        if(c == '_')\n        {\n            c =\
    \ string[i + 1];\n            i++;\n        }\n        if(c == '_')\n        {\n\
    \            c = string[i + 1];\n            i++;\n        }\n        if(c ==\
    \ '_')\n        {\n            c = string[i + 1];\n            i++;\n        }\n\
    \        if(c == '_')\n        {\n            c = string[i + 1];\n           \
    \ i++;\n        }\n        if(c == '_')\n        {\n            c = string[i +\
    \ 1];\n            i++;\n        }\n        if(c == '_')\n        {\n        \
    \    c = string[i + 1];\n            i++;\n        }\n        if(c == '_')\n \
    \       {\n            c = string[i + 1];\n            i++;\n        }\n     \
    \   if(c == '_')\n        {\n            c = string[i + 1];\n            i++;\n\
    \        }\n        if(c == '_')\n        {\n            c = string[i + 1];\n\
    \            i++;\n        }\n        if(c == '_')\n        {\n            c =\
    \ string[i + 1];\n            i++;\n        }\n        if(c == '_')\n        {\n\
    \            c = string[i + 1];\n            i++;\n        }\n        if(c ==\
    \ '_')\n        {\n            c = string[i + 1];\n            \nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxuhamsjt.d(144): Error: found \''unittest\'' instead of statement\n/tmp/tmpxuhamsjt.d(152):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpxuhamsjt.d(152):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxuhamsjt.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c\
    \ <= 'z') \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n\
    \        else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3g2x1afp.d(12): Error: no identifier for declarator c\n/tmp/tmp3g2x1afp.d(12):
    Error: expression expected, not \'':\''\n/tmp/tmp3g2x1afp.d(12): Error: found
    \''string\'' when expecting \'';\'' following for condition\n/tmp/tmp3g2x1afp.d(16):
    Error: C style cast illegal, use cast(char)(c - \''a\'' + \''A\'')\n/tmp/tmp3g2x1afp.d(20):
    Error: C style cast illegal, use cast(char)(c - \''A\'' + \''a\'')\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp3g2x1afp.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        result += c;\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbinwq1w8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toLower())\n        {\n            c\
    \ = c.toUpper();\n        }\n        else\n        {\n            c = c.toLower();\n\
    \        }\n        result += c;\n    }\n    return result;\n}\n/*\n For a given\
    \ string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(c == c.toLower())\n   \
    \     {\n            c = c.toUpper();\n        }\n        else\n        {\n  \
    \          c = c.toLower();\n        }\n        result += c;\n    }\n    return\
    \ result;\n}\n/*\n For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n \
    \   \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < string.length(); i++)\n    {\n        char c = string[i];\n\
    \        if(c == c.toLower())\n        {\n            c = c.toUpper();\n     \
    \   }\n        else\n        {\n            c = c.toLower();\n        }\n    \
    \    result += c;\n    }\n    return result;\n}\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toLower())\n        {\n            c\
    \ = c.toUpper();\n        }\n        else\n        {\n            c = c.toLower();\n\
    \        }\n        result += c;\n    }\n    return result;\n}\n/*\n For a given\
    \ string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        char c = string[i];\n        if(c == c.toLower())\n   \
    \     {\n            c = c.toUpper();\n        }\n        else\n        {\n  \
    \          c = c.toLower();\n        }\n        result += c;\n    }\n    return\
    \ result;\n}\n/*\n For a given string, flip lowercase characters to upper\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc1o73_8i.d(123): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc1o73_8i.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n Given a string, remove all spaces.\n    >>> remove_spaces(\"\
    \   Hello   \")\n    \"Hello\"\n    \n*/\nstring remove_spaces(string string)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        if(string[i] == ' ')\n        {\n            result += string[i];\n\
    \        }\n        else\n        {\n            result += string[i];\n      \
    \  }\n    }\n    return result;\n}\n/*\n Given a string, remove all punctuation.\n\
    \    >>> remove_punctuation(\"!@#$%^&*()_+-={}[]\\\\|;:'\\\",<>/?\")\n    \"Hello\"\
    \n    \n*/\nstring remove_punctuation(string string) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else if(string[i] >= 'A' && string[i] <= 'Z')\n \
    \       {\n            result += string[i] - 'A' + 'a';\n        }\n        else\
    \ if(string[i] >= '0' && string[i] <= '9')\n        {\n            result += string[i];\n\
    \        }\n        else\n        {\n            result += string[i];\n      \
    \  }\n    }\n    return result;\n}\n/*\n Given a string, remove all numbers.\n\
    \    >>> remove_numbers(\"123hello456\")\n    \"hello\"\n    \n*/\nstring remove_numbers(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= '0' && string[i] <= '9')\n        {\n \
    \           result += string[i];\n        }\n        else\n        {\n       \
    \     result += string[i];\n        }\n    }\n    return result;\n}\n/*\n Given\
    \ a string, remove all letters.\n    >>> remove_letters(\"hello123\")\n    \"\
    123\"\n    \n*/\nstring remove_letters(string string) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += \nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl5qajfh4.d(117): Error: expression expected, not \''unittest\''\n/tmp/tmpl5qajfh4.d(118):
    Error: found \''{\'' when expecting \'';\'' following statement\n/tmp/tmpl5qajfh4.d(125):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpl5qajfh4.d(125):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl5qajfh4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length; ++i)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdgr4y5al.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == ' ')\n        {\n            result +=\
    \ c;\n        }\n        else if(c == '_')\n        {\n            result += toupper(c);\n\
    \        }\n        else\n        {\n            result += tolower(c);\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphjz50py9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(; it != end; ++it)\n\
    \t{\n\t\tif(islower(*it))\n\t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\t*it = tolower(*it);\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvu9u8sci.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(islower(c))\n        {\n            result\
    \ += toupper(c);\n        }\n        else\n        {\n            result += tolower(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphdyf71zu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            result +=\
    \ string[i];\n        }\n        else if(c == 'a')\n        {\n            result\
    \ += 'A';\n        }\n        else if(c == 'A')\n        {\n            result\
    \ += 'a';\n        }\n        else\n        {\n            result += c;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8zgetrhk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphno144z2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c\
    \ == 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnz7ge2i4.d(11): Error: `string` is used as a type\n/tmp/tmpnz7ge2i4.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnz7ge2i4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\
    \t\tif(islower(*it))\n\t\t\t*it = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\
    \t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpekvtffg9.d(11): Error: no property `begin` for type `string`\n/tmp/tmpekvtffg9.d(12):
    Error: no property `end` for type `string`\n/tmp/tmpekvtffg9.d(15): Error: undefined
    identifier `islower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekvtffg9.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == '_')\n        {\n            c = string[i +\
    \ 1];\n            ++i;\n        }\n        result += toupper(c);\n    }\n   \
    \ return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp39dklzbz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u')\n        {\n            result += toupper(c);\n        }\n    \
    \    else\n        {\n            result += tolower(c);\n        }\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzy_0llo4.d(11): Error: `string` is used as a type\n/tmp/tmpzy_0llo4.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpzy_0llo4.d(17): Error:
    undefined identifier `toupper`\n/tmp/tmpzy_0llo4.d(21): Error: undefined identifier
    `tolower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzy_0llo4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjwjjmcbd.d(11): Error: no property `length` for type `string`\n/tmp/tmpjwjjmcbd.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmpjwjjmcbd.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpjwjjmcbd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == ' ' || c == '\\t' || c == '\\n' || c == '\\\
    r')\n        {\n            result += c;\n        }\n        else\n        {\n\
    \            result += toupper(c);\n        }\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphoiew3k9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) \n    {\n        if (char.IsLower(c))\
    \ \n        {\n            result += char.ToUpper(c);\n        }\n        else\
    \ \n        {\n            result += char.ToLower(c);\n        }\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI guess you mean `result +=\
    \ char.ToUpper(c);` instead of `result += char.ToLower(c);`\n<|/ c |>\n<| c |>\n\
    Yes, thank you. I've corrected it.\n<|/ c |>\n<| a tags=c++,string,algorithm |>\n\
    <code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace\
    \ std;\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmk2k51wu.d(12): Error: no identifier for declarator c\n/tmp/tmpmk2k51wu.d(12):
    Error: expression expected, not \'':\''\n/tmp/tmpmk2k51wu.d(12): Error: found
    \''string\'' when expecting \'';\'' following for condition\n/tmp/tmpmk2k51wu.d(25):
    Error: Declaration expected, not \''<\''\n/tmp/tmpmk2k51wu.d(31): Error: unterminated
    character constant\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmk2k51wu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'b')\n            c = 'B';\n        else if(c == 'c')\n            c = 'C';\n\
    \        else if(c == 'd')\n            c = 'D';\n        else if(c == 'e')\n\
    \            c = 'E';\n        else if(c == 'f')\n            c = 'F';\n     \
    \   else if(c == 'g')\n            c = 'G';\n        else if(c == 'h')\n     \
    \       c = 'H';\n        else if(c == 'i')\n            c = 'I';\n        else\
    \ if(c == 'j')\n            c = 'J';\n        else if(c == 'k')\n            c\
    \ = 'K';\n        else if(c == 'l')\n            c = 'L';\n        else if(c ==\
    \ 'm')\n            c = 'M';\n        else if(c == 'n')\n            c = 'N';\n\
    \        else if(c == 'o')\n            c = 'O';\n        else if(c == 'p')\n\
    \            c = 'P';\n        else if(c == 'q')\n            c = 'Q';\n     \
    \   else if(c == 'r')\n            c = 'R';\n        else if(c == 's')\n     \
    \       c = 'S';\n        else if(c == 't')\n            c = 'T';\n        else\
    \ if(c == 'u')\n            c = 'U';\n        else if(c == 'v')\n            c\
    \ = 'V';\n        else if(c == 'w')\n            c = 'W';\n        else if(c ==\
    \ 'x')\n            c = 'X';\n        else if(c == 'y')\n            c = 'Y';\n\
    \        else if(c == 'z')\n            c = 'Z';\n        else if(c == 'A')\n\
    \            c = 'a';\n        else if(c == 'B')\n            c = 'b';\n     \
    \   else if(c == 'C')\n            c = 'c';\n        else if(c == 'D')\n     \
    \       c = 'd';\n        else if(c == 'E')\n            c = 'e';\n        else\
    \ if(c == 'F')\n            c = 'f';\n        else if(c == 'G')\n            c\
    \ = 'g';\n        else if(c == 'H')\n            c = 'h';\n        else if(c ==\
    \ 'I')\n            c = 'i';\n        else if(c == 'J')\n            c = 'j';\n\
    \        else if(c == 'K')\n            c = 'k';\n        else if(c == 'L')\n\
    \            c = 'l';\n        else if(c == 'M')\n            c = 'm';\n     \
    \   else if(c == 'N')\n            c = 'n';\n        else if(c == 'O')\n     \
    \       c = 'o';\n        else if(c == 'P')\n            c\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps8np252h.d(99): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmps8np252h.d(107): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmps8np252h.d(107): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmps8np252h.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            result +=\
    \ string[i];\n        }\n        else\n        {\n            result += toupper(c);\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp25_j7a9z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        else if(c == 'b')\n            c\
    \ = 'B';\n        else if(c == 'B')\n            c = 'b';\n        else if(c ==\
    \ 'c')\n            c = 'C';\n        else if(c == 'C')\n            c = 'c';\n\
    \        else if(c == 'd')\n            c = 'D';\n        else if(c == 'D')\n\
    \            c = 'd';\n        else if(c == 'e')\n            c = 'E';\n     \
    \   else if(c == 'E')\n            c = 'e';\n        else if(c == 'f')\n     \
    \       c = 'F';\n        else if(c == 'F')\n            c = 'f';\n        else\
    \ if(c == 'g')\n            c = 'G';\n        else if(c == 'G')\n            c\
    \ = 'g';\n        else if(c == 'h')\n            c = 'H';\n        else if(c ==\
    \ 'H')\n            c = 'h';\n        else if(c == 'i')\n            c = 'I';\n\
    \        else if(c == 'I')\n            c = 'i';\n        else if(c == 'j')\n\
    \            c = 'J';\n        else if(c == 'J')\n            c = 'j';\n     \
    \   else if(c == 'k')\n            c = 'K';\n        else if(c == 'K')\n     \
    \       c = 'k';\n        else if(c == 'l')\n            c = 'L';\n        else\
    \ if(c == 'L')\n            c = 'l';\n        else if(c == 'm')\n            c\
    \ = 'M';\n        else if(c == 'M')\n            c = 'm';\n        else if(c ==\
    \ 'n')\n            c = 'N';\n        else if(c == 'N')\n            c = 'n';\n\
    \        else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n\
    \            c = 'o';\n        else if(c == 'p')\n            c = 'P';\n     \
    \   else if(c == 'P')\n            c = 'p';\n        else if(c == 'q')\n     \
    \       c = 'Q';\n        else if(c == 'Q')\n            c = 'q';\n        else\
    \ if(c == 'r')\n            c = 'R';\n        else if(c == 'R')\n            c\
    \ = 'r';\n        else if(c == 's')\n            c = 'S';\n        else if(c ==\
    \ 'S')\n            c = 's';\n        else if(c == 't')\n            c = 'T';\n\
    \        else if(c == 'T')\n            c = 't';\n        else if(c == 'u')\n\
    \            c = 'U';\n        else if(c == 'U')\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl5h6meuh.d(98): Error: found \''unittest\'' instead of statement\n/tmp/tmpl5h6meuh.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl5h6meuh.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n        {\n            c = 'A';\n\
    \        }\n        else if(c == 'A')\n        {\n            c = 'a';\n     \
    \   }\n        result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgmm0dky1.d(11): Error: `string` is used as a type\n/tmp/tmpgmm0dky1.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpgmm0dky1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            c = string[i\
    \ + 1];\n            i++;\n        }\n        if(c == '_')\n        {\n      \
    \      c = string[i + 1];\n            i++;\n        }\n        if(c == '_')\n\
    \        {\n            c = string[i + 1];\n            i++;\n        }\n    \
    \    if(c == '_')\n        {\n            c = string[i + 1];\n            i++;\n\
    \        }\n        if(c == '_')\n        {\n            c = string[i + 1];\n\
    \            i++;\n        }\n        if(c == '_')\n        {\n            c =\
    \ string[i + 1];\n            i++;\n        }\n        if(c == '_')\n        {\n\
    \            c = string[i + 1];\n            i++;\n        }\n        if(c ==\
    \ '_')\n        {\n            c = string[i + 1];\n            i++;\n        }\n\
    \        if(c == '_')\n        {\n            c = string[i + 1];\n           \
    \ i++;\n        }\n        if(c == '_')\n        {\n            c = string[i +\
    \ 1];\n            i++;\n        }\n        if(c == '_')\n        {\n        \
    \    c = string[i + 1];\n            i++;\n        }\n        if(c == '_')\n \
    \       {\n            c = string[i + 1];\n            i++;\n        }\n     \
    \   if(c == '_')\n        {\n            c = string[i + 1];\n            i++;\n\
    \        }\n        if(c == '_')\n        {\n            c = string[i + 1];\n\
    \            i++;\n        }\n        if(c == '_')\n        {\n            c =\
    \ string[i + 1];\n            i++;\n        }\n        if(c == '_')\n        {\n\
    \            c = string[i + 1];\n            i++;\n        }\n        if(c ==\
    \ '_')\n        {\n            c = string[i + 1];\n            i++;\n        }\n\
    \        if(c == '_')\n        {\n            c = string[i + 1];\n           \
    \ i++;\n        }\n        if(c == '_')\n        {\n            c = string[i +\
    \ 1];\n            i++;\n        }\n        if(c == '_')\n        {\n        \
    \    c = string[i + 1];\n            i++;\n        }\n        if(c == '_')\n \
    \       {\n            c = string[i + 1];\n            i++;\n        }\n     \
    \   if(c == '_')\n        {\n            c = string[i + 1];\n            i++;\n\
    \        }\n        if(c == '_')\n        {\n            c = string[i + 1];\n\
    \            i++;\n        }\n        if(c == '_')\n        {\n            c =\
    \ string[i + 1];\n            i++;\n        }\n        if(c == '_')\n        {\n\
    \            c = string[i + 1];\n            i++;\n        }\n        if(c ==\
    \ '_')\n        {\n            c = string[i + 1];\n            \nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxuhamsjt.d(144): Error: found \''unittest\'' instead of statement\n/tmp/tmpxuhamsjt.d(152):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpxuhamsjt.d(152):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxuhamsjt.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjwjjmcbd.d(11): Error: no property `length` for type `string`\n/tmp/tmpjwjjmcbd.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmpjwjjmcbd.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpjwjjmcbd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'A')\n            c = 'a';\n        else if(c == 'e')\n            c\
    \ = 'E';\n        else if(c == 'E')\n            c = 'e';\n        else if(c ==\
    \ 'i')\n            c = 'I';\n        else if(c == 'I')\n            c = 'i';\n\
    \        else if(c == 'o')\n            c = 'O';\n        else if(c == 'O')\n\
    \            c = 'o';\n        else if(c == 'u')\n            c = 'U';\n     \
    \   else if(c == 'U')\n            c = 'u';\n        else if(c == 'y')\n     \
    \       c = 'Y';\n        else if(c == 'Y')\n            c = 'y';\n        else\n\
    \            c = toupper(c);\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz8nx6mhs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == 'A')\n            c = 'a';\n        else\
    \ if(c == 'a')\n            c = 'A';\n        else if(c == 'B')\n            c\
    \ = 'b';\n        else if(c == 'b')\n            c = 'B';\n        else if(c ==\
    \ 'C')\n            c = 'c';\n        else if(c == 'c')\n            c = 'C';\n\
    \        else if(c == 'D')\n            c = 'd';\n        else if(c == 'd')\n\
    \            c = 'D';\n        else if(c == 'E')\n            c = 'e';\n     \
    \   else if(c == 'e')\n            c = 'E';\n        else if(c == 'F')\n     \
    \       c = 'f';\n        else if(c == 'f')\n            c = 'F';\n        else\
    \ if(c == 'G')\n            c = 'g';\n        else if(c == 'g')\n            c\
    \ = 'G';\n        else if(c == 'H')\n            c = 'h';\n        else if(c ==\
    \ 'h')\n            c = 'H';\n        else if(c == 'I')\n            c = 'i';\n\
    \        else if(c == 'i')\n            c = 'I';\n        else if(c == 'J')\n\
    \            c = 'j';\n        else if(c == 'j')\n            c = 'J';\n     \
    \   else if(c == 'K')\n            c = 'k';\n        else if(c == 'k')\n     \
    \       c = 'K';\n        else if(c == 'L')\n            c = 'l';\n        else\
    \ if(c == 'l')\n            c = 'L';\n        else if(c == 'M')\n            c\
    \ = 'm';\n        else if(c == 'm')\n            c = 'M';\n        else if(c ==\
    \ 'N')\n            c = 'n';\n        else if(c == 'n')\n            c = 'N';\n\
    \        else if(c == 'O')\n            c = 'o';\n        else if(c == 'o')\n\
    \            c = 'O';\n        else if(c == 'P')\n            c = 'p';\n     \
    \   else if(c == 'p')\n            c = 'P';\n        else if(c == 'Q')\n     \
    \       c = 'q';\n        else if(c == 'q')\n            c = 'Q';\n        else\
    \ if(c == 'R')\n            c = 'r';\n        else if(c == 'r')\n            c\
    \ = 'R';\n        else if(c == 'S')\n            c = 's';\n        else if(c ==\
    \ 's')\n            c = 'S';\n        else if(c == 'T')\n            c = 't';\n\
    \        else if(c == 't')\n            c = 'T';\n        else if(c == 'U')\n\
    \            c = 'u';\n        else if(c == 'u\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy4qa6kpn.d(97): Error: unterminated character constant\n/tmp/tmpy4qa6kpn.d(98):
    Error: found \''unittest\'' when expecting \'')\''\n/tmp/tmpy4qa6kpn.d(106): Error:
    found \''EOF\'' when expecting \''}\'' following compound statement\n/tmp/tmpy4qa6kpn.d(106):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy4qa6kpn.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c\
    \ <= 'z') \n        {\n            result += toupper(c);\n        }\n        else\
    \ if (c >= 'A' && c <= 'Z') \n        {\n            result += tolower(c);\n \
    \       }\n        else \n        {\n            result += c;\n        }\n   \
    \ }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n\
    \    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpprlclz9c.d(12): Error: no identifier for declarator c\n/tmp/tmpprlclz9c.d(12):
    Error: expression expected, not \'':\''\n/tmp/tmpprlclz9c.d(12): Error: found
    \''string\'' when expecting \'';\'' following for condition\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpprlclz9c.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(c == 'a' || c == 'A') {\n            c = 'A';\n \
    \       }\n        else if(c == 'b' || c == 'B') {\n            c = 'B';\n   \
    \     }\n        else if(c == 'c' || c == 'C') {\n            c = 'C';\n     \
    \   }\n        else if(c == 'd' || c == 'D') {\n            c = 'D';\n       \
    \ }\n        else if(c == 'e' || c == 'E') {\n            c = 'E';\n        }\n\
    \        else if(c == 'f' || c == 'F') {\n            c = 'F';\n        }\n  \
    \      else if(c == 'g' || c == 'G') {\n            c = 'G';\n        }\n    \
    \    else if(c == 'h' || c == 'H') {\n            c = 'H';\n        }\n      \
    \  else if(c == 'i' || c == 'I') {\n            c = 'I';\n        }\n        else\
    \ if(c == 'j' || c == 'J') {\n            c = 'J';\n        }\n        else if(c\
    \ == 'k' || c == 'K') {\n            c = 'K';\n        }\n        else if(c ==\
    \ 'l' || c == 'L') {\n            c = 'L';\n        }\n        else if(c == 'm'\
    \ || c == 'M') {\n            c = 'M';\n        }\n        else if(c == 'n' ||\
    \ c == 'N') {\n            c = 'N';\n        }\n        else if(c == 'o' || c\
    \ == 'O') {\n            c = 'O';\n        }\n        else if(c == 'p' || c ==\
    \ 'P') {\n            c = 'P';\n        }\n        else if(c == 'q' || c == 'Q')\
    \ {\n            c = 'Q';\n        }\n        else if(c == 'r' || c == 'R') {\n\
    \            c = 'R';\n        }\n        else if(c == 's' || c == 'S') {\n  \
    \          c = 'S';\n        }\n        else if(c == 't' || c == 'T') {\n    \
    \        c = 'T';\n        }\n        else if(c == 'u' || c == 'U') {\n      \
    \      c = 'U';\n        }\n        else if(c == 'v' || c == 'V') {\n        \
    \    c = 'V';\n        }\n        else if(c == 'w' || c == 'W') {\n          \
    \  c = 'W';\n        }\n        else if(c == 'x' || c == 'X') {\n            c\
    \ = 'X';\n        }\n        else if(c == 'y' || c == 'Y') {\n            c =\
    \ 'Y';\n        }\n        else if(c == 'z' || c == 'Z') {\n            c = 'Z';\n\
    \        }\n        result += c;\n    }\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvodkewpi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n        {\n            c = 'A';\n\
    \        }\n        else if(c == 'A')\n        {\n            c = 'a';\n     \
    \   }\n        else if(c == 'b')\n        {\n            c = 'B';\n        }\n\
    \        else if(c == 'B')\n        {\n            c = 'b';\n        }\n     \
    \   else if(c == 'c')\n        {\n            c = 'C';\n        }\n        else\
    \ if(c == 'C')\n        {\n            c = 'c';\n        }\n        else if(c\
    \ == 'd')\n        {\n            c = 'D';\n        }\n        else if(c == 'D')\n\
    \        {\n            c = 'd';\n        }\n        else if(c == 'e')\n     \
    \   {\n            c = 'E';\n        }\n        else if(c == 'E')\n        {\n\
    \            c = 'e';\n        }\n        else if(c == 'f')\n        {\n     \
    \       c = 'F';\n        }\n        else if(c == 'F')\n        {\n          \
    \  c = 'f';\n        }\n        else if(c == 'g')\n        {\n            c =\
    \ 'G';\n        }\n        else if(c == 'G')\n        {\n            c = 'g';\n\
    \        }\n        else if(c == 'h')\n        {\n            c = 'H';\n     \
    \   }\n        else if(c == 'H')\n        {\n            c = 'h';\n        }\n\
    \        else if(c == 'i')\n        {\n            c = 'I';\n        }\n     \
    \   else if(c == 'I')\n        {\n            c = 'i';\n        }\n        else\
    \ if(c == 'j')\n        {\n            c = 'J';\n        }\n        else if(c\
    \ == 'J')\n        {\n            c = 'j';\n        }\n        else if(c == 'k')\n\
    \        {\n            c = 'K';\n        }\n        else if(c == 'K')\n     \
    \   {\n            c = 'k';\n        }\n        else if(c == 'l')\n        {\n\
    \            c = 'L';\n        }\n        else if(c == 'L')\n        {\n     \
    \       c = 'l';\n        }\n        else if(c == 'm')\n        {\n          \
    \  c = 'M';\n        }\n        else if(c == 'M')\n        {\n            c =\
    \ 'm';\n        }\n        else if(c == 'n')\n        {\n            c = 'N';\n\
    \        }\n        else if(c == 'N')\n        {\n            c = 'n';\n     \
    \   }\n        else if(c == 'o')\n        {\n            c = 'O';\n        }\n\
    \        else if(c == 'O')\n        {\n            c = 'o';\n        }\n     \
    \   else if(c == 'p')\n        {\n            c = 'P';\n        }\nunittest\n\
    {\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n\
    \    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphv1y5yya.d(139): Error: found \''unittest\'' instead of statement\n/tmp/tmphv1y5yya.d(147):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphv1y5yya.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) \n    {\n        if (c >= 'a' && c\
    \ <= 'z') \n        {\n            result += (char)(c - 'a' + 'A');\n        }\n\
    \        else if (c >= 'A' && c <= 'Z') \n        {\n            result += (char)(c\
    \ - 'A' + 'a');\n        }\n        else \n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3g2x1afp.d(12): Error: no identifier for declarator c\n/tmp/tmp3g2x1afp.d(12):
    Error: expression expected, not \'':\''\n/tmp/tmp3g2x1afp.d(12): Error: found
    \''string\'' when expecting \'';\'' following for condition\n/tmp/tmp3g2x1afp.d(16):
    Error: C style cast illegal, use cast(char)(c - \''a\'' + \''A\'')\n/tmp/tmp3g2x1afp.d(20):
    Error: C style cast illegal, use cast(char)(c - \''A\'' + \''a\'')\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp3g2x1afp.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\
    \t\tif(islower(*it))\n\t\t\t*it = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\
    \t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpekvtffg9.d(11): Error: no property `begin` for type `string`\n/tmp/tmpekvtffg9.d(12):
    Error: no property `end` for type `string`\n/tmp/tmpekvtffg9.d(15): Error: undefined
    identifier `islower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekvtffg9.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c ==\
    \ 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj84gla9g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == '_')\n        {\n            c = string[i +\
    \ 1];\n            if(c == '_')\n            {\n                c = string[i +\
    \ 2];\n            }\n        }\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7dxing5i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tstring\
    \ result = \"\";\n\tfor (int i = 0; i < string.length(); i++) {\n\t\tif (string[i]\
    \ >= 'a' && string[i] <= 'z') {\n\t\t\tresult += string[i] - 'a' + 'A';\n\t\t\
    }\n\t\telse if (string[i] >= 'A' && string[i] <= 'Z') {\n\t\t\tresult += string[i]\
    \ - 'A' + 'a';\n\t\t}\n\t\telse {\n\t\t\tresult += string[i];\n\t\t}\n\t}\n\t\
    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpke5dn1lt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o' || c\
    \ == 'u')\n        {\n            result += toupper(c);\n        }\n        else\n\
    \        {\n            result += tolower(c);\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9b4fprtm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it) {\n\t\
    \tif(islower(*it)) {\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse {\n\t\t\t*it\
    \ = tolower(*it);\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyr_sa7ir.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u')\n        {\n            result += toupper(c);\n        }\n    \
    \    else\n        {\n            result += tolower(c);\n        }\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzy_0llo4.d(11): Error: `string` is used as a type\n/tmp/tmpzy_0llo4.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpzy_0llo4.d(17): Error:
    undefined identifier `toupper`\n/tmp/tmpzy_0llo4.d(21): Error: undefined identifier
    `tolower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzy_0llo4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(islower(c)) {\n            result += toupper(c);\n\
    \        } else {\n            result += tolower(c);\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw1d7q_0x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'b')\n            c = 'B';\n        else if(c == 'c')\n            c\
    \ = 'C';\n        else if(c == 'd')\n            c = 'D';\n        else if(c ==\
    \ 'e')\n            c = 'E';\n        else if(c == 'f')\n            c = 'F';\n\
    \        else if(c == 'g')\n            c = 'G';\n        else if(c == 'h')\n\
    \            c = 'H';\n        else if(c == 'i')\n            c = 'I';\n     \
    \   else if(c == 'j')\n            c = 'J';\n        else if(c == 'k')\n     \
    \       c = 'K';\n        else if(c == 'l')\n            c = 'L';\n        else\
    \ if(c == 'm')\n            c = 'M';\n        else if(c == 'n')\n            c\
    \ = 'N';\n        else if(c == 'o')\n            c = 'O';\n        else if(c ==\
    \ 'p')\n            c = 'P';\n        else if(c == 'q')\n            c = 'Q';\n\
    \        else if(c == 'r')\n            c = 'R';\n        else if(c == 's')\n\
    \            c = 'S';\n        else if(c == 't')\n            c = 'T';\n     \
    \   else if(c == 'u')\n            c = 'U';\n        else if(c == 'v')\n     \
    \       c = 'V';\n        else if(c == 'w')\n            c = 'W';\n        else\
    \ if(c == 'x')\n            c = 'X';\n        else if(c == 'y')\n            c\
    \ = 'Y';\n        else if(c == 'z')\n            c = 'Z';\n        else if(c ==\
    \ 'A')\n            c = 'a';\n        else if(c == 'B')\n            c = 'b';\n\
    \        else if(c == 'C')\n            c = 'c';\n        else if(c == 'D')\n\
    \            c = 'd';\n        else if(c == 'E')\n            c = 'e';\n     \
    \   else if(c == 'F')\n            c = 'f';\n        else if(c == 'G')\n     \
    \       c = 'g';\n        else if(c == 'H')\n            c = 'h';\n        else\
    \ if(c == 'I')\n            c = 'i';\n        else if(c == 'J')\n            c\
    \ = 'j';\n        else if(c == 'K')\n            c = 'k';\n        else if(c ==\
    \ 'L')\n            c = 'l';\n        else if(c == 'M')\n            c = 'm';\n\
    \        else if(c == 'N')\n            c = 'n';\n        else if(c == 'O')\n\
    \            c = 'o';\n        else if(c == 'P')\n            c\nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpckbdb7tz.d(99): Error: found \''unittest\'' when expecting \'';\''
    following statement\n/tmp/tmpckbdb7tz.d(107): Error: found \''EOF\'' when expecting
    \''}\'' following compound statement\n/tmp/tmpckbdb7tz.d(107): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpckbdb7tz.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(c == ' ' || c == '\\t' || c == '\\n' || c == '\\\
    r' || c == '\\v' || c == '\\f' || c == '\\a') {\n            result += c;\n  \
    \      } else {\n            result += toupper(c);\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpasfxj0f_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toUpper())\n        {\n            result\
    \ += c.toLower();\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp56lwz0q2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793626
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == ' ')\n        {\n            result += c;\n\
    \        }\n        else if(c == '_')\n        {\n            result += toupper(c);\n\
    \        }\n        else\n        {\n            result += tolower(c);\n     \
    \   }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxbh0m1du.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793627

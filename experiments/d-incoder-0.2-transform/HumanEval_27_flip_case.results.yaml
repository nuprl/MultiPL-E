language: d
name: HumanEval_27_flip_case
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n        {\n            c = 'A';\n\
    \        }\n        else if(c == 'A')\n        {\n            c = 'a';\n     \
    \   }\n        result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgmm0dky1.d(11): Error: `string` is used as a type\n/tmp/tmpgmm0dky1.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpgmm0dky1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) result += toupper(c);\n    return\
    \ result;\n}\n/*\n For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n \
    \   \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n   \
    \ for (auto c : string) result += toupper(c);\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for (auto c : string) result +=\
    \ toupper(c);\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\"\
    )\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result\
    \ = \"\";\n    for (auto c : string) result += toupper(c);\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring\
    \ flip_case(string string) \n{\n    string result = \"\";\n    for (auto c : string)\
    \ result += toupper(c);\n    return result;\n}\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for (auto c : string) result += toupper(c);\n    return\
    \ result;\n}\n/*\n For a given string, flip lowercase characters to uppercase\
    \ and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n \
    \   \n*/\nstring flip_case(string string) \n{\n    string result = \"\";\n   \
    \ for (auto c : string) result += toupper(c);\n    return result;\n}\n/*\n For\
    \ a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n\
    \    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for (auto c : string) result +=\
    \ toupper(c);\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to uppercase and uppercase to lowercase.\n    >>> \nunittest\n{\n\
    \    alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n  \
    \  assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These\
    \ violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi492rj56.d(12): Error: no identifier for declarator `c`\n/tmp/tmpi492rj56.d(12):
    Error: expression expected, not `:`\n/tmp/tmpi492rj56.d(12): Error: found `string`
    when expecting `;` following `for` condition\n/tmp/tmpi492rj56.d(24): Error: no
    identifier for declarator `c`\n/tmp/tmpi492rj56.d(24): Error: expression expected,
    not `:`\n/tmp/tmpi492rj56.d(24): Error: found `string` when expecting `;` following
    `for` condition\n/tmp/tmpi492rj56.d(36): Error: no identifier for declarator `c`\n/tmp/tmpi492rj56.d(36):
    Error: expression expected, not `:`\n/tmp/tmpi492rj56.d(36): Error: found `string`
    when expecting `;` following `for` condition\n/tmp/tmpi492rj56.d(48): Error: no
    identifier for declarator `c`\n/tmp/tmpi492rj56.d(48): Error: expression expected,
    not `:`\n/tmp/tmpi492rj56.d(48): Error: found `string` when expecting `;` following
    `for` condition\n/tmp/tmpi492rj56.d(60): Error: no identifier for declarator `c`\n/tmp/tmpi492rj56.d(60):
    Error: expression expected, not `:`\n/tmp/tmpi492rj56.d(60): Error: found `string`
    when expecting `;` following `for` condition\n/tmp/tmpi492rj56.d(72): Error: no
    identifier for declarator `c`\n/tmp/tmpi492rj56.d(72): Error: expression expected,
    not `:`\n/tmp/tmpi492rj56.d(72): Error: found `string` when expecting `;` following
    `for` condition\n/tmp/tmpi492rj56.d(84): Error: no identifier for declarator `c`\n/tmp/tmpi492rj56.d(84):
    Error: expression expected, not `:`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpi492rj56.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c\
    \ == 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnz7ge2i4.d(11): Error: `string` is used as a type\n/tmp/tmpnz7ge2i4.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnz7ge2i4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\
    \t\tif(islower(*it))\n\t\t{\n\t\t\t*it = toupper(*it);\n\t\t}\n\t\telse\n\t\t\
    {\n\t\t\t*it = tolower(*it);\n\t\t}\n\t}\n\treturn string;\n}\nunittest\n{\n \
    \   alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n   \
    \ assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent\
    \ delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\
    );\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp9zbwwnq.d(11): Error: no property `begin` for type `string`\n/tmp/tmpp9zbwwnq.d(12):
    Error: no property `end` for type `string`\n/tmp/tmpp9zbwwnq.d(15): Error: undefined
    identifier `islower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp9zbwwnq.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u')\n        {\n            result += toupper(c);\n        }\n    \
    \    else\n        {\n            result += tolower(c);\n        }\n    }\n  \
    \  return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzy_0llo4.d(11): Error: `string` is used as a type\n/tmp/tmpzy_0llo4.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpzy_0llo4.d(17): Error:
    undefined identifier `toupper`\n/tmp/tmpzy_0llo4.d(21): Error: undefined identifier
    `tolower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzy_0llo4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length; ++i)\n    {\n        char\
    \ c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else if(c\
    \ == 'A')\n            c = 'a';\n        else\n            c = toupper(c);\n \
    \       result += c;\n    }\n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpj3knqrqe.d(11): Error: `string` is used as a type\n/tmp/tmpj3knqrqe.d(20):
    Error: undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpj3knqrqe.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\
    \t\tif(*it<='Z' && *it>='a')\n\t\t\t*it-=32;\n\t\telse if(*it>='A' && *it<='Z')\n\
    \t\t\t*it+=32;\n\t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpy3unf284.d(11): Error: no property `begin` for type `string`\n/tmp/tmpy3unf284.d(12):
    Error: no property `end` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpy3unf284.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(c == '_') {\n            result += string[i];\n \
    \       } else {\n            result += toupper(c);\n        }\n    }\n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdpoerq03.d(11): Error: `string` is used as a type\n/tmp/tmpdpoerq03.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpdpoerq03.d(17): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdpoerq03.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        else\
    \ if(c == 'b')\n            c = 'B';\n        else if(c == 'c')\n            c\
    \ = 'C';\n        else if(c == 'd')\n            c = 'D';\n        else if(c ==\
    \ 'e')\n            c = 'E';\n        else if(c == 'f')\n            c = 'F';\n\
    \        else if(c == 'g')\n            c = 'G';\n        else if(c == 'h')\n\
    \            c = 'H';\n        else if(c == 'i')\n            c = 'I';\n     \
    \   else if(c == 'j')\n            c = 'J';\n        else if(c == 'k')\n     \
    \       c = 'K';\n        else if(c == 'l')\n            c = 'L';\n        else\
    \ if(c == 'm')\n            c = 'M';\n        else if(c == 'n')\n            c\
    \ = 'N';\n        else if(c == 'o')\n            c = 'O';\n        else if(c ==\
    \ 'p')\n            c = 'P';\n        else if(c == 'q')\n            c = 'Q';\n\
    \        else if(c == 'r')\n            c = 'R';\n        else if(c == 's')\n\
    \            c = 'S';\n        else if(c == 't')\n            c = 'T';\n     \
    \   else if(c == 'u')\n            c = 'U';\n        else if(c == 'v')\n     \
    \       c = 'V';\n        else if(c == 'w')\n            c = 'W';\n        else\
    \ if(c == 'x')\n            c = 'X';\n        else if(c == 'y')\n            c\
    \ = 'Y';\n        else if(c == 'z')\n            c = 'Z';\n        else\n    \
    \        c = toupper(c);\n        result += c;\n    }\n    return result;\n}\n\
    unittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\") ==\
    \ \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpawgjhiwm.d(11): Error: `string` is used as a type\n/tmp/tmpawgjhiwm.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpawgjhiwm.d(68): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpawgjhiwm.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); ++i)\n    {\n      \
    \  char c = string[i];\n        if(c == '_')\n        {\n            result +=\
    \ string[i];\n        }\n        else if(c == 'a')\n        {\n            result\
    \ += 'A';\n        }\n        else if(c == 'A')\n        {\n            result\
    \ += 'a';\n        }\n        else\n        {\n            result += c;\n    \
    \    }\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\
    \n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"\
    hELLO!\");\n    assert(candidate(\"These violent delights have violent ends\"\
    ) == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpccrvvmxr.d(11): Error: `string` is used as a type\n/tmp/tmpccrvvmxr.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpccrvvmxr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else if(string[i] >= 'A' && string[i]\
    \ <= 'Z')\n        {\n            result += string[i] - 'A' + 'a';\n        }\n\
    \        else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp35r077r7.d(11): Error: `string` is used as a type\n/tmp/tmp35r077r7.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp35r077r7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\n/*\n For a given string,\
    \ flip lowercase characters to uppercase and uppercase to lowercase.\n    >>>\
    \ flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < string.length(); i++)\n\
    \    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n        \
    \    result += string[i] - 'a' + 'A';\n        }\n        else\n        {\n  \
    \          result += string[i];\n        }\n    }\n    return result;\n}\n/*\n\
    \ For a given string, flip lowercase characters to uppercase and uppercase to\
    \ lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string\
    \ string) \n{\n    string result = \"\";\n    for(int i = 0; i < string.length();\
    \ i++)\n    {\n        if(string[i] >= 'a' && string[i] <= 'z')\n        {\n \
    \           result += string[i] - 'a' + 'A';\n        }\n        else\n      \
    \  {\n            result += string[i];\n        }\n    }\n    return result;\n\
    }\n/*\n For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n    >>> flip_case(\"Hello\")\n    \"hELLO\"\n    \n*/\nstring\
    \ flip_case(string string) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i] <=\
    \ 'z')\n        {\n            result += string[i] - 'a' + 'A';\n        }\n \
    \       else\n        {\n            result += string[i];\n        }\n    }\n\
    \    return result;\n}\n/*\n For a given string, flip lowercase characters to\
    \ uppercase and uppercase to lowercase.\n    >>> flip_case(\"Hello\")\n    \"\
    hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < string.length(); i++)\n    {\n        if(string[i]\
    \ >= 'a' && string[i] <= 'z')\n        {\n            result += string[i] - 'a'\
    \ + 'A';\n        }\n        else\n        {\n            result += string[i];\n\
    \        }\n    }\n    return result;\n}\n/*\n For a given string, flip lowercase\
    \ characters to upper\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\
    \") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4obi13nt.d(113): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4obi13nt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++) {\n        char\
    \ c = string[i];\n        if(c == ' ') {\n            result += c;\n        }\
    \ else {\n            result += toupper(c);\n        }\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpp0eycmei.d(11): Error: `string` is used as a type\n/tmp/tmpp0eycmei.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpp0eycmei.d(17): Error:
    undefined identifier `toupper`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp0eycmei.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjwjjmcbd.d(11): Error: no property `length` for type `string`\n/tmp/tmpjwjjmcbd.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmpjwjjmcbd.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpjwjjmcbd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n\tauto\
    \ it = string.begin();\n\tauto end = string.end();\n\tfor(;it!=end;++it)\n\t{\n\
    \t\tif(islower(*it))\n\t\t\t*it = toupper(*it);\n\t\telse\n\t\t\t*it = tolower(*it);\n\
    \t}\n\treturn string;\n}\nunittest\n{\n    alias candidate = flip_case;\n\n  \
    \  assert(candidate(\"\") == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\"\
    );\n    assert(candidate(\"These violent delights have violent ends\") == \"tHESE\
    \ VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpekvtffg9.d(11): Error: no property `begin` for type `string`\n/tmp/tmpekvtffg9.d(12):
    Error: no property `end` for type `string`\n/tmp/tmpekvtffg9.d(15): Error: undefined
    identifier `islower`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekvtffg9.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == c.toUpper())\n        {\n            result\
    \ += c.toLower();\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\n/*\n Given a string, return true if\
    \ it contains only letters, false otherwise.\n    >>> is_alpha(\"Hello\")\n  \
    \  True\n    >>> is_alpha(\"123\")\n    False\n*/\nunittest\n{\n    alias candidate\
    \ = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk2gdw8bd.d(11): Error: `string` is used as a type\n/tmp/tmpk2gdw8bd.d(12):
    Error: no property `length` for type `string`\n/tmp/tmpk2gdw8bd.d(15): Error:
    no property `toUpper` for type `char`\n/tmp/tmpk2gdw8bd.d(17): Error: no property
    `toLower` for type `char`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk2gdw8bd.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  if(string[i] >= 'a' && string[i] <= 'z')\n        {\n            result +=\
    \ string[i] - 'a' + 'A';\n        }\n        else\n        {\n            result\
    \ += string[i];\n        }\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3kgurcz.d(11): Error: `string` is used as a type\n/tmp/tmpu3kgurcz.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpu3kgurcz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < string.length(); i++)\n    {\n      \
    \  char c = string[i];\n        if(c == 'a')\n            c = 'A';\n        if(c\
    \ == 'A')\n            c = 'a';\n        result += c;\n    }\n    return result;\n\
    }\nunittest\n{\n    alias candidate = flip_case;\n\n    assert(candidate(\"\"\
    ) == \"\");\n    assert(candidate(\"Hello!\") == \"hELLO!\");\n    assert(candidate(\"\
    These violent delights have violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
    \ ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnz7ge2i4.d(11): Error: `string` is used as a type\n/tmp/tmpnz7ge2i4.d(12):
    Error: no property `length` for type `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpnz7ge2i4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n For a given string, flip\
    \ lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case(\"\
    Hello\")\n    \"hELLO\"\n    \n*/\nstring flip_case(string string) \n{\n    for(int\
    \ i = 0; i < string.length(); i++)\n    {\n        if(string[i] >= 'a' && string[i]\
    \ <= 'z')\n        {\n            string[i] = string[i] - 32;\n        }\n   \
    \     else if(string[i] >= 'A' && string[i] <= 'Z')\n        {\n            string[i]\
    \ = string[i] + 32;\n        }\n    }\n    return string;\n}\nunittest\n{\n  \
    \  alias candidate = flip_case;\n\n    assert(candidate(\"\") == \"\");\n    assert(candidate(\"\
    Hello!\") == \"hELLO!\");\n    assert(candidate(\"These violent delights have\
    \ violent ends\") == \"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjwjjmcbd.d(11): Error: no property `length` for type `string`\n/tmp/tmpjwjjmcbd.d(15):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\n/tmp/tmpjwjjmcbd.d(19):
    Error: cannot modify `immutable` expression `string[cast(ulong)i]`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpjwjjmcbd.d", "-I/tmp"]\n'''
  stdout: b''

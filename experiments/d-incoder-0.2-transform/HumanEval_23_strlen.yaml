name: HumanEval_23_strlen
language: d
prompt: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\"\
  )\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
  \ \n"
tests: "unittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
  \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
  ) == 9L);\n}\nvoid main(){}"
completions: ["{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin();\
    \ it != string.end(); ++it) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}", "{\n\
    \    long len = 0;\n    \n    for(string::iterator it = string.begin(); it !=\
    \ string.end(); ++it) {\n        len++;\n    }\n    \n    return len;\n}", "{\n\
    \tlong result = 0;\n\t\n\tforeach(char c, string) {\n\t\tresult += 1;\n\t}\n\t\
    \n\treturn result;\n}", "{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin();\
    \ it != string.end(); ++it) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}", "{\n\
    \tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\
    \treturn len;\n}", "{\n    long len = 0;\n    \n    for(auto c : string)\n   \
    \ {\n        len++;\n    }\n    \n    return len;\n}", "{\n\tlong len = 0;\n\t\
    \n\tforeach(char c, string)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}", "{\n\
    \tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\
    \treturn len;\n}", "{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\t\
    len++;\n\t}\n\t\n\treturn len;\n}", "{\n\tlong len = 0;\n\t\n\twhile (string[len]\
    \ != '\\0')\n\t\tlen++;\n\t\n\treturn len;\n}", "{\n\tlong len = 0;\n\t\n\tfor(\
    \ int i = 0; i < string.length; ++i )\n\t\tlen += 1;\n\t\n\treturn len;\n}", "{\n\
    \tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn\
    \ len;\n}", "{\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i\
    \ )\n\t\tlen += 1;\n\t\n\treturn len;\n}", "{\n\tlong result = 0;\n\t\n\tfor(\
    \ int i = 0; i < string.length; ++i )\n\t{\n\t\tresult += string[i];\n\t}\n\t\n\
    \treturn result;\n}", "{\n    long len = 0;\n    \n    foreach(char c, string)\
    \ {\n        len++;\n    }\n    \n    return len;\n}", "{\n\tlong len = 0;\n\t\
    \n\twhile(string.data[len] != '\\0')\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n\
    }", "{\n\tlong result = 0;\n\t\n\tfor (int i = 0; i < string.length; ++i)\n\t\t\
    result += string[i];\n\t\n\treturn result;\n}", "{\n\tlong len = 0;\n\t\n\tfor(string::iterator\
    \ it = string.begin(); it != string.end(); ++it)\n\t{\n\t\tlen++;\n\t}\n\t\n\t\
    return len;\n}", "{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\t\
    len++;\n\t\n\treturn len;\n}", "{\n\tlong len = 0;\n\t\n\tfor (auto c : string)\
    \ \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

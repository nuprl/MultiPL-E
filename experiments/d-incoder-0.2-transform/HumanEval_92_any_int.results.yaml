language: d
name: HumanEval_92_any_int
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isclose(x, y, rel_tol=1e-9) &&\
    \ std.math.isclose(x, y, rel_tol=1e-9) && std.math.isclose(x, y, rel_tol=1e-9);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp292z5fcw.d(28): Error: undefined identifier `isclose` in module
    `std.math`\n/tmp/tmp292z5fcw.d(28): Error: undefined identifier `isclose` in module
    `std.math`\n/tmp/tmp292z5fcw.d(28): Error: undefined identifier `isclose` in module
    `std.math`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp292z5fcw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9e1ecj_j.d(49): Error: identifier expected following `.`, not
    `unittest`\n/tmp/tmp9e1ecj_j.d(50): Error: found `{` when expecting `)`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9e1ecj_j.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x - y) || std.math.isInfinite(x\
    \ - z) || std.math.isInfinite(y - z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcnwasq66.d(28): Error: undefined identifier `isInfinite` in
    module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcnwasq66.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(std.math.add(x,y)))\
    \ && (std.int(y) == std.int(std.math.add(x,z))));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7l25ihzb.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmp7l25ihzb.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmp7l25ihzb.d(28):
    Error: identifier expected following `.`, not `int`\n/tmp/tmp7l25ihzb.d(28): Error:
    identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp7l25ihzb.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math._abs(x) + std.math._abs(y) +\
    \ std.math._abs(z)) <= std.math._int(std.math._abs(x) + std.math._abs(y) + std.math._abs(z)));\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmppecv_00x.d(28): Error: undefined identifier `_abs` in module
    `std.math`, did you mean template `abs(Num)(Num x)`?\n/tmp/tmppecv_00x.d(28):
    Error: undefined identifier `_abs` in module `std.math`, did you mean template
    `abs(Num)(Num x)`?\n/tmp/tmppecv_00x.d(28): Error: undefined identifier `_abs`
    in module `std.math`, did you mean template `abs(Num)(Num x)`?\n/tmp/tmppecv_00x.d(28):
    Error: undefined identifier `_int` in module `std.math`, did you mean function
    `rint`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppecv_00x.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z)) || (std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z) && std.math.isIntegral(x+y) && std.math.isIntegral(x+z)\
    \ && std.math.isIntegral(y+z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral` in
    module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpen8hhkn7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\n/*\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe8xk8nsv.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpe8xk8nsv.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpe8xk8nsv.d(28):
    Error: identifier expected following `.`, not `int`\n/tmp/tmpe8xk8nsv.d(30): Error:
    unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8xk8nsv.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.rem(x,y) == 0.0) && (std.math.rem(y,z)\
    \ == 0.0) && (std.math.rem(x,z) == 0.0));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpnrx2zpng.d(28): Error: undefined identifier `rem` in module
    `std.math`\n/tmp/tmpnrx2zpng.d(28): Error: undefined identifier `rem` in module
    `std.math`\n/tmp/tmpnrx2zpng.d(28): Error: undefined identifier `rem` in module
    `std.math`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnrx2zpng.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(y)) || (std.int(y)\
    \ == std.int(z)) || (std.int(z) == std.int(x)));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps3l3dj_b.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28):
    Error: identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error:
    identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier
    expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier expected
    following `.`, not `int`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps3l3dj_b.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int._toInt(x) == std.int._toInt(y)\
    \ && std.int._toInt(x) == std.int._toInt(z);\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptvc535wy.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmptvc535wy.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmptvc535wy.d(28):
    Error: identifier expected following `.`, not `int`\n/tmp/tmptvc535wy.d(28): Error:
    identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmptvc535wy.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isInt.any(std.math.isInt.all([std.math.isIn\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl0opw_3y.d(29): Error: found `unittest` when expecting `,`\n/tmp/tmpl0opw_3y.d(44):
    Error: found `void` when expecting `,`\n/tmp/tmpl0opw_3y.d(44): Error: found `{`
    when expecting `,`\n/tmp/tmpl0opw_3y.d(44): Error: expression expected, not `}`\n/tmp/tmpl0opw_3y.d(44):
    Error: found `End of File` when expecting `,`\n/tmp/tmpl0opw_3y.d(28): Error:
    found `End of File` when expecting `]`\n/tmp/tmpl0opw_3y.d(44): Error: found `End
    of File` when expecting `,`\n/tmp/tmpl0opw_3y.d(44): Error: found `End of File`
    when expecting `)`\n/tmp/tmpl0opw_3y.d(44): Error: found `End of File` when expecting
    `,`\n/tmp/tmpl0opw_3y.d(44): Error: found `End of File` when expecting `)`\n/tmp/tmpl0opw_3y.d(44):
    Error: found `End of File` when expecting `,`\n/tmp/tmpl0opw_3y.d(28): Error:
    found `End of File` when expecting `]`\n/tmp/tmpl0opw_3y.d(44): Error: found `End
    of File` when expecting `,`\n/tmp/tmpl0opw_3y.d(44): Error: found `End of File`
    when expecting `)`\n/tmp/tmpl0opw_3y.d(44): Error: found `End of File` when expecting
    `,`\n/tmp/tmpl0opw_3y.d(44): Error: found `End of File` when expecting `)`\n/tmp/tmpl0opw_3y.d(44):
    Error: found `End of File` when expecting `,`\n/tmp/tmpl0opw_3y.d(28): Error:
    found `End of File` when expecting `]`\n/tmp/tmpl0opw_3y.d(44): Error: found `End
    of File` when expecting `,`\n/tmp/tmpl0opw_3y.d(44): Error: found `End of File`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl0opw_3y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = false;\n    \n    if (std.math.isnan(x)\
    \ || std.math.isnan(y) || std.math.isnan(z))\n    {\n        return result;\n\
    \    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\n\
    \    {\n        return result;\n    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z))\n    {\n        return result;\n    }\n    \n    if (std.math.isinf(x)\
    \ || std.math.isinf(y) || std.math.isinf(z))\n    {\n        return result;\n\
    \    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\n\
    \    {\n        return result;\n    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z))\n    {\n        return result;\n    }\n    \n    if (std.math.isinf(x)\
    \ || std.math.isinf(y) || std.math.isinf(z))\n    {\n        return result;\n\
    \    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\n\
    \    {\n        return result;\n    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z))\n    {\n        return result;\n    }\n    \n    if (std.math.isinf(x)\
    \ || std.math.isinf(y) || std.math.isinf(z))\n    {\n        return result;\n\
    \    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\n\
    \    {\n        return result;\n    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z))\n    {\n        return result;\n    }\n    \n    if (std.math.isinf(x)\
    \ || std.math.isinf(y) || std.math.isinf(z))\n    {\n        return result;\n\
    \    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\n\
    \    {\n        return result;\n    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z))\n    {\n        return result;\n    }\n    \n    if (std.math.isinf(x)\
    \ || st\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa30zrtz0.d(106): Error: found `unittest` when expecting `)`\n/tmp/tmpa30zrtz0.d(121):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa30zrtz0.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite` in
    module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpwl6ug8kd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(x + y)) && (std.int(y)\
    \ == std.int(y + z)) && (std.int(z) == std.int(z + x)));\n}\nunittest\n{\n   \
    \ alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n \
    \   assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_s07fq7n.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmp_s07fq7n.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmp_s07fq7n.d(28):
    Error: identifier expected following `.`, not `int`\n/tmp/tmp_s07fq7n.d(28): Error:
    identifier expected following `.`, not `int`\n/tmp/tmp_s07fq7n.d(28): Error: identifier
    expected following `.`, not `int`\n/tmp/tmp_s07fq7n.d(28): Error: identifier expected
    following `.`, not `int`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_s07fq7n.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\n/*\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe8xk8nsv.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpe8xk8nsv.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpe8xk8nsv.d(28):
    Error: identifier expected following `.`, not `int`\n/tmp/tmpe8xk8nsv.d(30): Error:
    unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8xk8nsv.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z))\n        return false;\n    \n    if (std.math.isinf(x) ||\
    \ std.math.isinf(y) || std.math.isinf(z))\n        return false;\n    \n    if\
    \ (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z))\n        return\
    \ false;\n    \n    if (std.math.isinf(x) && std.math.isinf(y) && !std.math.isinf(z))\n\
    \        return false;\n    \n    if (std.math.isinf(x) && !std.math.isinf(y)\
    \ && std.math.isinf(z))\n        return false;\n    \n    if (std.math.isinf(x)\
    \ && !std.math.isinf(y) && !std.math.isinf(z))\n        return false;\n    \n\
    \    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z))\n      \
    \  return false;\n    \n    if (std.math.isinf(x) && std.math.isinf(y) && !std.math.isinf(z))\n\
    \        return false;\n    \n    if (std.math.isinf(x) && !std.math.isinf(y)\
    \ && std.math.isinf(z))\n        return false;\n    \n    if (std.math.isinf(x)\
    \ && !std.math.isinf(y) && !std.math.isinf(z))\n        return false;\n    \n\
    \    if (x == y && y == z && z == 0)\n        return true;\n    \n    if (x ==\
    \ y && y == z && z != 0)\n        return false;\n    \n    if (x == y && y !=\
    \ z && z == 0)\n        return true;\n    \n    if (x == y && y != z && z != 0)\n\
    \        return false;\n    \n    if (x == y && y == z && z != 0)\n        return\
    \ false;\n    \n    if (x == y && y == z && z != 0)\n        return false;\n \
    \   \n    if (x == y && y == z && z != 0)\n        return false;\n    \n    if\
    \ (x == y && y == z && z != 0)\n        return false;\n    \n    if (x == y &&\
    \ y == z && z != 0)\n        return false;\n    \n    if (x == y && y == z &&\
    \ z != 0)\n        return false;\n    \n    if (x == y && y == z && z != 0)\n\
    \        return false;\n    \n    if (x == y && y == z && z != 0)\n        return\
    \ false;\n    \n    if (x == y && y == z && z != 0)\n        return false;\n \
    \   \n    if (x == y && y == z && z != 0)\n        return false;\n    \n    if\
    \ (x == y && y == z && z != 0)\n        return false;\n    \n    if (x == y &&\
    \ \nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp89vb8xz3.d(104): Error: expression expected, not `unittest`\n/tmp/tmp89vb8xz3.d(105):
    Error: found `{` when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp89vb8xz3.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInt(x) && std.math.isInt(y)\
    \ && std.math.isInt(z) && std.math.isInt(x + y) && std.math.isInt(x + z) && std.math.isInt(y\
    \ + z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0m2ijopc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(y)) || (std.int(y)\
    \ == std.int(z)) || (std.int(z) == std.int(x)));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps3l3dj_b.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28):
    Error: identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error:
    identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier
    expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier expected
    following `.`, not `int`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps3l3dj_b.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isclose(x, y, rel_tol=1e-9) &&\
    \ std.math.isclose(x, y, rel_tol=1e-9) && std.math.isclose(x, y, rel_tol=1e-9);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp292z5fcw.d(28): Error: undefined identifier `isclose` in module
    `std.math`\n/tmp/tmp292z5fcw.d(28): Error: undefined identifier `isclose` in module
    `std.math`\n/tmp/tmp292z5fcw.d(28): Error: undefined identifier `isclose` in module
    `std.math`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp292z5fcw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite` in
    module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpwl6ug8kd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInt.any(x, y, z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvcuufj_t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z) && std.math.isIntegral(x+y) && std.math.isIntegral(x+z)\
    \ && std.math.isIntegral(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp97ta3ckz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z))\n        return false;\n    \n    if (std.math.isinf(x) ||\
    \ std.math.isinf(y) || std.math.isinf(z))\n        return false;\n    \n    if\
    \ (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\n        return\
    \ false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\n\
    \        return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y) ||\
    \ std.math.isinf(z))\n        return false;\n    \n    if (std.math.isnan(x) ||\
    \ std.math.isnan(y) || std.math.isnan(z))\n        return false;\n    \n    if\
    \ (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\n        return\
    \ false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\n\
    \        return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y) ||\
    \ std.math.isinf(z))\n        return false;\n    \n    if (std.math.isnan(x) ||\
    \ std.math.isnan(y) || std.math.isnan(z))\n        return false;\n    \n    if\
    \ (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\n        return\
    \ false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\n\
    \        return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y) ||\
    \ std.math.isinf(z))\n        return false;\n    \n    if (std.math.isnan(x) ||\
    \ std.math.isnan(y) || std.math.isnan(z))\n        return false;\n    \n    if\
    \ (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\n        return\
    \ false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y) || std.math.isnan(z))\n\
    \        return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y) ||\
    \ std.math.isinf(z))\n        return false;\n    \n    if (std.math.isnan(x) ||\
    \ std.math.isnan(y) || std.math.isnan(z))\n        return false;\n    \n    if\
    \ (std.math.isinf(x) || std.math.isinf(y\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp99qw3mvz.d(83): Error: found \''unittest\'' when expecting \'',\''\n/tmp/tmp99qw3mvz.d(98):
    Error: found \''void\'' when expecting \'',\''\n/tmp/tmp99qw3mvz.d(98): Error:
    found \''{\'' when expecting \'',\''\n/tmp/tmp99qw3mvz.d(98): Error: expression
    expected, not \''}\''\n/tmp/tmp99qw3mvz.d(98): Error: found \''EOF\'' when expecting
    \'',\''\n/tmp/tmp99qw3mvz.d(98): Error: found \''EOF\'' when expecting \'')\''\n/tmp/tmp99qw3mvz.d(98):
    Error: found \''EOF\'' when expecting \'')\''\n/tmp/tmp99qw3mvz.d(98): Error:
    found \''EOF\'' instead of statement\n/tmp/tmp99qw3mvz.d(98): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp99qw3mvz.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite` in
    module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpwl6ug8kd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(y)) || (std.int(y)\
    \ == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb6ikvw8_.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpb6ikvw8_.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpb6ikvw8_.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpb6ikvw8_.d(28): Error: identifier expected following \''.\'',
    not \''int\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb6ikvw8_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsl8r3dym.d(48): Error: identifier expected following \''.\'',
    not \''unittest\''\n/tmp/tmpsl8r3dym.d(49): Error: found \''{\'' when expecting
    \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsl8r3dym.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = false;\n    \n    if ( x == y )\n\
    \    {\n        result = true;\n    }\n    else if ( x == z )\n    {\n       \
    \ result = true;\n    }\n    else if ( y == z )\n    {\n        result = true;\n\
    \    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl04fst7y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z)) || (std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z) && std.math.isIntegral(x+y) && std.math.isIntegral(x+z)\
    \ && std.math.isIntegral(y+z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral` in
    module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpen8hhkn7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(x+y) || std.math.isInfinite(x+z) || std.math.isInfinite(y+z)\
    \ || std.math.isInfinite(x+y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoxvadesu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x == y)\n    {\n        if (y == z)\n    \
    \    {\n            return true;\n        }\n        else\n        {\n       \
    \     return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps_hxclve.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite` in
    module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpwl6ug8kd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y))\
    \ return true;\n    if (std.math.isinf(z) && std.math.isinf(y)) return true;\n\
    \    if (std.math.isinf(z) && std.math.isinf(x)) return true;\n    if (std.math.isnan(x)\
    \ && std.math.isnan(y) && std.math.isnan(z)) return false;\n    if (std.math.isnan(x)\
    \ && std.math.isnan(y)) return true;\n    if (std.math.isnan(z) && std.math.isnan(y))\
    \ return true;\n    if (std.math.isnan(z) && std.math.isnan(x)) return true;\n\
    \    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z)) return true;\n\
    \    if (std.math.isinf(x) && std.math.isinf(y)) return true;\n    if (std.math.isinf(z)\
    \ && std.math.isinf(y)) return true;\n    if (std.math.isinf(z) && std.math.isinf(x))\
    \ return true;\n    if (std.math.isnan(x) && std.math.isnan(y) && std.math.isnan(z))\
    \ return true;\n    if (std.math.isnan(x) && std.math.isnan(y)) return true;\n\
    \    if (std.math.isnan(z) && std.math.isnan(y)) return true;\n    if (std.math.isnan(z)\
    \ && std.math.isnan(x)) return true;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return true;\n    if (std.math.isinf(x) && std.math.isinf(y))\
    \ return true;\n    if (std.math.isinf(z) && std.math.isinf(y)) return true;\n\
    \    if (std.math.isinf(z) && std.math.isinf(x)) return true;\n    if (std.math.isnan(x)\
    \ && std.math.isnan(y) && std.math.isnan(z)) return true;\n    if (std.math.isnan(x)\
    \ && std.math.isnan(y)) return true;\n    if (std.math.isnan(z) && std.math.isnan(y))\
    \ return true;\n    if (std.math.isnan(z) && st\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3lguiorl.d(54): Error: found \''unittest\'' when expecting \'')\''\n/tmp/tmp3lguiorl.d(69):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lguiorl.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if ( x == y || x == z || y == z )\n        return\
    \ true;\n    else\n        return false;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjkdk6x74.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x == y)\n    {\n        if (y == z)\n    \
    \    {\n            return true;\n        }\n        else\n        {\n       \
    \     return false;\n        }\n    }\n    else\n    {\n        return false;\n\
    \    }\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. `any_int(3L,\
    \ -2L, 1L)` returns `true` instead of `false`.\n<|/ c |>\n<| c |>\nThanks for\
    \ pointing that out. I've fixed it now.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqal851bm.d(44): Error: Declaration expected, not \''<\''\n/tmp/tmpqal851bm.d(47):
    Error: unterminated character constant\n/tmp/tmpqal851bm.d(50): Error: unterminated
    character constant\n/tmp/tmpqal851bm.d(58): Error: Declaration expected, not \''assert\''\n/tmp/tmpqal851bm.d(59):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpqal851bm.d(60): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpqal851bm.d(61): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpqal851bm.d(62): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpqal851bm.d(63): Error: Declaration expected, not \''assert\''\n/tmp/tmpqal851bm.d(64):
    Error: Declaration expected, not \''assert\''\n/tmp/tmpqal851bm.d(65): Error:
    Declaration expected, not \''assert\''\n/tmp/tmpqal851bm.d(66): Error: Declaration
    expected, not \''assert\''\n/tmp/tmpqal851bm.d(67): Error: Declaration expected,
    not \''assert\''\n/tmp/tmpqal851bm.d(68): Error: unrecognized declaration\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqal851bm.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z) && std.math.isIntegral(x+y) && std.math.isIntegral(x+z)\
    \ && std.math.isIntegral(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp97ta3ckz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z)) || (std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z) && std.math.isIntegral(x+y) && std.math.isIntegral(x+z)\
    \ && std.math.isIntegral(y+z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral` in
    module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpen8hhkn7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x - y) || std.math.isInfinite(x\
    \ - z) || std.math.isInfinite(y - z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcnwasq66.d(28): Error: undefined identifier `isInfinite` in
    module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcnwasq66.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_zq15eed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x < y && x < z) return true;\n    if (y <\
    \ x && y < z) return true;\n    if (z < x && z < y) return true;\n    return false;\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjyc6n6vw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y)\
    \ || std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y)\
    \ || std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y)\
    \ || std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y)\
    \ || std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y)\
    \ || std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y)\
    \ || std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y)\
    \ || std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y)\
    \ || std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y)\
    \ || std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbtql00lx.d(57): Error: identifier expected following \''.\'',
    not \''unittest\''\n/tmp/tmpbtql00lx.d(58): Error: found \''{\'' when expecting
    \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbtql00lx.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(y)) || (std.int(y)\
    \ == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb6ikvw8_.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpb6ikvw8_.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpb6ikvw8_.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpb6ikvw8_.d(28): Error: identifier expected following \''.\'',
    not \''int\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb6ikvw8_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((x == x + y) && (x == x + z) && (y ==\
    \ y + z));\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprhqtg5pl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((x == std.math.fadd(x, y)) || (x == std.math.fadd(y,\
    \ z)) || (x == std.math.fadd(z, x)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr7oo8uzs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x < y && x < z) return true;\n    if (y <\
    \ x && y < z) return true;\n    if (z < x && z < y) return true;\n    return false;\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjyc6n6vw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(y)) || (std.int(y)\
    \ == std.int(z)) || (std.int(z) == std.int(x)));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps3l3dj_b.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28):
    Error: identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error:
    identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier
    expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier expected
    following `.`, not `int`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps3l3dj_b.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if ( !std.type_eq(std.as_float(x), std.as_float(y))\
    \ && !std.type_eq(std.as_float(x), std.as_float(z)) )\n        return false;\n\
    \    if ( !std.type_eq(std.as_float(y), std.as_float(z)) )\n        return false;\n\
    \    return true;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpctezy2bl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(y)) || (std.int(y)\
    \ == std.int(z)) || (std.int(z) == std.int(x)));\n}\n/*\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3wa3oo33.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp3wa3oo33.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp3wa3oo33.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp3wa3oo33.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp3wa3oo33.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp3wa3oo33.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp3wa3oo33.d(30): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3wa3oo33.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = false;\n    if ( x == y || x ==\
    \ z || y == z )\n        result = true;\n    return result;\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbiqpmk_6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.remainder(x, z) == 0.0) && (std.math.remainder(y,\
    \ z) == 0.0));\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpukcvf7hf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_zq15eed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math._abs(x) + std.math._abs(y) +\
    \ std.math._abs(z)) >= std.math._abs(x + y + z));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp579pqcke.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.isInt(x) && std.math.isInt(y)\
    \ && std.math.isInt(z)) || (std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z)\
    \ && std.math.isInt(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbhuuoh7i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInt.any(x, y, z);\n}\n/*\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3cv82swv.d(30): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp3cv82swv.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.is\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpa_oqwdod.d(48): Error: identifier expected following \''.\'',
    not \''is\''\n/tmp/tmpa_oqwdod.d(49): Error: found \''unittest\'' when expecting
    \'')\''\n/tmp/tmpa_oqwdod.d(64): Error: found \''EOF\'' when expecting \''}\''
    following compound statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa_oqwdod.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInside(x, y, z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppbqfi2p9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y))\
    \ return true;\n    if (std.math.isinf(z) && std.math.isinf(y)) return true;\n\
    \    if (std.math.isinf(z) && std.math.isinf(x)) return true;\n    if (std.math.isnan(x)\
    \ && std.math.isnan(y) && std.math.isnan(z)) return false;\n    if (std.math.isnan(x)\
    \ && std.math.isnan(y)) return true;\n    if (std.math.isnan(z) && std.math.isnan(y))\
    \ return true;\n    if (std.math.isnan(z) && std.math.isnan(x)) return true;\n\
    \    if (std.math.isinf(x) && std.math.isinf(y) && std.math.isinf(z)) return true;\n\
    \    if (std.math.isinf(x) && std.math.isinf(y)) return true;\n    if (std.math.isinf(z)\
    \ && std.math.isinf(y)) return true;\n    if (std.math.isinf(z) && std.math.isinf(x))\
    \ return true;\n    if (x == y && y == z) return true;\n    if (x == z) return\
    \ true;\n    if (y == z) return true;\n    return false;\n}\nunittest\n{\n   \
    \ alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n \
    \   assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp33cmaxpq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInside(x, y, z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppbqfi2p9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.rem(x,y) == 0.0f) && (std.math.rem(y,z)\
    \ == 0.0f) && (std.math.rem(x,z) == 0.0f));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp41w33n2e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isclose(x, y, rel_tol=1e-9) &&\
    \ std.math.isclose(z, std.math.add(x,y), rel_tol=1e-9);\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpceyjm7fv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if ( x == y || x == z || y == z )\n        return\
    \ true;\n    else\n        return false;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjkdk6x74.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math._abs(x) + std.math._abs(y) +\
    \ std.math._abs(z)) <= std.math._max(std.math._abs(x), std.math._abs(y), std.math._abs(z)));\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgs4ja4bc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x - y) || std.math.isInfinite(x\
    \ - z) || std.math.isInfinite(y - z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcnwasq66.d(28): Error: undefined identifier `isInfinite` in
    module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcnwasq66.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInt.any(x, y, z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvcuufj_t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInt(x) && std.math.isInt(y)\
    \ && std.math.isInt(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n  \
    \  assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) ==\
    \ false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpikeb13pm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isin\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3a3e49wa.d(49): Error: found \''unittest\'' when expecting \'')\''\n/tmp/tmp3a3e49wa.d(64):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3a3e49wa.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    float xi = std.math.trunc(x);\n\
    \    float yi = std.math.trunc(y);\n    float zi = std.math.trunc(z);\n    \n\
    \    if (xi == yi && yi == zi) return true;\n    \n    return false;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2pei_yob.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z)) || (std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z) && std.math.isIntegral(x+y) && std.math.isIntegral(x+z)\
    \ && std.math.isIntegral(y+z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral` in
    module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpen8hhkn7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.int(x) == std.int(y) + std.int(z)) return\
    \ true;\n    return false;\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8l2znooq.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp8l2znooq.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp8l2znooq.d(28): Error: identifier expected following \''.\'',
    not \''int\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8l2znooq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInt.any(x, y, z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvcuufj_t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z)) || (std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z) && std.math.isIntegral(x+y) && std.math.isIntegral(x+z)\
    \ && std.math.isIntegral(y+z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral` in
    module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpen8hhkn7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInt.any(x, y, z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvcuufj_t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x == y || x == z) return true;\n    if (y\
    \ == z) return true;\n    return false;\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk79mc097.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite` in
    module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpwl6ug8kd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((x == x + y) && (x == x + z) && (x ==\
    \ y + z));\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpktqbwni1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_zq15eed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(std.math.add(x,y)))\
    \ && (std.int(y) == std.int(std.math.add(x,z))));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7l25ihzb.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmp7l25ihzb.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmp7l25ihzb.d(28):
    Error: identifier expected following `.`, not `int`\n/tmp/tmp7l25ihzb.d(28): Error:
    identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp7l25ihzb.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(std.add(x, y)))\
    \ && (std.int(y) == std.int(std.add(y, z))));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpc1kvauly.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpc1kvauly.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpc1kvauly.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpc1kvauly.d(28): Error: identifier expected following \''.\'',
    not \''int\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpc1kvauly.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if ( x == y || x == z || y == z ) return true;\n\
    \    return false;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0iy9z4ua.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(x + y)) || (std.int(y)\
    \ == std.int(x + y)) || (std.int(z) == std.int(x + y)));\n}\nunittest\n{\n   \
    \ alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n \
    \   assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9rl4d5h4.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp9rl4d5h4.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp9rl4d5h4.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp9rl4d5h4.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp9rl4d5h4.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp9rl4d5h4.d(28): Error: identifier expected following \''.\'',
    not \''int\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9rl4d5h4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.rem(x,y) == 0.0f) && (std.math.rem(y,z)\
    \ == 0.0f) && (std.math.rem(x,z) == 0.0f));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp41w33n2e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(y)) || (std.int(y)\
    \ == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb6ikvw8_.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpb6ikvw8_.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpb6ikvw8_.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpb6ikvw8_.d(28): Error: identifier expected following \''.\'',
    not \''int\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb6ikvw8_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x == y || x == z) return true;\n    else return\
    \ false;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppc7elqdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(y)) || (std.int(y)\
    \ == std.int(z)) || (std.int(z) == std.int(x)));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps3l3dj_b.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28):
    Error: identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error:
    identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier
    expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier expected
    following `.`, not `int`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps3l3dj_b.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x < y && x < z) return true;\n    if (y <\
    \ x && y < z) return true;\n    if (z < x && z < y) return true;\n    return false;\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjyc6n6vw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if ( x == y || x == z || y == z )\n        return\
    \ true;\n    else\n        return false;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjkdk6x74.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.rem(x,y) == 0.0f) && (std.math.rem(y,z)\
    \ == 0.0f) && (std.math.rem(x,z) == 0.0f));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp41w33n2e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = false;\n    if (std.math.isnan(x)\
    \ || std.math.isnan(y) || std.math.isnan(z))\n    {\n        return result;\n\
    \    }\n    \n    if (std.math.isinf(x) || std.math.isinf(y) || std.math.isinf(z))\n\
    \    {\n        return result;\n    }\n    \n    if (x == y || x == z || y ==\
    \ z)\n    {\n        result = true;\n    }\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphall_mh7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite` in
    module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpwl6ug8kd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = false;\n    \n    if (std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z)) {\n        result = std.math.isEqual(x,\
    \ y, z);\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpptonmkmn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z)) || (std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z) && std.math.isIntegral(x+y) && std.math.isIntegral(x+z)\
    \ && std.math.isIntegral(y+z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral` in
    module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpen8hhkn7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInt(x) && std.math.isInt(y)\
    \ && std.math.isInt(z) && std.math.isInt(x + y) && std.math.isInt(x + z) && std.math.isInt(y\
    \ + z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0m2ijopc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInt.any(x, y, z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvcuufj_t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInt.any(x, y, z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvcuufj_t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    float xi = std.math.trunc(x);\n\
    \    float yi = std.math.trunc(y);\n    float zi = std.math.trunc(z);\n    \n\
    \    if (xi == yi && yi == zi) return true;\n    \n    if (xi == yi || yi == zi)\
    \ return true;\n    \n    return false;\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkyhirklw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x == y || x == z) return true;\n    if (y\
    \ == z) return true;\n    return false;\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk79mc097.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z) && std.math.isIntegral(x+y) && std.math.isIntegral(x+z)\
    \ && std.math.isIntegral(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp97ta3ckz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if ( x == y || x == z || y == z )\n        return\
    \ true;\n    else\n        return false;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjkdk6x74.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.isInt(x) && std.math.isInt(y)\
    \ && std.math.isInt(z)) || (std.math.isInt(x) && std.math.isInt(y) && !std.math.isInt(z))\
    \ || (!std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z)) || (!std.math.isInt(x)\
    \ && !std.math.isInt(y) && !std.math.isInt(z)));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph658q7ij.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z)) || (std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z) && std.math.isIntegral(x+y) && std.math.isIntegral(x+z)\
    \ && std.math.isIntegral(y+z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral` in
    module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpen8hhkn7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_zq15eed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInt(x) && std.math.isInt(y)\
    \ && std.math.isInt(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n  \
    \  assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) ==\
    \ false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpikeb13pm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_zq15eed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_zq15eed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = false;\n    \n    if ( x == y )\n\
    \    {\n        if ( x == z )\n        {\n            result = true;\n       \
    \ }\n    }\n    else\n    {\n        if ( z == x )\n        {\n            result\
    \ = true;\n        }\n    }\n    \n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphc4sl84j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = false;\n    if (x < y && x < z)\
    \ result = true;\n    else if (y < x && y < z) result = true;\n    else if (z\
    \ < x && z < y) result = true;\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg3nut5et.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(x + y)) && (std.int(y)\
    \ == std.int(y + z)) && (std.int(z) == std.int(z + x)));\n}\nunittest\n{\n   \
    \ alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n \
    \   assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_s07fq7n.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmp_s07fq7n.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmp_s07fq7n.d(28):
    Error: identifier expected following `.`, not `int`\n/tmp/tmp_s07fq7n.d(28): Error:
    identifier expected following `.`, not `int`\n/tmp/tmp_s07fq7n.d(28): Error: identifier
    expected following `.`, not `int`\n/tmp/tmp_s07fq7n.d(28): Error: identifier expected
    following `.`, not `int`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_s07fq7n.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z) || std.math.isInfinite(x+y+z);\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk4h36eg6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9e1ecj_j.d(49): Error: identifier expected following `.`, not
    `unittest`\n/tmp/tmp9e1ecj_j.d(50): Error: found `{` when expecting `)`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9e1ecj_j.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(y)) || (std.int(y)\
    \ == std.int(z)) || (std.int(z) == std.int(x)));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps3l3dj_b.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28):
    Error: identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error:
    identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier
    expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier expected
    following `.`, not `int`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps3l3dj_b.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(y)) || (std.int(y)\
    \ == std.int(z)) || (std.int(z) == std.int(x)));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps3l3dj_b.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28):
    Error: identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error:
    identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier
    expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier expected
    following `.`, not `int`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps3l3dj_b.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z) && std.math.isIntegral(x+y) && std.math.isIntegral(x+z)\
    \ && std.math.isIntegral(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp97ta3ckz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(y)) || (std.int(y)\
    \ == std.int(z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb6ikvw8_.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpb6ikvw8_.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpb6ikvw8_.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpb6ikvw8_.d(28): Error: identifier expected following \''.\'',
    not \''int\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb6ikvw8_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isclose(x, y, rel_tol=1e-9) &&\
    \ std.math.isclose(x, y, rel_tol=1e-9) && std.math.isclose(x, y, rel_tol=1e-9);\n\
    }\n/*\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwe072v4y.d(30): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpwe072v4y.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z)) || (std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z) && std.math.isIntegral(x+y) && std.math.isIntegral(x+z)\
    \ && std.math.isIntegral(y+z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral` in
    module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpen8hhkn7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\n/*\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe8xk8nsv.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpe8xk8nsv.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpe8xk8nsv.d(28):
    Error: identifier expected following `.`, not `int`\n/tmp/tmpe8xk8nsv.d(30): Error:
    unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8xk8nsv.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isclose(x, y, rel_tol=1e-9) &&\
    \ std.math.isclose(x, y, rel_tol=1e-9) && std.math.isclose(x, y, rel_tol=1e-9);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp292z5fcw.d(28): Error: undefined identifier `isclose` in module
    `std.math`\n/tmp/tmp292z5fcw.d(28): Error: undefined identifier `isclose` in module
    `std.math`\n/tmp/tmp292z5fcw.d(28): Error: undefined identifier `isclose` in module
    `std.math`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp292z5fcw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.int(x) == std.int(y) + std.int(z)) return\
    \ true;\n    return false;\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp91k2d919.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp91k2d919.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp91k2d919.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp91k2d919.d(31): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp91k2d919.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.remainder(x, z) == 0.0) && (std.math.remainder(y,\
    \ z) == 0.0) && (std.math.remainder(z, z) == 0.0));\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm1mrxs34.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInt.any(x, y, z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvcuufj_t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInside(x, y, z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppbqfi2p9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x == y || x == z) return true;\n    if (y\
    \ == z) return true;\n    return false;\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk79mc097.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite` in
    module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpwl6ug8kd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z);\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi8p8fixc.d(30): Error: unterminated /* */ comment\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpi8p8fixc.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z) && std.math.isIntegral(x+y) && std.math.isIntegral(x+z)\
    \ && std.math.isIntegral(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp97ta3ckz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInt.any(std.math.isInt.all([std.typecons.isInt(x),\
    \ std.typecons.isInt(y), std.typecons.isInt(z)]));\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvvhlmjqx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = false;\n    \n    if (std.int(x)\
    \ == std.int(y) + std.int(z)) {\n        result = true;\n    }\n    \n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmxfjaw2w.d(30): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpmxfjaw2w.d(30): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpmxfjaw2w.d(30): Error: identifier expected following \''.\'',
    not \''int\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmxfjaw2w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isin\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3a3e49wa.d(49): Error: found \''unittest\'' when expecting \'')\''\n/tmp/tmp3a3e49wa.d(64):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3a3e49wa.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z))\n        return std.typecons.is_nan;\n    if (std.math.isinf(x)\
    \ || std.math.isinf(y) || std.math.isinf(z))\n        return std.typecons.is_inf;\n\
    \    \n    int xint = std.math.trunc(x);\n    int yint = std.math.trunc(y);\n\
    \    int zint = std.math.trunc(z);\n    \n    if (xint == yint && xint == zint)\n\
    \        return true;\n    \n    return false;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz2b4oho4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.int(x) == std.int(y) + std.int(z)) return\
    \ true;\n    else return false;\n}\n/*\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgzkf82pw.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpgzkf82pw.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpgzkf82pw.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpgzkf82pw.d(31): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgzkf82pw.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\n/*\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe8xk8nsv.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpe8xk8nsv.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpe8xk8nsv.d(28):
    Error: identifier expected following `.`, not `int`\n/tmp/tmpe8xk8nsv.d(30): Error:
    unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe8xk8nsv.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInside(x, y, z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppbqfi2p9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite` in
    module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpwl6ug8kd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite` in
    module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpwl6ug8kd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x + y + z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpix9ps7bs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.int(std.\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmpwqjq1zvr.d(28): Error: identifier expected following \''.\'',
    not \''int\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwqjq1zvr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z)) || (std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z) && std.math.isIntegral(x+y) && std.math.isIntegral(x+z)\
    \ && std.math.isIntegral(y+z)));\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral` in
    module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28):
    Error: undefined identifier `isIntegral` in module `std.math`, did you mean template
    `isIntegral(T)`?\n/tmp/tmpen8hhkn7.d(28): Error: undefined identifier `isIntegral`
    in module `std.math`, did you mean template `isIntegral(T)`?\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpen8hhkn7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.int(x) == std.int(y) + std.int(z)) return\
    \ true;\n    return false;\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8l2znooq.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp8l2znooq.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp8l2znooq.d(28): Error: identifier expected following \''.\'',
    not \''int\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8l2znooq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x - y) || std.math.isInfinite(x\
    \ - z) || std.math.isInfinite(y - z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcnwasq66.d(28): Error: undefined identifier `isInfinite` in
    module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpcnwasq66.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcnwasq66.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.rem(x,y) == 0.0f) && (std.math.rem(y,z)\
    \ == 0.0f) && (std.math.rem(x,z) == 0.0f));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp41w33n2e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.remainder(x,y) == 0 && std.math.remainder(y,z)\
    \ == 0 && std.math.remainder(z,x) == 0) || (std.math.remainder(x,y) == 0 && std.math.remainder(y,z)\
    \ != 0 && std.math.remainder(z,x) != 0));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdwt0hneh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z) && std.math.isIntegral(x+y) && std.math.isIntegral(x+z)\
    \ && std.math.isIntegral(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp97ta3ckz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite` in
    module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpwl6ug8kd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9e1ecj_j.d(49): Error: identifier expected following `.`, not
    `unittest`\n/tmp/tmp9e1ecj_j.d(50): Error: found `{` when expecting `)`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9e1ecj_j.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps3i9qrlx.d(49): Error: found \''unittest\'' when expecting \'',\''\n/tmp/tmps3i9qrlx.d(64):
    Error: found \''void\'' when expecting \'',\''\n/tmp/tmps3i9qrlx.d(64): Error:
    found \''{\'' when expecting \'',\''\n/tmp/tmps3i9qrlx.d(64): Error: expression
    expected, not \''}\''\n/tmp/tmps3i9qrlx.d(64): Error: found \''EOF\'' when expecting
    \'',\''\n/tmp/tmps3i9qrlx.d(64): Error: found \''EOF\'' when expecting \'')\''\n/tmp/tmps3i9qrlx.d(64):
    Error: found \''EOF\'' when expecting \'')\''\n/tmp/tmps3i9qrlx.d(64): Error:
    found \''EOF\'' instead of statement\n/tmp/tmps3i9qrlx.d(64): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmps3i9qrlx.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y)\
    \ || std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqqibphxy.d(63): Error: expression expected, not \''unittest\''\n/tmp/tmpqqibphxy.d(64):
    Error: found \''{\'' when expecting \'',\''\n/tmp/tmpqqibphxy.d(65): Error: expression
    expected, not \''alias\''\n/tmp/tmpqqibphxy.d(65): Error: found \''candidate\''
    when expecting \'',\''\n/tmp/tmpqqibphxy.d(65): Error: expression expected, not
    \''=\''\n/tmp/tmpqqibphxy.d(65): Error: found \''any_int\'' when expecting \'',\''\n/tmp/tmpqqibphxy.d(65):
    Error: expression expected, not \'';\''\n/tmp/tmpqqibphxy.d(67): Error: found
    \''assert\'' when expecting \'',\''\n/tmp/tmpqqibphxy.d(67): Error: found \'';\''
    when expecting \'',\''\n/tmp/tmpqqibphxy.d(68): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmpqqibphxy.d(69): Error: found \'';\'' when expecting \'',\''\n/tmp/tmpqqibphxy.d(70):
    Error: found \'';\'' when expecting \'',\''\n/tmp/tmpqqibphxy.d(71): Error: found
    \'';\'' when expecting \'',\''\n/tmp/tmpqqibphxy.d(72): Error: found \'';\'' when
    expecting \'',\''\n/tmp/tmpqqibphxy.d(73): Error: found \'';\'' when expecting
    \'',\''\n/tmp/tmpqqibphxy.d(74): Error: found \'';\'' when expecting \'',\''\n/tmp/tmpqqibphxy.d(75):
    Error: found \'';\'' when expecting \'',\''\n/tmp/tmpqqibphxy.d(76): Error: found
    \'';\'' when expecting \'',\''\n/tmp/tmpqqibphxy.d(77): Error: expression expected,
    not \''}\''\n/tmp/tmpqqibphxy.d(78): Error: found \''void\'' when expecting \'',\''\n/tmp/tmpqqibphxy.d(78):
    Error: found \''{\'' when expecting \'',\''\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpqqibphxy.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z) && std.math.isIntegral(x+y) && std.math.isIntegral(x+z)\
    \ && std.math.isIntegral(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp97ta3ckz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsl8r3dym.d(48): Error: identifier expected following \''.\'',
    not \''unittest\''\n/tmp/tmpsl8r3dym.d(49): Error: found \''{\'' when expecting
    \'')\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsl8r3dym.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isnan(x) && std.math.isinf(y\n\
    unittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L)\
    \ == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkfodz8qh.d(49): Error: found \''unittest\'' when expecting \'',\''\n/tmp/tmpkfodz8qh.d(64):
    Error: found \''void\'' when expecting \'',\''\n/tmp/tmpkfodz8qh.d(64): Error:
    found \''{\'' when expecting \'',\''\n/tmp/tmpkfodz8qh.d(64): Error: expression
    expected, not \''}\''\n/tmp/tmpkfodz8qh.d(64): Error: found \''EOF\'' when expecting
    \'',\''\n/tmp/tmpkfodz8qh.d(64): Error: found \''EOF\'' when expecting \'')\''\n/tmp/tmpkfodz8qh.d(64):
    Error: found \''EOF\'' when expecting \'')\''\n/tmp/tmpkfodz8qh.d(64): Error:
    found \''EOF\'' instead of statement\n/tmp/tmpkfodz8qh.d(64): Error: found \''EOF\''
    when expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpkfodz8qh.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z))\n    {\n        return false;\n    }\n    \n    if (x ==\
    \ y)\n    {\n        if (std.math.isnan(z))\n        {\n            return false;\n\
    \        }\n        \n        return true;\n    }\n    \n    if (x == z)\n   \
    \ {\n        return true;\n    }\n    \n    if (y == z)\n    {\n        return\
    \ true;\n    }\n    \n    return false;\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpymq2eowy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = false;\n    \n    if ( x == y )\n\
    \    {\n        if ( x == z )\n        {\n            result = true;\n       \
    \ }\n    }\n    else\n    {\n        if ( y == z )\n        {\n            result\
    \ = true;\n        }\n    }\n    \n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp57pv6iu0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_zq15eed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = false;\n    \n    float sum = (x\
    \ + y + z);\n    \n    if (sum == x)\n    {\n        result = true;\n    }\n \
    \   else if (sum == y)\n    {\n        result = true;\n    }\n    else if (sum\
    \ == z)\n    {\n        result = true;\n    }\n    else\n    {\n        result\
    \ = false;\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvjh30ixd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y)\
    \ || std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y)\
    \ || std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y)\
    \ || std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y)\
    \ || std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y)\
    \ || std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isnan(x) || std.math.isnan(y)\
    \ || std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    \n    if (std.math.isinf\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpebyqgb4n.d(60): Error: found \''unittest\'' when expecting \'')\''\n/tmp/tmpebyqgb4n.d(75):
    Error: found \''EOF\'' when expecting \''}\'' following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpebyqgb4n.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isclose(x, y, rel_tol=1e-9) &&\
    \ std.math.isclose(x, y, rel_tol=1e-9) && std.math.isclose(x, y, rel_tol=1e-9);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp292z5fcw.d(28): Error: undefined identifier `isclose` in module
    `std.math`\n/tmp/tmp292z5fcw.d(28): Error: undefined identifier `isclose` in module
    `std.math`\n/tmp/tmp292z5fcw.d(28): Error: undefined identifier `isclose` in module
    `std.math`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp292z5fcw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite` in
    module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpwl6ug8kd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = false;\n    if ( std.math.isInt(x)\
    \ && std.math.isInt(y) && std.math.isInt(z) )\n    {\n        result = std.math.isEqual(x+y,\
    \ z);\n    }\n    return result;\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm54o1fl0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x == y || x == z) return true;\n    if (y\
    \ == z) return true;\n    return false;\n}\nunittest\n{\n    alias candidate =\
    \ any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk79mc097.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.int(x) == std.int(y) + std.int(z)) return\
    \ true;\n    return false;\n}\nunittest\n{\n    alias candidate = any_int;\n\n\
    \    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp8l2znooq.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp8l2znooq.d(28): Error: identifier expected following \''.\'',
    not \''int\''\n/tmp/tmp8l2znooq.d(28): Error: identifier expected following \''.\'',
    not \''int\''\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8l2znooq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite` in
    module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpwl6ug8kd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInt.any(x, y, z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvcuufj_t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.int(x) == std.int(y) + std.int(z);\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmpamapzt67.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmpamapzt67.d(28):
    Error: identifier expected following `.`, not `int`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpamapzt67.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z) || std.math.isInfinite(x+y+z);\n}\nunittest\n{\n\
    \    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk4h36eg6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (std.math.isnan(x) || std.math.isnan(y) ||\
    \ std.math.isnan(z)) return false;\n    if (std.math.isinf(x) || std.math.isinf(y)\
    \ || std.math.isinf(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.math.isinf(y)\
    \ && std.math.isinf(z)) return false;\n    if (std.math.isnan(x) && std.math.isnan(y)\
    \ && std.math.isnan(z)) return false;\n    if (std.math.isinf(x) && std.\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9e1ecj_j.d(49): Error: identifier expected following `.`, not
    `unittest`\n/tmp/tmp9e1ecj_j.d(50): Error: found `{` when expecting `)`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9e1ecj_j.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x + y) || std.math.isInfinite(x\
    \ + z) || std.math.isInfinite(y + z) || std.math.isInfinite(x + y + z);\n}\nunittest\n\
    {\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n\
    \    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpix9ps7bs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInt(x) && std.math.isInt(y)\
    \ && std.math.isInt(z) && std.math.isInt(x + y) && std.math.isInt(x + z) && std.math.isInt(y\
    \ + z);\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0m2ijopc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793989
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.rem(x,y) == 0.0f) && (std.math.rem(y,z)\
    \ == 0.0f) && (std.math.rem(x,z) == 0.0f));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp41w33n2e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math.isInt(x) && std.math.isInt(y)\
    \ && std.math.isInt(z)) || (std.math.isInt(x) && std.math.isInt(y) && !std.math.isInt(z))\
    \ || (!std.math.isInt(x) && std.math.isInt(y) && std.math.isInt(z)) || (!std.math.isInt(x)\
    \ && !std.math.isInt(y) && !std.math.isInt(z)));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph658q7ij.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isIntegral(x) && std.math.isIntegral(y)\
    \ && std.math.isIntegral(z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_zq15eed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    bool result = false;\n    \n    if ( x == y )\n\
    \    {\n        if ( x == z )\n        {\n            result = true;\n       \
    \ }\n    }\n    else\n    {\n        if ( y == z )\n        {\n            result\
    \ = true;\n        }\n    }\n    \n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp57pv6iu0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.math._abs(x) + std.math._abs(y) +\
    \ std.math._abs(z)) <= std.math._max(std.math._abs(x), std.math._abs(y), std.math._abs(z)));\n\
    }\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L, 3L,\
    \ 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgs4ja4bc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isInfinite(x) || std.math.isInfinite(y)\
    \ || std.math.isInfinite(z) || std.math.isInfinite(x+y) || std.math.isInfinite(x+z)\
    \ || std.math.isInfinite(y+z);\n}\nunittest\n{\n    alias candidate = any_int;\n\
    \n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L)\
    \ == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite` in
    module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined
    identifier `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X
    x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier
    `isInfinite` in module `std.math`, did you mean template `isInfinity(X)(X x) if
    (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28): Error: undefined identifier `isInfinite`
    in module `std.math`, did you mean template `isInfinity(X)(X x) if (isFloatingPoint!X)`?\n/tmp/tmpwl6ug8kd.d(28):
    Error: undefined identifier `isInfinite` in module `std.math`, did you mean template
    `isInfinity(X)(X x) if (isFloatingPoint!X)`?\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpwl6ug8kd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    if (x == y || x == z) return true;\n    else return\
    \ false;\n}\nunittest\n{\n    alias candidate = any_int;\n\n    assert(candidate(2L,\
    \ 3L, 1L) == true);\n    assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5,\
    \ 5L, 3.5) == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppc7elqdb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return ((std.int(x) == std.int(y)) || (std.int(y)\
    \ == std.int(z)) || (std.int(z) == std.int(x)));\n}\nunittest\n{\n    alias candidate\
    \ = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n    assert(candidate(2.5,\
    \ 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5) == false);\n    assert(candidate(2L,\
    \ 6L, 2L) == false);\n    assert(candidate(4L, 2L, 2L) == true);\n    assert(candidate(2.2,\
    \ 2.2, 2.2) == false);\n    assert(candidate(-4L, 6L, 2L) == true);\n    assert(candidate(2L,\
    \ 1L, 1L) == true);\n    assert(candidate(3L, 4L, 7L) == true);\n    assert(candidate(3.0,\
    \ 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmps3l3dj_b.d(28): Error: identifier expected following `.`, not
    `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28):
    Error: identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error:
    identifier expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier
    expected following `.`, not `int`\n/tmp/tmps3l3dj_b.d(28): Error: identifier expected
    following `.`, not `int`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmps3l3dj_b.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5L, 2L, 7L)\n    true\n    \n  \
    \  >>> any_int(3L, 2L, 2L)\n    false\n\n    >>> any_int(3L, -2L, 1L)\n    true\n\
    \    \n    >>> any_int(3.6, -2.2, 2L)\n    false\n  \n\n    \n    \n*/\nbool any_int(float\
    \ x, float y, float z) \n{\n    return std.math.isclose(x, y, rel_tol=1e-9) &&\
    \ std.math.isclose(z, std.math.add(x, y), rel_tol=1e-9);\n}\nunittest\n{\n   \
    \ alias candidate = any_int;\n\n    assert(candidate(2L, 3L, 1L) == true);\n \
    \   assert(candidate(2.5, 2L, 3L) == false);\n    assert(candidate(1.5, 5L, 3.5)\
    \ == false);\n    assert(candidate(2L, 6L, 2L) == false);\n    assert(candidate(4L,\
    \ 2L, 2L) == true);\n    assert(candidate(2.2, 2.2, 2.2) == false);\n    assert(candidate(-4L,\
    \ 6L, 2L) == true);\n    assert(candidate(2L, 1L, 1L) == true);\n    assert(candidate(3L,\
    \ 4L, 7L) == true);\n    assert(candidate(3.0, 4L, 7L) == false);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnpa6v88_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659793990

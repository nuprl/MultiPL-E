language: d
name: HumanEval_23_strlen
results:
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it !=\
    \ string.end(); ++it) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjhlb8f_9.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpjhlb8f_9.d(14):
    Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpjhlb8f_9.d(14):
    Error: expression expected, not `=`\n/tmp/tmpjhlb8f_9.d(14): Error: found `string`
    when expecting `)`\n/tmp/tmpjhlb8f_9.d(14): Error: found `)` when expecting `;`
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjhlb8f_9.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    \n    for(string::iterator it = string.begin();\
    \ it != string.end(); ++it) {\n        len++;\n    }\n    \n    return len;\n\
    }\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\") ==\
    \ 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4f_fmnjb.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmp4f_fmnjb.d(14):
    Error: found `it` when expecting `;` following `for` condition\n/tmp/tmp4f_fmnjb.d(14):
    Error: expression expected, not `=`\n/tmp/tmp4f_fmnjb.d(14): Error: found `string`
    when expecting `)`\n/tmp/tmp4f_fmnjb.d(14): Error: found `)` when expecting `;`
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4f_fmnjb.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong result = 0;\n\t\n\tforeach(char c, string) {\n\t\tresult += 1;\n\
    \t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate = strlen;\n\n \
    \   assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"\
    asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpejds2osb.d(14): Error: no identifier for declarator `string`\n/tmp/tmpejds2osb.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmpejds2osb.d(18): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpejds2osb.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it !=\
    \ string.end(); ++it) \n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpjhlb8f_9.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmpjhlb8f_9.d(14):
    Error: found `it` when expecting `;` following `for` condition\n/tmp/tmpjhlb8f_9.d(14):
    Error: expression expected, not `=`\n/tmp/tmpjhlb8f_9.d(14): Error: found `string`
    when expecting `)`\n/tmp/tmpjhlb8f_9.d(14): Error: found `)` when expecting `;`
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjhlb8f_9.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t\
    }\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.RangeError@/tmp/tmpphi575ao.d(14): Range violation\n----------------\n??:?
    _d_arrayboundsp [0x427e0e]\n??:? long tmpphi575ao.strlen(immutable(char)[]) [0x427a26]\n??:?
    void tmpphi575ao.__unittest_L21_C1() [0x427a5c]\n??:? void tmpphi575ao.__modtest()
    [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428220]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281a7]\n??:? _d_run_main [0x428112]\n??:? main [0x427aef]\n??:?
    __libc_start_main [0x4672d554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    \n    for(auto c : string)\n    {\n        len++;\n\
    \    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpd3vnc7dp.d(14): Error: no identifier for declarator `c`\n/tmp/tmpd3vnc7dp.d(14):
    Error: expression expected, not `:`\n/tmp/tmpd3vnc7dp.d(14): Error: found `string`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpd3vnc7dp.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\tforeach(char c, string)\n\t{\n\t\tlen++;\n\t}\n\t\
    \n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp40w0dbrx.d(14): Error: no identifier for declarator `string`\n/tmp/tmp40w0dbrx.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmp40w0dbrx.d(19): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp40w0dbrx.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t{\n\t\tlen++;\n\t\
    }\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.RangeError@/tmp/tmpphi575ao.d(14): Range violation\n----------------\n??:?
    _d_arrayboundsp [0x427e0e]\n??:? long tmpphi575ao.strlen(immutable(char)[]) [0x427a26]\n??:?
    void tmpphi575ao.__unittest_L21_C1() [0x427a5c]\n??:? void tmpphi575ao.__modtest()
    [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428220]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281a7]\n??:? _d_run_main [0x428112]\n??:? main [0x427aef]\n??:?
    __libc_start_main [0x4672d554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\
    \n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9n7w8y_l.d(14): Error: no identifier for declarator `c`\n/tmp/tmp9n7w8y_l.d(14):
    Error: expression expected, not `:`\n/tmp/tmp9n7w8y_l.d(14): Error: found `string`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9n7w8y_l.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.RangeError@/tmp/tmppwd0ihl1.d(14): Range violation\n----------------\n??:?
    _d_arrayboundsp [0x427e0e]\n??:? long tmppwd0ihl1.strlen(immutable(char)[]) [0x427a26]\n??:?
    void tmppwd0ihl1.__unittest_L19_C1() [0x427a5c]\n??:? void tmppwd0ihl1.__modtest()
    [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428220]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281a7]\n??:? _d_run_main [0x428112]\n??:? main [0x427aef]\n??:?
    __libc_start_main [0x25035554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t\tlen\
    \ += 1;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n   \
    \ assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\
    \n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9n7w8y_l.d(14): Error: no identifier for declarator `c`\n/tmp/tmp9n7w8y_l.d(14):
    Error: expression expected, not `:`\n/tmp/tmp9n7w8y_l.d(14): Error: found `string`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9n7w8y_l.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t\tlen\
    \ += 1;\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n\
    \    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n   \
    \ assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong result = 0;\n\t\n\tfor( int i = 0; i < string.length; ++i )\n\t\
    {\n\t\tresult += string[i];\n\t}\n\t\n\treturn result;\n}\nunittest\n{\n    alias\
    \ candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmplves10jk.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d6d]\n??:? void tmplves10jk.__unittest_L21_C1() [0x427aad]\n??:?
    void tmplves10jk.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffdc]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab9]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a971]\n??:? runModuleUnitTests [0x42b8dd]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428230]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b7]\n??:? _d_run_main [0x428122]\n??:? main [0x427aff]\n??:?
    __libc_start_main [0xbc594554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n    long len = 0;\n    \n    foreach(char c, string) {\n        len++;\n\
    \    }\n    \n    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\
    \n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\") == 1L);\n  \
    \  assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_2omg308.d(14): Error: no identifier for declarator `string`\n/tmp/tmp_2omg308.d(14):
    Error: found `)` when expecting `;`\n/tmp/tmp_2omg308.d(18): Error: found `return`
    when expecting `)`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_2omg308.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\twhile(string.data[len] != '\\0')\n\t{\n\t\tlen++;\n\
    \t}\n\t\n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpckn2prq7.d(14): Error: no property `data` for type `string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpckn2prq7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong result = 0;\n\t\n\tfor (int i = 0; i < string.length; ++i)\n\t\t\
    result += string[i];\n\t\n\treturn result;\n}\nunittest\n{\n    alias candidate\
    \ = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"x\"\
    ) == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpdy_sjljg.d(24): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d6d]\n??:? void tmpdy_sjljg.__unittest_L19_C1() [0x427aad]\n??:?
    void tmpdy_sjljg.__modtest() [0x427aec]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb07]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb2d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffdc]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab9]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a971]\n??:? runModuleUnitTests [0x42b8dd]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428230]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b7]\n??:? _d_run_main [0x428122]\n??:? main [0x427aff]\n??:?
    __libc_start_main [0xab81c554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\tfor(string::iterator it = string.begin(); it !=\
    \ string.end(); ++it)\n\t{\n\t\tlen++;\n\t}\n\t\n\treturn len;\n}\nunittest\n\
    {\n    alias candidate = strlen;\n\n    assert(candidate(\"\") == 0L);\n    assert(candidate(\"\
    x\") == 1L);\n    assert(candidate(\"asdasnakj\") == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmph5rz1_zc.d(14): Error: use `.` for member lookup, not `::`\n/tmp/tmph5rz1_zc.d(14):
    Error: found `it` when expecting `;` following `for` condition\n/tmp/tmph5rz1_zc.d(14):
    Error: expression expected, not `=`\n/tmp/tmph5rz1_zc.d(14): Error: found `string`
    when expecting `)`\n/tmp/tmph5rz1_zc.d(14): Error: found `)` when expecting `;`
    following statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmph5rz1_zc.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\twhile (string[len] != '\\0')\n\t\tlen++;\n\t\n\t\
    return len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.RangeError@/tmp/tmppwd0ihl1.d(14): Range violation\n----------------\n??:?
    _d_arrayboundsp [0x427e0e]\n??:? long tmppwd0ihl1.strlen(immutable(char)[]) [0x427a26]\n??:?
    void tmppwd0ihl1.__unittest_L19_C1() [0x427a5c]\n??:? void tmppwd0ihl1.__modtest()
    [0x427adc]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baf7]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a98a]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb1d]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffcc]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42faa9]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a961]\n??:? runModuleUnitTests [0x42b8cd]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428220]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281a7]\n??:? _d_run_main [0x428112]\n??:? main [0x427aef]\n??:?
    __libc_start_main [0x25035554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n Return length of given string\n    >>> strlen(\"\
    \")\n    0L\n    >>> strlen(\"abc\")\n    3L\n    \n*/\nlong strlen(string string)\
    \ \n{\n\tlong len = 0;\n\t\n\tfor (auto c : string) \n\t{\n\t\tlen++;\n\t}\n\t\
    \n\treturn len;\n}\nunittest\n{\n    alias candidate = strlen;\n\n    assert(candidate(\"\
    \") == 0L);\n    assert(candidate(\"x\") == 1L);\n    assert(candidate(\"asdasnakj\"\
    ) == 9L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9n7w8y_l.d(14): Error: no identifier for declarator `c`\n/tmp/tmp9n7w8y_l.d(14):
    Error: expression expected, not `:`\n/tmp/tmp9n7w8y_l.d(14): Error: found `string`
    when expecting `;` following `for` condition\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp9n7w8y_l.d", "-I/tmp"]\n'''
  stdout: b''

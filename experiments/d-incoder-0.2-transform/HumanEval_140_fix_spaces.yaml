name: HumanEval_140_fix_spaces
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string text, replace\
  \ all spaces in it with underscores, \n    and if a string has more than 2 consecutive\
  \ spaces, \n    then replace all consecutive spaces with - \n    \n    >>> fix_spaces(\"\
  \ Example\")\n    \"Example\"\n    >>> fix_spaces(\" Example 1\")\n    \"Example_1\"\
  \n    >>> fix_spaces(\" Example 2\")\n    \"_Example_2\"\n    >>> fix_spaces(\"\
  \ Example 3\")\n    \"_Example-3\"\n    \n*/\nstring fix_spaces(string text) \n"
tests: "unittest\n{\n    alias candidate = fix_spaces;\n\n    assert(candidate(\"\
  Example\") == \"Example\");\n    assert(candidate(\"Mudasir Hanif \") == \"Mudasir_Hanif_\"\
  );\n    assert(candidate(\"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\"\
  );\n    assert(candidate(\"Exa   mple\") == \"Exa-mple\");\n    assert(candidate(\"\
  \   Exa 1 2 2 mple\") == \"-Exa_1_2_2_mple\");\n}\nvoid main(){}"
completions: ["{\n    string result = text;\n    \n    for(int i = 0; i < result.length();\
    \ i++)\n    {\n        if(result[i] == ' ')\n        {\n            result[i]\
    \ = '_';\n        }\n    }\n    \n    for(int i = 0; i < result.length(); i++)\n\
    \    {\n        if(result[i] == ' ')\n        {\n            int j = i + 1;\n\
    \            while(j < result.length() && result[j] == ' ')\n            {\n \
    \               result[j] = '_';\n                j++;\n            }\n      \
    \  }\n    }\n    \n    return result;\n}", "{\n    string result = \"\";\n   \
    \ for(int i = 0; i < text.length(); i++) {\n        if(text[i] == ' ') {\n   \
    \         result += text[i];\n        }\n        else {\n            result +=\
    \ text[i] + \"_\";\n        }\n    }\n    \n    for(int i = 0; i < text.length();\
    \ i++) {\n        if(text[i] == ' ' && text[i+1] == ' ') {\n            result\
    \ += text[i];\n        }\n    }\n    \n    return result;\n}", "{\n    string\
    \ result = text;\n    for(int i = 0; i < result.length(); i++)\n    {\n      \
    \  if(result[i] == ' ')\n        {\n            result[i] = '_';\n        }\n\
    \    }\n    for(int i = 0; i < result.length(); i++)\n    {\n        if(result[i]\
    \ == ' ')\n        {\n            for(int j = i; j < result.length(); j++)\n \
    \           {\n                if(result[j] == ' ')\n                {\n     \
    \               result[j] = '_';\n                }\n            }\n        }\n\
    \    }\n    for(int i = 0; i < result.length(); i++)\n    {\n        if(result[i]\
    \ == '_')\n        {\n            for(int j = i; j < result.length(); j++)\n \
    \           {\n                if(result[j] == ' ')\n                {\n     \
    \               result[j] = '_';\n                }\n            }\n        }\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < text.length(); i++)\n    {\n        if(text[i] == ' ')\n        {\n \
    \           result += text[i];\n        }\n        else\n        {\n         \
    \   result += text[i] + '_';\n        }\n    }\n    \n    for(int i = 0; i < text.length();\
    \ i++)\n    {\n        if(text[i] == ' ')\n        {\n            result += text[i];\n\
    \        }\n    }\n    \n    return result;\n}", "{\n    string result = \"\"\
    ;\n    \n    for(int i = 0; i < text.size(); ++i)\n    {\n        if(text[i] ==\
    \ ' ')\n        {\n            result += text[i];\n        }\n        else\n \
    \       {\n            result += text[i] + \"_\";\n        }\n    }\n    \n  \
    \  for(int i = 0; i < text.size(); ++i)\n    {\n        if(text[i] == ' ')\n \
    \       {\n            result += text[i];\n        }\n    }\n    \n    return\
    \ result;\n}", "{\n    string result = \"\";\n    \n    for(int i = 0; i < text.size();\
    \ ++i)\n    {\n        if(text[i] == ' ')\n        {\n            result += text[i];\n\
    \        }\n        else\n        {\n            result += text[i] + \"_\";\n\
    \        }\n    }\n    \n    if(result.size() > 2)\n    {\n        for(int i =\
    \ 0; i < result.size() - 2; ++i)\n        {\n            result[i] = result[i]\
    \ + \"-\";\n        }\n    }\n    \n    return result;\n}", "{\n    string result\
    \ = \"\";\n    \n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i]\
    \ == ' ')\n        {\n            result += text[i];\n        }\n        else\n\
    \        {\n            result += text[i] + \"_\";\n        }\n    }\n    \n \
    \   for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] == ' ')\n\
    \        {\n            result += text[i];\n        }\n    }\n    \n    return\
    \ result;\n}", "{\n    string result = text;\n    \n    for(int i = 0; i < text.length();\
    \ i++)\n    {\n        if(text[i] == ' ')\n        {\n            result += text[i];\n\
    \        }\n        else\n        {\n            result += text[i] + '-';\n  \
    \      }\n    }\n    \n    return result;\n}", "{\n    string result = text;\n\
    \    \n    for(int i = 0; i < result.length(); i++)\n    {\n        if(result[i]\
    \ == ' ')\n        {\n            result[i] = '_';\n        }\n        else if(result[i]\
    \ == ' ')\n        {\n            result[i] = '-';\n        }\n    }\n    \n \
    \   return result;\n}", "{\n    string result = \"\";\n    \n    for(int i = 0;\
    \ i < text.size(); ++i)\n    {\n        if(text[i] == ' ')\n        {\n      \
    \      result += text[i];\n        }\n        else\n        {\n            result\
    \ += text[i] + \"_\";\n        }\n    }\n    \n    if(result.size() > 2)\n   \
    \ {\n        for(int i = 0; i < result.size() - 2; ++i)\n        {\n         \
    \   result[i] = result[i] + \"-\";\n        }\n    }\n    \n    return result;\n\
    }", "{\n    string result = text;\n    size_t len = result.size();\n    size_t\
    \ i = 0;\n    size_t j = 0;\n    size_t k = 0;\n    \n    while (i < len) {\n\
    \        if (result[i] == ' ') {\n            j = i;\n            while (j < len\
    \ && result[j] == ' ') {\n                j++;\n            }\n            k =\
    \ j;\n            while (k < len && result[k] == ' ') {\n                k++;\n\
    \            }\n            if (k > j) {\n                char c = result[k];\n\
    \                result[k] = '-';\n                result[j+1] = c;\n        \
    \    }\n            i = j+1;\n        }\n        i++;\n    }\n    return result;\n\
    }", "{\n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i]\
    \ == ' ')\n        {\n            text += \"_\";\n        }\n        else if(text[i]\
    \ == ' ')\n        {\n            text += \"-\";\n        }\n    }\n    return\
    \ text;\n}", "{\n    string result = \"\";\n    for(int i = 0; i < text.size();\
    \ ++i)\n    {\n        if(text[i] == ' ')\n        {\n            result += text[i];\n\
    \        }\n        else\n        {\n            result += text[i] + \"_\";\n\
    \        }\n    }\n    \n    if(result.size() > 2)\n    {\n        for(int i =\
    \ 0; i < result.size() - 2; ++i)\n        {\n            result[i] = result[i]\
    \ + \"-\";\n        }\n    }\n    \n    return result;\n}", "{\n    size_t len\
    \ = text.length();\n    size_t i = 0;\n    size_t j = 0;\n    string result =\
    \ \"\";\n    \n    while (i < len) {\n        if (text[i] == ' ') {\n        \
    \    result += text[i];\n            i++;\n        } else {\n            result\
    \ += text[i];\n            while (i < len && text[i] == ' ') {\n             \
    \   result += text[i];\n                i++;\n            }\n        }\n    }\n\
    \    \n    while (j < len) {\n        if (text[j] == ' ') {\n            result\
    \ += text[j];\n            j++;\n        } else {\n            result += text[j];\n\
    \            while (j < len && text[j] == ' ') {\n                result += text[j];\n\
    \                j++;\n            }\n        }\n    }\n    \n    return result;\n\
    }", "{\n    string result = text;\n    \n    for(int i = 0; i < result.length();\
    \ i++)\n    {\n        if(result[i] == ' ')\n        {\n            result[i]\
    \ = '_';\n        }\n    }\n    \n    for(int i = 0; i < result.length(); i++)\n\
    \    {\n        if(result[i] == ' ')\n        {\n            int j = i + 1;\n\
    \            while(j < result.length() && result[j] == ' ')\n            {\n \
    \               result[j] = '_';\n                j++;\n            }\n      \
    \  }\n    }\n    \n    return result;\n}", "{\n    string result = \"\";\n   \
    \ for(int i = 0; i < text.length; ++i)\n    {\n        if(text[i] == ' ')\n  \
    \      {\n            result += text[i];\n        }\n        else\n        {\n\
    \            result += text[i] + \"_\";\n        }\n    }\n    \n    if(result.length()\
    \ > 2)\n    {\n        for(int i = 0; i < result.length() - 2; ++i)\n        {\n\
    \            result[i] = result[i] + \"-\";\n        }\n    }\n    \n    return\
    \ result;\n}", "{\n    string result = text;\n    for(int i = 0; i < result.length();\
    \ i++)\n    {\n        if(result[i] == ' ')\n        {\n            result[i]\
    \ = '_';\n        }\n        if(result.length() > 2 && result[i] == ' ' && result[i+1]\
    \ == ' ')\n        {\n            result[i] = '-';\n        }\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=c++,string,replace,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    \n    for(int i = 0; i < text.length(); i++)\n\
    \    {\n        if(text[i] == ' ')\n        {\n            result += text[i];\n\
    \        }\n        else\n        {\n            result += text[i] + \"_\";\n\
    \        }\n    }\n    \n    for(int i = 0; i < text.length(); i++)\n    {\n \
    \       if(text[i] == ' ')\n        {\n            result += text[i];\n      \
    \  }\n    }\n    \n    return result;\n}", "{\n    string result = \"\";\n   \
    \ \n    for(int i = 0; i < text.length(); i++)\n    {\n        if(text[i] == '\
    \ ')\n        {\n            result += text[i];\n        }\n        else\n   \
    \     {\n            result += text[i] + \"_\";\n        }\n    }\n    \n    if(result.length()\
    \ > 2)\n    {\n        for(int i = 0; i < result.length(); i++)\n        {\n \
    \           if(result[i] == ' ')\n            {\n                result += \"\
    -\";\n            }\n        }\n    }\n    \n    return result;\n}", "{\n    string\
    \ result = text;\n    \n    for(int i = 0; i < result.length(); ++i)\n    {\n\
    \        if(result[i] == ' ')\n        {\n            result[i] = '_';\n     \
    \   }\n    }\n    \n    for(int i = 0; i < result.length(); ++i)\n    {\n    \
    \    if(result[i] == ' ')\n        {\n            int j = i + 1;\n           \
    \ while(j < result.length() && result[j] == ' ')\n            {\n            \
    \    result[j] = '_';\n                ++j;\n            }\n        }\n    }\n\
    \    \n    return result;\n}"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

name: HumanEval_161_solve
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n \
  \   if s[i] is a letter, reverse its case from lower to upper or vise versa, \n\
  \    otherwise keep it as it is.\n    If the string contains no letters, reverse\
  \ the string.\n    The function should return the resulted string.\n    Examples\n\
  \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>>\
  \ solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n"
tests: "unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
  ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
  ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
  #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
  \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\")\
  \ == \"#CCC\");\n}\nvoid main(){}"
completions: ["{\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n\
    \        {\n            s[i] = toupper(s[i]);\n        }\n        else\n     \
    \   {\n            s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work if the string contains\
    \ numbers. Try it with `solve(\"123\")`.\n<|/ c |>\n<| c |>\nYes, I forgot about\
    \ that. Thanks for pointing it out. I've updated the answer.\n<|/ c |>\n<| a tags=c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isalpha(s[i]))\n        {\n            string temp =\
    \ toupper(s[i]);\n            result += temp;\n        }\n        else\n     \
    \   {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=c++,string |>\n<| a tags=c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++){\n       \
    \ if(isLetter(s[i])){\n            result += toUpper(s[i]);\n        }\n     \
    \   else{\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    \n    return result;\n}\n</code>\n\
    <|/ a tags=c++,string |>\n<| c |>\nThis does not work if `s` is `\"#a@C\"`.\n\
    <|/ c |>\n<| c |>\nYes, you are right. I missed that case. Thanks for pointing\
    \ out.\n<|/ c |>\n<| a tags=c++,string |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <algorithm>", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=string,c++,algorithm |>\n<| c |>\nThis doesn't work if the string contains\
    \ numbers. Try \"a123b\".\n<|/ c |>\n<| c |>\nI didn't downvote, but I suspect\
    \ it's because you didn't explain what your code does. You might want to add some\
    \ comments to explain what it does.\n<|/ c |>\n<| c |>\nI added comments to explain\
    \ what it does.\n<|/ c |>\n<| c |>\nI added comments to explain what it does.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\n#include <iostream>\n#include <string>\n#include\
    \ <algorithm>\nusing namespace std;", "{\n    map<char,int> m;\n    for(int i=0;i<s.length();i++)\n\
    \    {\n        if(isalpha(s[i]))\n        {\n            m[toupper(s[i])]++;\n\
    \        }\n        else\n        {\n            m[tolower(s[i])]++;\n       \
    \ }\n    }\n    string ans=\"\";\n    for(int i=0;i<s.length();i++)\n    {\n \
    \       if(isalpha(s[i]))\n        {\n            int count=m[toupper(s[i])];\n\
    \            ans=ans+s[i];\n            for(int j=0;j<count;j++)\n           \
    \ {\n                ans=ans+s[i];\n            }\n        }\n        else\n \
    \       {\n            int count=m[tolower(s[i])];\n            ans=ans+s[i];\n\
    \            for(int j=0;j<count;j++)\n            {\n                ans=ans+s[i];\n\
    \            }\n        }\n    }\n    return ans;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=c++,string |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <algorithm>\n#include <cctype>", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=c++,string |>\n<| c |>\nThanks for your answer. Can you please explain\
    \ me why you used `toUpper` instead of `toLower`?\n<|/ c |>\n<| c |>\nBecause\
    \ `toUpper` converts all the letters to upper case. `toLower` converts all the\
    \ letters to lower case. `toUpper` converts all the letters to upper case and\
    \ `toLower` converts all the letters to lower case. `toUpper` converts all the\
    \ letters to upper case and `toLower` converts all the letters to lower case.\
    \ `toUpper` converts all the letters to upper case and `toLower` converts all\
    \ the letters to lower case. `toUpper` converts all the letters to upper case\
    \ and `toLower` converts all the letters to lower case. `toUpper` converts all\
    \ the letters to upper case and `toLower` converts all the letters to lower case.\
    \ `toUpper` converts all the letters to upper case and `toLower` converts all\
    \ the letters to lower case. `toUpper` converts all the letters to upper case\
    \ and `toLower` converts all the letters to lower case. `toUpper` converts all\
    \ the letters to upper case and `toLower` converts all the letters to lower case.\
    \ `toUpper` converts all the letters to upper case and `toLower` converts all\
    \ the letters to lower case. `toUpper` converts all the letters to upper case\
    \ and `toLower` converts all the letters to lower case. `toUpper` converts all\
    \ the letters to upper case and `toLower` converts all the letters to lower case.\
    \ `toUpper` converts all the letters to upper case and `toLower` converts all\
    \ the letters to lower case. `toUpper` converts all the letters to upper case\
    \ and `toLower` converts all the letters to lower case. `toUpper` converts all\
    \ the letters to upper case and `toLower` converts all the letters to lower case.\
    \ `toUpper` converts all the letters to upper case and `toLower` converts all\
    \ the letters to lower case. `toUpper` converts all the letters to upper case\
    \ and `toLower` converts all the letters to lower case. `", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,c++ |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++){\n        if(isLetter(s[i])){\n\
    \            result += toUpper(s[i]);\n        }else{\n            result += s[i];\n\
    \        }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n\
    <code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n  \
    \  string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n   \
    \     if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n  \
    \      }\n        else\n        {\n            result += s[i];\n        }\n  \
    \  }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <cctype>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       char c = s[i];\n        if(isalpha(c))\n        {\n            char upper\
    \ = toupper(c);\n            char lower = tolower(c);\n            if(isupper(c))\n\
    \            {\n                result += lower;\n            }\n            else\n\
    \            {\n                result += upper;\n            }\n        }\n \
    \       else\n        {\n            result += c;\n        }\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    int len = s.length();\n    char\
    \ c = s[0];\n    string result = \"\";\n    for(int i = 1; i < len; i++)\n   \
    \ {\n        if(isalpha(s[i]))\n        {\n            char temp = s[i];\n   \
    \         s[i] = c;\n            c = temp;\n        }\n    }\n    \n    if(isalpha(c))\n\
    \    {\n        string temp = s;\n        for(int i = 0; i < len; i++)\n     \
    \   {\n            s[i] = temp[len - i - 1];\n        }\n    }\n    \n    for(int\
    \ i = 0; i < len; i++)\n    {\n        result += s[i];\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nI believe this solution\
    \ has some issues. For example, if I input \"#a@C\", the output should be \"#A@c\"\
    , but your solution returns \"#A@C\".\n<|/ c |>\n<| c |>\nI believe this solution\
    \ has some issues. For example, if I input \"#a@C\", the output should be \"#A@c\"\
    , but your solution returns \"#A@C\".\n<|/ c |>\n<| c |>\nI believe this solution\
    \ has some issues. For example, if I input \"#a@C\", the output should be \"#A@c\"\
    , but your solution returns \"#A@C\".\n<|/ c |>\n<| c |>\nI believe this solution\
    \ has some issues. For example, if I input \"#a@C\", the output should be \"#A@c\"\
    , but your solution returns \"#A@C\".\n<|/ c |>\n<| c |>\nI believe this solution\
    \ has some issues. For example, if I input \"#a@C\", the output should be \"#A@c\"\
    , but your solution returns \"#A@C\".\n<|/ c |>\n<| a dscore=1 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <cctype>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++){\n       \
    \ if(isLetter(s[i])){\n            result += toUpper(s[i]);\n        }\n     \
    \   else{\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,arrays |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        char c = s[i];\n\
    \        if(c == 'a' || c == 'A')\n        {\n            result += toupper(s[i]);\n\
    \        }\n        else if(c == 'b' || c == 'B')\n        {\n            result\
    \ += tolower(s[i]);\n        }\n        else\n        {\n            result +=\
    \ s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\nimport java.util.*;\npublic class ReverseString\n{\n    public static\
    \ void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n\
    \        System.out.println(\"Enter the string\");\n        String str=sc.nextLine();\n\
    \        System.out.println(\"Reverse of the string is \"+reverse(str));\n   \
    \ }\n    public static String reverse(String str)\n    {\n        char[] arr=str.toCharArray();\n\
    \        for(int i=arr.length-1;i>=0;i--)\n        {\n            char c=arr[i];\n\
    \            arr[i]=arr[i-1];\n            arr[i-1]=c;\n        }\n        return\
    \ new String(arr);\n    }\n}\n</code>\n<|/ a tags=string,java |>\n<| a dscore=0\
    \ |>\n<code>\nimport java.util.*;\npublic class ReverseString\n{\n    public static\
    \ void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n\
    \        System.out.println(\"Enter the string\");\n        String str=sc.nextLine();\n\
    \        System.out.println(\"Reverse of the string is \"+reverse(str));\n   \
    \ }\n    public static String reverse(String str)\n    {\n        char[] arr=str.toCharArray();\n\
    \        for(int i=arr.length-1;i>=0;i--)\n        {\n            char c=arr[i];\n\
    \            arr[i]=arr[i-1];\n            arr[i-1]=c;\n        }\n        return\
    \ new String(arr);\n    }\n}\n</code>\n<|/ a tags=string,java |>\n<| c |>\nPlease\
    \ add some explanation to your answer. Code-only answers are discouraged on SO.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\nimport java.util.*;\npublic class ReverseString\n\
    {\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n\
    \        System.out.println(\"Enter the string\");\n        String str=sc.nextLine();\n\
    \        System.out.println(\"Reverse of the string is \"+reverse(str));\n   \
    \ }\n    public static String reverse(String str)\n    {\n        char[] arr=str.toCharArray();\n\
    \        for(int i=arr.length-1;i>=0;i--)\n        {\n            char c=arr[i];\n\
    \            arr[i]=arr[i-1];\n            arr[i-1]=c;\n        }\n        return\
    \ new String(arr);\n    }", "{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n       \
    \     result += toUpper(s[i]);\n        }\n        else\n        {\n         \
    \   result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <algorithm>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=c++,string |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThank you so much! I appreciate your help.\n<|/ c |>\n<| a\
    \ tags=string,c++,arrays |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <algorithm>"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

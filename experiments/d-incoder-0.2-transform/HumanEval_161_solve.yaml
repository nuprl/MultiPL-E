name: HumanEval_161_solve
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\nYou are given a string s.\n \
  \   if s[i] is a letter, reverse its case from lower to upper or vise versa, \n\
  \    otherwise keep it as it is.\n    If the string contains no letters, reverse\
  \ the string.\n    The function should return the resulted string.\n    Examples\n\
  \    >>> solve(\"1234\")\n    \"4321\"\n    >>> solve(\"ab\")\n    \"AB\"\n    >>>\
  \ solve(\"#a@C\")\n    \"#A@c\"\n    \n*/\nstring solve(string s) \n"
tests: "unittest\n{\n    alias candidate = solve;\n\n    assert(candidate(\"AsDf\"\
  ) == \"aSdF\");\n    assert(candidate(\"1234\") == \"4321\");\n    assert(candidate(\"\
  ab\") == \"AB\");\n    assert(candidate(\"#a@C\") == \"#A@c\");\n    assert(candidate(\"\
  #AsdfW^45\") == \"#aSDFw^45\");\n    assert(candidate(\"#6@2\") == \"2@6#\");\n\
  \    assert(candidate(\"#$a^D\") == \"#$A^d\");\n    assert(candidate(\"#ccc\")\
  \ == \"#CCC\");\n}\nvoid main(){}"
completions: ["{\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n\
    \        {\n            s[i] = toupper(s[i]);\n        }\n        else\n     \
    \   {\n            s[i] = tolower(s[i]);\n        }\n    }\n    return s;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work if the string contains\
    \ numbers. Try it with `solve(\"123\")`.\n<|/ c |>\n<| c |>\nYes, I forgot about\
    \ that. Thanks for pointing it out. I've updated the answer.\n<|/ c |>\n<| a tags=c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isalpha(s[i]))\n        {\n            string temp =\
    \ toupper(s[i]);\n            result += temp;\n        }\n        else\n     \
    \   {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=c++,string |>\n<| a tags=c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++){\n       \
    \ if(isLetter(s[i])){\n            result += toUpper(s[i]);\n        }\n     \
    \   else{\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    \n    return result;\n}\n</code>\n\
    <|/ a tags=c++,string |>\n<| c |>\nThis does not work if `s` is `\"#a@C\"`.\n\
    <|/ c |>\n<| c |>\nYes, you are right. I missed that case. Thanks for pointing\
    \ out.\n<|/ c |>\n<| a tags=c++,string |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <algorithm>", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=string,c++,algorithm |>\n<| c |>\nThis doesn't work if the string contains\
    \ numbers. Try \"a123b\".\n<|/ c |>\n<| c |>\nI didn't downvote, but I suspect\
    \ it's because you didn't explain what your code does. You might want to add some\
    \ comments to explain what it does.\n<|/ c |>\n<| c |>\nI added comments to explain\
    \ what it does.\n<|/ c |>\n<| c |>\nI added comments to explain what it does.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\n#include <iostream>\n#include <string>\n#include\
    \ <algorithm>\nusing namespace std;", "{\n    map<char,int> m;\n    for(int i=0;i<s.length();i++)\n\
    \    {\n        if(isalpha(s[i]))\n        {\n            m[toupper(s[i])]++;\n\
    \        }\n        else\n        {\n            m[tolower(s[i])]++;\n       \
    \ }\n    }\n    string ans=\"\";\n    for(int i=0;i<s.length();i++)\n    {\n \
    \       if(isalpha(s[i]))\n        {\n            int count=m[toupper(s[i])];\n\
    \            ans=ans+s[i];\n            for(int j=0;j<count;j++)\n           \
    \ {\n                ans=ans+s[i];\n            }\n        }\n        else\n \
    \       {\n            int count=m[tolower(s[i])];\n            ans=ans+s[i];\n\
    \            for(int j=0;j<count;j++)\n            {\n                ans=ans+s[i];\n\
    \            }\n        }\n    }\n    return ans;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=c++,string |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <algorithm>\n#include <cctype>", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=c++,string |>\n<| c |>\nThanks for your answer. Can you please explain\
    \ me why you used `toUpper` instead of `toLower`?\n<|/ c |>\n<| c |>\nBecause\
    \ `toUpper` converts all the letters to upper case. `toLower` converts all the\
    \ letters to lower case. `toUpper` converts all the letters to upper case and\
    \ `toLower` converts all the letters to lower case. `toUpper` converts all the\
    \ letters to upper case and `toLower` converts all the letters to lower case.\
    \ `toUpper` converts all the letters to upper case and `toLower` converts all\
    \ the letters to lower case. `toUpper` converts all the letters to upper case\
    \ and `toLower` converts all the letters to lower case. `toUpper` converts all\
    \ the letters to upper case and `toLower` converts all the letters to lower case.\
    \ `toUpper` converts all the letters to upper case and `toLower` converts all\
    \ the letters to lower case. `toUpper` converts all the letters to upper case\
    \ and `toLower` converts all the letters to lower case. `toUpper` converts all\
    \ the letters to upper case and `toLower` converts all the letters to lower case.\
    \ `toUpper` converts all the letters to upper case and `toLower` converts all\
    \ the letters to lower case. `toUpper` converts all the letters to upper case\
    \ and `toLower` converts all the letters to lower case. `toUpper` converts all\
    \ the letters to upper case and `toLower` converts all the letters to lower case.\
    \ `toUpper` converts all the letters to upper case and `toLower` converts all\
    \ the letters to lower case. `toUpper` converts all the letters to upper case\
    \ and `toLower` converts all the letters to lower case. `toUpper` converts all\
    \ the letters to upper case and `toLower` converts all the letters to lower case.\
    \ `toUpper` converts all the letters to upper case and `toLower` converts all\
    \ the letters to lower case. `toUpper` converts all the letters to upper case\
    \ and `toLower` converts all the letters to lower case. `", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,c++ |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++){\n        if(isLetter(s[i])){\n\
    \            result += toUpper(s[i]);\n        }else{\n            result += s[i];\n\
    \        }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n\
    <code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n  \
    \  string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n   \
    \     if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n  \
    \      }\n        else\n        {\n            result += s[i];\n        }\n  \
    \  }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <cctype>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       char c = s[i];\n        if(isalpha(c))\n        {\n            char upper\
    \ = toupper(c);\n            char lower = tolower(c);\n            if(isupper(c))\n\
    \            {\n                result += lower;\n            }\n            else\n\
    \            {\n                result += upper;\n            }\n        }\n \
    \       else\n        {\n            result += c;\n        }\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    int len = s.length();\n    char\
    \ c = s[0];\n    string result = \"\";\n    for(int i = 1; i < len; i++)\n   \
    \ {\n        if(isalpha(s[i]))\n        {\n            char temp = s[i];\n   \
    \         s[i] = c;\n            c = temp;\n        }\n    }\n    \n    if(isalpha(c))\n\
    \    {\n        string temp = s;\n        for(int i = 0; i < len; i++)\n     \
    \   {\n            s[i] = temp[len - i - 1];\n        }\n    }\n    \n    for(int\
    \ i = 0; i < len; i++)\n    {\n        result += s[i];\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nI believe this solution\
    \ has some issues. For example, if I input \"#a@C\", the output should be \"#A@c\"\
    , but your solution returns \"#A@C\".\n<|/ c |>\n<| c |>\nI believe this solution\
    \ has some issues. For example, if I input \"#a@C\", the output should be \"#A@c\"\
    , but your solution returns \"#A@C\".\n<|/ c |>\n<| c |>\nI believe this solution\
    \ has some issues. For example, if I input \"#a@C\", the output should be \"#A@c\"\
    , but your solution returns \"#A@C\".\n<|/ c |>\n<| c |>\nI believe this solution\
    \ has some issues. For example, if I input \"#a@C\", the output should be \"#A@c\"\
    , but your solution returns \"#A@C\".\n<|/ c |>\n<| c |>\nI believe this solution\
    \ has some issues. For example, if I input \"#a@C\", the output should be \"#A@c\"\
    , but your solution returns \"#A@C\".\n<|/ c |>\n<| a dscore=1 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <cctype>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++){\n       \
    \ if(isLetter(s[i])){\n            result += toUpper(s[i]);\n        }\n     \
    \   else{\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,arrays |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        char c = s[i];\n\
    \        if(c == 'a' || c == 'A')\n        {\n            result += toupper(s[i]);\n\
    \        }\n        else if(c == 'b' || c == 'B')\n        {\n            result\
    \ += tolower(s[i]);\n        }\n        else\n        {\n            result +=\
    \ s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\nimport java.util.*;\npublic class ReverseString\n{\n    public static\
    \ void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n\
    \        System.out.println(\"Enter the string\");\n        String str=sc.nextLine();\n\
    \        System.out.println(\"Reverse of the string is \"+reverse(str));\n   \
    \ }\n    public static String reverse(String str)\n    {\n        char[] arr=str.toCharArray();\n\
    \        for(int i=arr.length-1;i>=0;i--)\n        {\n            char c=arr[i];\n\
    \            arr[i]=arr[i-1];\n            arr[i-1]=c;\n        }\n        return\
    \ new String(arr);\n    }\n}\n</code>\n<|/ a tags=string,java |>\n<| a dscore=0\
    \ |>\n<code>\nimport java.util.*;\npublic class ReverseString\n{\n    public static\
    \ void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n\
    \        System.out.println(\"Enter the string\");\n        String str=sc.nextLine();\n\
    \        System.out.println(\"Reverse of the string is \"+reverse(str));\n   \
    \ }\n    public static String reverse(String str)\n    {\n        char[] arr=str.toCharArray();\n\
    \        for(int i=arr.length-1;i>=0;i--)\n        {\n            char c=arr[i];\n\
    \            arr[i]=arr[i-1];\n            arr[i-1]=c;\n        }\n        return\
    \ new String(arr);\n    }\n}\n</code>\n<|/ a tags=string,java |>\n<| c |>\nPlease\
    \ add some explanation to your answer. Code-only answers are discouraged on SO.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\nimport java.util.*;\npublic class ReverseString\n\
    {\n    public static void main(String args[])\n    {\n        Scanner sc=new Scanner(System.in);\n\
    \        System.out.println(\"Enter the string\");\n        String str=sc.nextLine();\n\
    \        System.out.println(\"Reverse of the string is \"+reverse(str));\n   \
    \ }\n    public static String reverse(String str)\n    {\n        char[] arr=str.toCharArray();\n\
    \        for(int i=arr.length-1;i>=0;i--)\n        {\n            char c=arr[i];\n\
    \            arr[i]=arr[i-1];\n            arr[i-1]=c;\n        }\n        return\
    \ new String(arr);\n    }", "{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n       \
    \     result += toUpper(s[i]);\n        }\n        else\n        {\n         \
    \   result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <algorithm>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=c++,string |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThank you so much! I appreciate your help.\n<|/ c |>\n<| a\
    \ tags=string,c++,arrays |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <algorithm>", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            string temp\
    \ = s[i];\n            s[i] = toUpper(s[i]);\n            s[i] = toLower(s[i]);\n\
    \            s[i] = temp;\n        }\n    }\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(!isLetter(s[i]))\n        {\n            string temp\
    \ = s[i];\n            s[i] = s[i];\n            s[i] = temp;\n        }\n   \
    \ }\n    return s;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you so much!\
    \ I appreciate your help!\n<|/ c |>\n<| c |>\nYou're welcome. Feel free to upvote\
    \ and accept the answer if it helped you.\n<|/ c |>\n<| c |>\nI did upvote it\
    \ but my reputation is too low for it to show publicly\n<|/ c |>\n<| c |>\nOh\
    \ okay. Glad I could help. :)\n<|/ c |>\n<| a tags=c++,string |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    int len = s.length();\n    char\
    \ c;\n    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n   \
    \     c = s[i];\n        if(c == 'a' || c == 'A')\n        {\n            result\
    \ += \"A\";\n        }\n        else if(c == 'b' || c == 'B')\n        {\n   \
    \         result += \"b\";\n        }\n        else if(c == 'c' || c == 'C')\n\
    \        {\n            result += \"C\";\n        }\n        else if(c == 'd'\
    \ || c == 'D')\n        {\n            result += \"D\";\n        }\n        else\
    \ if(c == 'e' || c == 'E')\n        {\n            result += \"E\";\n        }\n\
    \        else if(c == 'f' || c == 'F')\n        {\n            result += \"F\"\
    ;\n        }\n        else if(c == 'g' || c == 'G')\n        {\n            result\
    \ += \"G\";\n        }\n        else if(c == 'h' || c == 'H')\n        {\n   \
    \         result += \"H\";\n        }\n        else if(c == 'i' || c == 'I')\n\
    \        {\n            result += \"I\";\n        }\n        else if(c == 'j'\
    \ || c == 'J')\n        {\n            result += \"J\";\n        }\n        else\
    \ if(c == 'k' || c == 'K')\n        {\n            result += \"K\";\n        }\n\
    \        else if(c == 'l' || c == 'L')\n        {\n            result += \"L\"\
    ;\n        }\n        else if(c == 'm' || c == 'M')\n        {\n            result\
    \ += \"M\";\n        }\n        else if(c == 'n' || c == 'N')\n        {\n   \
    \         result += \"N\";\n        }\n        else if(c == 'o' || c == 'O')\n\
    \        {\n            result += \"O\";\n        }\n        else if(c == 'p'\
    \ || c == 'P')\n        {\n            result += \"P\";\n        }\n        else\
    \ if(c == 'q' || c == 'Q')\n        {\n            result += \"Q\";\n        }\n\
    \        else if(c == 'r' || c == 'R')\n        {\n            result += \"R\"\
    ;\n        }\n        else if(c == 's' || c == 'S')\n        {\n            result\
    \ += \"S\";\n        }\n        else if(c == 't' || c == 'T')\n        {\n   \
    \         result += \"T\";\n        }\n        else if(c == 'u' || c == 'U')\n\
    \        {\n            result += \"U\";\n        }\n        else if(c == 'v'\
    \ || c == 'V')\n        {\n            result += \"V\";\n        }\n        else\
    \ if(c == 'w' || c == 'W')\n        {\n            result += \"W\";\n        }\n\
    \        else if(c", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work.\
    \ Try `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nIt does work, just tested it out. Try\
    \ it yourself.\n<|/ c |>\n<| c |>\nI tested it and it doesn't work. Try it yourself.\n\
    <|/ c |>\n<| c |>\nI tested it and it does work. Try it yourself.\n<|/ c |>\n\
    <| c |>\nI tested it and it does work. Try it yourself.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nThis doesn't work if the string contains only letters. Try `solve(\"a\"\
    )`.\n<|/ c |>\n<| c |>\nYes, you are right. I missed that case. Thanks for pointing\
    \ out. Updated the answer.\n<|/ c |>\n<| c |>\n`isLetter(s[i])` can be replaced\
    \ with `s[i] == 'a'`\n<|/ c |>\n<| c |>\nYes, you are right. Updated the answer.\n\
    <|/ c |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=c++,string |>\n<| c |>\nThanks for your answer. Your code works but\
    \ it's too complicated for me. I'm a beginner at C++ and I wanted to know if there\
    \ is a simpler way to solve this problem.\n<|/ c |>\n<| c |>\nI added a simpler\
    \ solution to my answer. Hope it helps.\n<|/ c |>\n<| a tags=c++,string |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        char c = s[i];\n        if(c == 'a' || c == 'A')\n        {\n\
    \            result += 'A';\n        }\n        else if(c == 'b' || c == 'B')\n\
    \        {\n            result += 'B';\n        }\n        else if(c == 'c' ||\
    \ c == 'C')\n        {\n            result += 'C';\n        }\n        else if(c\
    \ == 'd' || c == 'D')\n        {\n            result += 'D';\n        }\n    \
    \    else if(c == 'e' || c == 'E')\n        {\n            result += 'E';\n  \
    \      }\n        else if(c == 'f' || c == 'F')\n        {\n            result\
    \ += 'F';\n        }\n        else if(c == 'g' || c == 'G')\n        {\n     \
    \       result += 'G';\n        }\n        else if(c == 'h' || c == 'H')\n   \
    \     {\n            result += 'H';\n        }\n        else if(c == 'i' || c\
    \ == 'I')\n        {\n            result += 'I';\n        }\n        else if(c\
    \ == 'j' || c == 'J')\n        {\n            result += 'J';\n        }\n    \
    \    else if(c == 'k' || c == 'K')\n        {\n            result += 'K';\n  \
    \      }\n        else if(c == 'l' || c == 'L')\n        {\n            result\
    \ += 'L';\n        }\n        else if(c == 'm' || c == 'M')\n        {\n     \
    \       result += 'M';\n        }\n        else if(c == 'n' || c == 'N')\n   \
    \     {\n            result += 'N';\n        }\n        else if(c == 'o' || c\
    \ == 'O')\n        {\n            result += 'O';\n        }\n        else if(c\
    \ == 'p' || c == 'P')\n        {\n            result += 'P';\n        }\n    \
    \    else if(c == 'q' || c == 'Q')\n        {\n            result += 'Q';\n  \
    \      }\n        else if(c == 'r' || c == 'R')\n        {\n            result\
    \ += 'R';\n        }\n        else if(c == 's' || c == 'S')\n        {\n     \
    \       result += 'S';\n        }\n        else if(c == 't' || c == 'T')\n   \
    \     {\n            result += 'T';\n        }\n        else if(c == 'u' || c\
    \ == 'U')\n        {\n            result += 'U';\n        }\n        else if(c\
    \ == 'v' || c == 'V')\n        {\n            result += 'V';\n        }\n    \
    \    else if(c == 'w' || c == 'W')\n        {\n            result += 'W';\n  \
    \      }\n        else if(c == 'x' || c == 'X", "{\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            string temp\
    \ = s[i];\n            s[i] = toUpper(s[i]);\n            s[i] = toLower(s[i]);\n\
    \            s[i] = temp;\n        }\n    }\n    return s;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nI guess you meant `result += toUpper(s[i]);` instead of `result += toUpper(s[i+1]);`\n\
    <|/ c |>\n<| c |>\nYes, I did mean `result += toUpper(s[i]);`\n<|/ c |>\n<| a\
    \ tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++){\n        if(isLetter(s[i])){\n            result += toUpper(s[i]);\n \
    \       }else{\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI appreciate your efforts, but I already\
    \ know this solution and I said that I don't want to use it.\n<|/ c |>\n<| c |>\n\
    I didn't say you didn't want to use it. I said you didn't want to use recursion.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem. Recursion is how you solve this problem.\
    \ Recursion is how you solve this problem", "{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n  \
    \      {\n            result += toUpper(s[i]);\n        }\n        else\n    \
    \    {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work if the string contains\
    \ more than one letter. For example, \"ab\" returns \"AaBb\"\n<|/ c |>\n<| c |>\n\
    It doesn't work if the string contains more than one letter. For example, \"ab\"\
    \ returns \"AaBb\"\n<|/ c |>\n<| c |>\nIt doesn't work if the string contains\
    \ more than one letter. For example, \"ab\" returns \"AaBb\"\n<|/ c |>\n<| c |>\n\
    It doesn't work if the string contains more than one letter. For example, \"ab\"\
    \ returns \"AaBb\"\n<|/ c |>\n<| a dscore=0 |>\n<code>\nstring solve(string s)\
    \ {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++) {\n  \
    \      if(isLetter(s[i])) {\n            result += toUpper(s[i]);\n        } else\
    \ {\n            result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=c++ |>\n<| c |>\nThis doesn't work if the string contains more than\
    \ one letter. For example, \"ab\" returns \"AaBb\"\n<|/ c |>\n<| a tags=c++ |>\n\
    <code>\nstring solve(string s) {\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++) {\n        if(isLetter(s[i])) {\n            result +=\
    \ toUpper(s[i]);\n        } else {\n            result += s[i];\n        }\n \
    \   }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ work if the string contains more than one letter. For example, \"ab\" returns\
    \ \"AaBb\"\n<|/ c |>\n<| a tags=c++ |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <algorithm>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nI believe this solution is wrong. Try it on \"\
    #a@C\".\n<|/ c |>\n<| c |>\nI believe it works fine for \"#a@C\" as well.\n<|/\
    \ c |>\n<| c |>\nIt doesn't work for \"#a@C\" because you only check one character\
    \ at a time. Try it on \"#a@C\".\n<|/ c |>\n<| c |>\nI believe it works fine for\
    \ \"#a@C\" as well.\n<|/ c |>\n<| c |>\nI believe it works fine for \"#a@C\" as\
    \ well.\n<|/ c |>\n<| a tags=string,c++ |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <algorithm>", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++){\n        if(isLetter(s[i])){\n            result\
    \ += toUpper(s[i]);\n        }\n        else{\n            result += s[i];\n \
    \       }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This does not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/26504156)\n\
    <|/ c |>\n<| c |>\nI added an explanation to the answer. Hope it helps.\n<|/ c\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or\
    \ request clarification from an author, leave a comment below their post. - [From\
    \ Review](/review/low-quality-posts/26504156)\n<|/ c |>\n<| c |>\nI added an explanation\
    \ to the answer. Hope it helps.\n<|/ c |>\n<| c |>\nThis does not provide an answer\
    \ to the question. To critique or request clarification from an author, leave\
    \ a comment below their post. - [From Review](/review/low-quality-posts/26504156)\n\
    <|/ c |>\n<| a tags=c++ |>\n<code>\n#include <iostream>\n#include <string>\n#include\
    \ <algorithm>\nusing namespace std;", "{\n    for(int i=0;i<s.length();i++)\n\
    \    {\n        if(isletter(s[i]))\n        {\n            string temp = s[i];\n\
    \            s[i] = toupper(s[i]);\n            s[i] = tolower(s[i]);\n      \
    \      s[i] = temp;\n        }\n    }\n    return s;\n}\n</code>\n<|/ a |>\n<|\
    \ c |>\nThis doesn't work if the string contains multiple letters.\n<|/ c |>\n\
    <| c |>\nIt does work, just tested it out. Try it out yourself.\n<|/ c |>\n<|\
    \ c |>\nIt doesn't work if the string contains multiple letters.\n<|/ c |>\n<|\
    \ c |>\nIt does work, just tested it out. Try it out yourself.\n<|/ c |>\n<| c\
    \ |>\nIt doesn't work if the string contains multiple letters.\n<|/ c |>\n<| a\
    \ dscore=1 |>\n<code>\nstring solve(string& s)\n{\n    string result;\n    for(int\
    \ i=0;i<s.length();i++)\n    {\n        if(isletter(s[i]))\n        {\n      \
    \      string temp = s[i];\n            s[i] = toupper(s[i]);\n            s[i]\
    \ = tolower(s[i]);\n            s[i] = temp;\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,string |>\n<| c |>\nThis doesn't work if the string\
    \ contains multiple letters.\n<|/ c |>\n<| c |>\nIt does work, just tested it\
    \ out. Try it out yourself.\n<|/ c |>\n<| c |>\nIt doesn't work if the string\
    \ contains multiple letters.\n<|/ c |>\n<| c |>\nIt does work, just tested it\
    \ out. Try it out yourself.\n<|/ c |>\n<| c |>\nIt doesn't work if the string\
    \ contains multiple letters.\n<|/ c |>\n<| a tags=c++,string |>\n<code>\nstring\
    \ solve(string& s)\n{\n    string result;\n    for(int i=0;i<s.length();i++)\n\
    \    {\n        if(isletter(s[i]))\n        {\n            string temp = s[i];\n\
    \            s[i] = toupper(s[i]);\n            s[i] = tolower(s[i]);\n      \
    \      s[i] = temp;\n        }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=1\
    \ |>\n<| c |>\nThis doesn't work if the string contains multiple letters.\n<|/\
    \ c |>\n<| c |>\nIt does work, just tested it out. Try it out yourself.\n<|/ c\
    \ |>\n<| c |>\nIt doesn't work if the string contains multiple letters.\n<|/ ",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ work. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nIt does work. Try it\
    \ with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `solve(\"\
    ab\")`.\n<|/ c |>\n<| c |>\nIt does work. Try it with `solve(\"ab\")`.\n<|/ c\
    \ |>\n<| c |>\nIt does work. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            string temp\
    \ = toUpper(s[i]);\n            result += temp;\n        }\n        else\n   \
    \     {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nThis doesn't work if the\
    \ string contains multiple letters, e.g. \"abbccc\".\n<|/ c |>\n<| c |>\nI agree,\
    \ my solution was meant to be a simple solution to the problem as stated in the\
    \ question. I'll edit my answer to include a more general solution.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}", "{\n    for(int i=0;i<s.length();i++)\n    {\n\
    \        if(isalpha(s[i]))\n        {\n            string temp=s[i];\n       \
    \     s[i]=toupper(s[i]);\n            s[i]=tolower(s[i]);\n            s[i]=temp;\n\
    \        }\n    }\n    string ans=\"\";\n    for(int i=0;i<s.length();i++)\n \
    \   {\n        if(isalpha(s[i]))\n        {\n            ans=ans+s[i];\n     \
    \   }\n        else\n        {\n            ans=ans+s[i];\n        }\n    }\n\
    \    return ans;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nThis doesn't work if the string contains any non-letters.\n<|/ c |>\n\
    <| c |>\nYes, I noticed that and fixed it now. Thanks for pointing that out.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if the string contains any non-letters.\n\
    <|/ c |>\n<| c |>\nYes, I noticed that and fixed it now. Thanks for pointing that\
    \ out.\n<|/ c |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            string temp = toUpper(s[i]);\n            result += temp;\n     \
    \   }\n        else\n        {\n            result += s[i];\n        }\n    }\n\
    \    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    int len = s.length();\n    char c;\n    string result\
    \ = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        c = s[i];\n      \
    \  if(c == 'a' || c == 'A')\n        {\n            result += 'A';\n        }\n\
    \        else if(c == 'b' || c == 'B')\n        {\n            result += 'B';\n\
    \        }\n        else if(c == 'c' || c == 'C')\n        {\n            result\
    \ += 'C';\n        }\n        else if(c == 'd' || c == 'D')\n        {\n     \
    \       result += 'D';\n        }\n        else if(c == 'e' || c == 'E')\n   \
    \     {\n            result += 'E';\n        }\n        else if(c == 'f' || c\
    \ == 'F')\n        {\n            result += 'F';\n        }\n        else if(c\
    \ == 'g' || c == 'G')\n        {\n            result += 'G';\n        }\n    \
    \    else if(c == 'h' || c == 'H')\n        {\n            result += 'H';\n  \
    \      }\n        else if(c == 'i' || c == 'I')\n        {\n            result\
    \ += 'I';\n        }\n        else if(c == 'j' || c == 'J')\n        {\n     \
    \       result += 'J';\n        }\n        else if(c == 'k' || c == 'K')\n   \
    \     {\n            result += 'K';\n        }\n        else if(c == 'l' || c\
    \ == 'L')\n        {\n            result += 'L';\n        }\n        else if(c\
    \ == 'm' || c == 'M')\n        {\n            result += 'M';\n        }\n    \
    \    else if(c == 'n' || c == 'N')\n        {\n            result += 'N';\n  \
    \      }\n        else if(c == 'o' || c == 'O')\n        {\n            result\
    \ += 'O';\n        }\n        else if(c == 'p' || c == 'P')\n        {\n     \
    \       result += 'P';\n        }\n        else if(c == 'q' || c == 'Q')\n   \
    \     {\n            result += 'Q';\n        }\n        else if(c == 'r' || c\
    \ == 'R')\n        {\n            result += 'R';\n        }\n        else if(c\
    \ == 's' || c == 'S')\n        {\n            result += 'S';\n        }\n    \
    \    else if(c == 't' || c == 'T')\n        {\n            result += 'T';\n  \
    \      }\n        else if(c == 'u' || c == 'U')\n        {\n            result\
    \ += 'U';\n        }\n        else if(c == 'v' || c == 'V')\n        {\n     \
    \       result += 'V';\n        }\n        else if(c == 'w' || c == 'W')\n   \
    \     {\n            result += 'W';\n        }\n        else if(c", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,string |>\n<| c |>\nThis doesn't work for `solve(\"\
    aBcD\")` which should return `\"ABCD\"`\n<|/ c |>\n<| c |>\nI didn't notice that\
    \ requirement. I've updated my answer to handle that case.\n<|/ c |>\n<| c |>\n\
    This doesn't work for `solve(\"aBcD\")` which should return `\"ABCD\"`\n<|/ c\
    \ |>\n<| c |>\nI've updated my answer to handle that case as well.\n<|/ c |>\n\
    <| a |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n\
    \        {\n            result += (toupper(s[i]) - 'A' + 1);\n        }\n    \
    \    else\n        {\n            result += s[i];\n        }\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| a dscore=0 |>\n\
    <code>\n#include <iostream>\n#include <string>\n#include <cctype>\nusing namespace\
    \ std;", "{\n    int len = s.length();\n    string result = \"\";\n    for(int\
    \ i = 0; i < len; i++)\n    {\n        if(s[i] == 'a')\n        {\n          \
    \  result += toupper(s[i]);\n        }\n        else if(s[i] == 'A')\n       \
    \ {\n            result += tolower(s[i]);\n        }\n        else\n        {\n\
    \            result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the question. To\
    \ critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/10407397)\n<|/ c |>\n<| c |>\n\
    I believe this does answer the question. He wants to reverse the case of a string\
    \ and I provided a solution that does exactly that. He also stated that he was\
    \ having trouble with his code. He also provided an example input and output.\
    \ He also stated that he was having trouble with his code. He also stated that\
    \ he was having trouble with his code. He also stated that he was having trouble\
    \ with his code. He also stated that he was having trouble with his code. He also\
    \ stated that he was having trouble with his code. He also stated that he was\
    \ having trouble with his code. He also stated that he was having trouble with\
    \ his code. He also stated that he was having trouble with his code. He also stated\
    \ that he was having trouble with his code. He also stated that he was having\
    \ trouble with his code. He also stated that he was having trouble with his code.\
    \ He also stated that he was having trouble with his code. He also stated that\
    \ he was having trouble with his code. He also stated that he was having trouble\
    \ with his code. He also stated that he was having trouble with his code. He also\
    \ stated that he was having trouble with his code. He also stated that he was\
    \ having trouble with his code. He also stated that he was having trouble with\
    \ his code. He also stated that he was having trouble with his code. He also stated\
    \ that he was having trouble with his code. He also stated that he was having\
    \ trouble with his code. He also stated ", "{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n   \
    \     {\n            result += toUpper(s[i]);\n        }\n        else\n     \
    \   {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it on \"#a@C\"\n<|/\
    \ c |>\n<| c |>\nI tested it on \"#a@C\" and it worked fine. Can you please elaborate\
    \ on what is not working?\n<|/ c |>\n<| c |>\nI tested it on \"#a@C\" and it worked\
    \ fine. Can you please elaborate on what is not working?\n<|/ c |>\n<| c |>\n\
    I tested it on \"#a@C\" and it worked fine. Can you please elaborate on what is\
    \ not working?\n<|/ c |>\n<| c |>\nI tested it on \"#a@C\" and it worked fine.\
    \ Can you please elaborate on what is not working?\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\nimport java.util.*;\nimport java.lang.*;\nimport java.io.*;", "{\n   \
    \ string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n    \
    \    if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n   \
    \     }\n        else\n        {\n            result += s[i];\n        }\n   \
    \ }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ work. Try it on \"#a@C\"\n<|/ c |>\n<| c |>\nI edited the code so it works.\
    \ I tested it and it works.\n<|/ c |>\n<| c |>\nThis doesn't work. Try it on \"\
    #a@C\"\n<|/ c |>\n<| c |>\nI edited the code so it works. I tested it and it works.\n\
    <|/ c |>\n<| c |>\nThis doesn't work. Try it on \"#a@C\"\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isalpha(s[i]))\n        {\n            result += toupper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=c++,string |>\n<| c |>\nThank\
    \ you so much! I appreciate it!\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <algorithm>", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            string temp = toUpper(s[i]);\n            result += temp;\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThe question\
    \ is tagged [tag:c++]. Why do you use [tag:c++] syntax?\n<|/ c |>\n<| c |>\nI\
    \ used c++ because I thought it would be easier to understand and easier to implement.\n\
    <|/ c |>\n<| c |>\nThe question was tagged [tag:c++]. Why do you use [tag:c++]\
    \ syntax?\n<|/ c |>\n<| c |>\nBecause I thought it would be easier to understand\
    \ and easier to implement.\n<|/ c |>\n<| c |>\nThe question was tagged [tag:c++].\
    \ Why do you use [tag:c++] syntax?\n<|/ c |>\n<| a tags=string,c++ |>\n<code>\n\
    #include <iostream>\n#include <string>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nThis doesn't work if\
    \ the string contains only letters.\n<|/ c |>\n<| c |>\nIt doesn't work if the\
    \ string contains only letters. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\n\
    I see what you mean. Fixed it.\n<|/ c |>\n<| c |>\nThis doesn't work if the string\
    \ contains only letters.\n<|/ c |>\n<| c |>\nIt doesn't work if the string contains\
    \ only letters. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n\
    #include <iostream>\n#include <string>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer. Your code is working\
    \ fine but i want to know why my code is not working and why my code is not giving\
    \ correct output?\n<|/ c |>\n<| c |>\nI explained why your code is not working\
    \ in my answer. Your code is not working because you were trying to reverse the\
    \ string but you were not doing it correctly. Your code was reversing the string\
    \ but you were not doing it correctly. Your code was reversing the string but\
    \ you were not doing it correctly.\n<|/ c |>\n<| c |>\nThanks for your answer.\
    \ Your code is working fine but i want to know why my code is not working and\
    \ why my code is not giving correct output?\n<|/ c |>\n<| c |>\nI explained why\
    \ your code is not working in my answer. Your code is not working because you\
    \ were trying to reverse the string but you were not doing it correctly. Your\
    \ code was reversing the string but you were not doing it correctly. Your code\
    \ was reversing the string but you were not doing it correctly.\n<|/ c |>\n<|\
    \ c |>\nThanks for your answer. Your code is working fine but i want to know why\
    \ my code is not working and why my code is not giving correct output?\n<|/ c\
    \ |>\n<| a tags=string,c++,reverse |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n  \
    \  string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n   \
    \     char c = s[i];\n        if(isLetter(c))\n        {\n            string temp\
    \ = toUpper(c);\n            result += temp;\n        }\n        else\n      \
    \  {\n            result += c;\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=string,c++ |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a |>\n<| a tags=c++,string |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a |>\n<| c |>\nThank you so much for\
    \ helping me out! I appreciate it!\n<|/ c |>\n<| c |>\nYou're welcome. Don't forget\
    \ to accept the answer if it solved your problem.\n<|/ c |>\n<| c |>\nI did but\
    \ my reputation is too low for it to show publicly\n<|/ c |>\n<| c |>\nNo problem.\
    \ Glad I could help.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nimport java.util.Scanner;",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        char c = s[i];\n        if(c == 'a' || c == 'A')\n        {\n       \
    \     result += 'A';\n        }\n        else if(c == 'b' || c == 'B')\n     \
    \   {\n            result += 'B';\n        }\n        else if(c == 'c' || c ==\
    \ 'C')\n        {\n            result += 'C';\n        }\n        else if(c ==\
    \ 'd' || c == 'D')\n        {\n            result += 'D';\n        }\n       \
    \ else if(c == 'e' || c == 'E')\n        {\n            result += 'E';\n     \
    \   }\n        else if(c == 'f' || c == 'F')\n        {\n            result +=\
    \ 'F';\n        }\n        else if(c == 'g' || c == 'G')\n        {\n        \
    \    result += 'G';\n        }\n        else if(c == 'h' || c == 'H')\n      \
    \  {\n            result += 'H';\n        }\n        else if(c == 'i' || c ==\
    \ 'I')\n        {\n            result += 'I';\n        }\n        else if(c ==\
    \ 'j' || c == 'J')\n        {\n            result += 'J';\n        }\n       \
    \ else if(c == 'k' || c == 'K')\n        {\n            result += 'K';\n     \
    \   }\n        else if(c == 'l' || c == 'L')\n        {\n            result +=\
    \ 'L';\n        }\n        else if(c == 'm' || c == 'M')\n        {\n        \
    \    result += 'M';\n        }\n        else if(c == 'n' || c == 'N')\n      \
    \  {\n            result += 'N';\n        }\n        else if(c == 'o' || c ==\
    \ 'O')\n        {\n            result += 'O';\n        }\n        else if(c ==\
    \ 'p' || c == 'P')\n        {\n            result += 'P';\n        }\n       \
    \ else if(c == 'q' || c == 'Q')\n        {\n            result += 'Q';\n     \
    \   }\n        else if(c == 'r' || c == 'R')\n        {\n            result +=\
    \ 'R';\n        }\n        else if(c == 's' || c == 'S')\n        {\n        \
    \    result += 'S';\n        }\n        else if(c == 't' || c == 'T')\n      \
    \  {\n            result += 'T';\n        }\n        else if(c == 'u' || c ==\
    \ 'U')\n        {\n            result += 'U';\n        }\n        else if(c ==\
    \ 'v' || c == 'V')\n        {\n            result += 'V';\n        }\n       \
    \ else if(c == 'w' || c == 'W')\n        {\n            result += 'W';\n     \
    \   }\n        else if(c == 'x' || c == 'X", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n \
    \       {\n            result += toUpper(s[i]);\n        }\n        else\n   \
    \     {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nI appreciate your efforts,\
    \ but I believe this solution is too complicated for beginners. I believe that\
    \ there are simpler solutions.\n<|/ c |>\n<| c |>\nI believe that there are simpler\
    \ solutions. I believe that there are simpler solutions. I believe that there\
    \ are simpler solutions. I believe that there are simpler solutions. I believe\
    \ that there are simpler solutions. I believe that there are simpler solutions.\
    \ I believe that there are simpler solutions. I believe that there are simpler\
    \ solutions. I believe that there are simpler solutions. I believe that there\
    \ are simpler solutions. I believe that there are simpler solutions. I believe\
    \ that there are simpler solutions. I believe that there are simpler solutions.\
    \ I believe that there are simpler solutions. I believe that there are simpler\
    \ solutions. I believe that there are simpler solutions. I believe that there\
    \ are simpler solutions. I believe that there are simpler solutions. I believe\
    \ that there are simpler solutions. I believe that there are simpler solutions.\
    \ I believe that there are simpler solutions. I believe that there are simpler\
    \ solutions. I believe that there are simpler solutions. I believe that there\
    \ are simpler solutions. I believe that there are simpler solutions. I believe\
    \ that there are simpler solutions. I believe that there are simpler solutions.\
    \ I believe that there are simpler solutions. I believe that there are simpler\
    \ solutions. I believe that there are simpler solutions. I believe that there\
    \ are simpler solutions. I believe that there are simpler solutions. I believe\
    \ that there are simpler solutions. I believe that there are simpler solutions.\
    \ I believe that there are simpler solutions. I believe that there are simpler\
    \ solutions. I believe that there are simpler solutions. I believe that there\
    \ are simpler solutions. I believe that there are simpler solutions. I believe\
    \ that there are simpler solutions. I believe that there are simpler solutions.\
    \ I believe that there are simpler solutions. I believe that there are simpler\
    \ solutions. I believe that there are simpler solutions. I believe that there\
    \ are simpler solutions. I believe that there are simpler solutions. I believe\
    \ that there are simpler solutions. I believe that there are simpler solutions.\
    \ I believe that there are simpler solutions. I believe that there are simpler\
    \ solutions. I believe that there are simp", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n \
    \       {\n            result += toUpper(s[i]);\n        }\n        else\n   \
    \     {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nThis doesn't work if the\
    \ string contains multiple letters.\n<|/ c |>\n<| c |>\nYes, I know. That's why\
    \ I wrote \"If the string contains no letters, reverse the string.\"\n<|/ c |>\n\
    <| c |>\nThe question says \"If the string contains no letters, reverse the string.\"\
    \ But your solution doesn't do that. Try it with `\"#a@C\"`.\n<|/ c |>\n<| c |>\n\
    I didn't see that requirement. I'll fix my answer.\n<|/ c |>\n<| c |>\nI fixed\
    \ my answer. Thanks for pointing that out.\n<|/ c |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    for(int i=0;i<s.length();i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            string temp = s[i];\n            s[i] = toUpper(s[i]);\n\
    \            s[i] = toLower(s[i]);\n            s[i] = temp;\n        }\n    }\n\
    \    return s;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThanks for your answer.\
    \ Your solution is very similar to mine. I just want to know why my code is not\
    \ working. Thanks.\n<|/ c |>\n<| c |>\nI added some comments to my answer. Hope\
    \ it helps.\n<|/ c |>\n<| c |>\nThanks for your comments. I understood my mistake.\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>\nstring solve(string s)\n{\n    for(int i=0;i<s.length();i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            string temp = s[i];\n\
    \            s[i] = toUpper(s[i]);\n            s[i] = toLower(s[i]);\n      \
    \      s[i] = temp;\n        }\n    }\n    return s;\n}\n</code>\n<|/ a tags=string,c++\
    \ |>\n<| c |>\nPlease add some explanation to your answer such that others can\
    \ learn from it\n<|/ c |>\n<| a dscore=0 |>\n<code>\nstring solve(string s)\n\
    {\n    for(int i=0;i<s.length();i++)\n    {\n        if(isLetter(s[i]))\n    \
    \    {\n            string temp = s[i];\n            s[i] = toUpper(s[i]);\n \
    \           s[i] = toLower(s[i]);\n            s[i] = temp;\n        }\n    }\n\
    \    return s;\n}\n</code>\n<|/ a tags=string,c++ |>\n<| c |>\nPlease add some\
    \ explanation to your answer such that others can learn from it\n<|/ c |>\n<|\
    \ a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nThe question asks for an algorithm to solve the problem, not just an implementation.\
    \ Your solution does not solve the problem as stated.\n<|/ c |>\n<| c |>\nI believe\
    \ it does solve the problem as stated. He stated that he wants to reverse the\
    \ case of the letters. He also stated that he wants to reverse the string if there\
    \ are no letters. He also stated that he wants to reverse the string if there\
    \ are letters. He also stated that he wants to reverse the string if there are\
    \ letters. He also stated that he wants to reverse the string if there are letters.\
    \ He also stated that he wants to reverse the string if there are letters. He\
    \ also stated that he wants to reverse the string if there are letters. He also\
    \ stated that he wants to reverse the string if there are letters. He also stated\
    \ that he wants to reverse the string if there are letters. He also stated that\
    \ he wants to reverse the string if there are letters. He also stated that he\
    \ wants to reverse the string if there are letters. He also stated that he wants\
    \ to reverse the string if there are letters. He also stated that he wants to\
    \ reverse the string if there are letters. He also stated that he wants to reverse\
    \ the string if there are letters. He also stated that he wants to reverse the\
    \ string if there are letters. He also stated that he wants to reverse the string\
    \ if there are letters. He also stated that he wants to reverse the string if\
    \ there are letters. He also stated that he wants to reverse the string if there\
    \ are letters. He also stated that he wants to reverse the string if there are\
    \ letters. He also stated that he wants to reverse the string if there are letters.\
    \ He also stated that he wants to reverse the string if there are letters. He\
    \ also stated that he wants to reverse the string if there are letters. He also\
    \ stated that he wants to reverse the string if there are letters. He also stated\
    \ that he wants to reverse the string if there are letters. He also stated that\
    \ he wants to reverse the string if there are letters. H", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;",
  "{\n    int len = s.length();\n    \n    for(int i = 0; i < len; i++)\n    {\n \
    \       if(isLetter(s[i]))\n        {\n            s[i] = toUpper(s[i]);\n   \
    \     }\n        else\n        {\n            s[i] = toLower(s[i]);\n        }\n\
    \    }\n    \n    return s;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you\
    \ so much for your help! I really appreciate it!\n<|/ c |>\n<| c |>\nYou're welcome.\
    \ Don't forget to accept the answer if it helped you.\n<|/ c |>\n<| c |>\nI tried\
    \ to upvote your answer but I don't have enough reputation to do so. Sorry about\
    \ that!\n<|/ c |>\n<| c |>\nNo worries, you can accept the answer by clicking\
    \ the check mark next to it.\n<|/ c |>\n<| a tags=c++,string |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <cctype>", "{\n    int len = s.length();\n\
    \    char c = s[0];\n    string result = \"\";\n    \n    for(int i = 1; i < len;\
    \ i++)\n    {\n        if(s[i] == c)\n        {\n            result += toupper(c);\n\
    \            result += tolower(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    \n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `solve(\"ab\")`.\n\
    <|/ c |>\n<| c |>\nYes, it doesn't. I've fixed it.\n<|/ c |>\n<| c |>\nThis still\
    \ doesn't work. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nIt works now.\
    \ I've tested it before posting.\n<|/ c |>\n<| c |>\nIt doesn't work now. Try\
    \ it with `solve(\"ab\")`.\n<|/ c |>\n<| a |>\n<code>\nimport java.util.*;\npublic\
    \ class ReverseString {\n    public static void main(String[] args) {\n      \
    \  Scanner sc = new Scanner(System.in);\n        System.out.println(\"Enter the\
    \ String\");\n        String str = sc.nextLine();\n        str = str.toUpperCase();\n\
    \        str = str.replaceAll(\"[^A-Z]\", \"\");\n        str = str.replaceAll(\"\
    \\\\s\", \"\");\n        System.out.println(str);\n    }\n}\n</code>\n<|/ a tags=string,java\
    \ dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `solve(\"ab\")`.\n<|/ c\
    \ |>\n<| c |>\nIt doesn't work now. Try it with `solve(\"ab\")`.\n<|/ c |>\n<|\
    \ c |>\nIt works now. I've tested it before posting.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\nimport java.util.*;\npublic class ReverseString {\n    public static\
    \ void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n \
    \       System.out.println(\"Enter the String\");\n        String str = sc.nextLine();\n\
    \        str = str.toUpperCase();\n        str = str.replaceAll(\"[^A-Z]\", \"\
    \");\n        str = str.replaceAll(\"\\\\s\", \"\");\n        System.out.println(str);\n\
    \    }\n}\n</code>\n<|/ a tags=string,java |>\n<| c |>\nThis doesn't work. Try\
    \ it with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nIt doesn't work now. Try it with\
    \ `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nIt works now. I've tested ", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            string temp = s[i];\n            s[i] = toUpper(s[i]);\n\
    \            s[i] = toLower(s[i]);\n            s[i] = temp;\n        }\n    }\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        if(!isLetter(s[i]))\n\
    \        {\n            string temp = s[i];\n            s[i] = temp;\n      \
    \  }\n    }\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            string temp = s[i];\n            s[i] = toUpper(s[i]);\n\
    \            s[i] = toLower(s[i]);\n            s[i] = temp;\n        }\n    }\n\
    \    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       char c = s[i];\n        if(c == 'a' || c == 'A')\n        {\n        \
    \    result += toupper(s[i]);\n        }\n        else if(c == 'b' || c == 'B')\n\
    \        {\n            result += tolower(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThank you for your answer. Your code works\
    \ perfectly fine, but I wanted to solve it using only string and string functions.\
    \ I guess I should use some kind of loop to solve this problem.\n<|/ c |>\n<|\
    \ c |>\nI added a solution using only string and string functions. I hope it helps.\n\
    <|/ c |>\n<| c |>\nThank you very much! Your code works perfectly fine, but I\
    \ wanted to solve it using only string and string functions. I guess I should\
    \ use some kind of loop to solve this problem.\n<|/ c |>\n<| c |>\nI added a solution\
    \ using only string and string functions. I hope it helps.\n<|/ c |>\n<| a tags=string,c++\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       if(isLetter(s[i]))\n        {\n            string temp = s[i];\n     \
    \       s[i] = toUpper(s[i]);\n            s[i] = toLower(s[i]);\n           \
    \ s[i] = temp;\n        }\n    }\n    for(int i = 0; i < s.length(); i++)\n  \
    \  {\n        if(isLetter(s[i]))\n        {\n            result += s[i];\n   \
    \     }\n        else\n        {\n            result += s[i];\n        }\n   \
    \ }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=c++,string |>\n<| c |>\nThis\
    \ code doesn't work if you input a letter at the beginning of the string. For\
    \ example, `solve(\"a\")` returns `\"a\"` instead of `\"A\"`.\n<|/ c |>\n<| c\
    \ |>\nYes, you are right. I didn't notice that case. Thank you for pointing out.\n\
    <|/ c |>\n<| a tags=c++,string |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nThis doesn't work if the string contains any non-letters.\n<|/ c |>\n\
    <| c |>\nI didn't know that C++ had a standard library for strings. Thanks for\
    \ the tip!\n<|/ c |>\n<| c |>\nThis doesn't work if the string contains any non-letters.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if the string contains any non-letters.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if the string contains any non-letters.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\n#include <iostream>\n#include <string>\n#include\
    \ <algorithm>", "{\n    int len = s.length();\n    string result = \"\";\n   \
    \ for(int i = 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThank you for your answer. I am not allowed to use\
    \ any library functions. I did try your solution but my code does not work. I\
    \ am not sure why.\n<|/ c |>\n<| c |>\nI added my code to the original post. I\
    \ am not sure why my code does not work.\n<|/ c |>\n<| c |>\nI added my code to\
    \ the original post. I am not sure why my code does not work.\n<|/ c |>\n<| c\
    \ |>\nI added my code to the original post. I am not sure why my code does not\
    \ work.\n<|/ c |>\n<| c |>\nI added my code to the original post. I am not sure\
    \ why my code does not work.\n<|/ c |>\n<| a tags=string,c++ |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nThe question says \"\
    The function should return the resulted string.\"\n<|/ c |>\n<| c |>\nI see that\
    \ now. Thanks for pointing that out. I'll update my answer.\n<|/ c |>\n<| c |>\n\
    This code doesn't work. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nIt does\
    \ work. I've tested it before posting it. It returns \"AB\" as requested.\n<|/\
    \ c |>\n<| c |>\nIt doesn't work. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| a\
    \ dscore=1 |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    \n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm\
    \ |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isalpha(s[i]))\n        {\n            result += toupper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n  \
    \  string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n   \
    \     if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n  \
    \      }\n        else\n        {\n            result += s[i];\n        }\n  \
    \  }\n    \n    return result;\n}", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try `solve(\"ab\")`.\n<|/ c |>\n\
    <| c |>\nYes, it does. I tested it before posting it. Try it yourself.\n<|/ c\
    \ |>\n<| c |>\nIt doesn't work. Try `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nIt works.\
    \ I tested it before posting it. Try it yourself.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work. Try `solve(\"ab\")`.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=string,c++,algorithm |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n        {\n \
    \           result += toupper(s[i]);\n        }\n        else\n        {\n   \
    \         result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=string,c++,algorithm |>\n<| c |>\nThe question was about C++, not C#.\n\
    <|/ c |>\n<| c |>\nI didn't realize that C# was a requirement of the question.\
    \ I've edited my answer to reflect that.\n<|/ c |>\n<| c |>\nI believe this solution\
    \ will fail for input like \"#a@C\" which should return \"#A@c\"\n<|/ c |>\n<|\
    \ c |>\nYes, I believe it will. I'll edit my answer to reflect that.\n<|/ c |>\n\
    <| c |>\nI believe this solution will fail for input like \"#a@C\" which should\
    \ return \"#A@c\"\n<|/ c |>\n<| a dscore=3 |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <algorithm>\nusing namespace std;", "{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <algorithm>\n#include <cctype>", "{\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            string temp\
    \ = s[i];\n            s[i] = toUpper(s[i]);\n            s[i] = toLower(s[i]);\n\
    \            s[i] = temp;\n        }\n    }\n    return s;\n}\n</code>\n<|/ a\
    \ tags=string,c++,arrays |>\n<| c |>\nThis doesn't work if you have a string like\
    \ \"#a@C\"\n<|/ c |>\n<| c |>\nI didn't see that requirement in the question.\
    \ I've added a note to the answer.\n<|/ c |>\n<| a tags=string,c++,arrays |>\n\
    <code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        if(isalpha(s[i]))\n        {\n            result += toupper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,c++\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       if(isLetter(s[i]))\n        {\n            string temp = s[i];\n     \
    \       s[i] = toUpper(s[i]);\n            s[i] = toLower(s[i]);\n           \
    \ s[i] = temp;\n        }\n    }\n    for(int i = 0; i < s.length(); i++)\n  \
    \  {\n        if(!isLetter(s[i]))\n        {\n            string temp = s[i];\n\
    \            s[i] = temp;\n        }\n    }\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            string temp\
    \ = s[i];\n            s[i] = toUpper(s[i]);\n            s[i] = toLower(s[i]);\n\
    \            s[i] = temp;\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=string,c++ |>\n<| c |>\nThis doesn't work if the string contains more\
    \ than one letter. For example, if `s = \"#a@C\"` then `solve(s)` returns `\"\
    #A@c\"` instead of `\"#a@c\"`.\n<|/ c |>\n<| c |>\nI didn't see that case. Thanks\
    \ for pointing it out. I've updated the code accordingly.\n<|/ c |>\n<| a tags=string,c++\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\n#include\
    \ <cctype>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}", "{\n   \
    \ string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n    \
    \    if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n   \
    \     }\n        else\n        {\n            result += s[i];\n        }\n   \
    \ }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| c\
    \ |>\nThe question was about C++, not C#.\n<|/ c |>\n<| c |>\nThe question was\
    \ about C++, not C#.\n<|/ c |>\n<| c |>\nThe question was about C++, not C#.\n\
    <|/ c |>\n<| c |>\nThe question was about C++, not C#.\n<|/ c |>\n<| c |>\nThe\
    \ question was about C++, not C#.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <algorithm>", "{\n    int len = s.length();\n\
    \    for(int i = 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n       \
    \ {\n            s[i] = toUpper(s[i]);\n        }\n        else\n        {\n \
    \           s[i] = toLower(s[i]);\n        }\n    }\n    return s;\n}\n</code>\n\
    <|/ a tags=c++,string |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=string,c++,algorithm |>\n<| c |>\nThis doesn't work if the string contains\
    \ only letters.\n<|/ c |>\n<| c |>\nYes, it does. I tested it before posting it.\
    \ I just added the comment at the top to clarify it.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work if the string contains only letters.\n<|/ c |>\n<| c |>\nIt doesn't work\
    \ if the string contains only letters.\n<|/ c |>\n<| c |>\nIt doesn't work if\
    \ the string contains only letters.\n<|/ c |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isalpha(s[i]))\n        {\n            result += toupper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    int len = s.length();\n    string result = \"\";\n\
    \    for(int i = 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n       \
    \ {\n            result += toUpper(s[i]);\n        }\n        else\n        {\n\
    \            result += s[i];\n        }\n    }\n    \n    return result;\n}",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    \n    if(result.length() == 0)\n    {\n        result = toUpper(result);\n\
    \    }\n    \n    return result;\n}", "{\n    int len = s.length();\n    \n  \
    \  for(int i = 0; i < len; i++)\n    {\n        char c = s[i];\n        \n   \
    \     if(isLetter(c))\n        {\n            int lower = toLower(c);\n      \
    \      int upper = toUpper(c);\n            \n            if(lower < upper)\n\
    \            {\n                s[i] = toUpper(c);\n            }\n          \
    \  else\n            {\n                s[i] = toLower(c);\n            }\n  \
    \      }\n    }\n    \n    return s;\n}", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a |>\n<| c |>\nThank you so much for the help! I appreciate it!\n<|/ c |>\n\
    <| c |>\nNo problem! Glad I could help!\n<|/ c |>\n<| a tags=string,c++,arrays\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cctype>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,string |>\n<| c |>\nThis code doesn't work if you input\
    \ a number or special character like \"#\" or \"@\".\n<|/ c |>\n<| c |>\nIt works,\
    \ I tested it before posting it. I tested it on \"#a@C\" which returns \"#A@c\"\
    .\n<|/ c |>\n<| c |>\nYes, it works. But it also works if you input a number or\
    \ special character like \"#\" or \"@\".\n<|/ c |>\n<| c |>\nYes, it works. But\
    \ it also works if you input a number or special character like \"#\" or \"@\"\
    .\n<|/ c |>\n<| c |>\nYes, it works. But it also works if you input a number or\
    \ special character like \"#\" or \"@\".\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    #include <iostream>\n#include <string>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            s[i] = toUpper(s[i]);\n\
    \        }\n        else\n        {\n            s[i] = toLower(s[i]);\n     \
    \   }\n    }\n    return s;\n}\n</code>\n<|/ a tags=string,c++,arrays |>\n<| c\
    \ |>\nThanks for your answer! I appreciate it!\n<|/ c |>\n<| a tags=string,c++,arrays\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        char c = s[i];\n        if(c == 'a' || c == 'A')\n    \
    \    {\n            result += \"A\";\n        }\n        else if(c == 'b' || c\
    \ == 'B')\n        {\n            result += \"b\";\n        }\n        else if(c\
    \ == 'c' || c == 'C')\n        {\n            result += \"C\";\n        }\n  \
    \      else if(c == 'd' || c == 'D')\n        {\n            result += \"D\";\n\
    \        }\n        else if(c == 'e' || c == 'E')\n        {\n            result\
    \ += \"E\";\n        }\n        else if(c == 'f' || c == 'F')\n        {\n   \
    \         result += \"F\";\n        }\n        else if(c == 'g' || c == 'G')\n\
    \        {\n            result += \"G\";\n        }\n        else if(c == 'h'\
    \ || c == 'H')\n        {\n            result += \"H\";\n        }\n        else\
    \ if(c == 'i' || c == 'I')\n        {\n            result += \"I\";\n        }\n\
    \        else if(c == 'j' || c == 'J')\n        {\n            result += \"J\"\
    ;\n        }\n        else if(c == 'k' || c == 'K')\n        {\n            result\
    \ += \"K\";\n        }\n        else if(c == 'l' || c == 'L')\n        {\n   \
    \         result += \"L\";\n        }\n        else if(c == 'm' || c == 'M')\n\
    \        {\n            result += \"M\";\n        }\n        else if(c == 'n'\
    \ || c == 'N')\n        {\n            result += \"N\";\n        }\n        else\
    \ if(c == 'o' || c == 'O')\n        {\n            result += \"O\";\n        }\n\
    \        else if(c == 'p' || c == 'P')\n        {\n            result += \"P\"\
    ;\n        }\n        else if(c == 'q' || c == 'Q')\n        {\n            result\
    \ += \"Q\";\n        }\n        else if(c == 'r' || c == 'R')\n        {\n   \
    \         result += \"R\";\n        }\n        else if(c == 's' || c == 'S')\n\
    \        {\n            result += \"S\";\n        }\n        else if(c == 't'\
    \ || c == 'T')\n        {\n            result += \"T\";\n        }\n        else\
    \ if(c == 'u' || c == 'U')\n        {\n            result += \"U\";\n        }\n\
    \        else if(c == 'v' || c == 'V')\n        {\n            result += \"V\"\
    ;\n        }\n        else if(c == 'w' || c == 'W')\n        {\n            result\
    \ += \"W\";\n        }\n        else if(c == 'x' || c == 'X", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a tags=c++,string |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}", "{\n   \
    \ int len = s.length();\n    char c = s[0];\n    string result = \"\";\n    for(int\
    \ i = 1; i < len; i++)\n    {\n        if(s[i] == c)\n        {\n            result\
    \ += toupper(c);\n            i++;\n        }\n        else\n        {\n     \
    \       result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\n#include <cctype>\nusing namespace std;",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toLower(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if the string contains any non-letters.\n\
    <|/ c |>\n<| c |>\nI added a solution that doesn't require a loop. :)\n<|/ c |>\n\
    <| c |>\nI added a solution that doesn't require a loop. :)\n<|/ c |>\n<| c |>\n\
    I added a solution that doesn't require a loop. :)\n<|/ c |>\n<| a |>\n<code>\n\
    string solve(string s) {\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++) {\n        if(isLetter(s[i])) {\n            result += toUpper(s[i]);\n\
    \        } else {\n            result += s[i];\n        }\n    }\n    for(int\
    \ i = 0; i < s.length(); i++) {\n        if(isLetter(s[i])) {\n            result\
    \ += toLower(s[i]);\n        } else {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=c++,string dscore=1 |>\n<|\
    \ c |>\nThis doesn't work if the string contains any non-letters.\n<|/ c |>\n\
    <| c |>\nI added a solution that doesn't require a loop. :)\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>\nstring solve(string s) {\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++) {\n        if(isLetter(s[i])) {\n            result\
    \ += toUpper(s[i]);\n        } else {\n            result += s[i];\n        }\n\
    \    }\n    for(int i = 0; i < s.length(); i++) {\n        if(isLetter(s[i]))\
    \ {\n            result += toLower(s[i]);\n        } else {\n            result\
    \ += s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,string\
    \ |>\n<| a dscore=1 |>\n<code>\nstring solve(string s) {\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++) {\n        if(isLetter(s[i]))\
    \ {\n            result += toUpper(s[i]);\n        } else {\n            result\
    \ += s[i];\n        }\n    }\n    for(int i = 0; i < s.length(); i++) {\n    \
    \    if(isLetter(s[i])) {\n            result += toLower(s[i]);\n        } else\
    \ {\n            result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tag", "{\n    int len = s.length();\n    for(int i = 0; i < len; i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            s[i] = toUpper(s[i]);\n\
    \        }\n        else\n        {\n            s[i] = toLower(s[i]);\n     \
    \   }\n    }\n    return s;\n}\n</code>\n<|/ a tags=c++,string |>\n<| c |>\nI\
    \ like this solution, though it would be better to use a `std::map<char, char>`\
    \ instead of an `if-else` statement. Also, `std::toupper` and `std::tolower` can\
    \ be replaced with `std::transform`.\n<|/ c |>\n<| c |>\nI agree with you. `std::transform`\
    \ would be better than `std::toupper` and `std::tolower` but `std::map<char, char>`\
    \ would work too. `std::map<char, char>` would also allow you to easily add more\
    \ characters to the map.\n<|/ c |>\n<| c |>\nI agree with you too. `std::map<char,\
    \ char>` would work too. `std::map<char, char>` would also allow you to easily\
    \ add more characters to the map.\n<|/ c |>\n<| c |>\nI agree with you too. `std::map<char,\
    \ char>` would work too. `std::map<char, char>` would also allow you to easily\
    \ add more characters to the map.\n<|/ c |>\n<| a tags=c++,string |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nThis doesn't work. Try `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nI didn't test\
    \ it, but I believe it works. I tested it on `ab` and the result was `Ab`.\n<|/\
    \ c |>\n<| c |>\nYes, it works. I tested it on `ab` and it returned `Ab`. But\
    \ it fails on `#a@C`.\n<|/ c |>\n<| c |>\nI tested it on `#a@C` and it returned\
    \ `#A@c`. So it works. I tested it on `#a@C` and it returned `#A@c`. So it works.\
    \ I tested it on `#a@C` and it returned `#A@c`. So it works. I tested it on `#a@C`\
    \ and it returned `#A@c`. So it works. I tested it on `#a@C` and it returned `#A@c`.\
    \ So it works. I tested it on `#a@C` and it returned `#A@c`. So it works. I tested\
    \ it on `#a@C` and it returned `#A@c`. So it works. I tested it on `#a@C` and\
    \ it returned `#A@c`. So it works. I tested it on `#a@C` and it returned `#A@c`.\
    \ So it works. I tested it on `#a@C` and it returned `#A@c`. So it works. I tested\
    \ it on `#a@C` and it returned `#A@c`. So it works. I tested it on `#a@C` and\
    \ it returned `#A@c`. So it works. I tested it on `#a@C` and it returned `#A@c`.\
    \ So it works. I tested it on `#a@C` and it returned `#A@c`. So it works. I tested\
    \ it on `#a@C` and it returned `#A@c`. So it works. I tested it on `#a@C` and\
    \ it returned `#A@c`. So it ", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n    \
    \        result += toUpper(s[i]);\n        }\n        else\n        {\n      \
    \      result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/\
    \ a tags=string,c++,algorithm |>\n<| c |>\nThe OP wants to reverse the case of\
    \ the letters, not just convert them to upper case.\n<|/ c |>\n<| c |>\nI didn't\
    \ see that in the question. Thanks for pointing it out.\n<|/ c |>\n<| a |>\n<code>\n\
    #include <iostream>\n#include <string>\nusing namespace std;", "{\n    int len\
    \ = s.length();\n    \n    for(int i = 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            s[i] = toUpper(s[i]);\n        }\n        else\n     \
    \   {\n            s[i] = toLower(s[i]);\n        }\n    }\n    \n    return s;\n\
    }\n</code>\n<|/ a tags=string,c++,arrays |>\n<| c |>\nThis doesn't work. `toUpper`\
    \ and `toLower` are not standard C++ functions. Also, `isLetter` doesn't exist\
    \ in C++.\n<|/ c |>\n<| c |>\nYes, I know. That's why I wrote \"You have to write\
    \ your own functions\". Anyway, I edited my answer to include a working solution.\n\
    <|/ c |>\n<| c |>\nI didn't downvote, but I suspect it's because you didn't include\
    \ a solution that uses standard C++ functions. Also, your solution doesn't work.\
    \ `toUpper` and `toLower` are not standard C++ functions. Also, `isLetter` doesn't\
    \ exist in C++.\n<|/ c |>\n<| c |>\nI edited my answer to include a working solution.\
    \ Thanks for your feedback.\n<|/ c |>\n<| c |>\nI didn't downvote either, but\
    \ your solution doesn't work. `toUpper` and `toLower` are not standard C++ functions.\
    \ Also, `isLetter` doesn't exist in C++.\n<|/ c |>\n<| a tags=string,c++,arrays\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cctype>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,arrays |>\n<| c\
    \ |>\nI see that you are using recursion to solve this problem. Why not just use\
    \ recursion?\n<|/ c |>\n<| c |>\nI used recursion to solve this problem because\
    \ I thought it would be easier to understand. Recursion is also a good way to\
    \ solve problems like this one. Recursion can be very useful in many situations.\
    \ I used recursion to solve this problem because I thought it would be easier\
    \ to understand. Recursion is also a good way to solve problems like this one.\
    \ Recursion can be very useful in many situations. I used recursion to solve this\
    \ problem because I thought it would be easier to understand. Recursion is also\
    \ a good way to solve problems like this one. Recursion can be very useful in\
    \ many situations.\n<|/ c |>\n<| c |>\nI see that you are using recursion to solve\
    \ this problem. Why not just use recursion?\n<|/ c |>\n<| c |>\nI used recursion\
    \ to solve this problem because I thought it would be easier to understand. Recursion\
    \ is also a good way to solve problems like this one. Recursion can be very useful\
    \ in many situations. I used recursion to solve this problem because I thought\
    \ it would be easier to understand. Recursion is also a good way to solve problems\
    \ like this one. Recursion can be very useful in many situations.\n<|/ c |>\n\
    <| c |>\nI see that you are using recursion to solve this problem. Why not just\
    \ use recursion?\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a |>\n<code>\n#include <iostream>\n#include <string>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,arrays |>\n<| c\
    \ |>\nThank you so much for this! I really appreciate it!\n<|/ c |>\n<| a tags=string,c++,arrays\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       if(isLetter(s[i]))\n        {\n            string temp = toUpper(s[i]);\n\
    \            result += temp;\n        }\n        else\n        {\n           \
    \ result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,string\
    \ |>\n<| c |>\nI didn't downvote, but I suspect it's because you didn't explain\
    \ what was wrong with OP's code. Also, your solution doesn't handle non-letters\
    \ correctly.\n<|/ c |>\n<| c |>\nI didn't downvote, but I suspect it's because\
    \ you didn't explain what was wrong with OP's code. Also, your solution doesn't\
    \ handle non-letters correctly.\n<|/ c |>\n<| c |>\nI didn't downvote, but I suspect\
    \ it's because you didn't explain what was wrong with OP's code. Also, your solution\
    \ doesn't handle non-letters correctly.\n<|/ c |>\n<| c |>\nI didn't downvote,\
    \ but I suspect it's because you didn't explain what was wrong with OP's code.\
    \ Also, your solution doesn't handle non-letters correctly.\n<|/ c |>\n<| c |>\n\
    I didn't downvote, but I suspect it's because you didn't explain what was wrong\
    \ with OP's code. Also, your solution doesn't handle non-letters correctly.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=c++,string |>\n<| c |>\nThis\
    \ doesn't work. `solve(\"ab\")` returns `\"AB\"`, not `\"aB\"`.\n<|/ c |>\n<|\
    \ c |>\nI missed that part. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nI\
    \ fixed the code now. Thanks for pointing it out.\n<|/ c |>\n<| a tags=c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    int len = s.length();\n    char c;\n    string result = \"\";\n    for(int\
    \ i = 0; i < len; i++)\n    {\n        c = s[i];\n        if(c == 'a' || c ==\
    \ 'A')\n        {\n            result += 'A';\n        }\n        else if(c ==\
    \ 'b' || c == 'B')\n        {\n            result += 'B';\n        }\n       \
    \ else if(c == 'c' || c == 'C')\n        {\n            result += 'C';\n     \
    \   }\n        else if(c == 'd' || c == 'D')\n        {\n            result +=\
    \ 'D';\n        }\n        else if(c == 'e' || c == 'E')\n        {\n        \
    \    result += 'E';\n        }\n        else if(c == 'f' || c == 'F')\n      \
    \  {\n            result += 'F';\n        }\n        else if(c == 'g' || c ==\
    \ 'G')\n        {\n            result += 'G';\n        }\n        else if(c ==\
    \ 'h' || c == 'H')\n        {\n            result += 'H';\n        }\n       \
    \ else if(c == 'i' || c == 'I')\n        {\n            result += 'I';\n     \
    \   }\n        else if(c == 'j' || c == 'J')\n        {\n            result +=\
    \ 'J';\n        }\n        else if(c == 'k' || c == 'K')\n        {\n        \
    \    result += 'K';\n        }\n        else if(c == 'l' || c == 'L')\n      \
    \  {\n            result += 'L';\n        }\n        else if(c == 'm' || c ==\
    \ 'M')\n        {\n            result += 'M';\n        }\n        else if(c ==\
    \ 'n' || c == 'N')\n        {\n            result += 'N';\n        }\n       \
    \ else if(c == 'o' || c == 'O')\n        {\n            result += 'O';\n     \
    \   }\n        else if(c == 'p' || c == 'P')\n        {\n            result +=\
    \ 'P';\n        }\n        else if(c == 'q' || c == 'Q')\n        {\n        \
    \    result += 'Q';\n        }\n        else if(c == 'r' || c == 'R')\n      \
    \  {\n            result += 'R';\n        }\n        else if(c == 's' || c ==\
    \ 'S')\n        {\n            result += 'S';\n        }\n        else if(c ==\
    \ 't' || c == 'T')\n        {\n            result += 'T';\n        }\n       \
    \ else if(c == 'u' || c == 'U')\n        {\n            result += 'U';\n     \
    \   }\n        else if(c == 'v' || c == 'V')\n        {\n            result +=\
    \ 'V';\n        }\n        else if(c == 'w' || c == 'W')\n        {\n        \
    \    result += 'W';\n        }\n        else if(c", "{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nThanks so much! I really\
    \ appreciate your help.\n<|/ c |>\n<| c |>\nYou're welcome. By the way, I edited\
    \ my answer to include a more efficient solution. Hope it helps.\n<|/ c |>\n<|\
    \ c |>\nThanks so much for your help! I really appreciate it.\n<|/ c |>\n<| a\
    \ tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        char c = s[i];\n        if(isalpha(c))\n        {\n   \
    \         string temp = toupper(c);\n            result += temp;\n        }\n\
    \        else\n        {\n            result += c;\n        }\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you for your answer.\
    \ I tried your code, but I got an error \"error: expected ';' after top level\
    \ declarator\". What is this error?\n<|/ c |>\n<| c |>\nI edited my answer. Now\
    \ it compiles and works.\n<|/ c |>\n<| c |>\nThank you for your answer. I tried\
    \ your code, but I got an error \"error: expected ';' after top level declarator\"\
    . What is this error?\n<|/ c |>\n<| c |>\nI edited my answer. Now it compiles\
    \ and works.\n<|/ c |>\n<| c |>\nThank you for your answer. I tried your code,\
    \ but I got an error \"error: expected ';' after top level declarator\". What\
    \ is this error?\n<|/ c |>\n<| a tags=string,c++,reverse |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n    \
    \        result += toUpper(s[i]);\n        }\n        else\n        {\n      \
    \      result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isLetter(s[i]))\n        {\n            string temp = s[i];\n    \
    \        s[i] = toUpper(s[i]);\n            s[i] = toLower(s[i]);\n          \
    \  s[i] = temp;\n        }\n    }\n    for(int i = 0; i < s.length(); i++)\n \
    \   {\n        if(!isLetter(s[i]))\n        {\n            string temp = s[i];\n\
    \            s[i] = toLower(s[i]);\n            s[i] = toUpper(s[i]);\n      \
    \      s[i] = temp;\n        }\n    }\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            result += s[i];\n \
    \       }\n    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm\
    \ |>\n<| c |>\nThis doesn't work if you have a string like \"#a@C\"\n<|/ c |>\n\
    <| c |>\nYes, it does. I tested it before posting it. The problem was the missing\
    \ `else` statement in the `if` statement. Fixed now.\n<|/ c |>\n<| c |>\nYes,\
    \ it does. I tested it before posting it. The problem was the missing `else` statement\
    \ in the `if` statement. Fixed now.\n<|/ c |>\n<| c |>\nThis doesn't work if you\
    \ have a string like \"#a@C\"\n<|/ c |>\n<| c |>\nYes, it does. I tested it before\
    \ posting it. The problem was the missing `else` statement in the `if` statement.\
    \ Fixed now.\n<|/ c |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=string,c++,arrays |>\n<| c |>\nThanks for the help! I appreciate it!\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}", "{\n    int len = s.length();\n    for(int i =\
    \ 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n        {\n           \
    \ string temp = toUpper(s[i]);\n            s[i] = toLower(s[i]);\n          \
    \  s[i] = temp;\n        }\n    }\n    string result = \"\";\n    for(int i =\
    \ 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n        {\n           \
    \ result += s[i];\n        }\n        else\n        {\n            result += s[i];\n\
    \        }\n    }\n    return result;\n}", "{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        char c = s[i];\n       \
    \ if(c == 'a' || c == 'A')\n        {\n            result += toupper(s[i]);\n\
    \        }\n        else if(c == 'b' || c == 'B')\n        {\n            result\
    \ += tolower(s[i]);\n        }\n        else\n        {\n            result +=\
    \ s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nI appreciate your efforts, but I already solved it myself and posted\
    \ my answer. Thanks anyway!\n<|/ c |>\n<| a tags=string,c++,algorithm |>\nI solved\
    \ it myself and posted my answer here:\n<code>\nstring solve(string s)\n{\n  \
    \  string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n   \
    \     char c = s[i];\n        if(c == 'a' || c == 'A')\n        {\n          \
    \  result += toupper(s[i]);\n        }\n        else if(c == 'b' || c == 'B')\n\
    \        {\n            result += tolower(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n    \
    \        result += toUpper(s[i]);\n        }\n        else\n        {\n      \
    \      result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++){\n        if(isLetter(s[i])){\n            result += toUpper(s[i]);\n \
    \       }\n        else{\n            result += s[i];\n        }\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nThis doesn't\
    \ work for \"#a@C\"\n<|/ c |>\n<| c |>\nIt does work, try it out. `#a@C` is `#A@c`\n\
    <|/ c |>\n<| c |>\nYes, it does work. Try it out yourself. It doesn't work for\
    \ \"#a@C\" because you only check for letters in the first character of the string.\
    \ Try it out with my code in the question. You'll see that it doesn't work for\
    \ \"#a@C\".\n<|/ c |>\n<| c |>\nYes, it does work. Try it out yourself. It doesn't\
    \ work for \"#a@C\" because you only check for letters in the first character\
    \ of the string. Try it out with my code in the question. You'll see that it doesn't\
    \ work for \"#a@C\".\n<|/ c |>\n<| c |>\nI see what you mean. My code doesn't\
    \ work for \"#a@C\" because I didn't account for that case. I'll edit my answer\
    \ to account for that case.\n<|/ c |>\n<| a tags=string,c++,algorithm |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work if\
    \ you have a string like \"#a@C\"\n<|/ c |>\n<| c |>\nYes, I forgot about that\
    \ case. Thanks for pointing it out. I've edited my answer.\n<|/ c |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n    \
    \        result += toUpper(s[i]);\n        }\n        else\n        {\n      \
    \      result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nThe question was about C++, not C. Also, `std::toupper` doesn't exist\
    \ in C++.\n<|/ c |>\n<| c |>\nI didn't know that std::toupper doesn't exist in\
    \ C++. Thanks for pointing that out. I'll update my answer.\n<|/ c |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    int len = s.length();\n    string result = \"\";\n\
    \    for(int i = 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n       \
    \ {\n            string temp = s[i];\n            s[i] = toUpper(s[i]);\n    \
    \        s[i] = toLower(s[i]);\n            s[i] = temp;\n        }\n    }\n \
    \   for(int i = 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            string temp = s[i];\n            s[i] = toUpper(s[i]);\n        \
    \    s[i] = toLower(s[i]);\n            s[i] = temp;\n        }\n    }\n    for(int\
    \ i = 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n        {\n       \
    \     string temp = s[i];\n            s[i] = toUpper(s[i]);\n            s[i]\
    \ = toLower(s[i]);\n            s[i] = temp;\n        }\n    }\n    for(int i\
    \ = 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n        {\n         \
    \   string temp = s[i];\n            s[i] = toUpper(s[i]);\n            s[i] =\
    \ toLower(s[i]);\n            s[i] = temp;\n        }\n    }\n    for(int i =\
    \ 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n        {\n           \
    \ string temp = s[i];\n            s[i] = toUpper(s[i]);\n            s[i] = toLower(s[i]);\n\
    \            s[i] = temp;\n        }\n    }\n    for(int i = 0; i < len; i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            string temp = s[i];\n\
    \            s[i] = toUpper(s[i]);\n            s[i] = toLower(s[i]);\n      \
    \      s[i] = temp;\n        }\n    }\n    for(int i = 0; i < len; i++)\n    {\n\
    \        if(isLetter(s[i]))\n        {\n            string temp = s[i];\n    \
    \        s[i] = toUpper(s[i]);\n            s[i] = toLower(s[i]);\n          \
    \  s[i] = temp;\n        }\n    }\n    for(int i = 0; i < len; i++)\n    {\n \
    \       if(isLetter(s[i]))\n        {\n            string temp = s[i];\n     \
    \       s[i] = toUpper(s[i]);\n            s[i] = toLower(s[i]);\n           \
    \ s[i] = temp;\n        }\n    }\n    for(int i = 0; i < len; i++)\n    {\n  \
    \      if(isLetter(s[i]))\n        {\n            string temp = s[i];\n      \
    \      s[i] = toUpper(s[i]);\n            s[i] = toLower(s[i]);\n            s[i]\
    \ = temp;\n        }\n    }\n    for(int i = 0; i < len; i++)\n    {\n       \
    \ if(isLetter(s[i]))\n        {\n            string temp = s[i];\n           \
    \ s[i] = toUpper(s[i]);\n            s[i] = toLower(s[i]);\n            s[i] =\
    \ temp;\n        }\n    }\n    for(int i = 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            string temp = s[i];\n            s[i] = toUpper(s[i]);\n\
    \            s[i] = toLower(s[i]);\n            s[i] = temp;\n        }\n    }\n\
    \    for(int i = 0; i < len; i++)", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}", "{\n   \
    \ string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n    \
    \    if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n   \
    \     }\n        else\n        {\n            result += s[i];\n        }\n   \
    \ }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| c\
    \ |>\nThis doesn't work if the string contains multiple letters.\n<|/ c |>\n<|\
    \ c |>\nIt does work if you add an else statement to handle multiple letters.\n\
    <|/ c |>\n<| c |>\nIt doesn't work if you add an else statement to handle multiple\
    \ letters.\n<|/ c |>\n<| c |>\nIt doesn't work if you add an else statement to\
    \ handle multiple letters.\n<|/ c |>\n<| c |>\nIt doesn't work if you add an else\
    \ statement to handle multiple letters.\n<|/ c |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you\
    \ for answering my question. I am a beginner at programming and I really appreciate\
    \ your help. I understand your solution and it works perfectly. Thank you so much!\n\
    <|/ c |>\n<| c |>\nNo problem! If this answer helped you, please consider marking\
    \ it as accepted so others know this question has been answered.\n<|/ c |>\n<|\
    \ c |>\nI did but my reputation is too low for it to show publicly.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\nimport java.util.*;\npublic class ReverseString{\n \
    \   public static void main(String args[]){\n        Scanner sc=new Scanner(System.in);\n\
    \        System.out.println(\"Enter the string\");\n        String s=sc.nextLine();\n\
    \        System.out.println(\"The reversed string is \"+reverseString(s));\n \
    \   }\n    public static String reverseString(String s){\n        StringBuilder\
    \ sb=new StringBuilder();\n        for(int i=s.length()-1;i>=0;i--){\n       \
    \     sb.append(s.charAt(i));\n        }\n        return sb.toString();\n    }\n\
    }\n</code>\n<|/ a tags=string,java |>\n<| c |>\nThank you for answering my question.\
    \ I am a beginner at programming and I really appreciate your help. I understand\
    \ your solution and it works perfectly. Thank you so much!\n<|/ c |>\n<| a tags=string,java\
    \ |>\n<code>\npublic class ReverseString {", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n \
    \       {\n            result += toUpper(s[i]);\n        }\n        else\n   \
    \     {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nThis doesn't work for `solve(\"\
    ab\")` which should return `\"AB\"` but returns `\"aB\"`.\n<|/ c |>\n<| c |>\n\
    Thanks for pointing out. I've edited the answer accordingly.\n<|/ c |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>", "{\n\
    \    int len = s.length();\n    string result = \"\";\n    for(int i = 0; i <\
    \ len; i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result\
    \ += toUpper(s[i]);\n        }\n        else\n        {\n            result +=\
    \ s[i];\n        }\n    }\n    \n    if(len == 0)\n    {\n        return result;\n\
    \    }\n    \n    for(int i = 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    \n    return result;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nI believe this solution is wrong. `solve(\"ab\"\
    )` returns `\"Ab\"` instead of `\"BA\"`.\n<|/ c |>\n<| c |>\nI believe this solution\
    \ is wrong. `solve(\"ab\")` returns `\"Ab\"` instead of `\"BA\"`.\n<|/ c |>\n\
    <| c |>\nI believe this solution is wrong. `solve(\"ab\")` returns `\"Ab\"` instead\
    \ of `\"BA\"`.\n<|/ c |>\n<| c |>\nI believe this solution is wrong. `solve(\"\
    ab\")` returns `\"Ab\"` instead of `\"BA\"`.\n<|/ c |>\n<| c |>\nI believe this\
    \ solution is wrong. `solve(\"ab\")` returns `\"Ab\"` instead of `\"BA\"`.\n<|/\
    \ c |>\n<| a tags=string,c++ |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <algorithm>\nusing namespace std;", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n \
    \       {\n            result += toUpper(s[i]);\n        }\n        else\n   \
    \     {\n            result += s[i];\n        }\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        char c = s[i];\n        if(c == 'a' || c == 'A')\n        {\n       \
    \     result += 'A';\n        }\n        else if(c == 'b' || c == 'B')\n     \
    \   {\n            result += 'B';\n        }\n        else if(c == 'c' || c ==\
    \ 'C')\n        {\n            result += 'C';\n        }\n        else if(c ==\
    \ 'd' || c == 'D')\n        {\n            result += 'D';\n        }\n       \
    \ else if(c == 'e' || c == 'E')\n        {\n            result += 'E';\n     \
    \   }\n        else if(c == 'f' || c == 'F')\n        {\n            result +=\
    \ 'F';\n        }\n        else if(c == 'g' || c == 'G')\n        {\n        \
    \    result += 'G';\n        }\n        else if(c == 'h' || c == 'H')\n      \
    \  {\n            result += 'H';\n        }\n        else if(c == 'i' || c ==\
    \ 'I')\n        {\n            result += 'I';\n        }\n        else if(c ==\
    \ 'j' || c == 'J')\n        {\n            result += 'J';\n        }\n       \
    \ else if(c == 'k' || c == 'K')\n        {\n            result += 'K';\n     \
    \   }\n        else if(c == 'l' || c == 'L')\n        {\n            result +=\
    \ 'L';\n        }\n        else if(c == 'm' || c == 'M')\n        {\n        \
    \    result += 'M';\n        }\n        else if(c == 'n' || c == 'N')\n      \
    \  {\n            result += 'N';\n        }\n        else if(c == 'o' || c ==\
    \ 'O')\n        {\n            result += 'O';\n        }\n        else if(c ==\
    \ 'p' || c == 'P')\n        {\n            result += 'P';\n        }\n       \
    \ else if(c == 'q' || c == 'Q')\n        {\n            result += 'Q';\n     \
    \   }\n        else if(c == 'r' || c == 'R')\n        {\n            result +=\
    \ 'R';\n        }\n        else if(c == 's' || c == 'S')\n        {\n        \
    \    result += 'S';\n        }\n        else if(c == 't' || c == 'T')\n      \
    \  {\n            result += 'T';\n        }\n        else if(c == 'u' || c ==\
    \ 'U')\n        {\n            result += 'U';\n        }\n        else if(c ==\
    \ 'v' || c == 'V')\n        {\n            result += 'V';\n        }\n       \
    \ else if(c == 'w' || c == 'W')\n        {\n            result += 'W';\n     \
    \   }\n        else if(c == 'x' || c == 'X", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n \
    \       {\n            result += toUpper(s[i]);\n        }\n        else\n   \
    \     {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a tags=c++,string,algorithm |>\n<| c |>\nThis doesn't work. Try it\
    \ with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nIt does work. Try it with `solve(\"\
    ab\")`.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `solve(\"ab\")`.\n<|/\
    \ c |>\n<| c |>\nIt does work. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\n\
    It does work. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| a tags=c++,string,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            string temp\
    \ = s[i];\n            s[i] = toUpper(s[i]);\n            s[i] = toLower(s[i]);\n\
    \            s[i] = temp;\n        }\n    }\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(!isLetter(s[i]))\n        {\n            string temp\
    \ = s[i];\n            s[i] = toLower(s[i]);\n            s[i] = toUpper(s[i]);\n\
    \            s[i] = temp;\n        }\n    }\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += s[i];\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=string,c++,arrays |>\n<| c |>\nI believe this answer would be better\
    \ if you explained what your code does, and why it works.\n<|/ c |>\n<| c |>\n\
    I added some comments to the code. Hope it helps.\n<|/ c |>\n<| c |>\nI believe\
    \ this answer would be better if you explained what your code does, and why it\
    \ works.\n<|/ c |>\n<| c |>\nI added some comments to the code. Hope it helps.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\n#include <iostream>\n#include <string>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            string temp\
    \ = toUpper(s[i]);\n            result += temp;\n        }\n        else\n   \
    \     {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nThis doesn't work if the\
    \ string contains any non-letters.\n<|/ c |>\n<| c |>\nIt does work. Try it out\
    \ with input \"#a@C\".\n<|/ c |>\n<| c |>\nIt does work. Try it out with input\
    \ \"#a@C\".\n<|/ c |>\n<| c |>\nIt does work. Try it out with input \"#a@C\".\n\
    <|/ c |>\n<| c |>\nIt does work. Try it out with input \"#a@C\".\n<|/ c |>\n<|\
    \ a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++){\n\
    \        if(isLetter(s[i])){\n            result += toUpper(s[i]);\n        }\n\
    \        else{\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,string |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        char c = s[i];\n        if(isalpha(c))\n\
    \        {\n            char upper = toupper(c);\n            char lower = tolower(c);\n\
    \            if(isupper(upper))\n            {\n                result += lower;\n\
    \            }\n            else\n            {\n                result += upper;\n\
    \            }\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm\
    \ |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=string,c++,arrays |>\n<| c |>\nThanks for your answer. I am not allowed\
    \ to use any library functions. I did try to use your solution but I am getting\
    \ a segmentation fault when I run it.\n<|/ c |>\n<| c |>\nI edited my answer to\
    \ include a solution without using any library functions. I tested it and it works.\n\
    <|/ c |>\n<| c |>\nThanks for your help. I appreciate it.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI believe\
    \ this answer would be better if you explained how it works.\n<|/ c |>\n<| c |>\n\
    I added some explanation to the answer. Hope it helps.\n<|/ c |>\n<| a |>\n<code>\n\
    #include <iostream>\n#include <string>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,string |>\n<| a tags=c++,string |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;", "{\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n       \
    \     string temp = s[i];\n            s[i] = toUpper(s[i]);\n            s[i]\
    \ = toLower(s[i]);\n            s[i] = temp;\n        }\n    }\n    \n    if(s.length()\
    \ == 0)\n    {\n        return s;\n    }\n    \n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(!isLetter(s[i]))\n        {\n            string temp\
    \ = s[i];\n            s[i] = temp;\n        }\n    }\n    \n    return s;\n}\n\
    </code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nThis doesn't work if the\
    \ string contains numbers, e.g. \"a1b2\"\n<|/ c |>\n<| c |>\nYes, you are right.\
    \ My bad. I'll fix it.\n<|/ c |>\n<| c |>\nThis doesn't work if the string contains\
    \ numbers, e.g. \"a1b2\"\n<|/ c |>\n<| c |>\nYes, you are right. My bad. I'll\
    \ fix it.\n<|/ c |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide an answer to the\
    \ question. To critique or request clarification from an author, leave a comment\
    \ below their post. - [From Review](/review/low-quality-posts/25859018)\n<|/ c\
    \ |>\n<| c |>\nI believe this does answer the question. He asked how to reverse\
    \ the case of a string and I provided a solution. He also asked how to reverse\
    \ the string and I provided a solution. He also asked how to reverse the case\
    \ of a string and I provided a solution. He also asked how to reverse the string\
    \ and I provided a solution. He also asked how to reverse the case of a string\
    \ and I provided a solution. He also asked how to reverse the string and I provided\
    \ a solution. He also asked how to reverse the case of a string and I provided\
    \ a solution. He also asked how to reverse the string and I provided a solution.\
    \ He also asked how to reverse the case of a string and I provided a solution.\
    \ He also asked how to reverse the string and I provided a solution. He also asked\
    \ how to reverse the case of a string and I provided a solution. He also asked\
    \ how to reverse the string and I provided a solution. He also asked how to reverse\
    \ the case of a string and I provided a solution. He also asked how to reverse\
    \ the string and I provided a solution. He also asked how to reverse the case\
    \ of a string and I provided a solution. He also asked how to reverse the string\
    \ and I provided a solution. He also asked how to reverse the case of a string\
    \ and I provided a solution. He also asked how to reverse the string and I provided\
    \ a solution. He also asked how to reverse the case of a string and I provided\
    \ a solution. He also asked how to reverse the string and I provided a solution.\
    \ He also asked how to reverse the case of a string and I provided a solution.\
    \ He also asked how to reverse the string and I provided a solution. He also asked\
    \ how to reverse the case of a string and I provided a solution. He also asked\
    \ how to reverse the string and I provided a solution", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    for(int i = 0; i\
    \ < s.length(); i++)\n    {\n        if(!isLetter(s[i]))\n        {\n        \
    \    result += toLower(s[i]);\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThanks for your answer. Your code works fine for small\
    \ strings, but for large strings it takes too much time. Can you please suggest\
    \ me a better solution?\n<|/ c |>\n<| c |>\nI added a solution that is much more\
    \ efficient than yours.\n<|/ c |>\n<| c |>\nThanks for your answer. Your code\
    \ works fine for small strings, but for large strings it takes too much time.\
    \ Can you please suggest me a better solution?\n<|/ c |>\n<| c |>\nI added a solution\
    \ that is much more efficient than yours.\n<|/ c |>\n<| c |>\nThanks for your\
    \ answer. Your code works fine for small strings, but for large strings it takes\
    \ too much time. Can you please suggest me a better solution?\n<|/ c |>\n<| a\
    \ tags=string,algorithm,c++ |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <algorithm>\nusing namespace std;", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n \
    \       {\n            string temp = toUpper(s[i]);\n            result += temp;\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n    \
    \        result += toUpper(s[i]);\n        }\n        else\n        {\n      \
    \      result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThis doesn't work. Try it on `\"#a@C\"`.\n<|/ c |>\n\
    <| c |>\nI tested it on \"#a@C\" and it worked fine.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work for `\"#a@C\"` because `toUpper` doesn't do what you think it does. Try\
    \ it on `\"#a@C\"`.\n<|/ c |>\n<| c |>\nI tested it on \"#a@C\" and it worked\
    \ fine.\n<|/ c |>\n<| c |>\nIt doesn't work for `\"#a@C\"` because `toUpper` doesn't\
    \ do what you think it does. Try it on `\"#a@C\"`.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n  \
    \  int len = s.length();\n    \n    for(int i = 0; i < len; i++)\n    {\n    \
    \    if(isLetter(s[i]))\n        {\n            s[i] = toUpper(s[i]);\n      \
    \  }\n        else\n        {\n            s[i] = toLower(s[i]);\n        }\n\
    \    }\n    \n    return s;\n}\n</code>\n<|/ a tags=string,c++,arrays |>\n<| c\
    \ |>\nThis doesn't work if the string contains multiple letters.\n<|/ c |>\n<|\
    \ c |>\nIt does work if you add another condition to check if there is more than\
    \ one letter in the string. I've edited the answer to include this.\n<|/ c |>\n\
    <| c |>\nThe OP said \"If the string contains no letters, reverse the string.\"\
    \n<|/ c |>\n<| c |>\nYeah, I missed that part. I've edited the answer to include\
    \ that as well.\n<|/ c |>\n<| c |>\nThe OP said \"If the string contains no letters,\
    \ reverse the string.\"\n<|/ c |>\n<| a tags=string,c++,arrays |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=c++,string |>\n<| a tags=c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a |>\n<| c |>\nThis code doesn't work.\
    \ Try it on \"#a@C\"\n<|/ c |>\n<| c |>\nI tested it on \"#a@C\" and it worked.\
    \ Did you try it on \"#a@C\"?\n<|/ c |>\n<| c |>\nYes, I did. And it didn't work.\
    \ Try it on \"#a@C\"\n<|/ c |>\n<| c |>\nI tested it on \"#a@C\" and it worked.\
    \ Did you try it on \"#a@C\"?\n<|/ c |>\n<| c |>\nYes, I did. And it didn't work.\
    \ Try it on \"#a@C\"\n<|/ c |>\n<| a tags=string,c++ |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    int len = s.length();\n    char\
    \ c = s[0];\n    string result = \"\";\n    for(int i = 1; i < len; i++)\n   \
    \ {\n        c = s[i];\n        if(islower(c))\n        {\n            result\
    \ += toupper(c);\n        }\n        else\n        {\n            result += tolower(c);\n\
    \        }\n    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm\
    \ |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include\
    \ <algorithm>", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isalpha(s[i]))\n        {\n            result += toupper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nThis doesn't work if the string contains only letters. Try `solve(\"ab\"\
    )`.\n<|/ c |>\n<| c |>\nI added a solution that works with only letters.\n<|/\
    \ c |>\n<| c |>\nThis doesn't work if the string contains only letters. Try `solve(\"\
    ab\")`.\n<|/ c |>\n<| c |>\nI added a solution that works with only letters.\n\
    <|/ c |>\n<| c |>\nThis doesn't work if the string contains only letters. Try\
    \ `solve(\"ab\")`.\n<|/ c |>\n<| a |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <algorithm>\nusing namespace std;", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n \
    \       {\n            result += toUpper(s[i]);\n        }\n        else\n   \
    \     {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a tags=string,c++,arrays |>\n<| c |>\nThanks for your answer! I tried\
    \ to implement your solution, but I keep getting an error that says \"error: invalid\
    \ conversion from 'char' to 'const char*' [-fpermissive]\" for the line \"result\
    \ += toUpper(s[i]);\"\n<|/ c |>\n<| c |>\nI edited my answer, I forgot to add\
    \ `const` before `char` type. Now it should work.\n<|/ c |>\n<| c |>\nThank you\
    \ so much! I really appreciate it!\n<|/ c |>\n<| a tags=string,c++,arrays |>\n\
    <code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++){\n\
    \        if(isLetter(s[i])){\n            result += toUpper(s[i]);\n        }else{\n\
    \            result += s[i];\n        }\n    }\n    for(int i = 0; i < s.length();\
    \ i++){\n        if(!isLetter(s[i])){\n            result += toLower(s[i]);\n\
    \        }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This doesn't work. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nI tested it\
    \ and it works. I edited my answer to include a test case.\n<|/ c |>\n<| c |>\n\
    It doesn't work. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| c |>\nI tested it\
    \ and it works. I edited my answer to include a test case.\n<|/ c |>\n<| c |>\n\
    It doesn't work. Try it with `solve(\"ab\")`.\n<|/ c |>\n<| a |>\n<code>\npublic\
    \ String reverse(String s) {\n    char[] chars = s.toCharArray();\n    char[]\
    \ reverse = new char[chars.length];\n    for (int i = 0; i < chars.length; i++)\
    \ {\n        reverse[i] = (char)(chars[i] + 32 - chars[i].toLowerCase().charAt(0));\n\
    \    }\n    return new String(reverse);\n}\n</code>\n<|/ a tags=string,c++,java\
    \ dscore=0 |>\n<| c |>\nThis doesn't work. Try it with `reverse(\"ab\")`.\n<|/\
    \ c |>\n<| c |>\nI tested it and it works. I edited my answer to include a test\
    \ case.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `reverse(\"ab\")`.\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try it with `reverse(\"ab\")`.\n<|/ c |>\n\
    <| c |>\nIt doesn't work. Try it with `reverse(\"ab\")`.\n<|/ c |>\n<| a tags=string,c++,java\
    \ |>\n<code>\nString reverseString(String s) {\n    char[] chars = s.toCharArray();\n\
    \    char[] reverse = new char[chars.length];\n    for (int i = 0; i < chars.length;\
    \ i++) {\n        reverse[i] = (char)(chars[i] + 32 - chars[i].toLowerCase().charAt(0));\n\
    \    }\n    return new String(reverse);\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    This doesn't work. Try it with `reverse(\"ab\")`.\n<|/ c |>\n<| ", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++){\n        if(isLetter(s[i])){\n\
    \            result += toUpper(s[i]);\n        }\n        else{\n            result\
    \ += s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\nimport java.util.Scanner;", "{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        char c = s[i];\n        if(c ==\
    \ 'a' || c == 'A')\n        {\n            result += toupper(s[i]);\n        }\n\
    \        else if(c == 'b' || c == 'B')\n        {\n            result += tolower(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=c++,string |>\n<| c |>\nThis\
    \ code doesn't work if the string contains any non-alphabetic characters. For\
    \ example, `solve(\"!@#$%^&*()\")` returns `!@#$%^&*()`\n<|/ c |>\n<| c |>\nYeah,\
    \ I noticed that and fixed it before you commented :) Thanks for pointing it out.\n\
    <|/ c |>\n<| c |>\nI fixed it now. Thanks for pointing it out.\n<|/ c |>\n<| a\
    \ dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=c++,string |>\n<| c |>\nThank\
    \ you so much for your help! I really appreciate it!\n<|/ c |>\n<| c |>\nYou're\
    \ welcome. Glad I could help. If this answer solved your problem, please consider\
    \ marking it as accepted (by clicking the checkmark next to it).\n<|/ c |>\n<|\
    \ a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n\
    <code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n  \
    \  string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n   \
    \     char c = s[i];\n        if(c == 'a' || c == 'A')\n        {\n          \
    \  result += 'A';\n        }\n        else if(c == 'b' || c == 'B')\n        {\n\
    \            result += 'B';\n        }\n        else if(c == 'c' || c == 'C')\n\
    \        {\n            result += 'C';\n        }\n        else if(c == 'd' ||\
    \ c == 'D')\n        {\n            result += 'D';\n        }\n        else if(c\
    \ == 'e' || c == 'E')\n        {\n            result += 'E';\n        }\n    \
    \    else if(c == 'f' || c == 'F')\n        {\n            result += 'F';\n  \
    \      }\n        else if(c == 'g' || c == 'G')\n        {\n            result\
    \ += 'G';\n        }\n        else if(c == 'h' || c == 'H')\n        {\n     \
    \       result += 'H';\n        }\n        else if(c == 'i' || c == 'I')\n   \
    \     {\n            result += 'I';\n        }\n        else if(c == 'j' || c\
    \ == 'J')\n        {\n            result += 'J';\n        }\n        else if(c\
    \ == 'k' || c == 'K')\n        {\n            result += 'K';\n        }\n    \
    \    else if(c == 'l' || c == 'L')\n        {\n            result += 'L';\n  \
    \      }\n        else if(c == 'm' || c == 'M')\n        {\n            result\
    \ += 'M';\n        }\n        else if(c == 'n' || c == 'N')\n        {\n     \
    \       result += 'N';\n        }\n        else if(c == 'o' || c == 'O')\n   \
    \     {\n            result += 'O';\n        }\n        else if(c == 'p' || c\
    \ == 'P')\n        {\n            result += 'P';\n        }\n        else if(c\
    \ == 'q' || c == 'Q')\n        {\n            result += 'Q';\n        }\n    \
    \    else if(c == 'r' || c == 'R')\n        {\n            result += 'R';\n  \
    \      }\n        else if(c == 's' || c == 'S')\n        {\n            result\
    \ += 'S';\n        }\n        else if(c == 't' || c == 'T')\n        {\n     \
    \       result += 'T';\n        }\n        else if(c == 'u' || c == 'U')\n   \
    \     {\n            result += 'U';\n        }\n        else if(c == 'v' || c\
    \ == 'V')\n        {\n            result += 'V';\n        }\n        else if(c\
    \ == 'w' || c == 'W')\n        {\n            result += 'W';\n        }\n    \
    \    else if(c == 'x' || c == 'X", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=c++,string |>\n<| c |>\nThe question was about C++, not C#.\n<|/ c\
    \ |>\n<| c |>\nI know, but I thought it would be helpful to give a solution in\
    \ C++ too. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nI added a C++ solution\
    \ as well. Hope it helps.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            result += toUpper(s[i]);\n        }\n        else\n        {\n  \
    \          result += s[i];\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=string,c++ |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;", "{\n    int len = s.length();\n    for(int\
    \ i = 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n        {\n       \
    \     s[i] = toUpper(s[i]);\n        }\n        else\n        {\n            s[i]\
    \ = toLower(s[i]);\n        }\n    }\n    return s;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't work if the string contains more than one letter.\n\
    <|/ c |>\n<| c |>\nYes, it does. I tested it before posting it. And it works perfectly.\
    \ Try it yourself.\n<|/ c |>\n<| c |>\nI tested it and it doesn't work. Try it\
    \ yourself. It doesn't work. Try it yourself. It doesn't work. Try it yourself.\
    \ It doesn't work. Try it yourself. It doesn't work. Try it yourself. It doesn't\
    \ work. Try it yourself. It doesn't work. Try it yourself. It doesn't work. Try\
    \ it yourself. It doesn't work. Try it yourself. It doesn't work. Try it yourself.\
    \ It doesn't work. Try it yourself. It doesn't work. Try it yourself. It doesn't\
    \ work. Try it yourself. It doesn't work. Try it yourself. It doesn't work. Try\
    \ it yourself. It doesn't work. Try it yourself. It doesn't work. Try it yourself.\
    \ It doesn't work. Try it yourself. It doesn't work. Try it yourself. It doesn't\
    \ work. Try it yourself. It doesn't work. Try it yourself. It doesn't work. Try\
    \ it yourself. It doesn't work. Try it yourself. It doesn't work. Try it yourself.\
    \ It doesn't work. Try it yourself. It doesn't work. Try it yourself. It doesn't\
    \ work. Try it yourself. It doesn't work. Try it yourself. It doesn't work. Try\
    \ it yourself. It doesn't work. Try it yourself. It doesn't work. Try it yourself.\
    \ It doesn't work. Try it yourself. It doesn't work. Try it yourself. It doesn't\
    \ work. Try it yourself. It doesn't work. Try it yourself. It doesn't work. Try\
    \ it yourself. It doesn't work. Try it yourself. It doesn't work. Try it yourself.\
    \ It doesn't work. Try it yourself. It doesn't work. Try it yourself. It doesn't\
    \ work. Try it yourself. It doesn't work. Try it yourself. It doesn't work. Try\
    \ it yourself. ", "{\n    for(int i = 0; i < s.length(); i++)\n    {\n       \
    \ if(isLetter(s[i]))\n        {\n            string temp = toUpper(s[i]);\n  \
    \          s[i] = toLower(s[i]);\n            s[i] = temp;\n        }\n    }\n\
    \    \n    if(s.length() == 0)\n    {\n        return s;\n    }\n    \n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        if(!isLetter(s[i]))\n        {\n\
    \            string temp = toUpper(s[i]);\n            s[i] = toLower(s[i]);\n\
    \            s[i] = temp;\n        }\n    }\n    \n    return s;\n}", "{\n   \
    \ string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n    \
    \    char c = s[i];\n        if(c == 'a' || c == 'A')\n        {\n           \
    \ result += c.toUpper();\n        }\n        else if(c == 'b' || c == 'B')\n \
    \       {\n            result += c.toLower();\n        }\n        else\n     \
    \   {\n            result += c;\n        }\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=string,c++,algorithm |>\n<| c |>\nThanks for your answer! But I still\
    \ don't understand why my code doesn't work. Could you please explain to me why\
    \ my code doesn't work?\n<|/ c |>\n<| c |>\nI added a comment to my answer. Hope\
    \ it helps.\n<|/ c |>\n<| c |>\nThanks for your answer! But I still don't understand\
    \ why my code doesn't work. Could you please explain to me why my code doesn't\
    \ work?\n<|/ c |>\n<| c |>\nI added a comment to my answer. Hope it helps.\n<|/\
    \ c |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;\nstring solve(string s)\n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        char c = s[i];\n\
    \        if(c == 'a' || c == 'A')\n        {\n            result += c.toUpper();\n\
    \        }\n        else if(c == 'b' || c == 'B')\n        {\n            result\
    \ += c.toLower();\n        }\n        else\n        {\n            result += c;\n\
    \        }\n    }\n    return result;\n}", "{\n    int len = s.length();\n   \
    \ char c;\n    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n\
    \        c = s[i];\n        if(c == 'a' || c == 'A')\n        {\n            result\
    \ += 'A';\n        }\n        else if(c == 'b' || c == 'B')\n        {\n     \
    \       result += 'B';\n        }\n        else if(c == 'c' || c == 'C')\n   \
    \     {\n            result += 'C';\n        }\n        else if(c == 'd' || c\
    \ == 'D')\n        {\n            result += 'D';\n        }\n        else if(c\
    \ == 'e' || c == 'E')\n        {\n            result += 'E';\n        }\n    \
    \    else if(c == 'f' || c == 'F')\n        {\n            result += 'F';\n  \
    \      }\n        else if(c == 'g' || c == 'G')\n        {\n            result\
    \ += 'G';\n        }\n        else if(c == 'h' || c == 'H')\n        {\n     \
    \       result += 'H';\n        }\n        else if(c == 'i' || c == 'I')\n   \
    \     {\n            result += 'I';\n        }\n        else if(c == 'j' || c\
    \ == 'J')\n        {\n            result += 'J';\n        }\n        else if(c\
    \ == 'k' || c == 'K')\n        {\n            result += 'K';\n        }\n    \
    \    else if(c == 'l' || c == 'L')\n        {\n            result += 'L';\n  \
    \      }\n        else if(c == 'm' || c == 'M')\n        {\n            result\
    \ += 'M';\n        }\n        else if(c == 'n' || c == 'N')\n        {\n     \
    \       result += 'N';\n        }\n        else if(c == 'o' || c == 'O')\n   \
    \     {\n            result += 'O';\n        }\n        else if(c == 'p' || c\
    \ == 'P')\n        {\n            result += 'P';\n        }\n        else if(c\
    \ == 'q' || c == 'Q')\n        {\n            result += 'Q';\n        }\n    \
    \    else if(c == 'r' || c == 'R')\n        {\n            result += 'R';\n  \
    \      }\n        else if(c == 's' || c == 'S')\n        {\n            result\
    \ += 'S';\n        }\n        else if(c == 't' || c == 'T')\n        {\n     \
    \       result += 'T';\n        }\n        else if(c == 'u' || c == 'U')\n   \
    \     {\n            result += 'U';\n        }\n        else if(c == 'v' || c\
    \ == 'V')\n        {\n            result += 'V';\n        }\n        else if(c\
    \ == 'w' || c == 'W')\n        {\n            result += 'W';\n        }\n    \
    \    else if(c", "{\n    int len = s.length();\n    char c;\n    string result\
    \ = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        c = s[i];\n      \
    \  if(c == 'A' || c == 'a')\n        {\n            result += 'a';\n        }\n\
    \        else if(c == 'B' || c == 'b')\n        {\n            result += 'b';\n\
    \        }\n        else if(c == 'C' || c == 'c')\n        {\n            result\
    \ += 'c';\n        }\n        else if(c == 'D' || c == 'd')\n        {\n     \
    \       result += 'd';\n        }\n        else if(c == 'E' || c == 'e')\n   \
    \     {\n            result += 'e';\n        }\n        else if(c == 'F' || c\
    \ == 'f')\n        {\n            result += 'f';\n        }\n        else if(c\
    \ == 'G' || c == 'g')\n        {\n            result += 'g';\n        }\n    \
    \    else if(c == 'H' || c == 'h')\n        {\n            result += 'h';\n  \
    \      }\n        else if(c == 'I' || c == 'i')\n        {\n            result\
    \ += 'i';\n        }\n        else if(c == 'J' || c == 'j')\n        {\n     \
    \       result += 'j';\n        }\n        else if(c == 'K' || c == 'k')\n   \
    \     {\n            result += 'k';\n        }\n        else if(c == 'L' || c\
    \ == 'l')\n        {\n            result += 'l';\n        }\n        else if(c\
    \ == 'M' || c == 'm')\n        {\n            result += 'm';\n        }\n    \
    \    else if(c == 'N' || c == 'n')\n        {\n            result += 'n';\n  \
    \      }\n        else if(c == 'O' || c == 'o')\n        {\n            result\
    \ += 'o';\n        }\n        else if(c == 'P' || c == 'p')\n        {\n     \
    \       result += 'p';\n        }\n        else if(c == 'Q' || c == 'q')\n   \
    \     {\n            result += 'q';\n        }\n        else if(c == 'R' || c\
    \ == 'r')\n        {\n            result += 'r';\n        }\n        else if(c\
    \ == 'S' || c == 's')\n        {\n            result += 's';\n        }\n    \
    \    else if(c == 'T' || c == 't')\n        {\n            result += 't';\n  \
    \      }\n        else if(c == 'U' || c == 'u')\n        {\n            result\
    \ += 'u';\n        }\n        else if(c == 'V' || c == 'v')\n        {\n     \
    \       result += 'v';\n        }\n        else if(c == 'W' || c == 'w')\n   \
    \     {\n            result += 'w';\n        }\n        else if(c == 'X' || c\
    \ == 'x')\n        {\n", "{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        if(isLetter(s[i]))\n        {\n           \
    \ result += toUpper(s[i]);\n        }\n        else\n        {\n            result\
    \ += s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm\
    \ |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <cctype>\nusing namespace std;", "{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your answer. I'm sorry I didn't\
    \ specify this in the question, but I wanted to solve this problem without using\
    \ any built-in functions. I edited my question to reflect this.\n<|/ c |>\n<|\
    \ c |>\nI edited my answer to include a solution that does not use any built-in\
    \ functions.\n<|/ c |>\n<| a tags=string,c++,algorithm |>\n<code>\n#include <iostream>\n\
    #include <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        char c = s[i];\n        if(c ==\
    \ 'a' || c == 'A')\n        {\n            result += toupper(s[i]);\n        }\n\
    \        else if(c == 'b' || c == 'B')\n        {\n            result += tolower(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=c++,string |>\n<| c |>\nThis\
    \ doesn't work if the string contains more than one letter of the same case. For\
    \ example, \"abBc\" returns \"AbBc\".\n<|/ c |>\n<| c |>\nYes, you are right.\
    \ I missed that case. Thanks for pointing out. I'll edit my answer.\n<|/ c |>\n\
    <| a tags=c++,string |>\n<code>\n#include <iostream>\n#include <string>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isalpha(s[i]))\n        {\n            result += toupper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nThe question says \"The function should return the resulted string.\"\n\
    <|/ c |>\n<| c |>\nThe question says \"The function should return the resulted\
    \ string.\" but you didn't return anything in the function body. Your code doesn't\
    \ compile because you didn't return anything in the function body.\n<|/ c |>\n\
    <| c |>\nI didn't see that he didn't return anything in the function body. Thanks\
    \ for pointing that out.\n<|/ c |>\n<| a tags=string,c++,algorithm |>\n<code>\n\
    #include <iostream>\n#include <string>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\n`isLetter` should be\
    \ `isAlpha`. `isAlpha` returns `true` for `#`, `$`, `%`, `&`, `'`, `+`, `-`, `_`,\
    \ `=`, `<`, `>`, `?`, `@`, `[`, `]`, `^`, `_`, `{`, `}`, `|`, `~`, `:`, `;`, `:=`,\
    \ `<-`, `->`, `<->`, `<-=`, `->=`, `<->=`, `<=>`, `<-<`, `<-<-`, `<-<->`, `<-<-=`,\
    \ `<-<->`, `<-<-=`, `<-<->`, `<-<-=`, `<-<->`, `<-<-=`, `<-<->`, `<-<-=`, `<-<->`,\
    \ `<-<-=`, `<-<->`, `<-<-=`, `<-<->`, `<-<-=`, `<-<->`, `<-<-=`, `<-<->`, `<-<-=`,\
    \ `<-<->`, `<-<-=`, `<-<->`, `<-<-=`, `<-<->`, `<-<-=`, `<-<->`, `<-<-=`, `<-<->`,\
    \ `<-<-=`, `<-<->`, `<-<-=`, `<-<->`, `<-<-=`, `<-<->`, `<-<-=`, `<-<->`, `<-<-=`,\
    \ `<-<->`, `<-<-=`, `<-<->`, `<-<-=`, `<-<->`, `<-<-=`, `<-<->`, `<-<-=`, `<-<->`,\
    \ `<-<-=`, `<-<->`, `<-<-=`, `<-<->`, `<-<-=`, `<-<->`, `<-<-=`, `<-<->`, `<-<-=`,\
    \ `<-<->`, `<-<-=`, `<-<->`, `<-<-=`, `<-<->`, `<-<-=`, `<-<->`, `<", "{\n   \
    \ string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n    \
    \    if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n   \
    \     }\n        else\n        {\n            result += s[i];\n        }\n   \
    \ }\n    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThanks for your\
    \ help! I appreciate it!\n<|/ c |>\n<| c |>\nNo problem! If you found this answer\
    \ helpful, please consider accepting it by clicking the check mark next to it.\
    \ This will help future readers of this question know that this is the correct\
    \ answer and will help them find the answer more easily.\n<|/ c |>\n<| a tags=c++,string\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a |>\n<| c |>\nThe OP said \"The function\
    \ should return the resulted string.\" so I guess he wants to return the reversed\
    \ string. Your code doesn't do that.\n<|/ c |>\n<| c |>\nI missed that part, thanks\
    \ for pointing it out. I've updated the answer.\n<|/ c |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       char c = s[i];\n        if(c == 'a' || c == 'A')\n        {\n        \
    \    result += 'A';\n        }\n        else if(c == 'b' || c == 'B')\n      \
    \  {\n            result += 'B';\n        }\n        else if(c == 'c' || c ==\
    \ 'C')\n        {\n            result += 'C';\n        }\n        else if(c ==\
    \ 'd' || c == 'D')\n        {\n            result += 'D';\n        }\n       \
    \ else if(c == 'e' || c == 'E')\n        {\n            result += 'E';\n     \
    \   }\n        else if(c == 'f' || c == 'F')\n        {\n            result +=\
    \ 'F';\n        }\n        else if(c == 'g' || c == 'G')\n        {\n        \
    \    result += 'G';\n        }\n        else if(c == 'h' || c == 'H')\n      \
    \  {\n            result += 'H';\n        }\n        else if(c == 'i' || c ==\
    \ 'I')\n        {\n            result += 'I';\n        }\n        else if(c ==\
    \ 'j' || c == 'J')\n        {\n            result += 'J';\n        }\n       \
    \ else if(c == 'k' || c == 'K')\n        {\n            result += 'K';\n     \
    \   }\n        else if(c == 'l' || c == 'L')\n        {\n            result +=\
    \ 'L';\n        }\n        else if(c == 'm' || c == 'M')\n        {\n        \
    \    result += 'M';\n        }\n        else if(c == 'n' || c == 'N')\n      \
    \  {\n            result += 'N';\n        }\n        else if(c == 'o' || c ==\
    \ 'O')\n        {\n            result += 'O';\n        }\n        else if(c ==\
    \ 'p' || c == 'P')\n        {\n            result += 'P';\n        }\n       \
    \ else if(c == 'q' || c == 'Q')\n        {\n            result += 'Q';\n     \
    \   }\n        else if(c == 'r' || c == 'R')\n        {\n            result +=\
    \ 'R';\n        }\n        else if(c == 's' || c == 'S')\n        {\n        \
    \    result += 'S';\n        }\n        else if(c == 't' || c == 'T')\n      \
    \  {\n            result += 'T';\n        }\n        else if(c == 'u' || c ==\
    \ 'U')\n        {\n            result += 'U';\n        }\n        else if(c ==\
    \ 'v' || c == 'V')\n        {\n            result += 'V';\n        }\n       \
    \ else if(c == 'w' || c == 'W')\n        {\n            result += 'W';\n     \
    \   }\n        else if(c == 'x' || c == 'X", "{\n    int len = s.length();\n \
    \   for(int i = 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n        {\n\
    \            s[i] = toUpper(s[i]);\n        }\n        else\n        {\n     \
    \       s[i] = toLower(s[i]);\n        }\n    }\n    return s;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThis doesn't work if the string contains any non-letters.\n\
    <|/ c |>\n<| c |>\nYes, I know. I just wanted to show how it can be done. Thanks\
    \ for pointing that out.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++){\n        if(isLetter(s[i])){\n\
    \            result += toUpper(s[i]);\n        }\n        else{\n            result\
    \ += s[i];\n        }\n    }\n    return result;\n}\n</code>\n<|/ a |>\n<| c |>\n\
    This doesn't work for strings with multiple letters, e.g. `solve(\"ab#c\")` returns\
    \ `\"#cba\"`.\n<|/ c |>\n<| c |>\nYes, you are right, I missed that case. Thanks\
    \ for pointing out. I'll edit my answer.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    #include <iostream>\n#include <string>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,c++ |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\nThis doesn't work if\
    \ the string contains numbers. Try it with `solve(\"123\")`.\n<|/ c |>\n<| c |>\n\
    I didn't see that requirement in the question. Thanks for pointing it out. I'll\
    \ update the answer.\n<|/ c |>\n<| c |>\nI added a solution that doesn't require\
    \ any extra memory and doesn't use any loops.\n<|/ c |>\n<| a dscore=1 |>\n<code>\n\
    #include <iostream>\n#include <string>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| a tags=string,c++,algorithm\
    \ |>\n<code>\n#include <iostream>\n#include <string>\nusing namespace std;", "{\n\
    \    int len = s.length();\n    string result = \"\";\n    for(int i = 0; i <\
    \ len; i++)\n    {\n        char c = s[i];\n        if(c == 'a' || c == 'A')\n\
    \        {\n            result += 'A';\n        }\n        else if(c == 'b' ||\
    \ c == 'B')\n        {\n            result += 'B';\n        }\n        else if(c\
    \ == 'c' || c == 'C')\n        {\n            result += 'C';\n        }\n    \
    \    else if(c == 'd' || c == 'D')\n        {\n            result += 'D';\n  \
    \      }\n        else if(c == 'e' || c == 'E')\n        {\n            result\
    \ += 'E';\n        }\n        else if(c == 'f' || c == 'F')\n        {\n     \
    \       result += 'F';\n        }\n        else if(c == 'g' || c == 'G')\n   \
    \     {\n            result += 'G';\n        }\n        else if(c == 'h' || c\
    \ == 'H')\n        {\n            result += 'H';\n        }\n        else if(c\
    \ == 'i' || c == 'I')\n        {\n            result += 'I';\n        }\n    \
    \    else if(c == 'j' || c == 'J')\n        {\n            result += 'J';\n  \
    \      }\n        else if(c == 'k' || c == 'K')\n        {\n            result\
    \ += 'K';\n        }\n        else if(c == 'l' || c == 'L')\n        {\n     \
    \       result += 'L';\n        }\n        else if(c == 'm' || c == 'M')\n   \
    \     {\n            result += 'M';\n        }\n        else if(c == 'n' || c\
    \ == 'N')\n        {\n            result += 'N';\n        }\n        else if(c\
    \ == 'o' || c == 'O')\n        {\n            result += 'O';\n        }\n    \
    \    else if(c == 'p' || c == 'P')\n        {\n            result += 'P';\n  \
    \      }\n        else if(c == 'q' || c == 'Q')\n        {\n            result\
    \ += 'Q';\n        }\n        else if(c == 'r' || c == 'R')\n        {\n     \
    \       result += 'R';\n        }\n        else if(c == 's' || c == 'S')\n   \
    \     {\n            result += 'S';\n        }\n        else if(c == 't' || c\
    \ == 'T')\n        {\n            result += 'T';\n        }\n        else if(c\
    \ == 'u' || c == 'U')\n        {\n            result += 'U';\n        }\n    \
    \    else if(c == 'v' || c == 'V')\n        {\n            result += 'V';\n  \
    \      }\n        else if(c == 'w' || c == 'W')\n        {\n            result\
    \ += 'W';\n        }\n        else if(c == 'x", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        if(isalpha(s[i]))\n \
    \       {\n            result += toupper(s[i]);\n        }\n        else\n   \
    \     {\n            result += s[i];\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=c++,string |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <cctype>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=string,c++,algorithm |>\n<| c |>\n`std::toupper` doesn't\
    \ exist in C++.\n<|/ c |>\n<| c |>\n`std::toupper` exists in C++11 and later.\n\
    <|/ c |>\n<| c |>\n`std::toupper` exists in C++11 and later.\n<|/ c |>\n<| c |>\n\
    `std::toupper` exists in C++11 and later.\n<|/ c |>\n<| c |>\n`std::toupper` exists\
    \ in C++11 and later.\n<|/ c |>\n<| a dscore=2 |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        if(isLetter(s[i]))\n        {\n            result += toUpper(s[i]);\n\
    \        }\n        else\n        {\n            result += s[i];\n        }\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++,algorithm |>\n<|\
    \ c |>\nThis doesn't work if the string contains numbers. Try `solve(\"1234\"\
    )`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I've updated the answer\
    \ to include a solution for that case.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        if(isLetter(s[i]))\n\
    \        {\n            result += toUpper(s[i]);\n        }\n        else\n  \
    \      {\n            result += s[i];\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work if the string contains\
    \ more than one letter. For example, `solve(\"aba\")` returns `\"Aa\"`.\n<|/ c\
    \ |>\n<| c |>\nYes, you are right. I missed that case. Thank you for pointing\
    \ out.\n<|/ c |>\n<| a tags=string,c++ |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;", "{\n    int len = s.length();\n    for(int\
    \ i = 0; i < len; i++)\n    {\n        if(isLetter(s[i]))\n        {\n       \
    \     s[i] = toUpper(s[i]);\n        }\n        else\n        {\n            s[i]\
    \ = toLower(s[i]);\n        }\n    }\n    return s;\n}\n</code>\n<|/ a tags=string,c++,arrays\
    \ |>\n<| a tags=string,c++,arrays |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

name: HumanEval_89_encrypt
language: d
prompt: "import std.math;\nimport std.typecons;\n/*\nCreate a function encrypt that\
  \ takes a string as an argument and\n    returns a string encrypted with the alphabet\
  \ being rotated. \n    The alphabet should be rotated in a manner such that the\
  \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
  \    >>> encrypt(\"hi\")\n    \"lm\"\n    >>> encrypt(\"asdfghjkl\")\n    \"ewhjklnop\"\
  \n    >>> encrypt(\"gf\")\n    \"kj\"\n    >>> encrypt(\"et\")\n    \"ix\"\n   \
  \ \n*/\nstring encrypt(string s) \n"
tests: "unittest\n{\n    alias candidate = encrypt;\n\n    assert(candidate(\"hi\"\
  ) == \"lm\");\n    assert(candidate(\"asdfghjkl\") == \"ewhjklnop\");\n    assert(candidate(\"\
  gf\") == \"kj\");\n    assert(candidate(\"et\") == \"ix\");\n    assert(candidate(\"\
  faewfawefaewg\") == \"jeiajeaijeiak\");\n    assert(candidate(\"hellomyfriend\"\
  ) == \"lippsqcjvmirh\");\n    assert(candidate(\"dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh\"\
  ) == \"hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl\");\n    assert(candidate(\"\
  a\") == \"e\");\n}\nvoid main(){}"
completions: ["{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"\
    gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n   \
    \ >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n\
    \    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n\
    /*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n   \
    \ >>> ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 'a')\
    \ + 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the opposite direction.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"ih\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"asdfghjlk\"\n    >>> rotate(\"gf\")\n    \"gfh\"\n    >>> rotate(\"et\"\
    )\n    \"etx\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') + 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated in the opposite\
    \ direction.\n    For example:\n    >>> rotate(\"hi\")\n    \"ih\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"asdfghjlk\"\n    >>> rotate(\"gf\")\n    \"gfh\"\n    >>>\
    \ rotate(\"et\")\n    \"etx\"\n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(s.at(i) - 'a') + 26];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rotate that takes a string as an argument and\n    returns a string\
    \ rotated in the opposite direction.\n    For example:\n    >>> rotate(\"hi\"\
    )\n    \"ih\"\n    >>> rotate(\"asdfghjkl\")\n    \"asdfghjlk\"\n    >>> rotate(\"\
    gf\")\n    \"gfh\"\n    >>> rotate(\"et\")\n    \"etx\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int ", "{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string(s.at(i)\
    \ + s.at(i + 1)).swapcase();\n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string(s.at(i) - s.at(i + 1)).swapcase();\n    }\n\
    \    return result;\n}\n/*\nCreate a function rot13 that takes a string as an\
    \ argument and\n    returns a string rotated 13 places down. \n    For example:\n\
    \    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\
    \n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n\
    */\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += std.string(s.at(i) + 13).swapcase();\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places up. \n    For example:\n\
    \    >>> rot13(\"nk\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\
    \n    >>> rot13(\"gf\")\n    \"gfz\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n\
    */\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += std.string(s.at(i) - 13).swapcase();\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places right. \n    For\
    \ example:\n    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n\
    \    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gfz\"\n    >>> rot13(\"", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)((int)s[i] + 2)];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)((int)s[i]\
    \ - 2)];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated 90 degrees clockwise.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"jhi\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"kjhkjldf\"\n    >>> rotate(\"gf\")\n    \"gfgh\"\n    >>> rotate(\"et\"\
    )\n    \"ettx\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)((int)s[i]\
    \ + 2)];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated 90 degrees counter-clockwise.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"jhi\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"kjhkjldf\"\n    >>> rotate(\"gf\")\n    \"gfgh\"\n    >>> rotate(\"et\"\
    )\n    \"ettx\"\n    \n*/\nstring rotate90(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)((int)s[i]\
    \ - 2)];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated 180 degrees clockwise.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"jhi\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"kjhkjldf\"\n    >>> rotate(\"gf\")\n    \"gfgh\"\n    >>> rotate(\"et\"\
    )\n    \"ettx\"\n    \n*/\nstring rotate180(string s) \n{", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - alphabet.length()];\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) + alphabet.length()];\n  \
    \  }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - alphabet.length()];\n  \
    \  }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) + alphabet.length()];\n  \
    \  }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - alphabet.length()];\n  \
    \  }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(s.at(i) + 2) % 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 2)\
    \ % 26];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string rotated 13 places down. \n\
    \    For example:\n    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"asdfghjkl\"\
    )\n    \"kjhnopqrs\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\"\
    )\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ + 13) % 26];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that\
    \ takes a string as an argument and\n    returns a string rotated 13 places up.\
    \ \n    For example:\n    >>> rot13(\"nj\")\n    \"hi\"\n    >>> rot13(\"kjhnopqrs\"\
    )\n    \"asdfghjkl\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\"\
    )\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 13) % 26];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that\
    \ takes a string as an argument and\n    returns a string rotated 13 places left.\
    \ \n    For example:\n    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"asdfghjkl\"\
    )\n    \"kjhnopqrs\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\"\
    )\n    \"et\"\n    \n*/\nstring rot", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'] * 2;\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - 'a'] / 2;\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=encryption,c++,string |>\n<| c |>\nI see what you're saying,\
    \ but I don't think this helps me solve the problem. I'm looking for a way to\
    \ rotate the alphabet by two places while still being able to use the same encryption\
    \ algorithm I already have.\n<|/ c |>\n<| c |>\nI see what you're saying, but\
    \ I don't think this helps me solve the problem. I'm looking for a way to rotate\
    \ the alphabet by two places while still being able to use the same encryption\
    \ algorithm I already have.\n<|/ c |>\n<| c |>\nI see what you're saying, but\
    \ I don't think this helps me solve the problem. I'm looking for a way to rotate\
    \ the alphabet by two places while still being able to use the same encryption\
    \ algorithm I already have.\n<|/ c |>\n<| c |>\nI see what you're saying, but\
    \ I don't think this helps me solve the problem. I'm looking for a way to rotate\
    \ the alphabet by two places while still being able to use the same encryption\
    \ algorithm I already have.\n<|/ c |>\n<| c |>\nI see what you're saying, but\
    \ I don't think this helps me solve the problem. I'm looking for a way to rotate\
    \ the alphabet by two places while still being able to use the same encryption\
    \ algorithm I already have.\n<|/ c |>\n<| a tags=encryption,c++,string |>\nThe\
    \ algorithm is simple:", "{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length()\
    \ - 1 - i]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"kj\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n   \
    \ \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length()\
    \ - 1 - i]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"kj\")\n    \"gf\" \n", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ in the manner described above.\n    For example:\n    >>> rotate(\"hi\")\n \
    \   \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n\
    \    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    kj\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjk", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s[i]\
    \ + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)(((int)s[i] + 2) % 26)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated 90 degrees clockwise. \n    For example:\n    >>> rotate(\"\
    hi\")\n    \"yi\"\n    >>> rotate(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rotate(\"\
    gf\")\n    \"gf\"\n    >>> rotate(\"et\")\n    \"et\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)(((int)s[i] + 2) % 26)];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated 90 degrees counterclockwise. \n    For example:\n\
    \    >>> rotate(\"yi\")\n    \"hi\"\n    >>> rotate(\"zxcvbnm\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"gf\")\n    \"gfz\"\n    >>> rotate(\"et\")\n    \"et\"\n  \
    \  \n*/\nstring rotate90(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s[i]\
    \ + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated 180 degrees\
    \ clockwise. \n    For example:\n    >>> rotate(\"hi\")\n    \"ih\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rotate(\"gf\")\n    \"gfz\"\n    >>> rotate(\"\
    et\")\n    \"et\"\n    \n*/\nstring rotate180(string s) \n{\n    ", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[i] - 97];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[i] - 97];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string encrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n   \
    \ \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i] - 97];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    lm\")\n    \"hi\"\n    >>> rotate(\"ewhjklnop\")\n    \"gf\" \n    >>> rotate(\"\
    ix\")\n    \"kj\" \n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string encrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"kj\")\n    \"gf\" \n    \n*/\nstring ", "{\n    int len = s.length();\n\
    \    string result = \"\";\n    for (int i = 0; i < len; i++)\n    {\n       \
    \ result += alphabet[(((int)s[i]) - 97 + len) % 26];\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n \
    \   {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfedcba\"\n    >>> rotate(\"asdfghjkl\")\n    \"etxwvuts\"\n    >>>\
    \ rotate(\"gf\")\n    \"kjhqyvut\"\n    >>> rotate(\"et\")\n    \"iuoxqgfe\"\n\
    \    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfedcba\"\n    >>> rotate(\"asdfghjkl\")\n    \"etxwvuts\"\n    >>>\
    \ rotate(\"gf\")\n    \"kjhqyvut\"\n    >>> rotate(\"et\")\n    \"iuoxqgfe\"\n\
    \    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the ", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += std.string(s.at(i) + s.at(i+1)).swapcase();\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,encryption,string |>\n<| c |>\nI appreciate the effort\
    \ but this doesn't work. Try encrypting \"gf\" for example. Your code returns\
    \ \"kj\" instead of \"kj\".\n<|/ c |>\n<| c |>\nI tested it and it works. I edited\
    \ my answer to include a test case.\n<|/ c |>\n<| c |>\nI appreciate your effort\
    \ but this doesn't work. Try encrypting \"gf\" for example. Your code returns\
    \ \"kj\" instead of \"kj\".\n<|/ c |>\n<| c |>\nI tested it and it works. I edited\
    \ my answer to include a test case.\n<|/ c |>\n<| c |>\nI appreciate your effort\
    \ but this doesn't work. Try encrypting \"gf\" for example. Your code returns\
    \ \"kj\" instead of \"kj\".\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\n#include <cctype>", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]\
    \ + 2];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[i] - 2];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string encrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>>\
    \ rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\
    \n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[i] + 2];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"lm\")\n    \"hi\"\n    >>>\
    \ rotate(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> rotate(\"ix\")\n    \"et\"\
    \n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i] - 2];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklno", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[i]];\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') % 26];\n    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string\
    \ |>\n<| c |>\nI see what you did there, thank you! I didn't know you could do\
    \ that in C++.\n<|/ c |>\n<| c |>\nI added a solution that doesn't use strings\
    \ and uses `std::vector`\n<|/ c |>\n<| c |>\nI added a solution that doesn't use\
    \ strings and uses `std::vector`\n<|/ c |>\n<| a tags=encryption,c++,string |>\n\
    <code>\n#include <iostream>\n#include <string>\n#include <vector>", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += s[(i % s.length()) + 1] + s[(i % s.length()) + 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s[(i % s.length()) - 1]\
    \ + s[(i % s.length()) - 2];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string rotated 13\
    \ places down. \n    For example:\n    >>> rot13(\"hi\")\n    \"nk\"\n    >>>\
    \ rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n \
    \   >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += ((s[i] - 'a' + 13) % 26) + 'a';\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rot13 that takes a string as an argument and\n    returns a string\
    \ rotated 13 places up. \n    For example:\n    >>> rot13(\"nk\")\n    \"hi\"\n\
    \    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\n    >>> rot13(\"gf\")\n    \"\
    gf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += ((s[i] - 'a' + 13) % 26) + 'a';\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places left. \n    For example:\n    >>> rot13(\"hi\")\n\
    \    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\"\
    )\n    \"gf\"\n    >>> rot13(\"et\")\n    \"", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i)\
    \ - 'a' + 1);\n    }\n    return result;\n}", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string.rep(s.charAt(i),\
    \ std.math.pow(s.charAt(i), 2));\n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string.rep(s.charAt(i), std.math.pow(s.charAt(i),\
    \ 2));\n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a\
    \ string as an argument and\n    returns a string rotated 13 places down. \n \
    \   For example:\n    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"asdfghjkl\"\
    )\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n\
    \    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string.rep(s.charAt(i),\
    \ std.math.pow(s.charAt(i), 13));\n    }\n    return result;\n}\n/*\nCreate a\
    \ function rot13 that takes a string as an argument and\n    returns a string\
    \ rotated 13 places up. \n    For example:\n    >>> rot13(\"nk\")\n    \"hi\"\n\
    \    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\n    >>> rot13(\"gf\")\n    \"\
    gfz\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string s) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += std.string.rep(s.charAt(i), std.math.pow(s.charAt(i), 13));\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places left. \n    For example:\n\
    \    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\
    \n    >>> rot13(\"gf\")", "{\n    string result = \"\";\n    for(int i = 0; i\
    \ < s.length(); i++)\n    {\n        result += s[(i + s.Length()) % s.Length()];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += s[(i + s.Length()) % s.Length()];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rot13 that takes a string as an argument and\n    returns a string\
    \ encrypted with the rot13 alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rot13(\"hi\")\n    \"nj\"\n    >>>\
    \ rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n \
    \   >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += s[(i + s.Length()) % s.Length()];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rot13 that takes a string as an argument and\n    returns a string\
    \ decrypted with the rot13 alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rot13(\"nj\")\n    \"hi\"\n    >>>\
    \ rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\n    >>> rot13(\"gf\")\n    \"gf\"\n \
    \   >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += s[(i + s.Length()) % s.Length()];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rot13 that takes a string as an argument and\n    returns a string\
    \ encrypted with the rot13 alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner ", "{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n   \
    \ }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n\
    */\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\n", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 'a') %\
    \ 26];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a') + 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a') + 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a') + 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 97];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        ", "{\n    int\
    \ len = s.length();\n    string result = \"\";\n    for(int i = 0; i < len; i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    int len = s.length();\n    string\
    \ result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"\
    gf\")\n    \"asdfghjkl\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring\
    \ rotate(string s) \n{\n    int len = s.length();\n    string result = \"\";\n\
    \    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    gf\")\n    \"gfkj\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"et\"\n    >>> rotate(\"gf\")\n    \"gfkj\"\n    >>> rotate(\"et\")\n\
    \    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a ",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)(((int)s.at(i) - 97 + 2) % 26)];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 97 - 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated with the\
    \ alphabet being rotated. \n    The alphabet should be rotated in a manner such\
    \ that the letters \n    shift down by two multiplied to two places.\n    For\
    \ example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n  \
    \  \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated with the\
    \ alphabet being rotated. \n    The alphabet should be rotated in a manner such\
    \ that the letters \n    shift down by two multiplied to two places.\n    For\
    \ example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"\
    gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 97 - 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated with the\
    \ alphabet being rotated. \n    The alphabet should be rotated in a manner such\
    \ that the letters \n    shift down by two multiplied to two places.\n    For\
    \ example:\n    >>> rotate(\"", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n   \
    \ }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string encrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"lm\")\n    \"hi\"\n    >>>\
    \ rotate(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> rotate(\"ix\")\n    \"et\"\
    \n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]\
    \ + 2];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[i] - 2];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated with the alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n   \
    \ >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n\
    \    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[i] + 2];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated with the alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>>\
    \ rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[i] - 2];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n\
    \    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length()", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n\
    */\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n   \
    \ }\n    return result;\n}\n/*\nCreate a function rotate that takes a string as\
    \ an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\n", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"gf\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n  \
    \  \"asdfghjkl\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gf\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"\
    gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"asdfghjkl\"\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> rotate(\"hi\")\n\
    \    \"gf\"\n    >>> rotate(\"", "{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += s[(i + s.Length()) % s.Length()];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += s[(i + s.Length()) % s.Length()];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rot13 that takes a string as an argument and\n    returns a string\
    \ rotated 13 places. \n    For example:\n    >>> rot13(\"hi\")\n    \"nj\"\n \
    \   >>> rot13(\"asdfghjkl\")\n    \"gkjhbnm\"\n    >>> rot13(\"gf\")\n    \"kj\"\
    \n    >>> rot13(\"et\")\n    \"ix\"\n    \n*/\nstring rot13(string s) \n{\n  \
    \  string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n   \
    \     result += (char)(s.charAt(i) + 13);\n    }\n    return result;\n}\n/*\n\
    Create a function rot13 that takes a string as an argument and\n    returns a\
    \ string rotated 13 places. \n    For example:\n    >>> rot13(\"hi\")\n    \"\
    nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"gkjhbnm\"\n    >>> rot13(\"gf\")\n \
    \   \"kj\"\n    >>> rot13(\"et\")\n    \"ix\"\n    \n*/\nstring rot13(string s)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n  \
    \  {\n        result += (char)(s.charAt(i) + 13);\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places. \n    For example:\n    >>> rot13(\"hi\")\n    \"\
    nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"gkjhbnm\"\n    >>> rot13(\"gf\")\n \
    \   \"kj\"\n    >>> rot13(\"et\")\n    \"ix\"\n    \n*/\nstring rot13(string s)\
    \ \n{\n    string result = \"\";\n", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string(s.at(i)).rotate_left(2);\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string |>\n\
    <| c |>\nThank you so much for this. I really appreciate it. I will try this out\
    \ and let you know how it goes. Thanks again!\n<|/ c |>\n<| c |>\nI got it to\
    \ work! Thanks so much! I really appreciate it!\n<|/ c |>\n<| c |>\nGlad I could\
    \ help. I added a link to the documentation for the `rotate` function in the standard\
    \ library. Hope that helps!\n<|/ c |>\n<| c |>\nI got it to work! Thanks so much!\
    \ I really appreciate it!\n<|/ c |>\n<| c |>\nI got it to work! Thanks so much!\
    \ I really appreciate it!\n<|/ c |>\n<| a tags=encryption,c++,string |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace\
    \ std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s[(i + s.Length()) % s.Length()];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s[(i\
    \ + s.Length()) % s.Length()];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ in the manner described above. \n    For example:\n    >>> rotate(\"hi\")\n\
    \    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s[(i + s.Length()) % s.Length()];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s[(i\
    \ + s.Length()) % s.Length()];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ in the manner described above. \n    For example:\n    >>> rotate(\"hi\")\n\
    \    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring ", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[i] - 97];\n    }\n    return result;\n}\n/*\n\
    Create a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length()\
    \ - 1 - i] - 97];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated with the\
    \ alphabet being rotated. \n    The alphabet should be rotated in a manner such\
    \ that the letters \n    shift down by two multiplied to two places.\n    For\
    \ example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"et\"\n    >>> rotate(\"gf\")\n    \"asdfghjkl\"\n    >>> rotate(\"et\"\
    )\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"gfkj\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n\
    \    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"hi\")\n    \"gfkj\"\
    \n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length()\
    \ - 1 - i] - 97];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated with the\
    \ alphabet being rotated. \n    The alphabet should be rotated in a manner such\
    \ that the letters \n    shift down by two multiplied to two places.\n    For\
    \ example:", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += std.string(s.at(i) + s.at(i + 1)).swapcase();\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += std.string(s.at(i) - s.at(i + 1)).swapcase();\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 degrees clockwise.\n    For example:\n    >>> rot13(\"hi\"\
    )\n    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"\
    gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string(s.at(i) + s.at(i + 13)).swapcase();\n   \
    \ }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string as\
    \ an argument and\n    returns a string rotated 13 degrees counterclockwise.\n\
    \    For example:\n    >>> rot13(\"nk\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\"\
    )\n    \"asdfghjkl\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\"\
    )\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string(s.at(i)\
    \ - s.at(i + 13)).swapcase();\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string rotated 13\
    \ degrees clockwise.\n    For example:\n    >>> rot13(\"nk\")\n    \"hi\"\n  \
    \  >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\n    >>> rot13(\"", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += s[(i + s.Length()) % s.Length()];\n    }\n    return result;\n}", "{\n  \
    \  string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n   \
    \     result += alphabet[(int)s[i] - 97];\n    }\n    return result;\n}\n/*\n\
    Create a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i] - 97];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\"\
    )\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]\
    \ - 97];", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[i]];\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet.at(s.at(i) - 'a' + 1);\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i) -\
    \ 'a' + 1);\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gfedcba\"\n    >>> rotate(\"asdfghjkl\")\n    \"\
    kjhieux\"\n    >>> rotate(\"gf\")\n    \"gfedcba\"\n    >>> rotate(\"et\")\n \
    \   \"gfedcba\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i)\
    \ - 'a' + 1);\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gfedcba\")\n    \"et\"\n    >>> rotate(\"kjhieux\")\n    \"\
    gfedcba\"\n    >>> rotate(\"gf\")\n    \"gfedcba\"\n    >>> rotate(\"et\")\n \
    \   \"gfedcba\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i)\
    \ - 'a' + 1);\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotate", "{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += s[(i + 2) % s.length()];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += s[(i + 2) % s.length()];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ in the manner described above.\n    For example:\n    >>> rotate(\"hi\")\n \
    \   \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n\
    \    \"gf\"\n    >>> rotate(\"ix\")\n    \"kj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s[(i + 2) % s.length()];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    kj\")\n    \"gf\"\n    >>> rotate(\"ix\")\n    \"kj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s[(i + 2) % s.length()];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    kj\")\n    \"gf\"\n    >>> rotate(\"ix\")\n    \"kj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s[(i + 2) % s.length()];\n    }\n    return result;\n\
    }\n/*\nCreate a function ", "{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i) - 2);\n \
    \   }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet.at(s.at(i) + 2);\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n  \
    \  \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i)\
    \ - 2);\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n  \
    \  \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i) + 2);\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string ", "{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += s[i % 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s[26 - (i % 26)];\n  \
    \  }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string as\
    \ an argument and\n    returns a string rotated 13 places down. \n    For example:\n\
    \    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"kjhnop\"\
    \n    >>> rot13(\"gf\")\n    \"gfk\"\n    >>> rot13(\"et\")\n    \"etx\"\n   \
    \ \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += s[((i + 13) % 26)];\n    }\n\
    \    return result;\n}\n/*\nCreate a function rot13 that takes a string as an\
    \ argument and\n    returns a string rotated 13 places up. \n    For example:\n\
    \    >>> rot13(\"nj\")\n    \"hi\"\n    >>> rot13(\"kjhnop\")\n    \"asdfghjkl\"\
    \n    >>> rot13(\"gfk\")\n    \"gf\"\n    >>> rot13(\"etx\")\n    \"et\"\n   \
    \ \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += s[((i + 13) % 26)];\n    }\n\
    \    return result;\n}\n/*\nCreate a function rot13 that takes a string as an\
    \ argument and\n    returns a string rotated 13 places left. \n    For example:\n\
    \    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"kjhnop\"\
    \n    >>> rot13(\"gf\")\n    \"gfk\"\n    >>> rot13(\"et\")\n    \"etx\"\n   \
    \ \n*/\nstring rot13(string s) \n{\n    string result = ", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i)\
    \ + 2); // rotate by 2 places\n    }\n    return result;\n}\n</code>\n<|/ a tags=c++,encryption,string\
    \ |>\n<| c |>\nThanks for your help. I understand what you are saying but I am\
    \ not sure how to implement it. Would you mind showing me how you would implement\
    \ this function?\n<|/ c |>\n<| c |>\nI added a code example to my answer. Hope\
    \ it helps.\n<|/ c |>\n<| c |>\nThanks so much! I understand it now. One last\
    \ question, how would I go about encrypting multiple strings at once? For example,\
    \ if I wanted to encrypt \"hi\", \"asdfghjkl\", and \"gf\", how would I go about\
    \ doing that?\n<|/ c |>\n<| c |>\nYou could create a function that takes a string\
    \ and returns a string. Then, call that function for each string you want to encrypt.\
    \ For example, `string encrypt(string s)` could be `string encrypt(string s){\
    \ return encrypt(s.at(0)) + encrypt(s.at(1)) + encrypt(s.at(2)); }`\n<|/ c |>\n\
    <| c |>\nI added an example to my answer. Hope it helps.\n<|/ c |>\n<| a tags=c++,encryption,string\
    \ |>\nThe other answers here are great, but I thought I'd add an alternative that\
    \ doesn't use strings at all. \n<code>\n#include <iostream>\n#include <cmath>\n\
    #include <cstdlib>\n#include <ctime>\n#include <cstring>\nusing namespace std;",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)(((int)s.at(i) - 97 + 2) % 26)];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 97 - 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated with the\
    \ alphabet being rotated. \n    The alphabet should be rotated in a manner such\
    \ that the letters \n    shift down by two multiplied to two places.\n    For\
    \ example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"et\"\n    >>> rotate(\"gf\")\n    \"asdfghjkl\"\n    >>> rotate(\"et\"\
    )\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated with the\
    \ alphabet being rotated. \n    The alphabet should be rotated in a manner such\
    \ that the letters \n    shift down by two multiplied to two places.\n    For\
    \ example:\n    >>> rotate(\"gfkj\")\n    \"hi\"\n    >>> rotate(\"et\")\n   \
    \ \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n\
    \    \"asdfghjkl\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 97 - 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated with the\
    \ alphabet being ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(s.at(i) - 'a' + 2) % 26];\n    }\n\
    \    return result;\n}", "{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i) - alphabet.length()]\
    \ + alphabet[(int)s.charAt(i) - alphabet.length()+1];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - alphabet.length()] + alphabet[(int)s.charAt(i) - alphabet.length()+1];\n \
    \   }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places clockwise.\n    For\
    \ example:\n    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"asdfghjkl\")\n\
    \    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n \
    \   \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - alphabet.length()] + alphabet[(int)s.charAt(i) - alphabet.length()+1];\n \
    \   }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places counter-clockwise.\n\
    \    For example:\n    >>> rot13(\"nj\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\"\
    )\n    \"asdfghjkl\"\n    >>> rot13(\"gf\")\n    \"gfz\"\n    >>> rot13(\"et\"\
    )\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - alphabet.length()] + alphabet[(int)s.charAt(i) - alphabet.length()+1];\n \
    \   }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places clockwise.\n    For\
    \ example:\n    >>> rot13(\"n", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n   \
    \ }\n    return result;\n}", "{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 'a') % 26];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=encryption,c++,string |>\n\
    <| a tags=encryption,c++,string |>\n<code>\n#include <iostream>\n#include <string>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += s.at(i + 2); \n    }\n    return result;\n}\n\
    /*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s.at(i + 2); \n    }\n\
    \    return result;\n}\n/*\nCreate a function rot13 that takes a string as an\
    \ argument and\n    returns a string rotated 13 places down. \n    For example:\n\
    \    >>> rot13(\"hi\")\n    \"nqo\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\
    \n    >>> rot13(\"gf\")\n    \"kj\"\n    >>> rot13(\"et\")\n    \"ix\"\n    \n\
    */\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += s.at(i + 13); \n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string rotated 13 places up. \n    For example:\n    >>> rot13(\"\
    nqo\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\n    >>> rot13(\"\
    kj\")\n    \"gf\"\n    >>> rot13(\"ix\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s.at(i + 13); \n    }\n    return result;\n}\n/*\nCreate\
    \ a function rot13 that takes a string as an argument and\n    returns a string\
    \ rotated 13 places left. \n    For example:\n    >>> rot13(\"hi\")\n    \"nqo\"\
    \n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"\
    kj\"\n    >>> rot13(\"et\")\n    \"ix\"\n    \n*/\nstring rot13(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < ", "{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') % 26];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a') + 26];\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,encryption,string |>\n<| c |>\nThis doesn't seem to\
    \ work. `encrypt(\"gf\")` returns `\"kj\"`, but `decrypt(\"kj\")` returns `\"\
    gf\"`.\n<|/ c |>\n<| c |>\nI fixed the problem with my original code. Thanks for\
    \ pointing it out. Now it works as intended.\n<|/ c |>\n<| c |>\nI fixed the problem\
    \ with my original code. Thanks for pointing it out. Now it works as intended.\n\
    <|/ c |>\n<| c |>\nThis code doesn't work. `encrypt(\"gf\")` returns `\"kj\"`,\
    \ but `decrypt(\"kj\")` returns `\"gf\"`.\n<|/ c |>\n<| c |>\nI fixed the problem\
    \ with my original code. Thanks for pointing it out. Now it works as intended.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include <string>\n#include\
    \ <algorithm>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s[i]\
    \ + 2) % 26)];\n    }\n    return result;\n}", "{\n    string result = \"\";\n\
    \    int length = s.length();\n    for(int i = 0; i < length; i++)\n    {\n  \
    \      result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\n\
    Create a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    int length\
    \ = s.length();\n    for(int i = 0; i < length; i++)\n    {\n        result +=\
    \ alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string rotated 13\
    \ places down. \n    For example:\n    >>> rot13(\"hi\")\n    \"nk\"\n    >>>\
    \ rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"j\"\n  \
    \  >>> rot13(\"et\")\n    \"r\"\n    \n*/\nstring rot13(string s) \n{\n    string\
    \ result = \"\";\n    int length = s.length();\n    for(int i = 0; i < length;\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string rotated 13 places up. \n    For example:\n    >>> rot13(\"\
    nk\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\n    >>> rot13(\"\
    j\")\n    \"gf\"\n    >>> rot13(\"r\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    int length = s.length();\n    for(int\
    \ i = 0; i < length; i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places left. \n    For example:\n\
    \    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\
    \n    >>> rot13(\"gf\")\n    \"j\"\n    >>> rot13(\"et\")\n    \"r\"\n    \n*/\n\
    string rot13(string ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)((s[i] + 2) % 26)];\n    }\n  \
    \  return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)((s[i] - 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rotate that takes a string as an argument and\n    returns a string\
    \ encrypted with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>>\
    \ rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n    \n*/\n\
    string rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)((s[i] + 2) % 26)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    lm\")\n    \"hi\"\n    >>> rotate(\"ewhjklnop\")\n    \"gf\" \n    >>> rotate(\"\
    ix\")\n    \"kj\" \n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)((s[i]\
    \ - 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string encrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)] + alphabet[(int)s.charAt(i)+1];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)-(int)alphabet.length()] + alphabet[(int)s.charAt(i)-(int)alphabet.length()+1];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n    >>> rotate(\"\
    gfedcba\")\n    \"hi\"\n    \n*/\nstring rotate(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)+(int)alphabet.length()];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n    >>> rotate(\"\
    gfedcba\")\n    \"hi\"\n    \n*/\nstring rotate(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)-(int)alphabet.length()];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n    >>> rotate(\"\
    gfedcba\")\n    \"hi\"\n    \n*/\nstring rotate(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)+(int)alphabet.length()];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n\
    /*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gf\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"\
    gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"asdfghjkl\"\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> rotate(\"hi\")\n\
    \    \"gf\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\"\
    )\n    \"hi\"\n    >>> rotate(\"et\")\n    \"asdfghjkl\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gf\"\n    >>>\
    \ rotate(\"", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"\
    gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>>\
    \ rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n\
    \    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=encryption,c++,string |>\n<| c |>\nThanks for your help!\
    \ I appreciate it!\n<|/ c |>\n<| a tags=encryption,c++,string |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <cstring>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += std.string(s.at(i) + s.at(i + 1)).swapcase();\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string(s.at(i)\
    \ - s.at(i + 1)).swapcase();\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ the given number of places.\n    For example:\n    >>> rotate(\"hi\", 2)\n \
    \   \"hi\"\n    >>> rotate(\"hi\", -2)\n    \"hi\"\n    \n*/\nstring rotate(string\
    \ s, int n) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += std.string(s.at(i) + s.at(i + n)).swapcase();\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated the given number of places.\n\
    \    For example:\n    >>> rotate(\"hi\", 2)\n    \"hi\"\n    >>> rotate(\"hi\"\
    , -2)\n    \"hi\"\n    \n*/\nstring rotate(string s, int n) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string(s.at(i)\
    \ - s.at(i + n)).swapcase();\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ the given number of places.\n    For example:\n    >>> rotate(\"hi\", 2)\n \
    \   \"hi\"\n    >>> rotate(\"hi\", -2)\n    \"hi\"\n    \n*/\nstring rotate(string\
    \ s, int n) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += std.string(s.at(i) + s.at(i + n)).swapcase();\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated the given number of places.\n",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n}", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.at(i)] + alphabet[(int)s.at(i)+1];\n    }\n\
    \    return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)] - alphabet[(int)s.at(i)] + alphabet[(int)s.at(i)+1];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"\
    gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>>\
    \ rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et", "{\n\
    \    int len = s.length();\n    string result = \"\";\n    for(int i = 0; i <\
    \ len; i++)\n    {\n        result += alphabet[(int)s[i] - 'a'];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(int)s[i] - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string encrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(int)s[i] - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"lm\")\n    \"hi\"\n    >>> rotate(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> rotate(\"ix\")\n    \"et\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    int len = s.length();\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; i++)\n    {\n        result += alphabet[(int)s[i] - 'a'];\n  \
    \  }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 'a')\
    \ + 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\
    \n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n \
    \   \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 'a')\
    \ + 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n  \
    \  \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 'a')\
    \ % 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n  \
    \  ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you for your answer. I tried your\
    \ code, but I got this error: \"error: expected primary-expression before 'int'\"\
    \ on the line \"result += alphabet[(int)s.at(i)];\"\n<|/ c |>\n<| c |>\nI fixed\
    \ the error, but now I get this error: \"error: invalid conversion from 'char'\
    \ to 'const char*' [-fpermissive]\" on the line \"result += alphabet[(int)s.at(i)];\"\
    \n<|/ c |>\n<| c |>\nI fixed the error, but now I get this error: \"error: invalid\
    \ conversion from 'char' to 'const char*' [-fpermissive]\" on the line \"result\
    \ += alphabet[(int)s.at(i)];\"\n<|/ c |>\n<| c |>\nI fixed the error, but now\
    \ I get this error: \"error: invalid conversion from 'char' to 'const char*' [-fpermissive]\"\
    \ on the line \"result += alphabet[(int)s.at(i)];\"\n<|/ c |>\n<| c |>\nI fixed\
    \ the error, but now I get this error: \"error: invalid conversion from 'char'\
    \ to 'const char*' [-fpermissive]\" on the line \"result += alphabet[(int)s.at(i)];\"\
    \n<|/ c |>\n<| a dscore=0 |>\nI fixed the error, but now I get this error: \"\
    error: invalid conversion from 'char' to 'const char*' [-fpermissive]\" on the\
    \ line \"result += alphabet[(int)s.at(i)];\"", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[((int)s[i]\
    \ + 2) % 26];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[((int)s[i] + 2) % 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places clockwise.\n    For example:\n    >>> rot13(\"hi\"\
    )\n    \"nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"\
    gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[((int)s[i] + 13) % 26];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string rotated 13 places counterclockwise.\n    For example:\n\
    \    >>> rot13(\"nj\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\
    \n    >>> rot13(\"gf\")\n    \"gfz\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n\
    */\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += alphabet[((int)s[i] + 13) % 26];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places clockwise.\n    For\
    \ example:\n    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"asdfghjkl\")\n\
    \    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n \
    \   \"et\"\n    \n*/\nstring rot", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places clockwise. \n    For example:\n    >>> rot13(\"hi\"\
    )\n    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n    \"gkj\"\n    >>> rot13(\"gf\"\
    )\n    \"gfz\"\n    >>> rot13(\"et\")\n    \"etx\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 13];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string rotated 13 places counterclockwise. \n    For example:\n\
    \    >>> rot13(\"nk\")\n    \"hi\"\n    >>> rot13(\"gkj\")\n    \"asdfghjkl\"\n\
    \    >>> rot13(\"gfz\")\n    \"gf\" \n    >>> rot13(\"etx\")\n    \"et\"\n   \
    \ \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 13];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string rotated 13 places clockwise.\
    \ \n    For example:\n    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"asdfghjkl\"\
    )\n    \"gkj\"\n    >>> rot13(\"gf\")\n    \"gfz\"\n    >>> rot13(\"et\")\n  \
    \  \"etx\"\n    \n*/\nstring rot13(string ", "{\n    string result = \"\";\n \
    \   for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)(((int)s.at(i) - 2) % 26)];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> rotate(\"hi\")\n\
    \    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)(((int)s.at(i) + 2) % 26)];\n    }\n \
    \   return result;\n}\n/*\nCreate a function rotate that takes a string as an\
    \ argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)(((int)s.at(i) - 2) % 26)];\n    }\n \
    \   return result;\n}\n/*\nCreate a function rotate that takes a string as an\
    \ argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters ", "{\n\
    \    string result = \"\";\n    int len = s.length();\n    for (int i = 0; i <\
    \ len; i++)\n    {\n        result += alphabet[(int)s[i]];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    int len = s.length();\n    for (int i = 0; i < len; i++)\n    {\n\
    \        result += alphabet[(int)s[len-i-1]];\n    }\n    return result;\n}\n\
    /*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n\
    */\nstring rotate(string s) \n{\n    string result = \"\";\n    int len = s.length();\n\
    \    for (int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s[len-i-1]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    int len = s.length();\n    for (int i = 0; i < len; i++)\n    {\n\
    \        result += alphabet[(int)s[len-i-1]];\n    }\n    return result;\n}\n\
    /*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"gf\")\n    \"kj\"\n    >>> ", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += s[(i + s.Length())\
    \ % s.length()];\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s[(i + s.Length()) % s.length()];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"kj\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += s[(i + s.Length()) % s.length()];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s[(i + s.Length()) % s.length()];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s[(i + s.Length()) % s.length()];\n    }\n    return\
    \ result;\n", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't seem to work. `encrypt(\"\
    gf\")` returns `\"kj\"`, but should be `\"kjf\"`.\n<|/ c |>\n<| c |>\nYeah, I\
    \ noticed that after I posted it. I fixed it now.\n<|/ c |>\n<| c |>\nThe `rotate`\
    \ function doesn't seem to work. `encrypt(\"gf\")` returns `\"kj\"`, but should\
    \ be `\"kjf\"`.\n<|/ c |>\n<| c |>\nYeah, I noticed that after I posted it. I\
    \ fixed it now.\n<|/ c |>\n<| a tags=c++,encryption,string |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <algorithm>\n#include <cctype>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += s[(i + 2) % s.length()];\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work. Try encrypting \"hi\"\
    \ with your code.\n<|/ c |>\n<| c |>\nI tested it and it works. I used the string\
    \ \"hi\" as input and it returned \"lm\"\n<|/ c |>\n<| c |>\nIt doesn't work for\
    \ me either. Try encrypting \"hi\" with your code.\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works. I used the string \"hi\" as input and it returned \"lm\"\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I used the string \"hi\" as input\
    \ and it returned \"lm\"\n<|/ c |>\n<| a dscore=0 |>\n<code>\nstring encrypt(string\
    \ s)\n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s[(i + 2) % s.length()];\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=encryption,c++ |>\n<| c |>\nThis doesn't work. Try encrypting\
    \ \"hi\" with your code.\n<|/ c |>\n<| c |>\nI tested it and it works. I used\
    \ the string \"hi\" as input and it returned \"lm\"\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works. I used the string \"hi\" as input and it returned \"lm\"\n\
    <|/ c |>\n<| c |>\nI tested it and it works. I used the string \"hi\" as input\
    \ and it returned \"lm\"\n<|/ c |>\n<| c |>\nI tested it and it works. I used\
    \ the string \"hi\" as input and it returned \"lm\"\n<|/ c |>\n<| a tags=encryption,c++\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <cmath>", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,encryption,string |>\n<| c |>\nThanks so much! I appreciate\
    \ it!\n<|/ c |>\n<| c |>\nNo problem! I hope you get it working as you intended\
    \ it to. Good luck!\n<|/ c |>\n<| c |>\nThanks so much! I appreciate it!\n<|/\
    \ c |>\n<| a tags=c++,encryption,string |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <cstring>\nusing namespace std;", "{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)(((int)s.at(i) - 97 - 2) % 26)];\n   \
    \ }\n    return result;\n}\n/*\nCreate a function rotate that takes a string as\
    \ an argument and\n    returns a string rotated 90 degrees clockwise.\n    For\
    \ example:\n    >>> rotate(\"hi\")\n    \"yi\"\n    >>> rotate(\"gf\")\n    \"\
    kf\"\n    >>> rotate(\"et\")\n    \"ih\"\n    \n*/\nstring rotate(string s) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)(((int)s.at(i) - 97 + 2) % 26)];\n    }\n   \
    \ return result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated 90 degrees counterclockwise.\n    For example:\n\
    \    >>> rotate(\"yi\")\n    \"hi\"\n    >>> rotate(\"kf\")\n    \"gf\"\n    >>>\
    \ rotate(\"ih\")\n    \"et\"\n    \n*/\nstring rotate90(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)(((int)s.at(i) - 97 - 2) % 26)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated 180 degrees clockwise.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"ih\"\n    >>> rotate(\"gf\")\n    \"gfh\"\n    >>> rotate(\"et\"\
    )\n    \"et\"\n    \n*/\nstring rotate180(string s) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}", "{\n    string alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\";\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += alphabet[(alphabet.size()\
    \ - 1 - alphabet.find(s.at(i))) % alphabet.size()];\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=encryption,c++ |>\n<| c |>\nThis doesn't seem to work.\
    \ Try encrypting \"asdfghjkl\" and see what happens.\n<|/ c |>\n<| c |>\nIt works.\
    \ I tested it before posting. Try it again and see if it works.\n<|/ c |>\n<|\
    \ c |>\nIt doesn't work for me on ideone. Try it on ideone and see what happens.\n\
    <|/ c |>\n<| c |>\nIt works on ideone. Try it again and see if it works.\n<|/\
    \ c |>\n<| c |>\nIt doesn't work for me on ideone. Try it on ideone and see what\
    \ happens.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n#include\
    \ <string>\n#include <algorithm>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i)\
    \ - 'a' + 1);\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet.at(s.at(i) - 'a' + 1);\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n   \
    \ >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet.at(s.at(i) - 'a' + 1);\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"gfkj\")\n    \"hi\"\n   \
    \ >>> rotate(\"et\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n\
    \    >>> rotate(\"gf\")\n    \"asdfghjkl\"\n    \n*/\nstring rotate(string s)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n  \
    \  {\n        result += alphabet.at(s.at(i) - 'a' + 1);\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down ", "{\n    string\
    \ result = \"\";\n    int len = s.length();\n    for (int i = 0; i < len; i++)\n\
    \    {\n        result += alphabet[(int)s[i] + 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    int len\
    \ = s.length();\n    for (int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s[i]\
    \ - 2];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\
    \n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n \
    \   \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    int len\
    \ = s.length();\n    for (int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s[i]\
    \ + 2];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gfkj\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n\
    \    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    int len\
    \ = s.length();\n    for (int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s[i]\
    \ - 2];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gfkj\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n\
    \    \n*/\nstring ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)(((int)s.at(i) + 2) % 26)];\n \
    \   }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)(((int)s.at(i) - 2) % 26)];\n    }\n    return result;\n}\n\
    /*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gf\"\n    >>>\
    \ rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>>\
    \ rotate(\"et\")\n    \"asdfghjkl\"\n    \n*/\nstring rotate(string s) \n{\n \
    \   string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n  \
    \      result += alphabet[(int)(((int)s.at(i) + 2) % 26)];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to ", "{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i)\
    \ - 'a' + 1);\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet.at(s.at(i) - 'a' + 1);\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=0 |>\n<| c |>\nI appreciate your answer, but this doesn't\
    \ really answer the question. I'm looking for a way to do this without using any\
    \ libraries.\n<|/ c |>\n<| c |>\nI understand your question, but I believe that\
    \ your answer is incorrect. Your code doesn't even compile. `string encrypt(string\
    \ s)` should be `string encrypt(string s)` and the same for decrypt. Also, `string\
    \ encrypt(string s)` should be `string decrypt(string s)`\n<|/ c |>\n<| c |>\n\
    Thanks for pointing that out. I fixed the code in the answer.\n<|/ c |>\n<| a\
    \ tags=c++,encryption,string |>\n<code>\n#include <iostream>\n#include <string>\n\
    #include <cstring>\nusing namespace std;", "{\n    int len = s.length();\n   \
    \ string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) - alphabet[0]];\n    }\n    return result;\n}\n\
    /*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    int len = s.length();\n    string\
    \ result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ + alphabet[0]];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated in the\
    \ manner described above.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"gf\")\n    \"gfkj\"\n    >>> rotate(\"et\")\n    \"etx\"\n\
    \    \n*/\nstring rotate(string s) \n{\n    int len = s.length();\n    string\
    \ result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - alphabet[0]];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated in the\
    \ manner described above.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"gf\")\n    \"gfkj\"\n    >>> rotate(\"et\")\n    \"etx\"\n\
    \    \n*/\nstring rotate(string s) \n{\n    int len = s.length();\n    string\
    \ result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ + alphabet[0]];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated in the\
    \ manner described above.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"gf\")\n    \"gfkj\"\n    >>> rotate(\"et\")\n    \"etx\"\n\
    \    \n*/\nstring rotate(string s) \n{\n    int len = s.length();\n    string\
    \ result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - alphabet[0]];\n    }\n    return result;", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ + 2];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places down. \n    For example:\n    >>> rot13(\"hi\")\n\
    \    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\"\
    )\n    \"gf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) + 13];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string rotated 13 places up. \n    For example:\n    >>> rot13(\"\
    nk\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\n    >>> rot13(\"\
    gf\")\n    \"gfz\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 13];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string rotated 13 places right. \n    For example:\n    >>> rot13(\"\
    hi\")\n    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"\
    gf\")\n    \"gfz\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string ", "{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i) + 2)\
    \ % 26)];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)(((int)s.at(i) - 2) % 26)];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string rotated 13 places clockwise.\n    For example:\n    >>>\
    \ rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n \
    \   >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\n\
    string rot13(string s) \n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i) + 13)\
    \ % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string rotated 13 places counter-clockwise.\n\
    \    For example:\n    >>> rot13(\"nk\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\"\
    )\n    \"asdfghjkl\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\"\
    )\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 13) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that\
    \ takes a string as an argument and\n    returns a string rotated 13 places clockwise.\n\
    \    For example:\n    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"asdfghjkl\"\
    )\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> ", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += s.at(i + 2); \n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s.at(i + 2); \n    }\n    return result;\n}\n/*\nCreate\
    \ a function rot13 that takes a string as an argument and\n    returns a string\
    \ encrypted with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"\
    asdfghjkl\")\n    \"gkjhbnm\"\n    >>> rot13(\"gf\")\n    \"kj\"\n    >>> rot13(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s.at(i\
    \ + 13); \n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rot13(\"nj\")\n    \"hi\"\n    >>> rot13(\"gkjhbnm\")\n    \"asdfghjkl\"\
    \n    >>> rot13(\"kj\")\n    \"gf\" \n    >>> rot13(\"ix\")\n    \"et\"\n    \n\
    */\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += s.at(i + 13); \n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by two\
    \ multiplied to two places.\n    For example:", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += s.charAt(i)\
    \ + s.charAt(i);\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s.charAt(i) - s.charAt(i);\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 degrees clockwise.\n    For example:\n    >>> rot13(\"hi\"\
    )\n    \"nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"\
    gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s.charAt(i) + 13;\n    }\n    return result;\n}\n/*\n\
    Create a function rot13 that takes a string as an argument and\n    returns a\
    \ string rotated 13 degrees counterclockwise.\n    For example:\n    >>> rot13(\"\
    nj\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\n    >>> rot13(\"\
    gf\")\n    \"gfz\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s.charAt(i) - 13;\n    }\n    return result;\n}\n/*\n\
    Create a function rot13 that takes a string as an argument and\n    returns a\
    \ string rotated 13 degrees clockwise.\n    For example:\n    >>> rot13(\"nj\"\
    )\n    \"hi\"\n    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\n    >>> rot13(\"\
    gf\")\n    \"gfz\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int ", "{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i)\
    \ - 'a' + 1);\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet.at(s.at(i) - 'a' + 1);\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n\
    \    >>> rotate(\"asdfghjkl\")\n    \"etkjhgfdsa\"\n    >>> rotate(\"gf\")\n \
    \   \"gfedcba\"\n    >>> rotate(\"et\")\n    \"etkjhgfdsa\"\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet.at(s.at(i) - 'a' + 1);\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> rotate(\"gfedcba\"\
    )\n    \"gfedcba\"\n    >>> rotate(\"etkjhgfdsa\")\n    \"etkjhgfdsa\"\n    >>>\
    \ rotate(\"gf\")\n    \"gfedcba\"\n    >>> rotate(\"et\")\n    \"etkjhgfdsa\"\n\
    \    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i) -\
    \ 'a' + 1);\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[i] - 97];\n    }\n    return result;\n\
    }", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n \
    \   {\n        result += alphabet[(int)s.charAt(i) + 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 2];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gfedcba\"\n    >>> rotate(\"gf\")\n    \"hi\"\n\
    \    >>> rotate(\"et\")\n    \"gfedcba\"\n    \n*/\nstring rotate(string s) \n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) + 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"gfedcba\")\n    \"hi\"\n\
    \    >>> rotate(\"hi\")\n    \"gfedcba\"\n    >>> rotate(\"gfedcba\")\n    \"\
    hi\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 2];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gfedcba\")\n    \"hi\"\n    >>> rotate(\"hi\")\n    \"gfedcba\"\
    \n    >>> rotate(\"gf", "{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += std.string(s.at(i)).rotate_left(2);\n\
    \    }\n    return result;\n}\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't\
    \ work. `rotate_left` returns a `char`, not a `string`.\n<|/ c |>\n<| c |>\n:\
    \ It does work. `rotate_left` returns a `char`, not a `string`. `string` has a\
    \ constructor that takes a `char`.\n<|/ c |>\n<| c |>\n: Yes, it does. `rotate_left`\
    \ returns a `char`, not a `string`. `string` has a constructor that takes a `char`.\
    \ `rotate_left` returns a `char`, not a `string`. `string` has a constructor that\
    \ takes a `char`.\n<|/ c |>\n<| c |>\n: It does work. `rotate_left` returns a\
    \ `char`, not a `string`. `string` has a constructor that takes a `char`. `rotate_left`\
    \ returns a `char`, not a `string`. `string` has a constructor that takes a `char`.\n\
    <|/ c |>\n<| c |>\n: Yes, it does. `rotate_left` returns a `char`, not a `string`.\
    \ `string` has a constructor that takes a `char`. `rotate_left` returns a `char`,\
    \ not a `string`. `string` has a constructor that takes a `char`.\n<|/ c |>\n\
    <| a dscore=1 |>\n<code>\nstring encrypt(string s)\n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string(s.at(i)).rotate_left(2);\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=string,c++ |>\n<| c |>\nThis\
    \ doesn't work. `rotate_left` returns a `char`, not a `string`.\n<|/ c |>\n<|\
    \ c |>\n: It does work. `rotate_left` returns a `char`, not a `string`. `string`\
    \ has a constructor that takes a `char`.\n<|/ c |>\n<| c |>\n: It does work. `rotate_left`\
    \ returns a `char`, not a `string`. `string` has a constructor that takes a `char`.\
    \ `rotate_left` returns a `char`, not a `string`. `string` has a constructor that\
    \ takes a `char`.\n<|/ c |>\n<| c |>\n: It does work. `rotate_left` returns a\
    \ `char`, not a `string`. `string` has a constructor that takes a `char`. ", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += s.at(i + 2); //add two to the index\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s.at(i + 2); //add two\
    \ to the index\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated in the manner\
    \ described above.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n\
    \    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gfedcba\"\n\
    \    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s.at(i); //add one to\
    \ the index\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gfedcba\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s.at(i); //add one to the index\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfedcba\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    et\")\n    \"gfedcba\"\n    \n*/\nstring rotate(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s.at(i);\
    \ //add one to the index\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ in the manner describe", "{\n    string result = \"\";\n    for(int i = 0; i\
    \ < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 97];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) - 97];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rotate that takes a string as an argument and\n    returns a string\
    \ rotated with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>>\
    \ rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>>\
    \ rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) - 97];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rotate that takes a string as an argument and\n    returns a string\
    \ rotated with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>>\
    \ rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>>\
    \ rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) - 97];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rotate that takes a string as an argument and\n    returns a string\
    \ rotated with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> rotate(\"hi\")", "{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at(i))).at(alphabet.at(s.at",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet.at(s.at(i) - 'a' + 1);\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i) -\
    \ 'a' + 1);\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\
    \n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n \
    \   \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i) -\
    \ 'a' + 1);\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n  \
    \  \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i) - 'a'\
    \ + 1);\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n  \
    \  ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - alphabet.length()];\n  \
    \  }\n    return result;\n}", "{\n    int len = s.length();\n    string result\
    \ = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    int\
    \ len = s.length();\n    string result = \"\";\n    for(int i = 0; i < len; i++)\n\
    \    {\n        result += alphabet[(int)s[len-i-1]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gf\"\n    >>>\
    \ rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>>\
    \ rotate(\"et\")\n    \"asdfghjkl\"\n    \n*/\nstring rotate(string s) \n{\n \
    \   int len = s.length();\n    string result = \"\";\n    for(int i = 0; i < len;\
    \ i++)\n    {\n        result += alphabet[(int)s[len-i-1]];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> rotate(\"hi\")\n\
    \    \"gf\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\"\
    )\n    \"hi\"\n    >>> rotate(\"et\")\n    \"asdfghjkl\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    int len = s.length();\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; i++)\n    {\n        result += alphabet[(int)s[len-i-1]];\n  \
    \  }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.", "{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ in the manner described above.\n    For example:\n    >>> rotate(\"hi\")\n \
    \   \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n\
    \    \"gf\"\n    >>> rotate(\"ix\")\n    \"et\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    kj\")\n    \"gf\"\n    >>> rotate(\"ix\")\n    \"et\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    kj\")\n    \"gf\"\n    >>> rotate(\"ix\")\n    \"et\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string ", "{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ in the manner described above.\n    For example:\n    >>> rotate(\"hi\")\n \
    \   \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\"\
    )\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < ", "{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n    }\n\
    \    return result;\n}", "{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i) - 97\
    \ + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)(((int)s.at(i) - 97 - 2) % 26)];\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work. Try encrypting \"\
    abc\" with your code.\n<|/ c |>\n<| c |>\nI tested it and it works fine. Can you\
    \ give an example where it doesn't work?\n<|/ c |>\n<| c |>\nI tested it and it\
    \ works fine. Can you give an example where it doesn't work?\n<|/ c |>\n<| c |>\n\
    I tested it and it works fine. Can you give an example where it doesn't work?\n\
    <|/ c |>\n<| c |>\nI tested it and it works fine. Can you give an example where\
    \ it doesn't work?\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\nusing namespace std;\nstring alphabet\
    \ = \"abcdefghijklmnopqrstuvwxyz\";\nstring encrypt(string s)\n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}\nstring decrypt(string s)\n\
    {\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)(((int)s.at(i) - 97 - 2) % 26)];\n    }\n   \
    \ return result;\n}", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += s.at(i + 2); \n    }\n    return result;\n}\n\
    /*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s.at(i + 2); \n    }\n\
    \    return result;\n}\n/*\nCreate a function rotate that takes a string as an\
    \ argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s.at(i + 2); \n    }\n    return result;\n}\n/*\nCreate\
    \ a function rotate that takes a string as an argument and\n    returns a string\
    \ decrypted with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> rotate(\"lm\")\n    \"hi\"\n    >>> rotate(\"\
    ewhjklnop\")\n    \"asdfghjkl\"\n    >>> rotate(\"ix\")\n    \"et\"\n    \n*/\n\
    string rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += s.at(i + 2); \n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string encrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> rotate(\"hi\")\n\
    \    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklno", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s[i]\
    \ + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)(((int)s[i] + 2) % 26)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above. \n    For example:\n    >>>\
    \ rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>>\
    \ rotate(\"kj\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)(((int)s[i] + 2) % 26)];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated in the manner described above. \n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    kj\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s[i]\
    \ + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated in the manner\
    \ described above. \n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n  \
    \  \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s[i]\
    \ + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument ", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)((s[i] +\
    \ shift) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)((s[i] - shift) % 26)];\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a tags=encryption,c++,python |>\n<| c |>\nThe `shift`\
    \ variable is unnecessary. Just use `alphabet[(int)((s[i] + shift) % 26)]`.\n\
    <|/ c |>\n<| c |>\nThanks, I didn't know that. I'll edit my answer.\n<|/ c |>\n\
    <| a tags=encryption,c++,python |>\n<code>\ndef encrypt(s):\n    alphabet = \"\
    abcdefghijklmnopqrstuvwxyz\"\n    shift = 2\n    enc = \"\"\n    for c in s:\n\
    \        enc += alphabet[alphabet.find(c) + shift]\n    return enc", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[i]];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string encrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> rotate(\"hi\")\n\
    \    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> rotate(\"lm\")\n\
    \    \"hi\"\n    >>> rotate(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    ix\")\n    \"et\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a' + 2) % 26];\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(s.at(i) - 'a' + 2) % 26];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"gfkj\"\
    \n    >>> rotate(\"et\")\n    \"etx\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a' + 1) % 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"gfkj\"\n    >>> rotate(\"\
    et\")\n    \"etx\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a' + 1) % 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated in the\
    \ manner described above.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"gf\")\n    \"gfkj\"\n    >>> rotate(\"et\")\n    \"etx\"\n\
    \    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 'a'\
    \ + 1) % 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate ", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += s.charAt(i) + s.charAt(i);\n    }\n    return result;\n}", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n\
    /*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"\
    gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>>\
    \ rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n\
    \    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[i]];\n    }\n    return result;\n}",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return result;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThank you so much for taking the time\
    \ to write this out. I'm going to try this out and see how it goes. Thanks again!\n\
    <|/ c |>\n<| c |>\nI got it to work. Thank you so much for your help! I really\
    \ appreciate it!\n<|/ c |>\n<| a tags=encryption,c++,string |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <cstring>\nusing namespace std;", "{\n\
    \    int len = s.length();\n    string result = \"\";\n    for(int i = 0; i <\
    \ len; i++)\n    {\n        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n\
    \    return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    int\
    \ len = s.length();\n    string result = \"\";\n    for(int i = 0; i < len; i++)\n\
    \    {\n        result += alphabet[(s.at(i) - 'a') + 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    kj\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(s.at(i) - 'a' + 26) % 26];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    kj\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(s.at(i) - 'a' + 26) % 26];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    kj\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(s.at(i) - 'a' + 26) % 26", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\
    \n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n \
    \   \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n  \
    \  \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n  \
    \  \n*/\nstring ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s[i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length()\
    \ - 1 - i]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string encrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n  \
    \  \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"\
    gf\" \n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length()\
    \ - 1 - i]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"lm\")\n    \"hi\"\n    >>> rotate(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"ix\")\n    \"et\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[i]];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rotate that takes a string as an argument and\n    returns a string\
    \ encrypted with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>>\
    \ rotate(\"asdfghjkl\")\n", "{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i] - 97];\n \
    \   }\n    return result;\n}", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s[i] - 97];\n    }\n    return result;\n}", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet.at(s.at(i) - 'a' + 1);\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c++,encryption,string |>\n<| c |>\nThanks so much for the\
    \ help! I appreciate it!\n<|/ c |>\n<| c |>\nNo problem! If this answer solved\
    \ your problem, please mark it as accepted so others can see that your question\
    \ has been answered. Thanks!\n<|/ c |>\n<| c |>\nI did but I have to wait 2 minutes\
    \ before I can mark it as the accepted answer\n<|/ c |>\n<| c |>\nOh okay. Thanks\
    \ for letting me know!\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <cstdlib>\n#include <ctime>\n#include <cmath>\n#include\
    \ <cstring>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n  \
    \  \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"\
    gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n   \
    \ >>> ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet.at(s.at(i) - 'a' + 1);\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i) -\
    \ 'a' + 1);\n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string encrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"kjhnop\"\
    \n    >>> rot13(\"gf\")\n    \"gfz\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n\
    */\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i) - 'a' + 13);\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rot13(\"\
    nj\")\n    \"hi\"\n    >>> rot13(\"kjhnop\")\n    \"asdfghjkl\"\n    >>> rot13(\"\
    gfz\")\n    \"gf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet.at(s.at(i) - 'a' + 13);\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string encrypted with the alphabet being rotated. \n    The alphabet\
    \ should be rotated in a man", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ + 2];\n    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string(s.at(i) + s.at(i\
    \ + 1)).swapcase();\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string(s.at(i) - s.at(i + 1)).swapcase();\n    }\n\
    \    return result;\n}\n/*\nCreate a function rotate that takes a string as an\
    \ argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    gf\")\n    \"gfkj\"\n    >>> rotate(\"et\")\n    \"etx\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string(s.at(i) + s.at(i + 1)).swapcase();\n    }\n\
    \    return result;\n}\n/*\nCreate a function rotate that takes a string as an\
    \ argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    gf\")\n    \"gfkj\"\n    >>> rotate(\"et\")\n    \"etx\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string(s.at(i) - s.at(i + 1)).swapcase();\n    }\n\
    \    return result;\n}\n/*\nCreate a function rotate that takes a string as an\
    \ argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    gf\")\n    \"gfkj\"\n    >>> rotate(\"et\")\n    \"etx\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string(s.at(i) + s.at(i", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i)\
    \ - 2);\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet.at(s.at(i) + 2);\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"\
    gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet.at(s.at(i) - 2);\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i) +\
    \ 2);\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes a\
    \ string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"\
    et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < ", "{\n    string result = \"\";\n    int len\
    \ = s.length();\n    for(int i = 0; i < len; ++i)\n    {\n        result += alphabet[((s[i]\
    \ + alphabet[len]) % 26)];\n    }\n    return result;\n}", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += std.string(s.at(i)\
    \ + s.at(i + 1)).swapcase();\n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string(s.at(i) - s.at(i + 1)).swapcase();\n    }\n\
    \    return result;\n}\n/*\nCreate a function rotate that takes a string as an\
    \ argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"\
    gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string(s.at(i) + s.at(i + 1)).swapcase();\n    }\n\
    \    return result;\n}\n/*\nCreate a function rotate that takes a string as an\
    \ argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string(s.at(i) - s.at(i + 1)).swapcase();\n    }\n\
    \    return result;\n}\n/*\nCreate a function rotate that takes a string as an\
    \ argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"kj\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n   \
    \ \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[((int)s[i] + 2) % 26];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[((int)s[i]\
    \ + 2) % 26];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that\
    \ takes a string as an argument and\n    returns a string rotated 13 places clockwise.\
    \ \n    For example:\n    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"asdfghjkl\"\
    )\n    \"kjhngfdsa\"\n    >>> rot13(\"gf\")\n    \"gfz\"\n    >>> rot13(\"et\"\
    )\n    \"etx\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[((int)s[i]\
    \ + 13) % 26];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that\
    \ takes a string as an argument and\n    returns a string rotated 13 places counterclockwise.\
    \ \n    For example:\n    >>> rot13(\"nj\")\n    \"hi\"\n    >>> rot13(\"kjhngfdsa\"\
    )\n    \"asdfghjkl\"\n    >>> rot13(\"gfz\")\n    \"gf\"\n    >>> rot13(\"etx\"\
    )\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[((int)s[i]\
    \ + 13) % 26];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that\
    \ takes a string as an argument and\n    returns a string rotated 13 places clockwise.\
    \ \n    For example:\n    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"asdfghjkl\"\
    )\n    \"kjhngfdsa\"\n    >>> rot13(\"gf\")\n    \"gfz\"\n    >>> rot13(\"et\"\
    )\n    \"", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    kj\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    lm\")\n    \"hi\"\n    >>> rotate(\"ewhjklnop\")\n    \"gf\" \n    >>> rotate(\"\
    ix\")\n    \"kj\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    kj\")\n    \"gf\" \n    \n*/\nstring ", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet.at(s.at(i) -\
    \ 'a' + 1);\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet.at(s.at(i) - 'a' + 1);\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet.at(s.at(i) - 'a' + 2);\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet.at(s.at(i) - 'a' + 2);\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int ", "{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int i =\
    \ 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}", "{\n    string result = \"\
    \";\n    int len = s.length();\n    for (int i = 0; i < len; i++)\n    {\n   \
    \     result += alphabet[(s.at(i) - 'a' + 2) % 26];\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=encryption,c++,string |>\n<| a dscore=0 |>\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <cstring>\nusing namespace std;", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[i] + 2];\n    }\n    return result;\n}\n/*\n\
    Create a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i] - 2];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\"\
    )\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]\
    \ + 2];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]\
    \ - 2];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]\
    \ + 2];\n    }\n    return result;\n", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string encrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\"\
    )\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    lm\")\n    \"hi\"\n    >>> rotate(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    ix\")\n    \"et\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"e", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)]\
    \ + alphabet[(int)s.charAt(i)+1];\n    }\n    return result;\n}\n/*\nCreate a\
    \ function decrypt that takes a string as an argument and\n    returns a string\
    \ decrypted with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"\
    ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\n\
    string decrypt(string s) \n{\n    string result = \"\";\n    for(int i = 0; i\
    \ < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)-(int)s.charAt(i)]\
    \ + alphabet[(int)s.charAt(i)+(int)s.charAt(i)+1];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n   \
    \ >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n\
    \    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+(int)s.charAt(i)+",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s[i] + 2];\n    }\n    return result;\n}\n/*\n\
    Create a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i] - 2];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]\
    \ + 2];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"lm\")\n    \"hi\"\n    >>> rotate(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"ix\")\n    \"et\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[i] - 2];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated with the alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n\
    */\n", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[i] + 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i] - 2];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[i] + 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"lm\")\n    \"hi\"\n    >>>\
    \ rotate(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> rotate(\"ix\")\n    \"et\"\
    \n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i] - 2];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklno", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) - alphabet.length()];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ + alphabet.length()];\n    }\n    return result;\n}\n/*\nCreate a function rot13\
    \ that takes a string as an argument and\n    returns a string rotated 13 places.\
    \ \n    For example:\n    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"asdfghjkl\"\
    )\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n\
    \    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 13];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string rotated 13 places. \n    For\
    \ example:\n    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n\
    \    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n \
    \   \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ + 13];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string rotated 13 places. \n    For\
    \ example:\n    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n\
    \    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n \
    \   \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n\
    \    ", "{\n    int len = s.length();\n    string result = \"\";\n    for(int\
    \ i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s[i] - alphabet[0]];\n\
    \    }\n    return result;\n}", "{\n    int len = s.length();\n    string result\
    \ = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    int\
    \ len = s.length();\n    string result = \"\";\n    for(int i = 0; i < len; i++)\n\
    \    {\n        result += alphabet[(int)s[len-i-1]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n   \
    \ >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n\
    \    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    int len = s.length();\n    string result = \"\";\n    for(int i = 0; i <\
    \ len; i++)\n    {\n        result += alphabet[(int)s[len-i-1]];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> rotate(\"hi\")\n\
    \    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\"\
    )\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    int len = s.length();\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; i++)\n    {\n        result += alphabet[(int)s[len-i-1]];\n  \
    \  }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.", "{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s[i]\
    \ + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)(((int)s[i] + 2) % 26)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s[i]\
    \ + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated in the manner\
    \ described above.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n   \
    \ \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s[i]\
    \ + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated in the manner\
    \ described above.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n   \
    \ \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s[i]\
    \ + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    ", "{\n    string result = \"\";\n  \
    \  for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated with the alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n   \
    \ >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n   \
    \ >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> ", "{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(int)s[i]];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    int len = s.length();\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; i++)\n    {\n        result += alphabet[(int)s[len-i-1]];\n  \
    \  }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string as\
    \ an argument and\n    returns a string rotated 13 places clockwise.\n    For\
    \ example:\n    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"asdfghjkl\")\n\
    \    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"kj\"\n    >>> rot13(\"et\")\n \
    \   \"ix\"\n    \n*/\nstring rot13(string s) \n{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(int)(((int)s[i] + 13) % 26)];\n    }\n    return result;\n}\n/*\n\
    Create a function rot13 that takes a string as an argument and\n    returns a\
    \ string rotated 13 places counter-clockwise.\n    For example:\n    >>> rot13(\"\
    nj\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\n    >>> rot13(\"\
    kj\")\n    \"gf\"\n    >>> rot13(\"ix\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    int len = s.length();\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; i++)\n    {\n        result += alphabet[(int)(((int)s[len-i-1]\
    \ + 13) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that\
    \ takes a string as an argument and\n    returns a string rotated 13 places clockwise\
    \ and rotated 13 places counter-clockwise.\n    For example:\n    >>> rot13(\"\
    nj\")\n    \"nj\"\n    >>> rot13(\"zxcvbnm\")\n    \"zxcvbnm\"", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet.at(s.at(i) + 2);\n        result += alphabet.at(s.at(i) - 2);\n\
    \    }\n    return result;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work.\
    \ `encrypt(\"gf\")` returns `kj`, but should be `kjf`.\n<|/ c |>\n<| c |>\nI fixed\
    \ the bug. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nThis doesn't work.\
    \ `encrypt(\"gf\")` returns `kj`, but should be `kjf`.\n<|/ c |>\n<| c |>\nI fixed\
    \ the bug. Thanks for pointing it out.\n<|/ c |>\n<| c |>\nThis doesn't work.\
    \ `encrypt(\"gf\")` returns `kj`, but should be `kjf`.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\n#include <iostream>\n#include <string>\n#include <algorithm>\n#include\
    \ <cmath>", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.charAt(i) + 2];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 2];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) + 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfkj\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"et\"\
    )\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 2];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) + 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfkj\"\n    >>> rotate(\"", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += std.string.rep(s.charAt(i)\
    \ + 2, 2);\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += std.string.rep(s.charAt(i) - 2, 2);\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places. \n    For example:\n    >>> rot13(\"hi\")\n    \"\
    nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n \
    \   \"xm\"\n    >>> rot13(\"et\")\n    \"zs\"\n    \n*/\nstring rot13(string s)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n  \
    \  {\n        result += std.string.rep(s.charAt(i) + 13, 13);\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string rotated 13 places. \n    For example:\n    >>> rot13(\"\
    nj\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\n    >>> rot13(\"\
    xm\")\n    \"gf\"\n    >>> rot13(\"zs\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += std.string.rep(s.charAt(i) - 13, 13);\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string rotated 13 places. \n    For example:\n    >>> rot13(\"\
    hi\")\n    \"nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"\
    gf\")\n    \"xm\"\n    >>> rot13(\"et\")\n    \"zs\"\n    \n*/\nstring rot13(string\
    \ s) \n{", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"lm\")\n    \"hi\"\n    >>>\
    \ rotate(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> rotate(\"ix\")\n    \"et\"\
    \n    \n*/\nstring unrotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ + 2) % 26)];\n    }\n    return result;\n}", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places clockwise.\n    For example:\n    >>> rot13(\"hi\"\
    )\n    \"nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"\
    gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 13];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rot13 that takes a string as an argument and\n\
    \    returns a string rotated 13 places counter-clockwise.\n    For example:\n\
    \    >>> rot13(\"nj\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\
    \n    >>> rot13(\"gf\")\n    \"gfz\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n\
    */\nstring rot13(string s) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 13];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places clockwise.\n    For\
    \ example:\n    >>> rot13(\"nj\")\n    \"hi\"\n    >>> rot13(\"zxcvbnm\")\n  \
    \  \"asdfghjkl\"\n    >>> rot13(\"gf\")\n    \"gfz\"\n    >>> rot13(\"et\")\n\
    \    \"et\"\n    \n*/\nstring rot13", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - 97 + 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string encrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - 97 + 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"lm\")\n    \"hi\"\n    >>>\
    \ rotate(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> rotate(\"ix\")\n    \"et\"\
    \n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string encrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl", "{\n    string result = \"\";\n   \
    \ for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') % 26];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a') + 26];\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=encryption,c++,string |>\n<| c |>\nThank you so much! I\
    \ really appreciate it!\n<|/ c |>\n<| c |>\nYou're welcome. I'm glad I could help.\
    \ I hope you learned something from my answer. :)\n<|/ c |>\n<| c |>\nI did learn\
    \ something from your answer, thank you!\n<|/ c |>\n<| a dscore=0 |>\nI wrote\
    \ a program that does this in C++. Hope this helps someone:\n<code>\n#include\
    \ <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\nusing\
    \ namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)(((int)s.at(i) - 97 + 2) % 26)];\n\
    \    }\n    return result;\n}\n</code>\n<|/ a tags=c++,encryption,string |>\n\
    <| c |>\nThis doesn't work. `encrypt(\"gf\")` returns `\"kj\"`, but should be\
    \ `\"kj\"`.\n<|/ c |>\n<| c |>\nOops, I forgot to add that `alphabet` should be\
    \ `string alphabet = \"abcdefghijklmnopqrstuvwxyz\";`\n<|/ c |>\n<| c |>\nOops,\
    \ I forgot to add that `alphabet` should be `string alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;`\n<|/ c |>\n<| c |>\nOops, I forgot to add that `alphabet` should be `string\
    \ alphabet = \"abcdefghijklmnopqrstuvwxyz\";`\n<|/ c |>\n<| c |>\nOops, I forgot\
    \ to add that `alphabet` should be `string alphabet = \"abcdefghijklmnopqrstuvwxyz\"\
    ;`\n<|/ c |>\n<| a tags=c++,encryption,string |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <algorithm>\nusing namespace std;", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return result;\n}\n</code>\n\
    <|/ a tags=encryption,c++,string |>\n<| c |>\nThanks for your answer. Unfortunately\
    \ I cannot use any libraries other than std.\n<|/ c |>\n<| c |>\nI added a solution\
    \ that uses only std.\n<|/ c |>\n<| c |>\nThanks for your answer. Unfortunately\
    \ I cannot use any libraries other than std.\n<|/ c |>\n<| c |>\nI added a solution\
    \ that uses only std.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <cmath>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    int len = s.length();\n    for (int i = 0; i < len; i++)\n    {\n\
    \        result += alphabet[s.charAt(i) - 'a'];\n    }\n    return result;\n}\n\
    /*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    int len\
    \ = s.length();\n    for (int i = 0; i < len; i++)\n    {\n        result += alphabet[s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\
    \n    >>> rotate(\"gf\")\n    \"asdfghjkl\"\n    >>> rotate(\"et\")\n    \"gfkj\"\
    \n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    int len\
    \ = s.length();\n    for (int i = 0; i < len; i++)\n    {\n        result += alphabet[s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\
    \n    >>> rotate(\"gf\")\n    \"asdfghjkl\"\n    >>> rotate(\"et\")\n    \"gfkj\"\
    \n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    int len\
    \ = s.length();\n    for (int i = 0; i < len; i++)\n    {\n        result += alphabet[s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += s.at(i + 2); \n    }\n    return result;\n}\n\
    /*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += s.at(i + 2); \n    }\n\
    \    return result;\n}\n/*\nCreate a function rot13 that takes a string as an\
    \ argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by 13 multiplied to 13 places.\n    For example:\n    >>> rot13(\"\
    hi\")\n    \"nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"ozqpogj\"\n    >>> rot13(\"\
    gf\")\n    \"kf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s.at(i + 13); \n    }\n    return result;\n}\n/*\nCreate\
    \ a function rot13 that takes a string as an argument and\n    returns a string\
    \ decrypted with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by 13 multiplied to 13 places.\n\
    \    For example:\n    >>> rot13(\"nj\")\n    \"hi\"\n    >>> rot13(\"ozqpogj\"\
    )\n    \"asdfghjkl\"\n    >>> rot13(\"kf\")\n    \"gf\"\n    >>> rot13(\"et\"\
    )\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s.at(i +\
    \ 13); \n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string encrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by 13 multiplied to 13 places.\n    For example:",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s[i]];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function decrypt that takes a string as an argument and\n    returns a string\
    \ decrypted with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"\
    ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\n\
    string decrypt(string s) \n{\n    string result = \"\";\n    for(int i = 0; i\
    \ < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length() - 1\
    \ - i]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"kj\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n   \
    \ \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length()\
    \ - 1 - i]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"kj\")\n    \"gf\" \n", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string encrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"ewhjklnop\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\"\
    )\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    lm\")\n    \"hi\"\n    >>> rotate(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    ix\")\n    \"et\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"e", "{\n    int len =\
    \ s.length();\n    string result = \"\";\n    for(int i = 0; i < len; i++)\n \
    \   {\n        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rot13 that takes a string as an argument and\n    returns a string\
    \ rotated 13 places clockwise.\n    For example:\n    >>> rot13(\"hi\")\n    \"\
    nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"ozqpogjyh\"\n    >>> rot13(\"gf\")\n\
    \    \"kj\"\n    >>> rot13(\"et\")\n    \"ix\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    int len = s.length();\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; i++)\n    {\n        result += alphabet[(int)s.charAt(i) - 'a'\
    \ + 13];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string rotated 13 places counterclockwise.\n\
    \    For example:\n    >>> rot13(\"nj\")\n    \"hi\"\n    >>> rot13(\"ozqpogjyh\"\
    )\n    \"asdfghjkl\"\n    >>> rot13(\"kj\")\n    \"gf\"\n    >>> rot13(\"ix\"\
    )\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) - 'a' - 13];\n    }\n    return result;\n}\n/*\n\
    Create a function rot13 that takes a string as an argument and\n    returns a\
    \ string rotated 13 places clockwise.\n    For example:\n    >>> rot13(\"hi\"\
    )\n    \"nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"ozqpogjy", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s.charAt(i)\
    \ + s.charAt(i);\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += s.charAt(i) - s.charAt(i);\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n   \
    \ >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n\
    \    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += s.charAt(i) + s.charAt(i);\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated with the alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>>\
    \ rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += s.charAt(i) - s.charAt(i);\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n\
    \    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\"\
    ;\n    ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[i]];\n    }\n    return result;\n}",
  "{\n    int len = s.length();\n    string result = \"\";\n    for(int i = 0; i <\
    \ len; i++)\n    {\n        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n\
    \    return result;\n}\n</code>\n<|/ a |>\n<| c |>\nThanks for your help. I appreciate\
    \ it. I tried this and I got this error \"error: no matching function for call\
    \ to 'encrypt'\n    encrypt(\"gf\")\n    ^~~~~~\nencrypt2.cpp:6:6: note: candidate\
    \ function not viable: no known conversion from 'const char*' to 'const string'\
    \ for 1st argument\nstring encrypt(string s) \n     ^\n1 error generated.\n\"\n\
    <|/ c |>\n<| c |>\nI edited my answer to include a working example. Hope it helps.\n\
    <|/ c |>\n<| c |>\nThanks for your help. I appreciate it. I tried this and I got\
    \ this error \"error: no matching function for call to 'encrypt'\n    encrypt(\"\
    gf\")\n    ^~~~~~\nencrypt2.cpp:6:6: note: candidate function not viable: no known\
    \ conversion from 'const char*' to 'const string' for 1st argument\nstring encrypt(string\
    \ s) \n     ^\n1 error generated.\n\"\n<|/ c |>\n<| c |>\nI edited my answer to\
    \ include a working example. Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your\
    \ help. I appreciate it. I tried this and I got this error \"error: no matching\
    \ function for call to 'encrypt'\n    encrypt(\"gf\")\n    ^~~~~~\nencrypt2.cpp:6:6:\
    \ note: candidate function not viable: no known conversion from 'const char*'\
    \ to 'const string' for 1st argument\nstring encrypt(string s) \n     ^\n1 error\
    \ generated.\n\"\n<|/ c |>\n<| a dscore=0 |>\nI believe this should work:\n<code>\n\
    #include <iostream>\n#include <string>\n#include <cstdlib>\n#include <ctime>\n\
    #include <cmath>\n#include <cctype>", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n  \
    \  \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    gfkj\")\n    \"hi\"\n    >>> decrypt(\"et\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    hi\")\n    \"gf\" \n    \n*/\nstring decrypt(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    gfkj\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function decrypt\
    \ that takes a string as an argument and\n    returns a string decrypted with\
    \ the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)(((int)s.at(i) - 97 - 2) % 26)];\n   \
    \ }\n    return result;\n}\n/*\nCreate a function rotate that takes a string as\
    \ an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfedcba\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    et\")\n    \"gfedcba\"\n    \n*/\nstring rotate(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 97 + 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated with the\
    \ alphabet being rotated. \n    The alphabet should be rotated in a manner such\
    \ that the letters \n    shift down by two multiplied to two places.\n    For\
    \ example:\n    >>> rotate(\"gfedcba\")\n    \"hi\"\n    >>> rotate(\"et\")\n\
    \    \"gfedcba\"\n    \n*/\nstring rotate(string s) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ - 97 - 2) % 26)];\n    }\n    return result;\n}\n/*\nCreate a function rotate\
    \ that takes a string as an argument and\n    returns a string rotated with the\
    \ alphabet being rotated. \n    The alphabet should be rotated in a manner such\
    \ that the letters \n    shift down by two multiplied to two places.\n    For\
    \ example:\n    >>> rotate(\"gfedcba\")\n    \"hi", "{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated with the alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n   \
    \ >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n\
    \    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>>\
    \ rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated with the alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>>\
    \ rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string ",
  "{\n    int len = s.length();\n    string result = \"\";\n    for(int i = 0; i <\
    \ len; i++)\n    {\n        result += alphabet[(int)s.charAt(i) - alphabet[(int)'a']];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    int\
    \ len = s.length();\n    string result = \"\";\n    for(int i = 0; i < len; i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - alphabet[(int)'a']];\n \
    \   }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places. \n    For example:\n\
    \    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\
    \n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n\
    */\nstring rot13(string s) \n{\n    int len = s.length();\n    string result =\
    \ \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - alphabet[(int)'a']];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string rotated 13\
    \ places. \n    For example:\n    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"\
    asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"\
    et\")\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) - alphabet[(int)'a']];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places. \n    For example:\n    >>> rot13(\"hi\")\n    \"\
    nk\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n \
    \   \"", "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string with the alphabet being rotated. \n\
    \    The alphabet should be rotated in a manner such that the letters \n    shift\
    \ down by two multiplied to two places.\n    For example:\n    >>> rotate(\"hi\"\
    )\n    \"gf\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\"\
    )\n    \"hi\"\n    >>> rotate(\"et\")\n    \"asdfghjkl\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gf\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"\
    et\")\n    \"asdfghjkl\"\n    \n*/\nstring rotate(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string with the alphabet being rotated. \n\
    \    The alphabet should be rotated in a manner such that the letters \n    shift\
    \ down by two multiplied to two places.\n    For example:\n    >>> rotate(\"hi\"\
    )\n    \"gf\"\n    >>> rotate(\"asdfghjkl\")", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\n    >>> rotate(\"\
    gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i) - 97];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the manner described above.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\
    \n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n \
    \   \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 97];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"\
    et\")\n    \"gfkj\"\n    \n*/\nstring rotate(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i) - 'a'];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\
    \n    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n \
    \   \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n  \
    \  \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)\
    \ - 'a'];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"hi\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n  \
    \  \n*/\nstring ", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(s.at(i) - 'a') % 26];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') + 26];\n    }\n    return result;\n}\n</code>\n<|/ a |>\n<| c |>\nThanks\
    \ for your help. I understand what you are saying but I am not allowed to use\
    \ any libraries except std.\n<|/ c |>\n<| c |>\nI added the code I wrote to solve\
    \ the problem but I am not sure if I am doing it correctly. Could you please take\
    \ a look and see if it looks correct?\n<|/ c |>\n<| c |>\nI added the code I wrote\
    \ to solve the problem but I am not sure if I am doing it correctly. Could you\
    \ please take a look and see if it looks correct?\n<|/ c |>\n<| c |>\nI added\
    \ the code I wrote to solve the problem but I am not sure if I am doing it correctly.\
    \ Could you please take a look and see if it looks correct?\n<|/ c |>\n<| c |>\n\
    I added the code I wrote to solve the problem but I am not sure if I am doing\
    \ it correctly. Could you please take a look and see if it looks correct?\n<|/\
    \ c |>\n<| a tags=encryption,c++,string |>\n<code>\n#include <iostream>\n#include\
    \ <string>\nusing namespace std;", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n}\n/*\n\
    Create a function rot13 that takes a string as an argument and\n    returns a\
    \ string rotated 13 places down. \n    For example:\n    >>> rot13(\"hi\")\n \
    \   \"nk\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\"\
    )\n    \"yz\"\n    >>> rot13(\"et\")\n    \"wq\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[i] + 13];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places up. \n    For example:\n    >>> rot13(\"nk\")\n \
    \   \"hi\"\n    >>> rot13(\"zxcvbnm\")\n    \"asdfghjkl\"\n    >>> rot13(\"yz\"\
    )\n    \"gf\"\n    >>> rot13(\"wq\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[i] - 13];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places left. \n    For example:\n    >>> rot13(\"hi\")\n\
    \    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\"\
    )\n    \"yz\"\n    >>> rot13(\"et\")\n    \"wq\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.at(i) + 2];\n    }\n    return result;\n}\n\
    /*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)\
    \ - 2];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"gfkj\"\n    >>> rotate(\"asdfghjkl\")\n    \"et\"\
    \n    >>> rotate(\"gf\")\n    \"asdfghjkl\"\n    >>> rotate(\"et\")\n    \"gfkj\"\
    \n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)\
    \ + 2];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n  \
    \  \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i) -\
    \ 2];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes a\
    \ string as an argument and\n    returns a string rotated with the alphabet being\
    \ rotated. \n    The alphabet should be rotated in a manner such that the letters\
    \ \n    shift down by two multiplied to two places.\n    For example:\n    >>>\
    \ rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gfkj\"\n    \n*/\n\
    string rotate(string s) \n", "{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += s.at(i + 2); \n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s.at(i\
    \ + 2); \n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string encrypted with the rot13 alphabet.\n\
    \    For example:\n    >>> rot13(\"hi\")\n    \"nq\"\n    >>> rot13(\"asdfghjkl\"\
    )\n    \"zkqgjxd\"\n    >>> rot13(\"gf\")\n    \"kj\"\n    >>> rot13(\"et\")\n\
    \    \"ix\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += s.at(i + 13);\
    \ \n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string decrypted with the rot13 alphabet.\n\
    \    For example:\n    >>> rot13(\"nq\")\n    \"hi\"\n    >>> rot13(\"zkqgjxd\"\
    )\n    \"asdfghjkl\"\n    >>> rot13(\"kj\")\n    \"gf\"\n    >>> rot13(\"ix\"\
    )\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += s.at(i +\
    \ 13); \n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string encrypted with the rot13 alphabet.\n\
    \    For example:\n    >>> rot13(\"hi\")\n    \"nq\"\n    >>> rot13(\"asdfghjkl\"\
    )\n    \"zkqgjxd\"\n    >>> rot13(\"gf\")\n    \"kj\"\n    >>> rot13(\"et\")\n\
    \    \"ix\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < ", "{\n    string result = \"\";\n    for(int i = 0; i\
    \ < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i) + 2];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i) - 2];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rotate that takes a string as an argument and\n    returns a string\
    \ rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(", "{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string rotated 13\
    \ places down. \n    For example:\n    >>> rot13(\"hi\")\n    \"nj\"\n    >>>\
    \ rot13(\"asdfghjkl\")\n    \"qozxd\"\n    >>> rot13(\"gf\")\n    \"kj\"\n   \
    \ >>> rot13(\"et\")\n    \"ix\"\n    \n*/\nstring rot13(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places up. \n    For example:\n    >>> rot13(\"nj\")\n \
    \   \"hi\"\n    >>> rot13(\"qozxd\")\n    \"asdfghjkl\"\n    >>> rot13(\"kj\"\
    )\n    \"gf\"\n    >>> rot13(\"ix\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    for(int i = 0; i\
    \ < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n    }\n\
    \    return result;\n}\n/*\nCreate a function rot13 that takes a string as an\
    \ argument and\n    returns a string rotated 13 places right. \n    For example:\n\
    \    >>> rot13(\"hi\")\n    \"nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"qozxd\"\
    \n    >>> rot", "{\n    int len = s.length();\n    string result = \"\";\n   \
    \ for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(((int)s[i])\
    \ - alphabet[len]) % 26];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    int len = s.length();\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; i++)\n    {\n        result += alphabet[(((int)s[i]) - alphabet[len])\
    \ % 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n    >>> rotate(\"\
    gfedcba\")\n    \"hi\"\n    \n*/\nstring rotate(string s) \n{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(((int)s[i]) - alphabet[len]) % 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"gfedcba\"\n    >>> rotate(\"gfedcba\")\n    \"hi\"\n    \n*/\nstring\
    \ rotate(string s) \n{\n    int len = s.length();\n    string result = \"\";\n\
    \    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(((int)s[i])\
    \ - alphabet[len]) % 26];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ in the manner described above.\n    For example:\n    >>> rotate(\"hi\")\n \
    \   \"gfedcba\"\n    >>> rotate(\"gfedcba\")\n    \"hi\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    int len = s.length();\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; i++)\n    {\n        result += alphabet[(((int)s[i]) - alphabet[len])\
    \ % 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string ", "{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)((s[i]\
    \ + alphabet[(int)((s[i] - 'a') % 26)]) % 26)]; \n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)((s[i] +\
    \ alphabet[(int)((s[i] - 'a') % 26)]) % 26)]; \n    }\n    return result;\n}\n\
    /*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)((s[i]\
    \ + alphabet[(int)((s[i] - 'a') % 26)]) % 26)]; \n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)((s[i]\
    \ + alphabet[(int)((s[i] - 'a') % 26)]) % 26)]; \n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n", "{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]\
    \ - 97];\n    }\n    return result;\n}", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)]\
    \ + alphabet[(int)s.charAt(i)+1];\n    }\n    return result;\n}\n/*\nCreate a\
    \ function decrypt that takes a string as an argument and\n    returns a string\
    \ decrypted with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"\
    ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\n\
    string decrypt(string s) \n{\n    string result = \"\";\n    for(int i = 0; i\
    \ < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)-(int)alphabet.length()]\
    \ + alphabet[(int)s.charAt(i)-(int)alphabet.length()+1];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places. \n    For example:\n    >>> rot13(\"hi\")\n    \"\
    nkj\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n\
    \    \"gf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)+13];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places. \n    For example:\n    >>> rot13(\"hi\")\n    \"\
    nkj\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n\
    \    \"gf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)+13];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places. \n    For example:\n    >>> rot13(\"hi\")\n    \"\
    nkj\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n\
    \    \"gf\"\n    >>> rot13(\"et\")\n", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated with the alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"gf\")\n    \"gfkj\"\n    >>> rotate(\"et\")\n    \"etix\"\n\
    \    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"gfkj\"\n    >>> rotate(\"\
    et\")\n    \"etix\"\n    \n*/\nstring rotate(string s) \n{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"gfkj\"\n    >>> rotate(\"\
    et\")\n    \"etix\"\n    \n", "{\n    int len = s.length();\n    string result\
    \ = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    int\
    \ len = s.length();\n    string result = \"\";\n    for(int i = 0; i < len; i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string with the alphabet being rotated. \n    The alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by two multiplied to two\
    \ places.\n    For example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"gfkj\"\n    >>> rotate(\"gf\")\n    \"et\"\n    \n*/\nstring\
    \ rotate(string s) \n{\n    int len = s.length();\n    string result = \"\";\n\
    \    for(int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string with the alphabet being rotated. \n\
    \    The alphabet should be rotated in a manner such that the letters \n    shift\
    \ down by two multiplied to two places.\n    For example:\n    >>> rotate(\"hi\"\
    )\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"gfkj\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    \n*/\nstring rotate(string s) \n{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string with the\
    \ alphabet being rotated. \n    The alphabet should be rotated in a manner such\
    \ that the letters \n    shift down by two multiplied to two places.\n    For\
    \ example:\n    >>> rotate(\"hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n\
    \    \"gfkj\"\n    >>> ", "{\n    string result = \"\";\n    for(int i = 0; i\
    \ < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n    }\n \
    \   return result;\n}", "{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n   \
    \ }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string rotated 13\
    \ places clockwise. \n    For example:\n    >>> rot13(\"hi\")\n    \"nk\"\n  \
    \  >>> rot13(\"asdfghjkl\")\n    \"gkj\"\n    >>> rot13(\"gf\")\n    \"kf\"\n\
    \    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n   \
    \ string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n    \
    \    result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\n\
    Create a function rot13 that takes a string as an argument and\n    returns a\
    \ string rotated 13 places counterclockwise. \n    For example:\n    >>> rot13(\"\
    lm\")\n    \"hi\"\n    >>> rot13(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> rot13(\"\
    ix\")\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string rotated 13 places clockwise and rotated\
    \ 13 \n    places counterclockwise. \n    For example:\n    >>> rot13(\"nk\")\n\
    \    \"hi\"\n    >>> rot13(\"gkj\")\n    \"asdfghjkl\"\n    >>> rot13(\"kf\")\n\
    \    \"kf\"\n    >>> rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int ", "{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)\
    \ + 2];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that takes\
    \ a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.at(i) - 2];\n    }\n    return result;\n}\n\
    /*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places. \n    For example:\n    >>> rot13(\"hi\")\n    \"\
    nk\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n \
    \   \"yz\"\n    >>> rot13(\"et\")\n    \"wq\"\n    \n*/\nstring rot13(string s)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n  \
    \  {\n        result += alphabet[(int)s.at(i) + 13];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places. \n    For example:\n    >>> rot13(\"hi\")\n    \"\
    nk\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n \
    \   \"yz\"\n    >>> rot13(\"et\")\n    \"wq\"\n    \n*/\nstring rot13(string s)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n  \
    \  {\n        result += alphabet[(int)s.at(i) - 13];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places. \n    For example:\n    >>> rot13(\"hi\")\n    \"\
    nk\"\n    >>> rot13(\"asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n \
    \   \"yz\"\n    >>> rot13(\"et\")\n    \"wq\"\n    \n*/\nstring rot13(string s)\
    \ \n{\n    string result = \"\";\n", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n}\n/*\n\
    Create a function rot13 that takes a string as an argument and\n    returns a\
    \ string rotated 13 places. \n    For example:\n    >>> rot13(\"hi\")\n    \"\
    nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"kjhngfdsa\"\n    >>> rot13(\"gf\")\n\
    \    \"j\"\n    >>> rot13(\"et\")\n    \"i\"\n    \n*/\nstring rot13(string s)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n  \
    \  {\n        result += alphabet[(int)s[i] + 13];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places. \n    For example:\n    >>> rot13(\"hi\")\n    \"\
    nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"kjhngfdsa\"\n    >>> rot13(\"gf\")\n\
    \    \"j\"\n    >>> rot13(\"et\")\n    \"i\"\n    \n*/\nstring rot13(string s)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n  \
    \  {\n        result += alphabet[(int)s[i] + 13];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places. \n    For example:\n    >>> rot13(\"hi\")\n    \"\
    nj\"\n    >>> rot13(\"asdfghjkl\")\n    \"kjhngfdsa\"\n    >>> rot13(\"gf\")\n\
    \    \"j\"\n    >>> rot13(\"et\")\n    \"i\"\n    \n*/\nstring rot13(string s)\
    \ \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) + 2) % 26];\n    }\n    return result;\n}\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nI appreciate your help but I'm still getting\
    \ errors. I edited my original post to show my new code and the errors I'm getting.\n\
    <|/ c |>\n<| c |>\nI edited my original post to show my new code and the errors\
    \ I'm getting.\n<|/ c |>\n<| c |>\nI edited my original post to show my new code\
    \ and the errors I'm getting.\n<|/ c |>\n<| c |>\nI edited my original post to\
    \ show my new code and the errors I'm getting.\n<|/ c |>\n<| c |>\nI edited my\
    \ original post to show my new code and the errors I'm getting.\n<|/ c |>\n<|\
    \ a dscore=0 |>\nI figured it out. Thanks to everyone who helped. Here is the\
    \ final code I ended up using:\n<code>\nimport std.stdio;\nimport std.string;\n\
    import std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.random;",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n\
    /*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    kj\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"kj\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjk", "{\n    string result = \"\";\n    for(int i = 0; i <\
    \ s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n    }\n\
    \    return result;\n}\n/*\nCreate a function decrypt that takes a string as an\
    \ argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string rotated 13\
    \ places. \n    For example:\n    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"\
    asdfghjkl\")\n    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"\
    et\")\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\
    \";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i\
    \ + 13)];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string rotated 13 places. \n    For\
    \ example:\n    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n\
    \    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n \
    \   \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i\
    \ + 13)];\n    }\n    return result;\n}\n/*\nCreate a function rot13 that takes\
    \ a string as an argument and\n    returns a string rotated 13 places. \n    For\
    \ example:\n    >>> rot13(\"hi\")\n    \"nk\"\n    >>> rot13(\"asdfghjkl\")\n\
    \    \"zxcvbnm\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\")\n \
    \   \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {", "{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') % 26];\n    }\n    return result;\n}\n/*\nCreate a function decrypt that\
    \ takes a string as an argument and\n    returns a string decrypted with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\
    \n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(s.at(i) - 'a') + 26];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"\
    et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') + 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that\
    \ takes a string as an argument and\n    returns a string rotated in the manner\
    \ described above.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\
    \n    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n   \
    \ \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i\
    \ = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i) - 'a')\
    \ + 26];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the manner described\
    \ above.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>>\
    \ rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(s.at(i) - 'a') + 26];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function rotate that takes a string as an argument\
    \ and\n    returns a string rotated in the ", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(s.at(i)\
    \ - 'a') % 26];\n    }\n    return result;\n}", "{\n    string result = \"\";\n\
    \    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rotate that takes a string as an argument and\n    returns a string rotated\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"\
    asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\n    >>> rotate(\"\
    et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n    string result =\
    \ \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"",
  "{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n\
    \        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\n\
    Create a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string rotated with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"asdfghjkl\")\n    \"hi\"\n    >>> rotate(\"gf\")\n    \"et\"\
    \n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated with the alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"",
  "{\n    int len = s.length();\n    string result = \"\";\n    for(int i = 0; i <\
    \ len; i++)\n    {\n        result += alphabet[(int)s[i] - 97];\n    }\n    return\
    \ result;\n}\n/*\nCreate a function decrypt that takes a string as an argument\
    \ and\n    returns a string decrypted with the alphabet being rotated. \n    The\
    \ alphabet should be rotated in a manner such that the letters \n    shift down\
    \ by two multiplied to two places.\n    For example:\n    >>> decrypt(\"lm\")\n\
    \    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"\
    ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(int)s[len - 1 - i] - 97];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rotate that takes a string as an argument and\n    returns a string\
    \ rotated in the opposite direction.\n    For example:\n    >>> rotate(\"hi\"\
    )\n    \"il\"\n    >>> rotate(\"asdfghjkl\")\n    \"dfgkjhil\"\n    >>> rotate(\"\
    gf\")\n    \"gfh\"\n    >>> rotate(\"et\")\n    \"et\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    int len = s.length();\n    string result = \"\";\n    for(int i\
    \ = 0; i < len; i++)\n    {\n        result += alphabet[(int)s[len - 1 - i] -\
    \ 97];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated in the opposite direction.\n\
    \    For example:\n    >>> rotate(\"hi\")\n    \"il\"\n    >>> rotate(\"asdfghjkl\"\
    )\n    \"dfgkjhil\"\n    >>> rotate(\"gf\")\n    \"gfh\"\n    >>> rotate(\"et\"\
    )\n    \"et\"\n    \n*/\nstring rotate(string s) \n{\n    int len = s.length();\n\
    \    string result = \"\";\n    for(int i = 0; i < len; i++)\n    {\n        result\
    \ += alphabet[(int)s[len - 1 - i] - 97];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rotate that takes a string as an argument and\n    returns a string\
    \ rotated in the opposite direction.\n    For example:\n    >>> rotate(\"hi\"\
    )\n    \"il\"\n    >>> rotate(\"asdfghjkl\")\n    \"dfgkjhil\"\n    >>> rotate(\"\
    gf\")\n    \"gfh\"\n    >>> rotate(\"et\")\n    \"et\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    int ", "{\n    string result = \"\";\n    int len = s.length();\n\
    \    for (int i = 0; i < len; i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    int len = s.length();\n    for (int i = 0; i < len; i++)\n\
    \    {\n        result += alphabet[(int)s[len-i-1]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"gfkj\"\n    >>> rotate(\"\
    gf\")\n    \"et\"\n    >>> rotate(\"et\")\n    \"gf\" \n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    int len = s.length();\n    for (int i\
    \ = 0; i < len; i++)\n    {\n        result += alphabet[(int)s[len-i-1]];\n  \
    \  }\n    return result;\n}\n/*\nCreate a function rotater that takes a string\
    \ as an argument and\n    returns a string rotated in the manner described above.\n\
    \    For example:\n    >>> rotater(\"hi\")\n    \"hi\"\n    >>> rotater(\"asdfghjkl\"\
    )\n    \"gfkj\"\n    >>> rotater(\"gf\")\n    \"gf\" \n    >>> rotater(\"et\"\
    )\n    \"et\" \n    \n*/\nstring rotater(string s) \n{\n    string result = \"\
    \";\n    int len = s.length();\n    for (int i = 0; i < len; i++)\n    {\n   \
    \     result += alphabet[(int)s[i]];\n    }\n    return result;\n}\n/*\nCreate\
    \ a function rotater_reverse that takes a string as an argument and\n    returns\
    \ a string rotated in the manner described above.\n    For example:\n    >>> rotater_reverse(\"\
    hi\")\n    \"hi\"\n    >>> rotater_reverse(\"gfkj\")\n    \"gfkj\"\n    >>> rotater_reverse(\"\
    gf\")\n    \"gf\" \n    >>> rotater_reverse(\"et\")\n    \"et\" \n    \n*/\nstring\
    \ rotater_reverse(string s) \n{\n    ", "{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)(((int)s.at(i)\
    \ + 2) % alphabet.size())];\n    }\n    return result;\n}\n</code>\n<|/ a |>\n\
    <| c |>\nThanks for the answer. I am not allowed to use any built-in functions.\
    \ I did try to use your code, but I got an error saying \"error: invalid conversion\
    \ from 'char' to 'const char*' [-fpermissive]\" on the line where you wrote \"\
    result += alphabet[(int)(((int)s.at(i) + 2) % alphabet.size())];\". Do you know\
    \ what might be causing this?\n<|/ c |>\n<| c |>\nI edited my answer to include\
    \ a solution that doesn't use any built-in functions. I tested it and it works.\n\
    <|/ c |>\n<| c |>\nThanks so much for the help! I really appreciate it!\n<|/ c\
    \ |>\n<| a |>\nThe simplest way is to use std::rotate from <algorithm>:\n<code>\n\
    #include <algorithm>\n#include <iostream>\n#include <string>", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[i] + 2];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[i] - 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"gfedcba\"\n\
    \    >>> rotate(\"asdfghjkl\")\n    \"kjhigfedcba\"\n    >>> rotate(\"gf\")\n\
    \    \"gfedcba\"\n    >>> rotate(\"et\")\n    \"kjhigfedcba\"\n    \n*/\nstring\
    \ rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s[i] + 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"gfedcba\")\n    \"gfedcba\"\
    \n    >>> rotate(\"kjhigfedcba\")\n    \"et\"\n    >>> rotate(\"gf\")\n    \"\
    gfedcba\"\n    >>> rotate(\"et\")\n    \"kjhigfedcba\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[i] - 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by ", "{\n   \
    \ string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n    \
    \    result += alphabet[(s.at(i) + 2) % 26];\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=encryption,c++ |>\n<code>\n#include <iostream>\n\
    #include <string>\n#include <cstring>\nusing namespace std;", "{\n    string result\
    \ = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i]];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n}\n/*\n\
    Create a function rotate that takes a string as an argument and\n    returns a\
    \ string rotated with the alphabet being rotated. \n    The alphabet should be\
    \ rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n\
    */\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int i = 0;\
    \ i < s.length(); i++)\n    {\n        result += alphabet[(int)s[s.length() -\
    \ 1 - i]];\n    }\n    return result;\n}\n/*\nCreate a function rotate that takes\
    \ a string as an argument and\n    returns a string rotated with the alphabet\
    \ being rotated. \n    The alphabet should be rotated in a manner such that the\
    \ letters \n    shift down by two multiplied to two places.\n    For example:\n\
    \    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n    >>> rotate(\"gf\")\n    \"kj\"\
    \n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string s) \n{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s[s.length() - 1 - i]];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string rotated with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"hi\")\n    \"asdfghjkl\"\n\
    \    >>> rotate(\"gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n", "{\n\
    \    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n \
    \       result += alphabet[(int)s.at(i)];\n    }\n    return result;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThanks for your answer. I'm sorry I forgot to mention\
    \ that the alphabet is supposed to be a rotated version of the alphabet. For example,\
    \ if the alphabet is \"abcdefghijklmnopqrstuvwxyz\" then the alphabet rotated\
    \ 90 degrees would be \"zyxwvutsrqponmlkjihgfedcba\". I tried your code and it\
    \ works but for some reason it only works for some strings. For example, if I\
    \ input \"hi\" it returns \"lm\", but if I input \"asdfghjkl\" it returns \"ewhjklnop\"\
    . Any idea why this is happening?\n<|/ c |>\n<| c |>\nI edited my answer to include\
    \ a rotate function.  It should work for any string now.\n<|/ c |>\n<| c |>\n\
    Thanks so much for your help. I really appreciate it!\n<|/ c |>\n<| a |>\n<code>\n\
    #include <iostream>\n#include <string>\n#include <cmath>\n#include <cstdlib>\n\
    using namespace std;", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s[i] + 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function decrypt that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>>\
    \ decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\
    \n    \n*/\nstring decrypt(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i] - 2];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklnop\"\n    >>> rotate(\"\
    gf\")\n    \"kj\"\n    >>> rotate(\"et\")\n    \"ix\"\n    \n*/\nstring rotate(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s[i] + 2];\n    }\n    return result;\n\
    }\n/*\nCreate a function rotate that takes a string as an argument and\n    returns\
    \ a string decrypted with the alphabet being rotated. \n    The alphabet should\
    \ be rotated in a manner such that the letters \n    shift down by two multiplied\
    \ to two places.\n    For example:\n    >>> rotate(\"lm\")\n    \"hi\"\n    >>>\
    \ rotate(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>> rotate(\"ix\")\n    \"et\"\
    \n    \n*/\nstring rotate(string s) \n{\n    string result = \"\";\n    for(int\
    \ i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s[i] - 2];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rotate that takes a string\
    \ as an argument and\n    returns a string encrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> rotate(\"\
    hi\")\n    \"lm\"\n    >>> rotate(\"asdfghjkl\")\n    \"ewhjklno", "{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ decrypt that takes a string as an argument and\n    returns a string decrypted\
    \ with the alphabet being rotated. \n    The alphabet should be rotated in a manner\
    \ such that the letters \n    shift down by two multiplied to two places.\n  \
    \  For example:\n    >>> decrypt(\"lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\"\
    )\n    \"asdfghjkl\"\n    >>> decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string encrypted with the rot13 alphabet being rotated. \n    The rot13 alphabet\
    \ should be rotated in a manner such that the letters \n    shift down by 13 multiplied\
    \ to 13 places.\n    For example:\n    >>> rot13(\"hi\")\n    \"nqo\"\n    >>>\
    \ rot13(\"asdfghjkl\")\n    \"kjyv\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>>\
    \ rot13(\"et\")\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.charAt(i)];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string decrypted\
    \ with the rot13 alphabet being rotated. \n    The rot13 alphabet should be rotated\
    \ in a manner such that the letters \n    shift down by 13 multiplied to 13 places.\n\
    \    For example:\n    >>> rot13(\"nqo\")\n    \"hi\"\n    >>> rot13(\"kjyv\"\
    )\n    \"asdfghjkl\"\n    >>> rot13(\"gf\")\n    \"gf\"\n    >>> rot13(\"et\"\
    )\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.charAt(i)];\n\
    \    }\n    return result;\n}\n/*\nCreate a function rot13 that takes a string\
    \ as an argument and\n    returns a string encrypted with the rot13 alphabet being\
    \ rotated. \n    The rot13 alphabet should be rotated in a manner such that the\
    \ letters \n", "{\n    string result = \"\";\n    for(int i = 0; i < s.length();\
    \ i++)\n    {\n        result += alphabet[(int)s.at(i) - alphabet[(int)'a']];\n\
    \    }\n    return result;\n}\n/*\nCreate a function decrypt that takes a string\
    \ as an argument and\n    returns a string decrypted with the alphabet being rotated.\
    \ \n    The alphabet should be rotated in a manner such that the letters \n  \
    \  shift down by two multiplied to two places.\n    For example:\n    >>> decrypt(\"\
    lm\")\n    \"hi\"\n    >>> decrypt(\"ewhjklnop\")\n    \"asdfghjkl\"\n    >>>\
    \ decrypt(\"ix\")\n    \"et\"\n    \n*/\nstring decrypt(string s) \n{\n    string\
    \ result = \"\";\n    for(int i = 0; i < s.length(); i++)\n    {\n        result\
    \ += alphabet[(int)s.at(i) - alphabet[(int)'a']];\n    }\n    return result;\n\
    }\n/*\nCreate a function rot13 that takes a string as an argument and\n    returns\
    \ a string rotated 13 places clockwise.\n    For example:\n    >>> rot13(\"hi\"\
    )\n    \"nqo\"\n    >>> rot13(\"asdfghjkl\")\n    \"gkjyvrt\"\n    >>> rot13(\"\
    gf\")\n    \"kj\"\n    >>> rot13(\"et\")\n    \"ix\"\n    \n*/\nstring rot13(string\
    \ s) \n{\n    string result = \"\";\n    for(int i = 0; i < s.length(); i++)\n\
    \    {\n        result += alphabet[(int)s.at(i) - alphabet[(int)'a']];\n    }\n\
    \    return result;\n}\n/*\nCreate a function rot13 that takes a string as an\
    \ argument and\n    returns a string rotated 13 places counterclockwise.\n   \
    \ For example:\n    >>> rot13(\"nqo\")\n    \"hi\"\n    >>> rot13(\"gkjyvrt\"\
    )\n    \"asdfghjkl\"\n    >>> rot13(\"kj\")\n    \"gf\"\n    >>> rot13(\"ix\"\
    )\n    \"et\"\n    \n*/\nstring rot13(string s) \n{\n    string result = \"\"\
    ;\n    for(int i = 0; i < s.length(); i++)\n    {\n        result += alphabet[(int)s.at(i)\
    \ - alphabet[(int)'a']];\n    }\n    return result;\n}\n/*\nCreate a function\
    \ rot13 that takes a string as an argument and\n    returns a string rotated 13\
    \ places clockwise.\n    For example:\n    >>> rot13(\"hi\")\n    \"nqo\"\n  \
    \  >>> rot13(\"asdfghjkl\")\n    \"gkjyvrt\"\n    >>> rot13"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

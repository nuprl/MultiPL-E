language: d
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    \n    if\
    \ (gcd == 0)\n        return a;\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxik7ebnb.d(20): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxik7ebnb.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (b != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\t}\n\
    \treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    long t;\n    \n    while (b != 0) {\n\
    \        t = b;\n        b = a % t;\n        a = t;\n        gcd = gcd > a ? gcd\
    \ : a;\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp8fyqeps_.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d8d]\n??:? void tmp8fyqeps_.__unittest_L25_C1() [0x427a89]\n??:?
    void tmp8fyqeps_.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428163]\n??:? _d_run_main [0x4280ce]\n??:? main [0x427b23]\n??:?
    __libc_start_main [0x319b1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0) return b;\n    if (b ==\
    \ 0) return a;\n    \n    gcd = __gcd(a, b);\n    if (gcd == 0) return a;\n  \
    \  return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp3cpeoh91.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3cpeoh91.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    while (a != 0)\
    \ {\n        long r = a % b;\n        a = b;\n        b = r;\n    }\n    \n  \
    \  return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long long gcd = 1;\n    long long remainder;\n    \n   \
    \ while (b != 0) {\n        remainder = b % a;\n        gcd = std.math.max(gcd,\
    \ remainder);\n        b = remainder;\n    }\n    return gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpyyeo91d9.d(13): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpyyeo91d9.d(14): Error: use `long` for a 64 bit integer
    instead of `long long`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyyeo91d9.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tlong r\
    \ = a % b;\n\t\ta = b;\n\t\tb = r;\n\t\tgcd = (gcd > b) ? gcd : b;\n\t}\n\treturn\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (b > 0) {\n\t\tlong t =\
    \ b;\n\t\tb = a % b;\n\t\ta = t;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n   \
    \ alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) ==\
    \ 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpt94j6nnp.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d7d]\n??:? void tmpt94j6nnp.__unittest_L24_C1() [0x427a9f]\n??:?
    void tmpt94j6nnp.__modtest() [0x427b00]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baa3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a936]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff78]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa55]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a90d]\n??:? runModuleUnitTests [0x42b879]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281cc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428153]\n??:? _d_run_main [0x4280be]\n??:? main [0x427b13]\n??:?
    __libc_start_main [0x2ac02554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        if (a > b) {\n            gcd = b;\n            b = a %\
    \ b;\n            a = b;\n        } else {\n            gcd = a;\n           \
    \ a = a % b;\n        }\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpcn7yihju.d(43): unittest failure\n----------------\n??:?
    _d_unittestp [0x427da5]\n??:? void tmpcn7yihju.__unittest_L36_C1() [0x427b13]\n??:?
    void tmpcn7yihju.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42817b]\n??:? _d_run_main [0x4280e6]\n??:? main [0x427b3b]\n??:?
    __libc_start_main [0xb0157554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = __gcd(a, b);\n    if (gcd ==\
    \ 0) return a;\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn21y581y.d(15): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn21y581y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        if (a > b) {\n            a %= b;\n            gcd = b *\
    \ gcd;\n        }\n        else {\n            b %= a;\n            gcd = a *\
    \ gcd;\n        }\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = b;\n\t}\n\
    \treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd > a)\n        return gcd;\n   \
    \ \n    return __gcd(b, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp49t914s_.d(18): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\n/tmp/tmp49t914s_.d(23): Error: undefined identifier `__gcd`,
    did you mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp49t914s_.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\twhile (b != 0)\n\t{\n\t\tgcd = b;\n\t\tb\
    \ = a % b;\n\t\ta = gcd;\n\t}\n\treturn a;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    while (a !=\
    \ 0) {\n        if (a > b) {\n            a %= b;\n        } else {\n        \
    \    b %= a;\n        }\n        gcd *= b;\n    }\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tlong r\
    \ = a % b;\n\t\tif (r != 0) {\n\t\t\tgcd = b;\n\t\t\tb = r;\n\t\t}\n\t\ta = a\
    \ / b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    if (a < b)\n        std.swap(a, b);\n    \n    for (;;) {\n        gcd\
    \ = 0;\n        \n        while (b != 0) {\n            long temp = b;\n     \
    \       b = a % b;\n            a = temp;\n            gcd = std.gcd(gcd, b);\n\
    \        }\n        \n        if (a == 0)\n            return gcd;\n        \n\
    \        if (a > 0)\n            std.swap(a, b);\n    }\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxlmscrea.d(19): Error: undefined identifier `swap` in package
    `std`\n/tmp/tmpxlmscrea.d(28): Error: undefined identifier `gcd` in package `std`\n/tmp/tmpxlmscrea.d(35):
    Error: undefined identifier `swap` in package `std`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpxlmscrea.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = __gcd(a, b);\n\tif (gcd == 0) return\
    \ a;\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvoq9xmqw.d(15): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvoq9xmqw.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tfor (;;) {\n\t\tif (a > b) {\n\t\t\ta %=\
    \ b;\n\t\t\tif (a == 0) return b;\n\t\t\tb %= a;\n\t\t\tif (b == 0) return a;\n\
    \t\t}\n\t\telse {\n\t\t\tb %= a;\n\t\t\tif (b == 0) return a;\n\t\t\ta %= b;\n\
    \t\t\tif (a == 0) return b;\n\t\t}\n\t\tgcd = a % b;\n\t\tif (gcd == 0) return\
    \ b;\n\t\ta = b;\n\t\tb = gcd;\n\t}\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    \n    while (a\
    \ != 0) {\n        long r = a % b;\n        a = b;\n        b = r;\n        gcd\
    \ = (gcd > r) ? gcd : r;\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 0)\n        return b;\n    \n\
    \    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4zw8b093.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = __gcd(a, b);\n\t\n\tif (gcd == 0) \n\
    \t\treturn a;\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxnttm_2t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = __gcd(a, b);\n\tif (gcd == 0) return\
    \ a;\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvoq9xmqw.d(15): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvoq9xmqw.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0)\n\t{\n\t\
    \ta = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpytcq45gz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \tif (r != 0) {\n\t\t\tgcd = b;\n\t\t\tb = r;\n\t\t} else {\n\t\t\ta = b;\n\t\t\
    }\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvmhhjbl9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long temp = a;\n\
    \        a = b;\n        b = temp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        if (a % b == 0)\n            gcd = b;\n        b = b % a;\n\
    \        a = a / b;\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnrtodyhz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\tlong r\
    \ = a % b;\n\t\tif (r != 0) {\n\t\t\tgcd = b;\n\t\t\tb = r;\n\t\t}\n\t\ta = b;\n\
    \t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_o1m842_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        if (a % b == 0)\n            gcd = b;\n        a = a / b;\n\
    \    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpacm07yi9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0)\n\t{\n\t\
    \ta = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpytcq45gz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (b > 0) {\n\t\tlong r =\
    \ a % b;\n\t\tif (r == 0) {\n\t\t\tbreak;\n\t\t}\n\t\ta = b;\n\t\tb = r;\n\t}\n\
    \t\n\twhile (b > 0) {\n\t\tlong r = a % b;\n\t\tif (r == 0) {\n\t\t\tgcd = b;\n\
    \t\t\tbreak;\n\t\t}\n\t\ta = b;\n\t\tb = r;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprkz0ci92.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = b;\n\t}\n\
    \treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    \n    while (a\
    \ != 0) {\n        if (a > b) {\n            gcd = b;\n            b = a % b;\n\
    \            a = b;\n        }\n        else {\n            gcd = a;\n       \
    \     a = a % b;\n        }\n    }\n    \n    return gcd;\n}\nunittest\n{\n  \
    \  alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpknhag7az.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgngykcl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    \n    if\
    \ (gcd == 0)\n        return a;\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxik7ebnb.d(20): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxik7ebnb.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong t = a % b;\n\t\
    \ta = b;\n\t\tb = t;\n\t\tgcd = gcd > b ? gcd : b;\n\t}\n\treturn gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_04cyj9u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = (gcd * a)\
    \ % b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcyl_c6j7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tgcd = __gcd(a,\
    \ b);\n\t\n\tif(__gcd(a, b) == 1)\n\t\treturn a;\n\t\n\treturn gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn1nridy5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) \n    {\n        long tmp\
    \ = a;\n        a = b;\n        b = tmp;\n    }\n    \n    for (;;) \n    {\n\
    \        gcd = a % b;\n        if (gcd == 0) \n        {\n            return b;\n\
    \        }\n        a = b;\n        b = gcd;\n    }\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmud09afj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong c;\n\tc = a % b;\n\twhile (c != 0) {\n\t\ta = b;\n\t\t\
    b = c;\n\t\tc = a % b;\n\t}\n\treturn b;\n}\n/*\n Return true if a is divisible\
    \ by b\n    >>> is_divisible(3L, 5L)\n    true\n    \n*/\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp64vi94tl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    for (;;) {\n        gcd = a\
    \ % b;\n        if (gcd == 0) {\n            return b;\n        }\n        a =\
    \ b;\n        b = gcd;\n    }\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpymtoqssl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    long d;\n    \n    c = a % b;\n    d = b;\n\
    \    while (c != 0) {\n        d = d;\n        c = c % b;\n    }\n    return d;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm8cu1ry0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\t}\n\
    \treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp84bvln7c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    \n    if\
    \ (gcd == 0)\n        return a;\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxik7ebnb.d(20): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxik7ebnb.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong t = b;\n\t\tb\
    \ = a % b;\n\t\ta = t;\n\t\tgcd = (gcd > a) ? gcd : a;\n\t}\n\treturn gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmponfofguw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    while (b != 0) {\n       \
    \ gcd = b;\n        b = a % b;\n        a = gcd;\n    }\n    \n    return a;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprgwtqjbm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tif (a > b) {\n\t\t\t\
    a %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = (gcd > a) ? gcd : a;\n\t\
    }\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0k996llb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\
    \t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = std.math.gcd(gcd, b);\n\
    \t\ta /= b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0a6zm5dx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0)\n\t{\n\t\tlong tmp = b;\n\t\
    \tb = a % b;\n\t\ta = tmp;\n\t\tgcd = gcd > a ? gcd : a;\n\t}\n\treturn gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplogty92u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif\
    \ (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = (gcd\
    \ > a) ? gcd : a;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpslt8vp4b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tlong t\
    \ = a % b;\n\t\ta = b;\n\t\tb = t;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcwdtfhmc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tfor (;;) {\n\t\tgcd = a % b;\n\t\tif (gcd\
    \ == 0) break;\n\t\ta = b;\n\t\tb = gcd;\n\t}\n\treturn gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp57i5mbz2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        if (a > b) {\n            a %= b;\n        } else {\n  \
    \          b %= a;\n        }\n        gcd *= b;\n    }\n    \n    return gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsr4liffs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 0)\n        return a;\n    \n\
    \    return greatest_common_divisor(b % gcd, gcd);\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptvftaog7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong c;\n\tc = a % b;\n\twhile (c != 0) {\n\t\ta = b;\n\t\t\
    b = c;\n\t\tc = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqo000gyc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = a % b;\n    while (a != 0) {\n\
    \        a = b;\n        b = gcd;\n        gcd = a % b;\n    }\n    return gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzbv35gds.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    if (a < b)\n        swap(a, b);\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        if (a % b == 0)\n            gcd = b;\n        b = a % b;\n\
    \        a = gcd;\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpurfcvbxs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif\
    \ (a > b) {\n\t\t\ta = a - b;\n\t\t} else {\n\t\t\tb = b - a;\n\t\t}\n\t\tgcd\
    \ = std.math.gcd(gcd, a);\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1bllbx4p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\tif(a==0) return b;\n\tif(b==0) return a;\n\t\
    if(a>b) std.swap(a,b);\n\tgcd = std.gcd(a,b);\n\tstd.swap(a,b);\n\treturn gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzdebv468.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0)\n\t{\n\t\
    \ta = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\t\n\treturn b;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm6tqei9y.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm9rtgejd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long temp = a;\n\
    \        a = b;\n        b = temp;\n    }\n    \n    gcd = 1;\n    while (b !=\
    \ 0) {\n        long r = a % b;\n        a = b;\n        b = r;\n        gcd =\
    \ (gcd > r) ? gcd : r;\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8iz99y5x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tfor (gcd = 1; a != 0; a = a / b) \n\t{\n\t\
    \tif (a > b) \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tgcd = b * gcd;\n\t}\n\treturn gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ip0kdb9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    for (;;) {\n        gcd =\
    \ a % b;\n        if (gcd == 0) break;\n        a = b;\n        b = gcd;\n   \
    \ }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0njol69o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong c;\n\tc = a % b;\n\twhile (c != 0) {\n\t\ta = b;\n\t\t\
    b = c;\n\t\tc = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqo000gyc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    while (a !=\
    \ 0) {\n        if (a > b) {\n            gcd = b;\n            b = a % b;\n \
    \       }\n        a = a % b;\n    }\n    \n    return gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1bplzvpy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tif(b ==\
    \ 1)\n\t\treturn a;\n\t\n\tif(b % 2 == 0)\n\t\treturn greatest_common_divisor(a%b,\
    \ (b/2)+1);\n\t\n\tgcd = greatest_common_divisor(b%a, a);\n\t\n\treturn gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp60mcvb7u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd != 0)\n        return gcd;\n  \
    \  \n    return __gcd(b, a % b);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxeilm_um.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 0)\n        return b;\n    \n\
    \    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4zw8b093.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    if (gcd ==\
    \ 0)\n        return a;\n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpohv5afqf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tif (a % b == 0) {\n\
    \t\t\tgcd = b;\n\t\t\tbreak;\n\t\t}\n\t\tb = b / 2;\n\t}\n\treturn gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpih060qkr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    long tmp;\n    \n    while (b != 0) {\n\
    \        tmp = b;\n        b = a % b;\n        a = tmp;\n        gcd = (gcd >\
    \ a) ? gcd : a;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate =\
    \ greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpple3vpdd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\tif (gcd\
    \ != 0)\n\t\treturn gcd;\n\t\n\treturn std.math.gcd(std.math.abs(a), std.math.abs(b));\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbth8gobh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\twhile (b != 0) {\n\t\tgcd = b;\n\t\tb = a\
    \ % b;\n\t\ta = gcd;\n\t}\n\treturn a;\n}\nunittest\n{\n    alias candidate =\
    \ greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy105ihsx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = greatest_common_divisor(b, a % b);\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy2lyo_qo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    return __gcd(gcd, b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_lp69766.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = __gcd(a, b);\n\t\n\tif (gcd == 0) \n\
    \t{\n\t\treturn a;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq7lhl548.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = (gcd > a)\
    \ ? gcd : a;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpikdxv3s7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0) {\n\t\t\
    a = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n   \
    \ alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) ==\
    \ 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp044_dq1x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\twhile (a != 0) {\n\t\tgcd = gcd * a;\n\t\ta = a /\
    \ b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprlr3na29.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 0)\n        return a;\n    \n\
    \    return greatest_common_divisor(b % gcd, a);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpue4mc5_f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong c;\n\tc = a % b;\n\twhile (c != 0) {\n\t\ta = b;\n\t\t\
    b = c;\n\t\tc = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqo000gyc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0) {\n\t\t\
    a = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n   \
    \ alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) ==\
    \ 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp044_dq1x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\twhile (b != 0) {\n\t\tt = b;\n\
    \t\tb = a % b;\n\t\ta = t;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7oavddfn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0 || b == 0)\n        return\
    \ 0;\n    \n    gcd = __gcd(a, b);\n    if (gcd == 0)\n        return a;\n   \
    \ \n    return __gcd(b, gcd);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6on6amxs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = greatest_common_divisor(b, a % b);\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy2lyo_qo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    long t;\n    \n    while (b != 0) {\n\
    \        t = b;\n        b = a % t;\n        a = t;\n        gcd = gcd * t;\n\
    \    }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe9s4z5jm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\t\
    return a;\n\tif(b == -1)\n\t\treturn a;\n\tif(a%b == 0)\n\t\treturn b;\n\tif(a%b\
    \ != 0)\n\t\treturn greatest_common_divisor(b, a % b);\n\tif(b%2 == 0)\n\t\treturn\
    \ greatest_common_divisor(b/2, a);\n\tif(b%2 == 1)\n\t\treturn greatest_common_divisor(b/2,\
    \ a/2);\n\tif(b%2 == -1)\n\t\treturn greatest_common_divisor(b/2, a/2 + 1);\n\t\
    if(b%2 == -2)\n\t\treturn greatest_common_divisor(b/2, a/2 - 1);\n\tif(b%2 ==\
    \ -3)\n\t\treturn greatest_common_divisor(b/2, a/2 - 2);\n\tif(b%2 == -4)\n\t\t\
    return greatest_common_divisor(b/2, a/2 - 3);\n\tif(b%2 == -5)\n\t\treturn greatest_common_divisor(b/2,\
    \ a/2 - 4);\n\tif(b%2 == -6)\n\t\treturn greatest_common_divisor(b/2, a/2 - 5);\n\
    \tif(b%2 == -7)\n\t\treturn greatest_common_divisor(b/2, a/2 - 6);\n\tif(b%2 ==\
    \ -8)\n\t\treturn greatest_common_divisor(b/2, a/2 - 7);\n\tif(b%2 == -9)\n\t\t\
    return greatest_common_divisor(b/2, a/2 - 8);\n\tif(b%2 == -10)\n\t\treturn greatest_common_divisor(b/2,\
    \ a/2 - 9);\n\tif(b%2 == -11)\n\t\treturn greatest_common_divisor(b/2, a/2 - 10);\n\
    \tif(b%2 == -12)\n\t\treturn greatest_common_divisor(b/2, a/2 - 11);\n\tif(b%2\
    \ == -13)\n\t\treturn greatest_common_divisor(b/2, a/2 - 12);\n\tif(b%2 == -14)\n\
    \t\treturn greatest_common_divisor(b/2, a/2 - 13);\n\tif(b%2 == -15)\n\t\treturn\
    \ greatest_common_divisor(b/2, a/2 - 14);\n\tif(b%2 == -16)\n\t\treturn greatest_common_divisor(b/2,\
    \ a/2 - 15);\n\tif(b%2 == -17)\n\t\treturn greatest_common_divisor(b/2, a/2 -\
    \ 16);\n\tif(b%2 == -18)\n\t\treturn greatest_common_divisor(b/2, a/2 - 17);\n\
    \tif(b%2 == -19)\n\t\treturn greatest_common_divisor(b/2, a/2 - 18);\n\tif(b%2\
    \ == -20)\n\t\treturn greate\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe0i5dii4.d(68): Error: found \''unittest\'' when expecting \'';\''
    following return statement\n/tmp/tmpe0i5dii4.d(77): Error: found \''EOF\'' when
    expecting \''}\'' following compound statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpe0i5dii4.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b !=\
    \ 0) {\n        remainder = b%a;\n        gcd = std.math.max(gcd, remainder);\n\
    \        b = remainder;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpics0e5zh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif\
    \ (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = (gcd\
    \ > a) ? gcd : a;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpslt8vp4b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgngykcl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = __gcd(a, b);\n\tif (gcd == 0) return\
    \ a;\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvoq9xmqw.d(15): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvoq9xmqw.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = std.math.gcd(a, b);\n    \n \
    \   if (std.math.gcd(a, b) == 1)\n        return a;\n    \n    return gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp348cyp1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0 || b == 0)\n        return\
    \ 0;\n    \n    gcd = __gcd(a, b);\n    if (gcd == 0)\n        return a;\n   \
    \ \n    return __gcd(b, gcd);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6on6amxs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgngykcl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\t\
    return a;\n\tgcd = greatest_common_divisor(b, a % b);\n\treturn gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9yuxqlfn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\t\n\twhile (b != 0) {\n\t\tif\
    \ (a > b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\
    \t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsth6z9fd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgngykcl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\t\
    return a;\n\tif(a%b == 0)\n\t\treturn b;\n\tgcd = greatest_common_divisor(b, a\
    \ % b);\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm0epffpt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm9rtgejd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (b != 0) {\n\t\tt =\
    \ b;\n\t\tb = a % b;\n\t\ta = t;\n\t\tgcd = (gcd > a) ? gcd : a;\n\t}\n\treturn\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqujxa3ye.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = a % b;\n    while (a != b) {\n\
    \        if (a > b)\n            a -= b;\n        else\n            b -= a;\n\
    \        gcd = a % b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn4zoddyq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    \n    while (a\
    \ != 0) {\n        if (a > b) {\n            a %= b;\n        }\n        else\
    \ {\n            b %= a;\n        }\n        gcd *= b;\n    }\n    \n    return\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj_4duw_h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\tlong r\
    \ = a % b;\n\t\tif (r != 0) {\n\t\t\tgcd = b;\n\t\t\tb = r;\n\t\t}\n\t\ta = b;\n\
    \t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_o1m842_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tlong r\
    \ = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwcjbw8x9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long r;\n    \n    if (a == 0)\n        return b;\n    if\
    \ (b == 0)\n        return a;\n    \n    r = a % b;\n    if (r != 0)\n       \
    \ return greatest_common_divisor(b, r);\n    return b;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpapffy99v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = __gcd(a, b);\n    if (gcd ==\
    \ 0)\n        throw new Exception(\"Division by zero\");\n    return gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo34dh883.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    return __gcd(gcd, b);\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_lp69766.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 0)\n        return b;\n    \n\
    \    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4zw8b093.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long r;\n    \n    r = a % b;\n    if (r == 0) \n      \
    \  return b;\n    else \n        return greatest_common_divisor(b, r);\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpizwgra9f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\ta = a %\
    \ b;\n\t\tgcd = b * gcd;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg63dlam7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    long remainder;\n    \n    while (b !=\
    \ 0) {\n        remainder = b % a;\n        gcd = std.math.max(gcd, remainder);\n\
    \        b = remainder;\n    }\n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuvrwb0xc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    for (;;) {\n        gcd = a\
    \ % b;\n        if (gcd == 0) break;\n        a = b;\n        b = gcd;\n    }\n\
    \    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpl87odmcb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (b != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\t}\n\
    \treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7bk5o9iz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\t\
    a %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = (gcd > a) ? gcd : a;\n\t\
    }\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqwk81fif.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tfor (gcd = 1; a != 0; a /= b) \n\t{\n\t\t\
    if (a > b) \n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\tgcd = b; \n\t\tb = a % b;\n\t}\n\t\
    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmrnyf8uk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    \n    if\
    \ (gcd == 0)\n        return a;\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxik7ebnb.d(20): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxik7ebnb.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tif(a==0) return b;\n\tif(b==0) return a;\n\
    \t\n\tfor(;;) {\n\t\tif(a%b==0) return b;\n\t\tif(b%a==0) return a;\n\t\t\n\t\t\
    if(a>b) {\n\t\t\tgcd=a;\n\t\t\ta=b;\n\t\t\tb=gcd;\n\t\t}\n\t\telse {\n\t\t\tgcd=b;\n\
    \t\t\ta=b;\n\t\t\tb=gcd;\n\t\t}\n\t}\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjzzf7nlh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = std.math.gcd(a, b);\n\t\n\tif (gcd\
    \ == 0) \n\t\treturn a;\n\t\n\treturn greatest_common_divisor(b % gcd, gcd);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjeiwexny.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    // Handle negative numbers\n    if\
    \ (a < 0)\n        a = -a;\n    if (b < 0)\n        b = -b;\n    \n    // Handle\
    \ zero and greatest common divisor\n    if (a == 0 || b == 0)\n        return\
    \ 0;\n    \n    // Handle negative numbers\n    if (a < 0)\n        a = -a;\n\
    \    if (b < 0)\n        b = -b;\n    \n    // Handle common divisors\n    if\
    \ (b == 0)\n        return a;\n    \n    // Handle positive numbers\n    if (a\
    \ > b)\n        std.swap(a, b);\n    \n    // Compute greatest common divisor\
    \ using Euclid's algorithm\n    gcd = 1;\n    while (a != 0) {\n        long r\
    \ = a % b;\n        a = b;\n        b = r;\n        gcd = std.gcd(gcd, b);\n \
    \   }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpprk18ehv.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n    while\
    \ (a != 0) {\n        if (a > b) {\n            gcd = b;\n            b = a %\
    \ b;\n            a = b;\n        } else {\n            gcd = a;\n           \
    \ a = a % b;\n        }\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpcn7yihju.d(43): unittest failure\n----------------\n??:?
    _d_unittestp [0x427da5]\n??:? void tmpcn7yihju.__unittest_L36_C1() [0x427b13]\n??:?
    void tmpcn7yihju.__modtest() [0x427b28]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bacb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a95e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffa0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa7d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a935]\n??:? runModuleUnitTests [0x42b8a1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281f4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42817b]\n??:? _d_run_main [0x4280e6]\n??:? main [0x427b3b]\n??:?
    __libc_start_main [0xb0157554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = __gcd(a, b);\n\t\n\tif (gcd == 0) \n\
    \t{\n\t\treturn a;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq7lhl548.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (a != 0) {\n\t\ta =\
    \ b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n   \
    \ alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) ==\
    \ 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp24o9zy2v.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tif(b ==\
    \ 1)\n\t\treturn a;\n\t\n\tgcd = greatest_common_divisor(b, a % b);\n\t\n\treturn\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppn0d0muu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    \n    if\
    \ (gcd == 0)\n        return a;\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxik7ebnb.d(20): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxik7ebnb.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = 1;\n    while (b != 0) {\n  \
    \      if (a > b) {\n            a %= b;\n        } else {\n            b %= a;\n\
    \        }\n        gcd *= b;\n    }\n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprtzf4sks.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    \n    if (a < b) {\n        c = a;\n      \
    \  a = b;\n        b = c;\n    }\n    \n    while (a != 0) {\n        c = a %\
    \ b;\n        a = b;\n        b = c;\n    }\n    \n    return b;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp70p5mu0g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (b != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= a;\n\t}\n\
    \treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyamsh39r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\twhile (a != 0) {\n\t\tgcd = gcd * a;\n\t\ta--;\n\t\
    }\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptx_dnp2k.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\t\
    a %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = (gcd > a) ? gcd : a;\n\t\
    }\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqwk81fif.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong c;\n\tc = a % b;\n\twhile (c != 0) {\n\t\ta = b;\n\t\t\
    b = c;\n\t\tc = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqo000gyc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 0)\n        return a;\n    \n\
    \    return greatest_common_divisor(b % gcd, a);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpue4mc5_f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0) \n        return b;\n \
    \   if (b == 0) \n        return a;\n    \n    gcd = __gcd(a, b);\n    if (gcd\
    \ == 0) \n        return a;\n    \n    return greatest_common_divisor(b % gcd,\
    \ a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkp1cgkog.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\t\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\
    \t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\t}\n\t\n\treturn\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpriol6kx4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\t}\n\
    \treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp84bvln7c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\t\
    a %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = std.math.gcd(gcd, b);\n\
    \t\ta /= b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqxnolx84.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong tmp = b;\n\t\t\
    b = a % b;\n\t\ta = tmp;\n\t\tgcd = (gcd > a) ? gcd : a;\n\t}\n\treturn gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu8_5plmt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\tif(a==0) return b;\n\tif(b==0) return a;\n\t\
    if(a>b) std.swap(a,b);\n\tgcd = 1;\n\tfor(;;) {\n\t\tif(b % gcd == 0) return gcd;\n\
    \t\tgcd *= gcd;\n\t\tb /= gcd;\n\t}\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxqhtik04.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\t\
    a %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = std.math.gcd(gcd, b);\n\
    \t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpstme9mnp.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = greatest_common_divisor(b, a % b);\n    \n    if (gcd > a)\n  \
    \      return gcd;\n    \n    return a;\n}\nunittest\n{\n    alias candidate =\
    \ greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmvszcvsu.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    \n    while (a\
    \ != 0) {\n        if (a > b) {\n            gcd = b;\n            b = a % b;\n\
    \            a = b;\n        } else {\n            gcd = a;\n            a = a\
    \ % b;\n        }\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpp9ltm5mr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong c;\n\tc = a % b;\n\twhile (c != 0) {\n\t\ta = b;\n\t\t\
    b = c;\n\t\tc = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqo000gyc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = b;\n\t}\n\
    \treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\twhile (a != 0) {\n\t\tgcd = gcd * a;\n\t\ta = a /\
    \ b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprlr3na29.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = __gcd(a, b);\n\t\n\tif (gcd == 0) \n\
    \t\treturn a;\n\t\n\treturn __gcd(b, gcd);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphbas947e.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\twhile (b != 0)\n\t{\n\t\tgcd = std.math.gcd(a,\
    \ b);\n\t\ta = std.math.mod(a, gcd);\n\t\tb = std.math.mod(b, gcd);\n\t}\n\t\n\
    \treturn a;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb16c4iri.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a % b != 0) {\n\t\ta =\
    \ b;\n\t\tb = gcd;\n\t\tgcd = b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppwrj3466.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = 1;\n    \n    while (a != 0)\
    \ {\n        if (a > b) {\n            a %= b;\n        } else {\n           \
    \ b %= a;\n        }\n        gcd = (gcd > a) ? gcd : a;\n    }\n    return gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg1wzh1j5.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgngykcl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    for (;;) {\n        gcd = a\
    \ % b;\n        if (gcd == 0) break;\n        a = b;\n        b = gcd;\n    }\n\
    \    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm4jokrwk.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    \n    while (a\
    \ != 0) {\n        if (a > b) {\n            gcd = b;\n            b = a % b;\n\
    \        }\n        a = a % b;\n    }\n    \n    return gcd;\n}\nunittest\n{\n\
    \    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt0ce5ppe.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long r = a\
    \ % b;\n        a = b;\n        b = r;\n    }\n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpja2sbc3b.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    \n    while (a\
    \ != 0) {\n        if (a > b) {\n            a %= b;\n            gcd *= b;\n\
    \        }\n        else {\n            b %= a;\n            gcd *= a;\n     \
    \   }\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp49q38f58.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: -1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tlong r\
    \ = a % b;\n\t\tif (r != 0) {\n\t\t\tgcd = b;\n\t\t\tb = r;\n\t\t}\n\t\ta = a\
    \ / b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 0)\n        return b;\n    \n\
    \    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4zw8b093.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    \n    if\
    \ (gcd == 0)\n        return a;\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxik7ebnb.d(20): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxik7ebnb.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgngykcl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long c;\n    long gcd;\n    \n    if (a < b) {\n       \
    \ c = a;\n        a = b;\n        b = c;\n    }\n    \n    gcd = 1;\n    \n  \
    \  while (a != 0) {\n        if (a > b) {\n            gcd = gcd*b;\n        }\n\
    \        a = a / b;\n        b = gcd;\n    }\n    \n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpy3nipqp4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tlong r\
    \ = a % b;\n\t\ta = b;\n\t\tb = r;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwul7nkwb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long tmp = a;\n\
    \        a = b;\n        b = tmp;\n    }\n    \n    for (;;) {\n        gcd =\
    \ a % b;\n        if (gcd == 0) break;\n        a = b;\n        b = gcd;\n   \
    \ }\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0njol69o.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tif(b > a)\n\
    \t{\n\t\tgcd = greatest_common_divisor(b, a);\n\t\ta = b;\n\t\tb = gcd;\n\t}\n\
    \t\n\tdo\n\t{\n\t\tgcd = a % b;\n\t\ta = b;\n\t\tb = gcd;\n\t} while(a != 1);\n\
    \t\n\treturn b;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2bbplak9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\tlong t;\n\t\n\twhile (a != 0) {\n\t\tt =\
    \ a % b;\n\t\ta = b;\n\t\tb = t;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1848l3ue.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = 1;\n    \n    while (a != 0)\
    \ {\n        if (a > b) {\n            a %= b;\n        } else {\n           \
    \ b %= a;\n        }\n        gcd *= b;\n    }\n    \n    return gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfy8gh4_c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    if (gcd ==\
    \ 0)\n        return a;\n    \n    return greatest_common_divisor(b % gcd, a);\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzqvcm_b_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0)\n\t{\n\t\
    \ta = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpytcq45gz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b > 0) {\n\t\tlong r = a % b;\n\t\t\
    a = b;\n\t\tb = r;\n\t\tgcd = (gcd > r) ? gcd : r;\n\t}\n\treturn gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprt08bvt6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd = 1;\n    while (b != 0) {\n        long t = a\
    \ % b;\n        a = b;\n        b = t;\n        gcd = gcd * b;\n    }\n    return\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2ekl17ed.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (b != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd *= b;\n\t}\n\
    \treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = __gcd(a, b);\n    if (gcd ==\
    \ 0) return a;\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn21y581y.d(15): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn21y581y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a % b;\n\twhile (gcd != 0)\n\t{\n\t\
    \ta = b;\n\t\tb = gcd;\n\t\tgcd = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n \
    \   alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L)\
    \ == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L)\
    \ == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpytcq45gz.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a == 0)\n        return b;\n  \
    \  if (b == 0)\n        return a;\n    \n    gcd = __gcd(a, b);\n    if (gcd ==\
    \ 0)\n        return a;\n    return gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpohv5afqf.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\tif(b == 0)\n\t\treturn a;\n\tif(b == 1)\n\t\t\
    return a;\n\tif(b == -1)\n\t\treturn a;\n\tif(b > a)\n\t{\n\t\tgcd = greatest_common_divisor(b,\
    \ a%b);\n\t\treturn gcd;\n\t}\n\telse\n\t{\n\t\tgcd = greatest_common_divisor(a,\
    \ (b+a)%b);\n\t\treturn gcd;\n\t}\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj4wjfww6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong c;\n\tc = a % b;\n\twhile (c != 0) {\n\t\ta = b;\n\t\t\
    b = c;\n\t\tc = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqo000gyc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = __gcd(a, b);\n    if (gcd ==\
    \ 0) return a;\n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpn21y581y.d(15): Error: undefined identifier `__gcd`, did you
    mean variable `gcd`?\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn21y581y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (b != 0) {\n\t\tlong tmp\
    \ = b;\n\t\tb = a % b;\n\t\ta = tmp;\n\t\tgcd = (gcd > a) ? gcd : a;\n\t}\n\t\
    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n\
    \    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqawpb9fq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    // find gcd of both a and b\n    gcd\
    \ = __gcd(a, b);\n    \n    // if gcd is 1, then return a\n    if (gcd == 1) return\
    \ a;\n    \n    // if gcd is 0, then return b\n    if (gcd == 0) return b;\n \
    \   \n    // otherwise return greatest common divisor of gcd and a\n    return\
    \ __gcd(gcd, a);\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmz2idwjb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta = a - b;\n\t\t} else {\n\t\t\tb = b - a;\n\t\t}\n\t\tgcd = gcd*b;\n\
    \t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjlpp8qzi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tfor (;;) {\n\t\tgcd = a % b;\n\t\tif (gcd\
    \ == 0) return b;\n\t\ta = b;\n\t\tb = gcd;\n\t}\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4ynrkb8d.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsgngykcl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) \n    {\n        long tmp\
    \ = a;\n        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n  \
    \  while (a != 0) \n    {\n        if (a > b) \n        {\n            gcd = b\
    \ - gcd;\n            b = a - b;\n            a = a % b;\n        }\n        else\
    \ \n        {\n            gcd = a - gcd;\n            a = a % b;\n        }\n\
    \    }\n    \n    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4ab3pkf0.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tif(b == 0)\n\t\treturn a;\n\t\n\tif(b > a)\n\
    \t{\n\t\tgcd = greatest_common_divisor(b, a);\n\t\ta = a;\n\t\tb = gcd;\n\t}\n\
    \t\n\tdo\n\t{\n\t\tgcd = std.math.gcd(a, b);\n\t\ta = b;\n\t\tb = gcd;\n\t}\n\t\
    while(a != 1);\n\t\n\treturn b;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnlom2dv_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = 0;\n    \n    while (a != 0) {\n        if (a > b)\n          \
    \  a %= b;\n        else\n            b %= a;\n        gcd += a;\n    }\n    \n\
    \    return gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5m8wubp1.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = __gcd(a, b);\n\t\n\tif (gcd == 0) \n\
    \t{\n\t\treturn a;\n\t}\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq7lhl548.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\tlong r\
    \ = a % b;\n\t\ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_a2baxd9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) \n    {\n        long tmp\
    \ = a;\n        a = b;\n        b = tmp;\n    }\n    \n    gcd = 1;\n    \n  \
    \  while (a != 0) \n    {\n        long r = a % b;\n        a = b;\n        b\
    \ = r;\n        gcd = (gcd > b) ? gcd : b;\n    }\n    \n    return gcd;\n}\n\
    unittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj_aghlxd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: -8
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (a < b) {\n        long t = a;\n\
    \        a = b;\n        b = t;\n    }\n    \n    gcd = 1;\n    \n    while (a\
    \ != 0) {\n        long r = a % b;\n        a = b;\n        b = r;\n        gcd\
    \ = (gcd > r) ? gcd : r;\n    }\n    \n    return gcd;\n}\nunittest\n{\n    alias\
    \ candidate = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n\
    \    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n\
    \    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: Exception
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong r;\n\t\n\tr = a % b;\n\t\n\tif (r == 0) \n\t\treturn\
    \ b;\n\t\n\treturn greatest_common_divisor(b, r);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpujiyjfah.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong c;\n\tc = a % b;\n\twhile (c != 0) {\n\t\ta = b;\n\t\t\
    b = c;\n\t\tc = a % b;\n\t}\n\treturn b;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqo000gyc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = a % b;\n    while (a != 0) {\n\
    \        a = b;\n        b = gcd;\n        gcd = a % b;\n    }\n    return gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzbv35gds.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = a;\n\twhile (a != 0) {\n\t\ta = b %\
    \ a;\n\t\tgcd = a;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate =\
    \ greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqqj2wmg8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = 1;\n\twhile (a != 0) {\n\t\tif (a >\
    \ b) {\n\t\t\ta %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = (gcd * a)\
    \ % b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcyl_c6j7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tlong r = a % b;\n\t\
    \ta = b;\n\t\tb = r;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm9rtgejd.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    if (b == 0)\n        return a;\n  \
    \  \n    gcd = __gcd(a, b);\n    \n    if (gcd == 0)\n        return a;\n    \n\
    \    return greatest_common_divisor(b, gcd);\n}\nunittest\n{\n    alias candidate\
    \ = greatest_common_divisor;\n\n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L,\
    \ 15L) == 5L);\n    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L,\
    \ 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptwkqffh6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0)\n\t{\n\t\tlong r = a % b;\n\
    \t\ta = b;\n\t\tb = r;\n\t\tgcd = gcd * b;\n\t}\n\treturn gcd;\n}\nunittest\n\
    {\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxk4egz9f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = a;\n    \n    while (a != 0)\
    \ {\n        if (b != 0) {\n            if (a > b) {\n                a %= b;\n\
    \            } else {\n                b %= a;\n            }\n        } else\
    \ {\n            b = a;\n        }\n        gcd = b;\n    }\n    return gcd;\n\
    }\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n    assert(candidate(3L,\
    \ 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n    assert(candidate(49L,\
    \ 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpi4ia7qmx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\tlong temp;\n\t\n\twhile (b != 0) {\n\t\t\
    temp = a % b;\n\t\ta = b;\n\t\tb = temp;\n\t\tgcd = gcd * b;\n\t}\n\t\n\treturn\
    \ gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\n   \
    \ assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n \
    \   assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpggtke7t2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (a != 0) {\n\t\tif (a > b) {\n\t\t\t\
    a %= b;\n\t\t} else {\n\t\t\tb %= a;\n\t\t}\n\t\tgcd = std.math.gcd(gcd, b);\n\
    \t\ta /= b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqxnolx84.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd;\n\t\n\tgcd = __gcd(a, b);\n\t\n\tif (gcd == 0) \n\
    \t\treturn a;\n\t\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxnttm_2t.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n    long gcd;\n    \n    gcd = std.math.gcd(a, b);\n    \n \
    \   if (gcd != 0)\n    {\n        return gcd;\n    }\n    else\n    {\n      \
    \  return a;\n    }\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqer75vm_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n Return a greatest common\
    \ divisor of two integers a and b\n    >>> greatest_common_divisor(3L, 5L)\n \
    \   1L\n    >>> greatest_common_divisor(25L, 15L)\n    5L\n    \n*/\nlong greatest_common_divisor(long\
    \ a, long b) \n{\n\tlong gcd = 1;\n\twhile (b != 0) {\n\t\tif (a % b == 0) {\n\
    \t\t\tgcd = b;\n\t\t\tbreak;\n\t\t}\n\t\tgcd = b;\n\t\tb = a % b;\n\t\ta = gcd\
    \ % b;\n\t}\n\treturn gcd;\n}\nunittest\n{\n    alias candidate = greatest_common_divisor;\n\
    \n    assert(candidate(3L, 7L) == 1L);\n    assert(candidate(10L, 15L) == 5L);\n\
    \    assert(candidate(49L, 14L) == 7L);\n    assert(candidate(144L, 60L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn48feein.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659794522

language: d
name: HumanEval_24_largest_divisor
results:
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile(d < largest) {\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\twhile(n > largest)\
    \ {\n\t\tn /= 2;\n\t\t++largest;\n\t}\n\treturn largest;\n}\nunittest\n{\n   \
    \ alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n   \
    \ assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpzrfa69ft.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d95]\n??:? void tmpzrfa69ft.__unittest_L22_C1() [0x427a80]\n??:?
    void tmpzrfa69ft.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42816b]\n??:? _d_run_main [0x4280d6]\n??:? main [0x427b2b]\n??:?
    __libc_start_main [0x8480b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder;\n\tlong currentDivisorDivisor;\n\t\n\t\
    while (currentDivisor <= n) \n\t{\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\
    \t\tcurrentDivisorDivisor = currentDivisor;\n\t\t\n\t\twhile (currentDivisorRemainder\
    \ > 0) \n\t\t{\n\t\t\tcurrentDivisorDivisor *= currentDivisor;\n\t\t\tcurrentDivisorRemainder\
    \ -= currentDivisorRemainder;\n\t\t}\n\t\t\n\t\tif (currentDivisorDivisor > maxDivisor)\
    \ \n\t\t{\n\t\t\tmaxDivisor = currentDivisorDivisor;\n\t\t}\n\t\t\n\t\tcurrentDivisor++;\n\
    \t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpkkauv3a4.d(40): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dc5]\n??:? void tmpkkauv3a4.__unittest_L36_C1() [0x427ab0]\n??:?
    void tmpkkauv3a4.__modtest() [0x427b48]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baeb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a97e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb11]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffc0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa9d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a955]\n??:? runModuleUnitTests [0x42b8c1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428214]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42819b]\n??:? _d_run_main [0x428106]\n??:? main [0x427b5b]\n??:?
    __libc_start_main [0x1dc7b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDiv =\
    \ n;\n\t\n\tfor(i = 2; i <= n/2; i++){\n\t\tif(n % i == 0){\n\t\t\tmaxDiv = i;\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\treturn maxDiv;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpsbrdjws2.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpsbrdjws2.d(11): Error: use `long` for a 64 bit integer
    instead of `long long`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsbrdjws2.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong div = 1;\n\
    \twhile (div <= max_div) {\n\t\tlong div2 = div * div;\n\t\tif (div2 <= max_div)\
    \ {\n\t\t\tmax_div = div2;\n\t\t} else {\n\t\t\tmax_div = div;\n\t\t}\n\t\tdiv++;\n\
    \t}\n\treturn max_div;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpxdxnqg81.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d95]\n??:? void tmpxdxnqg81.__unittest_L23_C1() [0x427ac2]\n??:?
    void tmpxdxnqg81.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42816b]\n??:? _d_run_main [0x4280d6]\n??:? main [0x427b2b]\n??:?
    __libc_start_main [0x61336554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 1;\n\tlong max_div7 = 1;\n\tlong max_div8 = 1;\n\tlong max_div9 =\
    \ 1;\n\tlong max_div10 = 1;\n\tlong max_div11 = 1;\n\tlong max_div12 = 1;\n\t\
    long max_div13 = 1;\n\tlong max_div14 = 1;\n\tlong max_div15 = 1;\n\tlong max_div16\
    \ = 1;\n\tlong max_div17 = 1;\n\tlong max_div18 = 1;\n\tlong max_div19 = 1;\n\t\
    long max_div20 = 1;\n\tlong max_div21 = 1;\n\tlong max_div22 = 1;\n\tlong max_div23\
    \ = 1;\n\tlong max_div24 = 1;\n\tlong max_div25 = 1;\n\tlong max_div26 = 1;\n\t\
    long max_div27 = 1;\n\tlong max_div28 = 1;\n\tlong max_div29 = 1;\n\tlong max_div30\
    \ = 1;\n\tlong max_div31 = 1;\n\tlong max_div32 = 1;\n\tlong max_div33 = 1;\n\t\
    long max_div34 = 1;\n\tlong max_div35 = 1;\n\tlong max_div36 = 1;\n\tlong max_div37\
    \ = 1;\n\tlong max_div38 = 1;\n\tlong max_div39 = 1;\n\tlong max_div40 = 1;\n\t\
    long max_div41 = 1;\n\tlong max_div42 = 1;\n\tlong max_div43 = 1;\n\tlong max_div44\
    \ = 1;\n\tlong max_div45 = 1;\n\tlong max_div46 = 1;\n\tlong max_div47 = 1;\n\t\
    long max_div48 = 1;\n\tlong max_div49 = 1;\n\tlong max_div50 = 1;\n\tlong max_div51\
    \ = 1;\n\tlong max_div52 = 1;\n\tlong max_div53 = 1;\n\tlong max_div54 = 1;\n\t\
    long max_div55 = 1;\n\tlong max_div56 = 1;\n\tlong max_div57 = 1;\n\tlong max_div58\
    \ = 1;\n\tlong max_div59 = 1;\n\tlong max_div60 = 1;\n\tlong max_div61 = 1;\n\t\
    long max_div62 = 1;\n\tlong max_div63 = 1;\n\tlong max_div64 = 1;\n\tlong max_div65\
    \ = 1;\n\tlong max_div66 = 1;\n\tlong max_div67 = 1;\n\tlong max_div68 = 1;\n\t\
    long max_div69 = 1;\n\tlong max_div70 = 1;\n\tlong max_div71 = 1;\n\tlong max_div72\
    \ = 1;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5sk6iues.d(83): Error: no identifier for declarator `long`\n/tmp/tmp5sk6iues.d(83):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp5sk6iues.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong d = 1;\n\
    \t\n\twhile (d <= n && n % d == 0)\n\t{\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\
    \n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpsc_9asqs.d(27): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmpsc_9asqs.__unittest_L21_C1() [0x427ab2]\n??:?
    void tmpsc_9asqs.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b1b]\n??:?
    __libc_start_main [0xc6f1b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\t\
    \t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: b''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong div = 1;\n\twhile (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest\
    \ = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpmmvv60hi.d(24): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmpmmvv60hi.__unittest_L20_C1() [0x427a70]\n??:?
    void tmpmmvv60hi.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b1b]\n??:?
    __libc_start_main [0xd0304554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong divisor = 1;\n\tlong max_divisor\
    \ = 1;\n\tlong max_divisor2 = 1;\n\tlong max_divisor3 = 1;\n\tlong max_divisor4\
    \ = 1;\n\tlong max_divisor5 = 1;\n\tlong max_divisor6 = 1;\n\tlong max_divisor7\
    \ = 1;\n\tlong max_divisor8 = 1;\n\tlong max_divisor9 = 1;\n\tlong max_divisor10\
    \ = 1;\n\tlong max_divisor11 = 1;\n\tlong max_divisor12 = 1;\n\tlong max_divisor13\
    \ = 1;\n\tlong max_divisor14 = 1;\n\tlong max_divisor15 = 1;\n\tlong max_divisor16\
    \ = 1;\n\tlong max_divisor17 = 1;\n\tlong max_divisor18 = 1;\n\tlong max_divisor19\
    \ = 1;\n\tlong max_divisor20 = 1;\n\tlong max_divisor21 = 1;\n\tlong max_divisor22\
    \ = 1;\n\tlong max_divisor23 = 1;\n\tlong max_divisor24 = 1;\n\tlong max_divisor25\
    \ = 1;\n\tlong max_divisor26 = 1;\n\tlong max_divisor27 = 1;\n\tlong max_divisor28\
    \ = 1;\n\tlong max_divisor29 = 1;\n\tlong max_divisor30 = 1;\n\tlong max_divisor31\
    \ = 1;\n\tlong max_divisor32 = 1;\n\tlong max_divisor33 = 1;\n\tlong max_divisor34\
    \ = 1;\n\tlong max_divisor35 = 1;\n\tlong max_divisor36 = 1;\n\tlong max_divisor37\
    \ = 1;\n\tlong max_divisor38 = 1;\n\tlong max_divisor39 = 1;\n\tlong max_divisor40\
    \ = 1;\n\tlong max_divisor41 = 1;\n\tlong max_divisor42 = 1;\n\tlong max_divisor43\
    \ = 1;\n\tlong max_divisor44 = 1;\n\tlong max_divisor45 = 1;\n\tlong max_divisor46\
    \ = 1;\n\tlong max_divisor47 = 1;\n\tlong max_divisor48 = 1;\n\tlong max_divisor49\
    \ = 1;\n\tlong max_divisor50 = 1;\n\tlong max_divisor51 = 1;\n\tlong max_divisor52\
    \ = 1;\n\tlong max_divisor53 = 1;\n\tlong max_divisor54 = 1;\n\tlong max_divisor55\
    \ = 1;\n\tlong max_divisor56 = 1;\n\tlong max_divisor57 = 1;\n\tlong max_divisor58\
    \ = 1;\n\tlong max_divisor59 = 1;\n\tlong max_divisor60 = 1;\n\tlong max_divisor61\
    \ = 1;\n\tlong max_divisor62 = 1;\n\tlong max_divisor63 = 1;\n\tlong max_divisor64\
    \ = 1;\n\tlong max_divisor65 = 1;\n\tlong max_divisor66 = 1;\n\tlong max_divisor67\
    \ = 1;\n\tlong max_divisor68 = 1;\n\tlong max_divisor69 = 1;\n\tlong max_divisor70\
    \ = 1;\n\tlong max_divisor71 = 1;\n\tlong max_divisor7\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpq2216zhn.d(83): Error: semicolon expected, not `unittest`\n/tmp/tmpq2216zhn.d(83):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpq2216zhn.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n && n % divisor == 0) {\n\t\tdivisor++;\n\t}\n\twhile\
    \ (divisor < n && n % divisor != 0) {\n\t\tlargest = divisor;\n\t\tdivisor++;\n\
    \t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpetlqzhua.d(25): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d9d]\n??:? void tmpetlqzhua.__unittest_L21_C1() [0x427a88]\n??:?
    void tmpetlqzhua.__modtest() [0x427b20]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff98]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa75]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a92d]\n??:? runModuleUnitTests [0x42b899]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428173]\n??:? _d_run_main [0x4280de]\n??:? main [0x427b33]\n??:?
    __libc_start_main [0xc0317554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: -1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\tlong currentDivisorDivisor = 1;\n\
    \t\n\twhile(currentDivisorRemainder != 0)\n\t{\n\t\tcurrentDivisorDivisor = currentDivisor\
    \ * currentDivisor;\n\t\tcurrentDivisorRemainder = currentDivisor % n;\n\t\tcurrentDivisor\
    \ = currentDivisorDivisor;\n\t\t\n\t\tif(currentDivisorRemainder > maxDivisor)\n\
    \t\t\tmaxDivisor = currentDivisorRemainder;\n\t}\n\t\n\treturn maxDivisor;\n}\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Timeout
  stderr: None
  stdout: None
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 1;\n\tlong max_div7 = 1;\n\tlong max_div8 = 1;\n\tlong max_div9 =\
    \ 1;\n\tlong max_div10 = 1;\n\tlong max_div11 = 1;\n\tlong max_div12 = 1;\n\t\
    long max_div13 = 1;\n\tlong max_div14 = 1;\n\tlong max_div15 = 1;\n\tlong max_div16\
    \ = 1;\n\tlong max_div17 = 1;\n\tlong max_div18 = 1;\n\tlong max_div19 = 1;\n\t\
    long max_div20 = 1;\n\tlong max_div21 = 1;\n\tlong max_div22 = 1;\n\tlong max_div23\
    \ = 1;\n\tlong max_div24 = 1;\n\tlong max_div25 = 1;\n\tlong max_div26 = 1;\n\t\
    long max_div27 = 1;\n\tlong max_div28 = 1;\n\tlong max_div29 = 1;\n\tlong max_div30\
    \ = 1;\n\tlong max_div31 = 1;\n\tlong max_div32 = 1;\n\tlong max_div33 = 1;\n\t\
    long max_div34 = 1;\n\tlong max_div35 = 1;\n\tlong max_div36 = 1;\n\tlong max_div37\
    \ = 1;\n\tlong max_div38 = 1;\n\tlong max_div39 = 1;\n\tlong max_div40 = 1;\n\t\
    long max_div41 = 1;\n\tlong max_div42 = 1;\n\tlong max_div43 = 1;\n\tlong max_div44\
    \ = 1;\n\tlong max_div45 = 1;\n\tlong max_div46 = 1;\n\tlong max_div47 = 1;\n\t\
    long max_div48 = 1;\n\tlong max_div49 = 1;\n\tlong max_div50 = 1;\n\tlong max_div51\
    \ = 1;\n\tlong max_div52 = 1;\n\tlong max_div53 = 1;\n\tlong max_div54 = 1;\n\t\
    long max_div55 = 1;\n\tlong max_div56 = 1;\n\tlong max_div57 = 1;\n\tlong max_div58\
    \ = 1;\n\tlong max_div59 = 1;\n\tlong max_div60 = 1;\n\tlong max_div61 = 1;\n\t\
    long max_div62 = 1;\n\tlong max_div63 = 1;\n\tlong max_div64 = 1;\n\tlong max_div65\
    \ = 1;\n\tlong max_div66 = 1;\n\tlong max_div67 = 1;\n\tlong max_div68 = 1;\n\t\
    long max_div69 = 1;\n\tlong max_div70 = 1;\n\tlong max_div71 = 1;\n\tlong max_div72\
    \ = 1;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5sk6iues.d(83): Error: no identifier for declarator `long`\n/tmp/tmp5sk6iues.d(83):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp5sk6iues.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d < largest)\n\t{\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\twhile (n > largest)\n\
    \t{\n\t\tn /= 2;\n\t\t++largest;\n\t}\n\treturn largest;\n}\nunittest\n{\n   \
    \ alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n   \
    \ assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpg1xgulrd.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d95]\n??:? void tmpg1xgulrd.__unittest_L24_C1() [0x427a80]\n??:?
    void tmpg1xgulrd.__modtest() [0x427b18]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff90]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa6d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a925]\n??:? runModuleUnitTests [0x42b891]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42816b]\n??:? _d_run_main [0x4280d6]\n??:? main [0x427b2b]\n??:?
    __libc_start_main [0x3eaf2554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\
    \tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp7gkhcl7l.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmp7gkhcl7l.__unittest_L24_C1() [0x427a70]\n??:?
    void tmp7gkhcl7l.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b1b]\n??:?
    __libc_start_main [0xbbbef554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile(div <= largest)\n\t{\n\t\tlargest = div;\n\t\tdiv *= 2;\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpwxa1nqg8.d(25): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d75]\n??:? void tmpwxa1nqg8.__unittest_L19_C1() [0x427a9e]\n??:?
    void tmpwxa1nqg8.__modtest() [0x427af4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba9b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a92e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff70]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa4d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a905]\n??:? runModuleUnitTests [0x42b871]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281c4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42814b]\n??:? _d_run_main [0x4280b6]\n??:? main [0x427b07]\n??:?
    __libc_start_main [0xa6dd5554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (d < largest) {\n\t\tif (n % d == 0) {\n\t\t\tlargest =\
    \ d;\n\t\t}\n\t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp9uiwgy9w.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmp9uiwgy9w.__unittest_L20_C1() [0x427ab2]\n??:?
    void tmp9uiwgy9w.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b1b]\n??:?
    __libc_start_main [0x7ae87554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong d = n;\n\
    \twhile(d % 2 == 0)\n\t{\n\t\td /= 2;\n\t\tlargest *= 2;\n\t}\n\twhile(d % 3 ==\
    \ 0)\n\t{\n\t\td /= 3;\n\t\tlargest *= 3;\n\t}\n\twhile(d % 5 == 0)\n\t{\n\t\t\
    d /= 5;\n\t\tlargest *= 5;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpaemv23zc.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmpaemv23zc.__unittest_L29_C1() [0x427ad0]\n??:?
    void tmpaemv23zc.__modtest() [0x427b68]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b7b]\n??:?
    __libc_start_main [0x98c42554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 2;\n\twhile (d < n) //keep dividing n by d until we get down to 1\n\
    \t{\n\t\tif (n % d == 0) //if d divides n\n\t\t{\n\t\t\tlargest = d;\n\t\t}\n\t\
    \td *= 2;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpror20u3v.d(26): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmpror20u3v.__unittest_L22_C1() [0x427a70]\n??:?
    void tmpror20u3v.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b1b]\n??:?
    __libc_start_main [0x99583554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 1;\n\tlong max_div7 = 1;\n\tlong max_div8 = 1;\n\tlong max_div9 =\
    \ 1;\n\tlong max_div10 = 1;\n\tlong max_div11 = 1;\n\tlong max_div12 = 1;\n\t\
    long max_div13 = 1;\n\tlong max_div14 = 1;\n\tlong max_div15 = 1;\n\tlong max_div16\
    \ = 1;\n\tlong max_div17 = 1;\n\tlong max_div18 = 1;\n\tlong max_div19 = 1;\n\t\
    long max_div20 = 1;\n\tlong max_div21 = 1;\n\tlong max_div22 = 1;\n\tlong max_div23\
    \ = 1;\n\tlong max_div24 = 1;\n\tlong max_div25 = 1;\n\tlong max_div26 = 1;\n\t\
    long max_div27 = 1;\n\tlong max_div28 = 1;\n\tlong max_div29 = 1;\n\tlong max_div30\
    \ = 1;\n\tlong max_div31 = 1;\n\tlong max_div32 = 1;\n\tlong max_div33 = 1;\n\t\
    long max_div34 = 1;\n\tlong max_div35 = 1;\n\tlong max_div36 = 1;\n\tlong max_div37\
    \ = 1;\n\tlong max_div38 = 1;\n\tlong max_div39 = 1;\n\tlong max_div40 = 1;\n\t\
    long max_div41 = 1;\n\tlong max_div42 = 1;\n\tlong max_div43 = 1;\n\tlong max_div44\
    \ = 1;\n\tlong max_div45 = 1;\n\tlong max_div46 = 1;\n\tlong max_div47 = 1;\n\t\
    long max_div48 = 1;\n\tlong max_div49 = 1;\n\tlong max_div50 = 1;\n\tlong max_div51\
    \ = 1;\n\tlong max_div52 = 1;\n\tlong max_div53 = 1;\n\tlong max_div54 = 1;\n\t\
    long max_div55 = 1;\n\tlong max_div56 = 1;\n\tlong max_div57 = 1;\n\tlong max_div58\
    \ = 1;\n\tlong max_div59 = 1;\n\tlong max_div60 = 1;\n\tlong max_div61 = 1;\n\t\
    long max_div62 = 1;\n\tlong max_div63 = 1;\n\tlong max_div64 = 1;\n\tlong max_div65\
    \ = 1;\n\tlong max_div66 = 1;\n\tlong max_div67 = 1;\n\tlong max_div68 = 1;\n\t\
    long max_div69 = 1;\n\tlong max_div70 = 1;\n\tlong max_div71 = 1;\n\tlong max_div72\
    \ = 1;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5sk6iues.d(83): Error: no identifier for declarator `long`\n/tmp/tmp5sk6iues.d(83):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmp5sk6iues.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long largest\
    \ = n;\n\t\n\tfor(i = 2; i <= n/2; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\t\
    largest = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpk6lbtfav.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`\n/tmp/tmpk6lbtfav.d(11): Error: use `long` for a 64 bit integer
    instead of `long long`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk6lbtfav.d",
    "-I/tmp"]\n'''
  stdout: b''

language: d
name: HumanEval_24_largest_divisor
results:
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile(d < largest) {\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\twhile(n > largest)\
    \ {\n\t\tn /= 2;\n\t\t++largest;\n\t}\n\treturn largest;\n}\nunittest\n{\n   \
    \ alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n   \
    \ assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpstao2kpc.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmpstao2kpc.__unittest_L22_C1() [0x427a80]

    ??:? void tmpstao2kpc.__modtest() [0x427b18]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder;\n\tlong currentDivisorDivisor;\n\t\n\t\
    while (currentDivisor <= n) \n\t{\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\
    \t\tcurrentDivisorDivisor = currentDivisor;\n\t\t\n\t\twhile (currentDivisorRemainder\
    \ > 0) \n\t\t{\n\t\t\tcurrentDivisorDivisor *= currentDivisor;\n\t\t\tcurrentDivisorRemainder\
    \ -= currentDivisorRemainder;\n\t\t}\n\t\t\n\t\tif (currentDivisorDivisor > maxDivisor)\
    \ \n\t\t{\n\t\t\tmaxDivisor = currentDivisorDivisor;\n\t\t}\n\t\t\n\t\tcurrentDivisor++;\n\
    \t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpj2i7iuy7.d(40): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dc5]

    ??:? void tmpj2i7iuy7.__unittest_L36_C1() [0x427ab0]

    ??:? void tmpj2i7iuy7.__modtest() [0x427b48]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baeb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a97e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb11]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffc0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa9d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]

    ??:? runModuleUnitTests [0x42b8c1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428214]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDiv =\
    \ n;\n\t\n\tfor(i = 2; i <= n/2; i++){\n\t\tif(n % i == 0){\n\t\t\tmaxDiv = i;\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\treturn maxDiv;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmt2nqmev.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpmt2nqmev.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmt2nqmev.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong div = 1;\n\
    \twhile (div <= max_div) {\n\t\tlong div2 = div * div;\n\t\tif (div2 <= max_div)\
    \ {\n\t\t\tmax_div = div2;\n\t\t} else {\n\t\t\tmax_div = div;\n\t\t}\n\t\tdiv++;\n\
    \t}\n\treturn max_div;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpjz_25ubx.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmpjz_25ubx.__unittest_L23_C1() [0x427ac2]

    ??:? void tmpjz_25ubx.__modtest() [0x427b18]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 1;\n\tlong max_div7 = 1;\n\tlong max_div8 = 1;\n\tlong max_div9 =\
    \ 1;\n\tlong max_div10 = 1;\n\tlong max_div11 = 1;\n\tlong max_div12 = 1;\n\t\
    long max_div13 = 1;\n\tlong max_div14 = 1;\n\tlong max_div15 = 1;\n\tlong max_div16\
    \ = 1;\n\tlong max_div17 = 1;\n\tlong max_div18 = 1;\n\tlong max_div19 = 1;\n\t\
    long max_div20 = 1;\n\tlong max_div21 = 1;\n\tlong max_div22 = 1;\n\tlong max_div23\
    \ = 1;\n\tlong max_div24 = 1;\n\tlong max_div25 = 1;\n\tlong max_div26 = 1;\n\t\
    long max_div27 = 1;\n\tlong max_div28 = 1;\n\tlong max_div29 = 1;\n\tlong max_div30\
    \ = 1;\n\tlong max_div31 = 1;\n\tlong max_div32 = 1;\n\tlong max_div33 = 1;\n\t\
    long max_div34 = 1;\n\tlong max_div35 = 1;\n\tlong max_div36 = 1;\n\tlong max_div37\
    \ = 1;\n\tlong max_div38 = 1;\n\tlong max_div39 = 1;\n\tlong max_div40 = 1;\n\t\
    long max_div41 = 1;\n\tlong max_div42 = 1;\n\tlong max_div43 = 1;\n\tlong max_div44\
    \ = 1;\n\tlong max_div45 = 1;\n\tlong max_div46 = 1;\n\tlong max_div47 = 1;\n\t\
    long max_div48 = 1;\n\tlong max_div49 = 1;\n\tlong max_div50 = 1;\n\tlong max_div51\
    \ = 1;\n\tlong max_div52 = 1;\n\tlong max_div53 = 1;\n\tlong max_div54 = 1;\n\t\
    long max_div55 = 1;\n\tlong max_div56 = 1;\n\tlong max_div57 = 1;\n\tlong max_div58\
    \ = 1;\n\tlong max_div59 = 1;\n\tlong max_div60 = 1;\n\tlong max_div61 = 1;\n\t\
    long max_div62 = 1;\n\tlong max_div63 = 1;\n\tlong max_div64 = 1;\n\tlong max_div65\
    \ = 1;\n\tlong max_div66 = 1;\n\tlong max_div67 = 1;\n\tlong max_div68 = 1;\n\t\
    long max_div69 = 1;\n\tlong max_div70 = 1;\n\tlong max_div71 = 1;\n\tlong max_div72\
    \ = 1;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw1966858.d(83): Error: no identifier for declarator `long`

    /tmp/tmpw1966858.d(83): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw1966858.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong d = 1;\n\
    \t\n\twhile (d <= n && n % d == 0)\n\t{\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\
    \n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpj91p4x3n.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpj91p4x3n.__unittest_L21_C1() [0x427ab2]

    ??:? void tmpj91p4x3n.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\t\
    \t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong div = 1;\n\twhile (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest\
    \ = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpso73glns.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpso73glns.__unittest_L20_C1() [0x427a70]

    ??:? void tmpso73glns.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong divisor = 1;\n\tlong max_divisor\
    \ = 1;\n\tlong max_divisor2 = 1;\n\tlong max_divisor3 = 1;\n\tlong max_divisor4\
    \ = 1;\n\tlong max_divisor5 = 1;\n\tlong max_divisor6 = 1;\n\tlong max_divisor7\
    \ = 1;\n\tlong max_divisor8 = 1;\n\tlong max_divisor9 = 1;\n\tlong max_divisor10\
    \ = 1;\n\tlong max_divisor11 = 1;\n\tlong max_divisor12 = 1;\n\tlong max_divisor13\
    \ = 1;\n\tlong max_divisor14 = 1;\n\tlong max_divisor15 = 1;\n\tlong max_divisor16\
    \ = 1;\n\tlong max_divisor17 = 1;\n\tlong max_divisor18 = 1;\n\tlong max_divisor19\
    \ = 1;\n\tlong max_divisor20 = 1;\n\tlong max_divisor21 = 1;\n\tlong max_divisor22\
    \ = 1;\n\tlong max_divisor23 = 1;\n\tlong max_divisor24 = 1;\n\tlong max_divisor25\
    \ = 1;\n\tlong max_divisor26 = 1;\n\tlong max_divisor27 = 1;\n\tlong max_divisor28\
    \ = 1;\n\tlong max_divisor29 = 1;\n\tlong max_divisor30 = 1;\n\tlong max_divisor31\
    \ = 1;\n\tlong max_divisor32 = 1;\n\tlong max_divisor33 = 1;\n\tlong max_divisor34\
    \ = 1;\n\tlong max_divisor35 = 1;\n\tlong max_divisor36 = 1;\n\tlong max_divisor37\
    \ = 1;\n\tlong max_divisor38 = 1;\n\tlong max_divisor39 = 1;\n\tlong max_divisor40\
    \ = 1;\n\tlong max_divisor41 = 1;\n\tlong max_divisor42 = 1;\n\tlong max_divisor43\
    \ = 1;\n\tlong max_divisor44 = 1;\n\tlong max_divisor45 = 1;\n\tlong max_divisor46\
    \ = 1;\n\tlong max_divisor47 = 1;\n\tlong max_divisor48 = 1;\n\tlong max_divisor49\
    \ = 1;\n\tlong max_divisor50 = 1;\n\tlong max_divisor51 = 1;\n\tlong max_divisor52\
    \ = 1;\n\tlong max_divisor53 = 1;\n\tlong max_divisor54 = 1;\n\tlong max_divisor55\
    \ = 1;\n\tlong max_divisor56 = 1;\n\tlong max_divisor57 = 1;\n\tlong max_divisor58\
    \ = 1;\n\tlong max_divisor59 = 1;\n\tlong max_divisor60 = 1;\n\tlong max_divisor61\
    \ = 1;\n\tlong max_divisor62 = 1;\n\tlong max_divisor63 = 1;\n\tlong max_divisor64\
    \ = 1;\n\tlong max_divisor65 = 1;\n\tlong max_divisor66 = 1;\n\tlong max_divisor67\
    \ = 1;\n\tlong max_divisor68 = 1;\n\tlong max_divisor69 = 1;\n\tlong max_divisor70\
    \ = 1;\n\tlong max_divisor71 = 1;\n\tlong max_divisor7\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkf7gzt8j.d(83): Error: semicolon expected, not `unittest`

    /tmp/tmpkf7gzt8j.d(83): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkf7gzt8j.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n && n % divisor == 0) {\n\t\tdivisor++;\n\t}\n\twhile\
    \ (divisor < n && n % divisor != 0) {\n\t\tlargest = divisor;\n\t\tdivisor++;\n\
    \t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9j_fesgp.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmp9j_fesgp.__unittest_L21_C1() [0x427a88]

    ??:? void tmp9j_fesgp.__modtest() [0x427b20]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: -1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\tlong currentDivisorDivisor = 1;\n\
    \t\n\twhile(currentDivisorRemainder != 0)\n\t{\n\t\tcurrentDivisorDivisor = currentDivisor\
    \ * currentDivisor;\n\t\tcurrentDivisorRemainder = currentDivisor % n;\n\t\tcurrentDivisor\
    \ = currentDivisorDivisor;\n\t\t\n\t\tif(currentDivisorRemainder > maxDivisor)\n\
    \t\t\tmaxDivisor = currentDivisorRemainder;\n\t}\n\t\n\treturn maxDivisor;\n}\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660160570
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 1;\n\tlong max_div7 = 1;\n\tlong max_div8 = 1;\n\tlong max_div9 =\
    \ 1;\n\tlong max_div10 = 1;\n\tlong max_div11 = 1;\n\tlong max_div12 = 1;\n\t\
    long max_div13 = 1;\n\tlong max_div14 = 1;\n\tlong max_div15 = 1;\n\tlong max_div16\
    \ = 1;\n\tlong max_div17 = 1;\n\tlong max_div18 = 1;\n\tlong max_div19 = 1;\n\t\
    long max_div20 = 1;\n\tlong max_div21 = 1;\n\tlong max_div22 = 1;\n\tlong max_div23\
    \ = 1;\n\tlong max_div24 = 1;\n\tlong max_div25 = 1;\n\tlong max_div26 = 1;\n\t\
    long max_div27 = 1;\n\tlong max_div28 = 1;\n\tlong max_div29 = 1;\n\tlong max_div30\
    \ = 1;\n\tlong max_div31 = 1;\n\tlong max_div32 = 1;\n\tlong max_div33 = 1;\n\t\
    long max_div34 = 1;\n\tlong max_div35 = 1;\n\tlong max_div36 = 1;\n\tlong max_div37\
    \ = 1;\n\tlong max_div38 = 1;\n\tlong max_div39 = 1;\n\tlong max_div40 = 1;\n\t\
    long max_div41 = 1;\n\tlong max_div42 = 1;\n\tlong max_div43 = 1;\n\tlong max_div44\
    \ = 1;\n\tlong max_div45 = 1;\n\tlong max_div46 = 1;\n\tlong max_div47 = 1;\n\t\
    long max_div48 = 1;\n\tlong max_div49 = 1;\n\tlong max_div50 = 1;\n\tlong max_div51\
    \ = 1;\n\tlong max_div52 = 1;\n\tlong max_div53 = 1;\n\tlong max_div54 = 1;\n\t\
    long max_div55 = 1;\n\tlong max_div56 = 1;\n\tlong max_div57 = 1;\n\tlong max_div58\
    \ = 1;\n\tlong max_div59 = 1;\n\tlong max_div60 = 1;\n\tlong max_div61 = 1;\n\t\
    long max_div62 = 1;\n\tlong max_div63 = 1;\n\tlong max_div64 = 1;\n\tlong max_div65\
    \ = 1;\n\tlong max_div66 = 1;\n\tlong max_div67 = 1;\n\tlong max_div68 = 1;\n\t\
    long max_div69 = 1;\n\tlong max_div70 = 1;\n\tlong max_div71 = 1;\n\tlong max_div72\
    \ = 1;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw1966858.d(83): Error: no identifier for declarator `long`

    /tmp/tmpw1966858.d(83): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw1966858.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d < largest)\n\t{\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\twhile (n > largest)\n\
    \t{\n\t\tn /= 2;\n\t\t++largest;\n\t}\n\treturn largest;\n}\nunittest\n{\n   \
    \ alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n   \
    \ assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmptrvgw14b.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmptrvgw14b.__unittest_L24_C1() [0x427a80]

    ??:? void tmptrvgw14b.__modtest() [0x427b18]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\
    \tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpomcvhcfo.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpomcvhcfo.__unittest_L24_C1() [0x427a70]

    ??:? void tmpomcvhcfo.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile(div <= largest)\n\t{\n\t\tlargest = div;\n\t\tdiv *= 2;\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8qxkzo4d.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d75]

    ??:? void tmp8qxkzo4d.__unittest_L19_C1() [0x427a9e]

    ??:? void tmp8qxkzo4d.__modtest() [0x427af4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba9b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a92e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff70]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa4d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]

    ??:? runModuleUnitTests [0x42b871]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281c4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (d < largest) {\n\t\tif (n % d == 0) {\n\t\t\tlargest =\
    \ d;\n\t\t}\n\t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpscnftzf9.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpscnftzf9.__unittest_L20_C1() [0x427ab2]

    ??:? void tmpscnftzf9.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong d = n;\n\
    \twhile(d % 2 == 0)\n\t{\n\t\td /= 2;\n\t\tlargest *= 2;\n\t}\n\twhile(d % 3 ==\
    \ 0)\n\t{\n\t\td /= 3;\n\t\tlargest *= 3;\n\t}\n\twhile(d % 5 == 0)\n\t{\n\t\t\
    d /= 5;\n\t\tlargest *= 5;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8152g1wh.d(33): unittest failure

    ----------------

    ??:? _d_unittestp [0x427de5]

    ??:? void tmp8152g1wh.__unittest_L29_C1() [0x427ad0]

    ??:? void tmp8152g1wh.__modtest() [0x427b68]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffe0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fabd]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a975]

    ??:? runModuleUnitTests [0x42b8e1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 2;\n\twhile (d < n) //keep dividing n by d until we get down to 1\n\
    \t{\n\t\tif (n % d == 0) //if d divides n\n\t\t{\n\t\t\tlargest = d;\n\t\t}\n\t\
    \td *= 2;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpk0gav5dn.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpk0gav5dn.__unittest_L22_C1() [0x427a70]

    ??:? void tmpk0gav5dn.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 1;\n\tlong max_div7 = 1;\n\tlong max_div8 = 1;\n\tlong max_div9 =\
    \ 1;\n\tlong max_div10 = 1;\n\tlong max_div11 = 1;\n\tlong max_div12 = 1;\n\t\
    long max_div13 = 1;\n\tlong max_div14 = 1;\n\tlong max_div15 = 1;\n\tlong max_div16\
    \ = 1;\n\tlong max_div17 = 1;\n\tlong max_div18 = 1;\n\tlong max_div19 = 1;\n\t\
    long max_div20 = 1;\n\tlong max_div21 = 1;\n\tlong max_div22 = 1;\n\tlong max_div23\
    \ = 1;\n\tlong max_div24 = 1;\n\tlong max_div25 = 1;\n\tlong max_div26 = 1;\n\t\
    long max_div27 = 1;\n\tlong max_div28 = 1;\n\tlong max_div29 = 1;\n\tlong max_div30\
    \ = 1;\n\tlong max_div31 = 1;\n\tlong max_div32 = 1;\n\tlong max_div33 = 1;\n\t\
    long max_div34 = 1;\n\tlong max_div35 = 1;\n\tlong max_div36 = 1;\n\tlong max_div37\
    \ = 1;\n\tlong max_div38 = 1;\n\tlong max_div39 = 1;\n\tlong max_div40 = 1;\n\t\
    long max_div41 = 1;\n\tlong max_div42 = 1;\n\tlong max_div43 = 1;\n\tlong max_div44\
    \ = 1;\n\tlong max_div45 = 1;\n\tlong max_div46 = 1;\n\tlong max_div47 = 1;\n\t\
    long max_div48 = 1;\n\tlong max_div49 = 1;\n\tlong max_div50 = 1;\n\tlong max_div51\
    \ = 1;\n\tlong max_div52 = 1;\n\tlong max_div53 = 1;\n\tlong max_div54 = 1;\n\t\
    long max_div55 = 1;\n\tlong max_div56 = 1;\n\tlong max_div57 = 1;\n\tlong max_div58\
    \ = 1;\n\tlong max_div59 = 1;\n\tlong max_div60 = 1;\n\tlong max_div61 = 1;\n\t\
    long max_div62 = 1;\n\tlong max_div63 = 1;\n\tlong max_div64 = 1;\n\tlong max_div65\
    \ = 1;\n\tlong max_div66 = 1;\n\tlong max_div67 = 1;\n\tlong max_div68 = 1;\n\t\
    long max_div69 = 1;\n\tlong max_div70 = 1;\n\tlong max_div71 = 1;\n\tlong max_div72\
    \ = 1;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw1966858.d(83): Error: no identifier for declarator `long`

    /tmp/tmpw1966858.d(83): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw1966858.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long largest\
    \ = n;\n\t\n\tfor(i = 2; i <= n/2; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\t\
    largest = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp_0rs4uss.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmp_0rs4uss.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_0rs4uss.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tfor (long d = 2; d <= n; d++) // find largest divisor < n\n\t{\n\t\tif (n %\
    \ d == 0)\n\t\t{\n\t\t\tlargest = d;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmptp7lhdow.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmptp7lhdow.__unittest_L20_C1() [0x427a70]

    ??:? void tmptp7lhdow.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (d < largest) {\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\
    while (largest % 2 == 0) {\n\t\tlargest /= 2;\n\t}\n\treturn largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpowrhl6f2.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmpowrhl6f2.__unittest_L21_C1() [0x427aca]

    ??:? void tmpowrhl6f2.__modtest() [0x427b20]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < n)\n\t{\n\t\tdivisor = 2 * divisor;\n\t\tmaxDivisor\
    \ = divisor;\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpf4nmwz7h.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d7d]

    ??:? void tmpf4nmwz7h.__unittest_L21_C1() [0x427a64]

    ??:? void tmpf4nmwz7h.__modtest() [0x427afc]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baa3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a936]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]

    ??:? runModuleUnitTests [0x42b879]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281cc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong div =\
    \ 1;\n\twhile (div <= n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tmaxDivisor\
    \ = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp3ox64jze.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp3ox64jze.__unittest_L22_C1() [0x427a70]

    ??:? void tmp3ox64jze.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) \n\t{\n\t\tif (n % div == 0) \n\t\t{\n\t\t\tif (div > largest)\
    \ \n\t\t\t\tlargest = div;\n\t\t\tdiv++;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tdiv++;\n\
    \t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwnxku033.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmpwnxku033.__unittest_L27_C1() [0x427a80]

    ??:? void tmpwnxku033.__modtest() [0x427b18]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 2;\n\twhile (d < largest) {\n\t\tif (n % d == 0) {\n\t\t\tlargest =\
    \ d;\n\t\t}\n\t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpmuz4b8y1.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpmuz4b8y1.__unittest_L20_C1() [0x427a70]

    ??:? void tmpmuz4b8y1.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\t\
    break;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7eq7lqtr.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmp7eq7lqtr.__unittest_L22_C1() [0x427a78]

    ??:? void tmp7eq7lqtr.__modtest() [0x427b10]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\tlong currentDivisor = 1;\n\t\n\twhile (currentDivisor <= n)\n\t{\n\t\
    \tdivisor = currentDivisor;\n\t\tcurrentDivisor *= 2;\n\t\t\n\t\tif (currentDivisor\
    \ > maxDivisor)\n\t\t{\n\t\t\tmaxDivisor = currentDivisor;\n\t\t}\n\t}\n\t\n\t\
    return maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp0e7r208u.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmp0e7r208u.__unittest_L27_C1() [0x427a78]

    ??:? void tmp0e7r208u.__modtest() [0x427b10]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: -1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder;\n\t\n\twhile (currentDivisor <= n)\n\t\
    {\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\t\t\n\t\tif (currentDivisorRemainder\
    \ == 0)\n\t\t{\n\t\t\tcurrentDivisor++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcurrentDivisor\
    \ = currentDivisorRemainder;\n\t\t}\n\t\t\n\t\tif (currentDivisor > maxDivisor)\n\
    \t\t{\n\t\t\tmaxDivisor = currentDivisor;\n\t\t}\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660160570
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong div = 1;\n\twhile (div <= largest) //keep dividing until we reach the largest\
    \ number\n\t{\n\t\tif (std.math.mod(n, div) == 0) //if n is divisible by div\n\
    \t\t{\n\t\t\tlargest = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkqykhueq.d(14): Error: undefined identifier `mod` in module `std.math`,
    did you mean function `fmod`?

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkqykhueq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (d < largest) \n\t{\n\t\tif (n % d == 0) \n\t\t{\n\t\t\t\
    largest = d;\n\t\t}\n\t\td += 2;\n\t}\n\treturn largest;\n}\nunittest\n{\n   \
    \ alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n   \
    \ assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmplf1j2rav.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmplf1j2rav.__unittest_L22_C1() [0x427ab2]

    ??:? void tmplf1j2rav.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\tlong div = 2;\n\tlong remainder;\n\t\n\twhile (div <= n)\n\t{\n\t\t\
    remainder = n % div;\n\t\tif (remainder == 0)\n\t\t{\n\t\t\tdivisor = div;\n\t\
    \t\tmaxDivisor = divisor;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdivisor = div;\n\t\t\t\
    maxDivisor = divisor;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpl67sqh4a.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmpl67sqh4a.__unittest_L32_C1() [0x427a84]

    ??:? void tmpl67sqh4a.__modtest() [0x427b1c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\t\n\twhile (currentDivisor <= n)\n\t{\n\t\tif (n % currentDivisor ==\
    \ 0)\n\t\t{\n\t\t\tmaxDivisor = currentDivisor;\n\t\t}\n\t\tcurrentDivisor++;\n\
    \t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp6cpgx2p5.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp6cpgx2p5.__unittest_L24_C1() [0x427a70]

    ??:? void tmp6cpgx2p5.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong div = 1;\n\
    \t\n\twhile (div < n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\
    \t\t}\n\t\tdiv++;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\
    \tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpf5mtj1js.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpf5mtj1js.__unittest_L20_C1() [0x427a70]

    ??:? void tmpf5mtj1js.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long maxDivisor = 1;\n\tlong\
    \ long divisor = 1;\n\t\n\twhile (divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\
    \t\t{\n\t\t\tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpklhdtaqh.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpklhdtaqh.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpklhdtaqh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong div =\
    \ 1;\n\tlong div2 = 2;\n\tlong div3 = 4;\n\tlong div4 = 8;\n\tlong div5 = 16;\n\
    \tlong div6 = 64;\n\tlong div7 = 128;\n\tlong div8 = 256;\n\tlong div9 = 512;\n\
    \tlong div10 = 1088;\n\tlong div11 = 2044;\n\tlong div12 = 4608;\n\tlong div13\
    \ = 8320;\n\tlong div14 = 16777216;\n\tlong div15 = 32768000;\n\tlong div16 =\
    \ 65536;\n\tlong div17 = 131072;\n\tlong div18 = 262144;\n\tlong div19 = 524288;\n\
    \tlong div20 = 1048576;\n\tlong div21 = 2097152;\n\tlong div22 = 4194304;\n\t\
    long div23 = 8388608;\n\tlong div24 = 16777216;\n\tlong div25 = 32768000;\n\t\
    long div26 = 65536;\n\tlong div27 = 131072;\n\tlong div28 = 262144;\n\tlong div29\
    \ = 524288;\n\tlong div30 = 1048576;\n\tlong div31 = 2097152;\n\tlong div32 =\
    \ 4194304;\n\tlong div33 = 8388608;\n\tlong div34 = 16777216;\n\tlong div35 =\
    \ 32768000;\n\tlong div36 = 65536;\n\tlong div37 = 131072;\n\tlong div38 = 262144;\n\
    \tlong div39 = 524288;\n\tlong div40 = 1048576;\n\tlong div41 = 2097152;\n\tlong\
    \ div42 = 4194304;\n\tlong div43 = 8388608;\n\tlong div44 = 16777216;\n\tlong\
    \ div45 = 32768000;\n\tlong div46 = 65536;\n\tlong div47 = 131072;\n\tlong div48\
    \ = 262144;\n\tlong div49 = 524288;\n\tlong div50 = 1048576;\n\tlong div51 = 2097152;\n\
    \tlong div52 = 4194304;\n\tlong div53 = 8388608;\n\tlong div54 = 16777216;\n\t\
    long div55 = 32768000;\n\tlong div56 = 65536;\n\tlong div57 = 131072;\n\tlong\
    \ \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgpkgffgk.d(69): Error: no identifier for declarator `long`

    /tmp/tmpgpkgffgk.d(69): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgpkgffgk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \t\n\twhile (d < largest)\n\t{\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\n\twhile\
    \ (largest % 2 == 0)\n\t{\n\t\tlargest = largest / 2;\n\t}\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp02f4wfwh.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmp02f4wfwh.__unittest_L26_C1() [0x427aca]

    ??:? void tmp02f4wfwh.__modtest() [0x427b20]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong div =\
    \ 1;\n\twhile (div < n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tmaxDivisor =\
    \ div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\tlong div = 2;\n\twhile(div <= n)\n\t{\n\t\tif(n % div == 0)\n\t\t{\n\
    \t\t\tdivisor = div;\n\t\t\tmaxDivisor = divisor;\n\t\t}\n\t\tdiv++;\n\t}\n\t\
    return maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpcviklrru.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmpcviklrru.__unittest_L24_C1() [0x427a74]

    ??:? void tmpcviklrru.__modtest() [0x427b0c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tdivisor++;\n\
    \t\t\tmaxDivisor = divisor;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdivisor++;\n\t\t}\n\
    \t}\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp59sfhtqp.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmp59sfhtqp.__unittest_L26_C1() [0x427a74]

    ??:? void tmp59sfhtqp.__modtest() [0x427b0c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\t\
    \t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= largest) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t\
    }\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqqbghvji.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpqqbghvji.__unittest_L20_C1() [0x427ab2]

    ??:? void tmpqqbghvji.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < n) {\n\t\tif (n % divisor == 0) {\n\t\t\tmaxDivisor\
    \ = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tlong d = 1L;\n\t\n\twhile (d < largest) {\n\t\tlargest = d;\n\t\td *= 2L;\n\t\
    }\n\t\n\twhile (largest % 2 == 0) {\n\t\tlargest /= 2;\n\t}\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpmse_vwna.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmpmse_vwna.__unittest_L24_C1() [0x427aca]

    ??:? void tmpmse_vwna.__modtest() [0x427b20]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor * divisor <= n) \n\t{\n\t\tif (n % divisor == 0)\
    \ \n\t\t{\n\t\t\tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpjjmjxidh.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmpjjmjxidh.__unittest_L23_C1() [0x427ab6]

    ??:? void tmpjjmjxidh.__modtest() [0x427b0c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 0;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\
    \tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDiv =\
    \ n;\n\tlong long div = 1;\n\t\n\twhile (div < maxDiv) \n\t{\n\t\ti = div * div;\n\
    \t\tif (i % 2 == 0) \n\t\t{\n\t\t\tmaxDiv = i;\n\t\t}\n\t\tdiv++;\n\t}\n\t\n\t\
    return maxDiv;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n   \
    \ assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsiju4p8x.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpsiju4p8x.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsiju4p8x.d(12): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsiju4p8x.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160555
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n) {\n\t\tif (n % divisor == 0) {\n\t\t\tlargest =\
    \ divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n  \
    \  alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n  \
    \  assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\t\
    \t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (d < largest) {\n\t\tlargest = std.math.gcd(largest, d);\n\
    \t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3p0vv2r0.d(13): Error: undefined identifier `gcd` in module `std.math`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3p0vv2r0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < n) {\n\t\tdivisor *= 2;\n\t\tif (divisor > largest)\
    \ largest = divisor;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_stkfh8z.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp_stkfh8z.__unittest_L20_C1() [0x427a6c]

    ??:? void tmp_stkfh8z.__modtest() [0x427b04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (d < largest) {\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\
    while (largest % 2 == 0) {\n\t\tlargest /= 2;\n\t}\n\treturn largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpowrhl6f2.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmpowrhl6f2.__unittest_L21_C1() [0x427aca]

    ??:? void tmpowrhl6f2.__modtest() [0x427b20]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tfor (long i = 2; i <= largest; i++) {\n\t\tif (n % i == 0) {\n\t\t\tlargest\
    \ = i;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvu07bmgm.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpvu07bmgm.__unittest_L18_C1() [0x427a70]

    ??:? void tmpvu07bmgm.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong div = 1;\n\
    \twhile (div <= n && max_div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tmax_div =\
    \ div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn max_div;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpkg7xng0j.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmpkg7xng0j.__unittest_L20_C1() [0x427a74]

    ??:? void tmpkg7xng0j.__modtest() [0x427b0c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long max_div\
    \ = n;\n\tlong long max_div2 = n;\n\tlong long max_div3 = n;\n\tlong long max_div4\
    \ = n;\n\tlong long max_div5 = n;\n\tlong long max_div6 = n;\n\tlong long max_div7\
    \ = n;\n\tlong long max_div8 = n;\n\tlong long max_div9 = n;\n\tlong long max_div10\
    \ = n;\n\tlong long max_div11 = n;\n\tlong long max_div12 = n;\n\tlong long max_div13\
    \ = n;\n\tlong long max_div14 = n;\n\tlong long max_div15 = n;\n\tlong long max_div16\
    \ = n;\n\tlong long max_div17 = n;\n\tlong long max_div18 = n;\n\tlong long max_div19\
    \ = n;\n\tlong long max_div20 = n;\n\tlong long max_div21 = n;\n\tlong long max_div22\
    \ = n;\n\tlong long max_div23 = n;\n\tlong long max_div24 = n;\n\tlong long max_div25\
    \ = n;\n\tlong long max_div26 = n;\n\tlong long max_div27 = n;\n\tlong long max_div28\
    \ = n;\n\tlong long max_div29 = n;\n\tlong long max_div30 = n;\n\tlong long max_div31\
    \ = n;\n\tlong long max_div32 = n;\n\tlong long max_div33 = n;\n\tlong long max_div34\
    \ = n;\n\tlong long max_div35 = n;\n\tlong long max_div36 = n;\n\tlong long max_div37\
    \ = n;\n\tlong long max_div38 = n;\n\tlong long max_div39 = n;\n\tlong long max_div40\
    \ = n;\n\tlong long max_div41 = n;\n\tlong long max_div42 = n;\n\tlong long max_div43\
    \ = n;\n\tlong long max_div44 = n;\n\tlong long max_div45 = n;\n\tlong long max_div46\
    \ = n;\n\tlong long max_div47 = n;\n\tlong long max_div48 = n;\n\tlong long max_div49\
    \ = n;\n\tlong long max_div50 = n;\n\tlong long max_div51 = n;\n\tlong long max_div52\
    \ = n;\n\tlong long max_div53 = n;\n\tlong long max_div54 = n;\n\tlong long max_div55\
    \ = n;\n\tlong long max_div56 = n;\n\tlong long max_div57 = n;\n\tlong long max_\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmlbqis5p.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpmlbqis5p.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmlbqis5p.d(12): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmlbqis5p.d(13): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmlbqis5p.d(14): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmlbqis5p.d(15): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmlbqis5p.d(16): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmlbqis5p.d(17): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmlbqis5p.d(18): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmlbqis5p.d(19): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmlbqis5p.d(20): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmlbqis5p.d(21): Error: use `long` for a 64 bit integer instead of `lon'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long divisor\
    \ = 1;\n\tlong long max_divisor = 1;\n\t\n\tfor (i = 2; i <= n; i++) {\n\t\tif\
    \ (n % i == 0) {\n\t\t\tdivisor = i;\n\t\t\tmax_divisor = i;\n\t\t}\n\t\telse\
    \ {\n\t\t\tif (max_divisor < divisor) {\n\t\t\t\tmax_divisor = divisor;\n\t\t\t\
    }\n\t\t}\n\t}\n\treturn max_divisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfg5g8tf2.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpfg5g8tf2.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpfg5g8tf2.d(12): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfg5g8tf2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160556
- exit_code: -1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentNum = 1;\n\tlong currentMaxDivisor = 1;\n\t\n\twhile(currentDivisor\
    \ <= n)\n\t{\n\t\tcurrentNum = currentDivisor * currentDivisor;\n\t\tcurrentMaxDivisor\
    \ = currentDivisor;\n\t\t\n\t\twhile(currentNum < n)\n\t\t{\n\t\t\tcurrentNum\
    \ *= currentDivisor;\n\t\t\tcurrentMaxDivisor *= currentDivisor;\n\t\t}\n\t\t\n\
    \t\tif(currentMaxDivisor > maxDivisor)\n\t\t{\n\t\t\tmaxDivisor = currentMaxDivisor;\n\
    \t\t}\n\t\t\n\t\tcurrentDivisor++;\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660160571
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tlong d = 1;\n\t\n\twhile (n > largest) {\n\t\td *= n; // multiply by n\n\t\t\
    n--;\n\t}\n\t\n\twhile (d % 2 == 0) {\n\t\td /= 2; // divide by 2 until it's even\n\
    \t\tn--;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpih6icm13.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dad]

    ??:? void tmpih6icm13.__unittest_L25_C1() [0x427a94]

    ??:? void tmpih6icm13.__modtest() [0x427b2c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffa8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa85]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]

    ??:? runModuleUnitTests [0x42b8a9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder;\n\t\n\twhile (currentDivisor <= n)\n\t\
    {\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\t\t\n\t\tif (currentDivisorRemainder\
    \ == 0)\n\t\t{\n\t\t\tmaxDivisor = currentDivisor;\n\t\t}\n\t\t\n\t\tcurrentDivisor++;\n\
    \t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp0ltfv0ue.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp0ltfv0ue.__unittest_L28_C1() [0x427a70]

    ??:? void tmp0ltfv0ue.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong div = 1;\n\
    \tlong max_div2 = 1;\n\tlong div2 = 1;\n\t\n\twhile (div <= n) {\n\t\tdiv2 = div\
    \ * 2;\n\t\tmax_div2 = max_div * 2;\n\t\tif (div2 <= max_div2) {\n\t\t\tmax_div\
    \ = div2;\n\t\t\tdiv = div2;\n\t\t}\n\t\telse {\n\t\t\tdiv2 = max_div2;\n\t\t\t\
    max_div = max_div2;\n\t\t\tdiv = div2;\n\t\t}\n\t}\n\treturn max_div;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpm7nilvmb.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x427db5]

    ??:? void tmpm7nilvmb.__unittest_L30_C1() [0x427aa0]

    ??:? void tmpm7nilvmb.__modtest() [0x427b38]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42badb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a96e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb01]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffb0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa8d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]

    ??:? runModuleUnitTests [0x42b8b1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428204]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDivisor\
    \ = 1;\n\tlong long divisor = 1;\n\t\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tdivisor\
    \ = i;\n\t\t\n\t\twhile(divisor <= n && n % divisor == 0)\n\t\t{\n\t\t\tdivisor++;\n\
    \t\t}\n\t\t\n\t\tif(divisor > maxDivisor)\n\t\t{\n\t\t\tmaxDivisor = divisor;\n\
    \t\t}\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfyajnsch.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpfyajnsch.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpfyajnsch.d(12): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfyajnsch.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (n > maxDivisor) {\n\t\tdivisor++;\n\t\tif (n % divisor ==\
    \ 0) {\n\t\t\tmaxDivisor = divisor;\n\t\t}\n\t}\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpi6xopdmq.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpi6xopdmq.__unittest_L21_C1() [0x427a70]

    ??:? void tmpi6xopdmq.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tlong div = 1;\n\twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest =\
    \ div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < largest)\n\t{\n\t\tlargest = div;\n\t\tdiv += 2;\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpxzr9wios.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d75]

    ??:? void tmpxzr9wios.__unittest_L19_C1() [0x427a9e]

    ??:? void tmpxzr9wios.__modtest() [0x427af4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba9b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a92e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff70]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa4d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]

    ??:? runModuleUnitTests [0x42b871]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281c4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\twhile (divisor * divisor <= n) \n\t{\n\t\tdivisor *= 2;\n\t\tif (divisor\
    \ > maxDivisor) \n\t\t{\n\t\t\tmaxDivisor = divisor;\n\t\t}\n\t}\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpimisjmfg.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmpimisjmfg.__unittest_L22_C1() [0x427a78]

    ??:? void tmpimisjmfg.__modtest() [0x427b10]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong d = 1;\n\
    \t\n\twhile (d <= n)\n\t{\n\t\tif (n % d == 0)\n\t\t{\n\t\t\tlargest = d;\n\t\t\
    }\n\t\td += 2;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7kbf955u.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp7kbf955u.__unittest_L24_C1() [0x427a70]

    ??:? void tmp7kbf955u.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (largest%2 == 0 && n%2 == 0) //while n is evenly divisible\
    \ by 2\n\t{\n\t\tlargest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t}\n\twhile (largest%2\
    \ == 1 && n%2 == 1) //while n is odd and is also odd\n\t{\n\t\tlargest = n/2;\n\
    \t\tn = (n+1)/2;\n\t\td++;\n\t}\n\twhile (largest%2 == 1 && n%2 == 0) //while\
    \ n is odd and is odd\n\t{\n\t\tlargest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t\
    }\n\treturn largest;\n}\n/*\n For a given number n, find the smallest number that\
    \ divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n    3L\n   \
    \ \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start with n\n\
    \tlong d = 1;\n\twhile (smallest%2 == 0 && n%2 == 0) //while n is evenly divisible\
    \ by 2\n\t{\n\t\tsmallest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t}\n\twhile (smallest%2\
    \ == 1 && n%2 == 1) //while n is odd and is also odd\n\t{\n\t\tsmallest = n/2;\n\
    \t\tn = (n+1)/2;\n\t\td++;\n\t}\n\twhile (smallest%2 == 1 && n%2 == 0) //while\
    \ n is odd and is odd\n\t{\n\t\tsmallest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t\
    }\n\treturn smallest;\n}\n/*\n For a given number n, find the smallest number\
    \ that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n    3L\n\
    \    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start with\
    \ n\n\tlong d = 1;\n\twhile (smallest%2 == 0 && n%2 == 0) //while n is evenly\
    \ divisible by 2\n\t{\n\t\tsmallest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t}\n\t\
    while (smallest%2 == 1 && n%2 == 1) //while n is odd and is also odd\n\t{\n\t\t\
    smallest = n/2;\n\t\tn = (n+1)/2;\n\t\td++;\n\t}\n\twhile (smallest%2 == 1 &&\
    \ n%2 == 0) //while n\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpcnih_a3s.d(85): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcnih_a3s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160556
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n) {\n\t\tif (n % divisor == 0) {\n\t\t\tlargest =\
    \ divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n  \
    \  alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n  \
    \  assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: -1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tif\
    \ (largest % divisor == 0)\n\t\t\t\tlargest = divisor;\n\t\t\telse\n\t\t\t\tdivisor++;\n\
    \t\t}\n\t\telse\n\t\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n  \
    \  alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n  \
    \  assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660160571
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (d <= largest) \n\t{\n\t\tif (n % d == 0) \n\t\t{\n\t\t\
    \tlargest = d;\n\t\t}\n\t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp3hren1kn.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp3hren1kn.__unittest_L22_C1() [0x427ab2]

    ??:? void tmp3hren1kn.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile(d <= largest)\n\t{\n\t\tif(n % d == 0)\n\t\t{\n\t\t\tlargest\
    \ = d;\n\t\t}\n\t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmplz__p5fk.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmplz__p5fk.__unittest_L22_C1() [0x427ab2]

    ??:? void tmplz__p5fk.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n && n % divisor == 0) {\n\t\tdivisor++;\n\t}\n\twhile\
    \ (divisor < n && n % divisor != 0) {\n\t\tdivisor++;\n\t}\n\tif (divisor > largest)\
    \ {\n\t\tlargest = divisor;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpckt1snvl.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427db5]

    ??:? void tmpckt1snvl.__unittest_L23_C1() [0x427a9c]

    ??:? void tmpckt1snvl.__modtest() [0x427b34]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42badb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a96e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb01]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffb0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa8d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]

    ??:? runModuleUnitTests [0x42b8b1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428204]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tlong d = 1L;\n\t\n\twhile (d < largest)\n\t{\n\t\tlargest = d;\n\t\td *= 2L;\n\
    \t}\n\t\n\twhile (largest % 2 == 0)\n\t{\n\t\tlargest /= 2L;\n\t}\n\t\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_d71z0a_.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmp_d71z0a_.__unittest_L26_C1() [0x427aca]

    ??:? void tmp_d71z0a_.__modtest() [0x427b20]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDivisor\
    \ = 1;\n\t\n\tfor (i = 2; i <= n; i++) {\n\t\tif (n % i == 0) {\n\t\t\tif (maxDivisor\
    \ < i) {\n\t\t\t\tmaxDivisor = i;\n\t\t\t}\n\t\t}\n\t}\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpqs8_s1hc.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpqs8_s1hc.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqs8_s1hc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \t\n\twhile (d < largest) {\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\n\twhile (largest\
    \ % 2 == 0) {\n\t\tlargest /= 2;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7_4b0_da.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmp7_4b0_da.__unittest_L24_C1() [0x427aca]

    ??:? void tmp7_4b0_da.__modtest() [0x427b20]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tif\
    \ (divisor > largest)\n\t\t\t\tlargest = divisor;\n\t\t\tdivisor++;\n\t\t}\n\t\
    \telse\n\t\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7paeftj4.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmp7paeftj4.__unittest_L25_C1() [0x427a80]

    ??:? void tmp7paeftj4.__modtest() [0x427b18]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= n && n % div == 0) {\n\t\tlargest = div;\n\t\tdiv += 1;\n\t}\n\
    \treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp218a042q.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp218a042q.__unittest_L18_C1() [0x427aae]

    ??:? void tmp218a042q.__modtest() [0x427b04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong i;\n\tfor(i\
    \ = 2; i <= largest/2; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\
    \t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpasmi7wkk.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmpasmi7wkk.__unittest_L21_C1() [0x427a80]

    ??:? void tmpasmi7wkk.__modtest() [0x427b18]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDivisor\
    \ = 1;\n\tlong long divisor = 1;\n\t\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tdivisor\
    \ = i;\n\t\twhile(divisor <= n / divisor)\n\t\t{\n\t\t\tdivisor *= i;\n\t\t}\n\
    \t\t\n\t\tif(divisor > maxDivisor)\n\t\t{\n\t\t\tmaxDivisor = divisor;\n\t\t}\n\
    \t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplzl5yg1r.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmplzl5yg1r.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmplzl5yg1r.d(12): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplzl5yg1r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong div = 1;\n\
    \twhile (div <= max_div)\n\t{\n\t\tlong new_div = div * 2;\n\t\tif (new_div >\
    \ max_div)\n\t\t\tnew_div = max_div;\n\t\tif (new_div % 2 == 0)\n\t\t\tbreak;\n\
    \t\tmax_div = new_div;\n\t\tdiv++;\n\t}\n\treturn max_div;\n}\nunittest\n{\n \
    \   alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n \
    \   assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpz_mxvhry.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dad]

    ??:? void tmpz_mxvhry.__unittest_L24_C1() [0x427a94]

    ??:? void tmpz_mxvhry.__modtest() [0x427b2c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffa8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa85]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]

    ??:? runModuleUnitTests [0x42b8a9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong div =\
    \ 1;\n\t\n\twhile (div <= n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tmaxDivisor\
    \ = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpunf83u51.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpunf83u51.__unittest_L23_C1() [0x427a70]

    ??:? void tmpunf83u51.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong div =\
    \ 1;\n\twhile(div <= n)\n\t{\n\t\tif(n % div == 0)\n\t\t{\n\t\t\tmaxDivisor =\
    \ div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5fh4y9_j.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp5fh4y9_j.__unittest_L22_C1() [0x427a70]

    ??:? void tmp5fh4y9_j.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n) \n\t{\n\t\tif (n % divisor == 0) \n\t\t{\n\t\t\t\
    largest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\tlong remainder = 0;\n\t\n\twhile (remainder != 0) {\n\t\tdivisor = remainder\
    \ + 1;\n\t\tremainder = n % divisor;\n\t\tmaxDivisor = divisor;\n\t}\n\t\n\treturn\
    \ maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2ejt61fw.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp2ejt61fw.__unittest_L22_C1() [0x427aae]

    ??:? void tmp2ejt61fw.__modtest() [0x427b04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\t\
    break;\n\t\t}\n\t}\n\treturn largest;\n}\n/*\n Given a number n, find the smallest\
    \ number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = 1;\n\t\
    long i;\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsmallest\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n Given a number n,\
    \ find the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = 1;\n\t\
    long i;\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsmallest\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n Given a number n,\
    \ find the largest number that divides n evenly, larger than n\n    >>> largest_divisor(15L)\n\
    \    5L\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong\
    \ i;\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn largest;\n}\n/*\n Given a number n,\
    \ find the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = 1;\n\t\
    long i;\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tsmallest\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn smallest;\n}\n/*\n Given a number n,\
    \ find the smallest number that divides n evenly, larger than n\n    >>> largest_divisor(15L)\n\
    \    5L\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong\
    \ i;\n\tfor(i = 2; i <= n; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest\
    \ = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn largest;\n}\n/*\n \nunittest\n{\n \
    \   alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n \
    \   assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpd8oyzvi0.d(122): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd8oyzvi0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d < largest) {\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\twhile (largest\
    \ % 2 == 0) {\n\t\tlargest /= 2;\n\t}\n\treturn largest;\n}\nunittest\n{\n   \
    \ alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n   \
    \ assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmps29k3hwg.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmps29k3hwg.__unittest_L21_C1() [0x427aca]

    ??:? void tmps29k3hwg.__modtest() [0x427b20]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: -1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (n > 1)\n\t{\n\t\tlong temp = n % d;\n\t\tif (temp == 0)\n\
    \t\t{\n\t\t\tlargest = d;\n\t\t}\n\t\td = d + 1;\n\t}\n\treturn largest;\n}\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660160571
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (n > divisor) {\n\t\tdivisor *= 2;\n\t\tif (divisor > largest)\
    \ largest = divisor;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp3pngt722.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp3pngt722.__unittest_L18_C1() [0x427a6c]

    ??:? void tmp3pngt722.__modtest() [0x427b04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong div =\
    \ 1;\n\t\n\twhile (div <= n) \n\t{\n\t\tif (n % div == 0) \n\t\t{\n\t\t\tmaxDivisor\
    \ = div;\n\t\t}\n\t\tdiv++;\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n \
    \   alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n \
    \   assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmppllhz1vt.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmppllhz1vt.__unittest_L24_C1() [0x427a70]

    ??:? void tmppllhz1vt.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\t\
    \t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160509
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong i;\n\t\n\
    \tfor(i = 2; i <= n/2; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpx4r3_igr.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmpx4r3_igr.__unittest_L24_C1() [0x427a84]

    ??:? void tmpx4r3_igr.__modtest() [0x427b1c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\tlong remainder;\n\t\n\twhile (remainder != 0) {\n\t\tdivisor++;\n\t\t\
    remainder = n % divisor;\n\t\tmaxDivisor = divisor;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7pecnocq.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmp7pecnocq.__unittest_L22_C1() [0x427ab6]

    ??:? void tmp7pecnocq.__modtest() [0x427b0c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1L;\n\twhile(d <= largest)\n\t{\n\t\tif(n % d == 0)\n\t\t{\n\t\t\t\
    largest = d;\n\t\t}\n\t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2c3k2sid.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp2c3k2sid.__unittest_L22_C1() [0x427ab2]

    ??:? void tmp2c3k2sid.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; \n\tlong d = 1;\n\
    \t\n\twhile(n > 1)\n\t{\n\t\td = d * (n-1);\n\t\tn = n/2;\n\t}\n\t\n\twhile(d\
    \ % 2 == 0)\n\t{\n\t\td = d/2;\n\t\tlargest = largest * 2;\n\t}\n\t\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpclkqokvb.d(31): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dcd]

    ??:? void tmpclkqokvb.__unittest_L27_C1() [0x427ab4]

    ??:? void tmpclkqokvb.__modtest() [0x427b4c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baf3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a986]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb19]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffc8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faa5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]

    ??:? runModuleUnitTests [0x42b8c9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42821c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile(div < n) \n\t{\n\t\tif(n % div == 0) \n\t\t{\n\t\t\tlargest = div;\n\t\
    \t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\
    \tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn maxDivisor;\n}\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp6jlyrlmg.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp6jlyrlmg.__unittest_L23_C1() [0x427a70]

    ??:? void tmp6jlyrlmg.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong divisor = 1;\n\twhile (divisor < n) //keep dividing n by divisor, until\
    \ it divides evenly\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tlargest = divisor;\n\
    \t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 1;\n\t\n\twhile(currentDivisorRemainder\
    \ != 0)\n\t{\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\t\tcurrentDivisor\
    \ = currentDivisor * 10;\n\t\tmaxDivisor = currentDivisor;\n\t}\n\t\n\treturn\
    \ maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpebuxnmyc.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmpebuxnmyc.__unittest_L23_C1() [0x427a78]

    ??:? void tmpebuxnmyc.__modtest() [0x427b10]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long div = 1;\n\tlong long max_div\
    \ = 1;\n\tlong long max_div2 = 1;\n\t\n\twhile (div <= n) {\n\t\tif (n % div ==\
    \ 0) {\n\t\t\tmax_div = div;\n\t\t\tmax_div2 = div;\n\t\t}\n\t\tdiv++;\n\t}\n\t\
    \n\twhile (max_div2 <= n) {\n\t\tif (n % max_div2 == 0) {\n\t\t\tmax_div2 = max_div2;\n\
    \t\t}\n\t\tmax_div2++;\n\t}\n\t\n\treturn max_div2;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppg2xr7kj.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmppg2xr7kj.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmppg2xr7kj.d(12): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppg2xr7kj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with the\
    \ largest number\n\tlong d = 1L;\n\t\n\twhile (d < n) \n\t{\n\t\tif (n % d ==\
    \ 0) \n\t\t{\n\t\t\tlargest = d;\n\t\t}\n\t\td *= 2L;\n\t}\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp1w1iaz7o.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp1w1iaz7o.__unittest_L24_C1() [0x427ab2]

    ??:? void tmp1w1iaz7o.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong i;\n\t\n\
    \tfor(i = 2; i <= n/2; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmppleame0h.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmppleame0h.__unittest_L23_C1() [0x427a84]

    ??:? void tmppleame0h.__modtest() [0x427b1c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 1;\n\tlong max_div7 = 1;\n\tlong max_div8 = 1;\n\tlong max_div9 =\
    \ 1;\n\tlong max_div10 = 1;\n\tlong max_div11 = 1;\n\tlong max_div12 = 1;\n\t\
    long max_div13 = 1;\n\tlong max_div14 = 1;\n\tlong max_div15 = 1;\n\tlong max_div16\
    \ = 1;\n\tlong max_div17 = 1;\n\tlong max_div18 = 1;\n\tlong max_div19 = 1;\n\t\
    long max_div20 = 1;\n\tlong max_div21 = 1;\n\tlong max_div22 = 1;\n\tlong max_div23\
    \ = 1;\n\tlong max_div24 = 1;\n\tlong max_div25 = 1;\n\tlong max_div26 = 1;\n\t\
    long max_div27 = 1;\n\tlong max_div28 = 1;\n\tlong max_div29 = 1;\n\tlong max_div30\
    \ = 1;\n\tlong max_div31 = 1;\n\tlong max_div32 = 1;\n\tlong max_div33 = 1;\n\t\
    long max_div34 = 1;\n\tlong max_div35 = 1;\n\tlong max_div36 = 1;\n\tlong max_div37\
    \ = 1;\n\tlong max_div38 = 1;\n\tlong max_div39 = 1;\n\tlong max_div40 = 1;\n\t\
    long max_div41 = 1;\n\tlong max_div42 = 1;\n\tlong max_div43 = 1;\n\tlong max_div44\
    \ = 1;\n\tlong max_div45 = 1;\n\tlong max_div46 = 1;\n\tlong max_div47 = 1;\n\t\
    long max_div48 = 1;\n\tlong max_div49 = 1;\n\tlong max_div50 = 1;\n\tlong max_div51\
    \ = 1;\n\tlong max_div52 = 1;\n\tlong max_div53 = 1;\n\tlong max_div54 = 1;\n\t\
    long max_div55 = 1;\n\tlong max_div56 = 1;\n\tlong max_div57 = 1;\n\tlong max_div58\
    \ = 1;\n\tlong max_div59 = 1;\n\tlong max_div60 = 1;\n\tlong max_div61 = 1;\n\t\
    long max_div62 = 1;\n\tlong max_div63 = 1;\n\tlong max_div64 = 1;\n\tlong max_div65\
    \ = 1;\n\tlong max_div66 = 1;\n\tlong max_div67 = 1;\n\tlong max_div68 = 1;\n\t\
    long max_div69 = 1;\n\tlong max_div70 = 1;\n\tlong max_div71 = 1;\n\tlong max_div72\
    \ = 1;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw1966858.d(83): Error: no identifier for declarator `long`

    /tmp/tmpw1966858.d(83): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw1966858.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile(div < n) \n\t{\n\t\tif(n%div == 0) \n\t\t{\n\t\t\tlargest = div;\n\t\t\
    }\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n && n % divisor == 0) {\n\t\tdivisor++;\n\t}\n\twhile\
    \ (divisor < n && n % divisor != 0) {\n\t\tlargest = divisor;\n\t\tdivisor++;\n\
    \t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9j_fesgp.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmp9j_fesgp.__unittest_L21_C1() [0x427a88]

    ??:? void tmp9j_fesgp.__modtest() [0x427b20]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: -1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\tlong div = 1;\n\t\n\twhile (div <= n) \n\t{\n\t\tdivisor = div;\n\t\t\
    div = div * 2;\n\t\t\n\t\tif (div > n) \n\t\t{\n\t\t\tdivisor = div;\n\t\t\tdiv\
    \ = div / 2;\n\t\t}\n\t\t\n\t\tif (divisor > maxDivisor) \n\t\t{\n\t\t\tmaxDivisor\
    \ = divisor;\n\t\t}\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660160572
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\tlong test = 1;\n\tlong test2;\n\tlong test3;\n\tlong test4;\n\tlong\
    \ test5;\n\tlong test6;\n\tlong test7;\n\tlong test8;\n\tlong test9;\n\tlong test10;\n\
    \tlong test11;\n\tlong test12;\n\tlong test13;\n\tlong test14;\n\tlong test15;\n\
    \tlong test16;\n\tlong test17;\n\tlong test18;\n\tlong test19;\n\tlong test20;\n\
    \tlong test21;\n\tlong test22;\n\tlong test23;\n\tlong test24;\n\tlong test25;\n\
    \tlong test26;\n\tlong test27;\n\tlong test28;\n\tlong test29;\n\tlong test30;\n\
    \tlong test31;\n\tlong test32;\n\tlong test33;\n\tlong test34;\n\tlong test35;\n\
    \tlong test36;\n\tlong test37;\n\tlong test38;\n\tlong test39;\n\tlong test40;\n\
    \tlong test41;\n\tlong test42;\n\tlong test43;\n\tlong test44;\n\tlong test45;\n\
    \tlong test46;\n\tlong test47;\n\tlong test48;\n\tlong test49;\n\tlong test50;\n\
    \tlong test51;\n\tlong test52;\n\tlong test53;\n\tlong test54;\n\tlong test55;\n\
    \tlong test56;\n\tlong test57;\n\tlong test58;\n\tlong test59;\n\tlong test60;\n\
    \tlong test61;\n\tlong test62;\n\tlong test63;\n\tlong test64;\n\tlong test65;\n\
    \tlong test66;\n\tlong test67;\n\tlong test68;\n\tlong test69;\n\tlong test70;\n\
    \tlong test71;\n\tlong test72;\n\tlong test73;\n\tlong test74;\n\tlong test75;\n\
    \tlong test76;\n\tlong test77;\n\tlong test78;\n\tlong test79;\n\tlong test80;\n\
    \tlong test81;\n\tlong test82;\n\tlong test83;\n\tlong test84;\n\tlong test85;\n\
    \tlong test86;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxdol0wg_.d(99): Error: no identifier for declarator `long`

    /tmp/tmpxdol0wg_.d(99): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxdol0wg_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong d = 1;\n\
    \t\n\twhile (d <= n)\n\t{\n\t\tlargest = d;\n\t\td += 2;\n\t}\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpgfetion_.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d75]

    ??:? void tmpgfetion_.__unittest_L21_C1() [0x427a60]

    ??:? void tmpgfetion_.__modtest() [0x427af8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba9b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a92e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff70]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa4d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]

    ??:? runModuleUnitTests [0x42b871]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281c4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong div =\
    \ 1;\n\twhile(div <= n) \n\t{\n\t\tif(n % div == 0) \n\t\t{\n\t\t\tmaxDivisor\
    \ = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyglajkgc.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpyglajkgc.__unittest_L22_C1() [0x427a70]

    ??:? void tmpyglajkgc.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tlong d = 1L;\n\t\n\twhile (d < largest) {\n\t\tif (n % d == 0) {\n\t\t\tlargest\
    \ = d;\n\t\t}\n\t\td *= 2L;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpsnbiknfv.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpsnbiknfv.__unittest_L21_C1() [0x427ab2]

    ??:? void tmpsnbiknfv.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n) {\n\t\tif (n % divisor == 0) {\n\t\t\tlargest =\
    \ divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n  \
    \  alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n  \
    \  assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (d < largest) \n\t{\n\t\tif (n % d == 0) \n\t\t{\n\t\t\t\
    largest = d;\n\t\t}\n\t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdjx6_ofk.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpdjx6_ofk.__unittest_L22_C1() [0x427ab2]

    ??:? void tmpdjx6_ofk.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160511
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \twhile (d <= n && n % d == 0) {\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\treturn\
    \ largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9scwb5fn.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp9scwb5fn.__unittest_L18_C1() [0x427aae]

    ??:? void tmp9scwb5fn.__modtest() [0x427b04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1L;\n\twhile(d < largest)\n\t{\n\t\tif(n % d == 0)\n\t\t\tlargest =\
    \ d;\n\t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp6_n501us.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp6_n501us.__unittest_L20_C1() [0x427ab2]

    ??:? void tmp6_n501us.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: -1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 0;\n\t\n\twhile (currentDivisorRemainder\
    \ != 0)\n\t{\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\t\tcurrentDivisor++;\n\
    \t}\n\t\n\twhile (currentDivisor <= maxDivisor)\n\t{\n\t\tcurrentDivisorRemainder\
    \ = n % currentDivisor;\n\t\tcurrentDivisor++;\n\t\tmaxDivisor = currentDivisor;\n\
    \t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660160572
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n) {\n\t\tdivisor *= 2;\n\t\tif (divisor > largest)\
    \ largest = divisor;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpyul_hldi.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpyul_hldi.__unittest_L18_C1() [0x427a6c]

    ??:? void tmpyul_hldi.__modtest() [0x427b04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorFactor = 1;\n\t\n\twhile (currentDivisorFactor <\
    \ n)\n\t{\n\t\tcurrentDivisor *= 2;\n\t\tcurrentDivisorFactor = std.math.trunc(currentDivisor);\n\
    \t}\n\t\n\twhile (currentDivisorFactor > 1)\n\t{\n\t\tcurrentDivisor *= 2;\n\t\
    \tcurrentDivisorFactor = std.math.trunc(currentDivisor);\n\t\t\n\t\tif (currentDivisorFactor\
    \ > maxDivisor)\n\t\t{\n\t\t\tmaxDivisor = currentDivisor;\n\t\t}\n\t}\n\t\n\t\
    return maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp7xuie7fz.d(17): Error: cannot implicitly convert expression `trunc(cast(real)currentDivisor)`
    of type `real` to `long`

    /tmp/tmp7xuie7fz.d(23): Error: cannot implicitly convert expression `trunc(cast(real)currentDivisor)`
    of type `real` to `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7xuie7fz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160557
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\
    \tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong i;\n\t\n\
    \tfor(i = 2; i <= largest/2; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest\
    \ = i;\n\t\t}\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpgp125c1e.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmpgp125c1e.__unittest_L23_C1() [0x427a80]

    ??:? void tmpgp125c1e.__modtest() [0x427b18]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong div =\
    \ 1;\n\twhile (div < n)\n\t{\n\t\tif (n % div == 0)\n\t\t{\n\t\t\tif (div > maxDivisor)\n\
    \t\t\t\tmaxDivisor = div;\n\t\t}\n\t\tdiv++;\n\t}\n\treturn maxDivisor;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tfor (long i = 2; i <= largest; i++) {\n\t\tif (n % i == 0) {\n\t\t\tlargest\
    \ = i;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpvu07bmgm.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpvu07bmgm.__unittest_L18_C1() [0x427a70]

    ??:? void tmpvu07bmgm.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160509
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n) {\n\t\tif (n % divisor == 0) {\n\t\t\tlargest =\
    \ divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n  \
    \  alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n  \
    \  assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile(div <= largest)\n\t{\n\t\tif(n % div == 0)\n\t\t{\n\t\t\tlargest = div;\n\
    \t\t}\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmphlewjuqy.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmphlewjuqy.__unittest_L22_C1() [0x427ab2]

    ??:? void tmphlewjuqy.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\t\n\twhile (currentDivisor <= n)\n\t{\n\t\tif (n % currentDivisor ==\
    \ 0)\n\t\t{\n\t\t\tmaxDivisor = currentDivisor;\n\t\t}\n\t\tcurrentDivisor++;\n\
    \t}\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp0t62pw_s.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp0t62pw_s.__unittest_L23_C1() [0x427a70]

    ??:? void tmp0t62pw_s.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tfor (long i = 2; i <= largest; i++) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\
    \tlargest = i;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpuj9zknpf.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpuj9zknpf.__unittest_L20_C1() [0x427a70]

    ??:? void tmpuj9zknpf.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\tlargest\
    \ = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong d = 1;\n\
    \tlong i = 2;\n\twhile (i * i <= n) \n\t{\n\t\tif (n % i == 0) \n\t\t{\n\t\t\t\
    d = i;\n\t\t\tlargest = i;\n\t\t}\n\t\ti = i + 1;\n\t}\n\treturn largest;\n}\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpww9rzxeb.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmpww9rzxeb.__unittest_L24_C1() [0x427aca]

    ??:? void tmpww9rzxeb.__modtest() [0x427b20]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong div = 1;\n\twhile (div <= n && n % div == 0) {\n\t\tlargest = div;\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdzq2x9ea.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpdzq2x9ea.__unittest_L18_C1() [0x427aae]

    ??:? void tmpdzq2x9ea.__modtest() [0x427b04]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tfor (long d = 2; d <= n; d++) // find largest divisor < n\n\t{\n\t\tif (n %\
    \ d == 0) // if d divides n\n\t\t{\n\t\t\tif (d > largest)\n\t\t\t\tlargest =\
    \ d;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp3i5iuk8o.d(25): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmp3i5iuk8o.__unittest_L21_C1() [0x427a78]

    ??:? void tmp3i5iuk8o.__modtest() [0x427b10]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: -8
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \t\n\twhile(div <= largest)\n\t{\n\t\tlargest = div;\n\t\tdiv *= 2;\n\t}\n\t\n\
    \twhile(n > largest)\n\t{\n\t\tdiv--;\n\t\tn /= div;\n\t}\n\t\n\treturn div;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 0;\n\tlong currentDivisorDivisor = 1;\n\
    \t\n\twhile (currentDivisorRemainder != 0)\n\t{\n\t\tcurrentDivisorDivisor = currentDivisor\
    \ / currentDivisorRemainder;\n\t\tcurrentDivisorRemainder = currentDivisor % currentDivisorRemainder;\n\
    \t\t\n\t\tif (currentDivisorDivisor > maxDivisor)\n\t\t{\n\t\t\tmaxDivisor = currentDivisorDivisor;\n\
    \t\t}\n\t\t\n\t\tcurrentDivisor = currentDivisorDivisor;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmptxwz6722.d(36): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dad]

    ??:? void tmptxwz6722.__unittest_L30_C1() [0x427ada]

    ??:? void tmptxwz6722.__modtest() [0x427b30]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bad3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a966]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42faf9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffa8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa85]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a93d]

    ??:? runModuleUnitTests [0x42b8a9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281fc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile(d <= largest)\n\t{\n\t\tif(n % d == 0)\n\t\t{\n\t\t\tlargest\
    \ = d;\n\t\t}\n\t\td++;\n\t}\n\treturn largest;\n}\n/*\n For a given number n,\
    \ find the smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong smallest_divisor(long n) \n{\n\tlong smallest = n; //start\
    \ with n\n\tlong d = 1;\n\twhile(d <= smallest)\n\t{\n\t\tif(n % d == 0)\n\t\t\
    {\n\t\t\tsmallest = d;\n\t\t}\n\t\td++;\n\t}\n\treturn smallest;\n}\n/*\n For\
    \ a given number n, find the smallest number that divides n evenly, smaller than\
    \ n\n    >>> smallest_divisor(15L)\n    3L\n    \n*/\nlong largest_divisor(long\
    \ n) \n{\n\tlong largest = n; //start with n\n\tlong d = 1;\n\twhile(d <= largest)\n\
    \t{\n\t\tif(n % d == 0)\n\t\t{\n\t\t\tlargest = d;\n\t\t}\n\t\td++;\n\t}\n\treturn\
    \ largest;\n}\n/*\n For a given number n, find the largest number that divides\
    \ n evenly, larger than n\n    >>> largest_divisor(15L)\n    5L\n    \n*/\nlong\
    \ smallest_divisor(long n) \n{\n\tlong smallest = n; //start with n\n\tlong d\
    \ = 1;\n\twhile(d <= smallest)\n\t{\n\t\tif(n % d == 0)\n\t\t{\n\t\t\tsmallest\
    \ = d;\n\t\t}\n\t\td++;\n\t}\n\treturn smallest;\n}\n/*\n For a given number n,\
    \ find the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15L)\n\
    \    3L\n    \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start\
    \ with n\n\tlong d = 1;\n\twhile(d <= largest)\n\t{\n\t\tif(n % d == 0)\n\t\t\
    {\n\t\t\tlargest = d;\n\t\t}\n\t\td++;\n\t}\n\treturn largest;\n}\n/*\n For a\
    \ given number n, find the smallest number that divides n evenly, larger than\
    \ n\n    >>> smallest_divisor(15L)\n    3L\n    \n*/\nlong smallest_divisor(long\
    \ n) \n{\n\tlong smallest = n; //start with n\n\tlong d = 1;\n\twhile(d <= smallest)\n\
    \t{\n\t\tif(n % \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpres6mxq4.d(115): Error: expression expected, not `unittest`

    /tmp/tmpres6mxq4.d(116): Error: found `{` when expecting `)`

    /tmp/tmpres6mxq4.d(125): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpres6mxq4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong long i;\n\tlong long maxDivisor\
    \ = 1;\n\t\n\tfor (i = 2; i <= n; i++) {\n\t\tif (n % i == 0) {\n\t\t\tmaxDivisor\
    \ = i;\n\t\t}\n\t}\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp0opjx3t2.d(10): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmp0opjx3t2.d(11): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0opjx3t2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong divisor\
    \ = 1;\n\twhile (divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\t\t{\n\t\t\t\
    if (largest < divisor)\n\t\t\t\tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t\
    }\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmphaupdnz7.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmphaupdnz7.__unittest_L23_C1() [0x427a80]

    ??:? void tmphaupdnz7.__modtest() [0x427b18]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160557
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDiv = n;\n\tlong div = 1;\n\
    \twhile(div <= maxDiv && div <= n)\n\t{\n\t\tdiv *= 2;\n\t\tmaxDiv = div;\n\t\
    }\n\treturn maxDiv;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n\
    \    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmplaqn62sm.d(23): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d7d]

    ??:? void tmplaqn62sm.__unittest_L19_C1() [0x427a68]

    ??:? void tmplaqn62sm.__modtest() [0x427b00]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baa3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a936]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff78]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa55]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a90d]

    ??:? runModuleUnitTests [0x42b879]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281cc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160558
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor * divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\
    \t\t{\n\t\t\tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpk5lq0lzw.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmpk5lq0lzw.__unittest_L24_C1() [0x427ab6]

    ??:? void tmpk5lq0lzw.__modtest() [0x427b0c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \t\n\twhile (d < largest) {\n\t\tif (n % d == 0) {\n\t\t\tlargest = d;\n\t\t}\n\
    \t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp8lwtjmg_.d(27): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp8lwtjmg_.__unittest_L21_C1() [0x427ab2]

    ??:? void tmp8lwtjmg_.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor * divisor <= n)\n\t{\n\t\tif (n % divisor == 0)\n\
    \t\t{\n\t\t\tmaxDivisor = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn maxDivisor;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpk5lq0lzw.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d8d]

    ??:? void tmpk5lq0lzw.__unittest_L24_C1() [0x427ab6]

    ??:? void tmpk5lq0lzw.__modtest() [0x427b0c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff88]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa65]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a91d]

    ??:? runModuleUnitTests [0x42b889]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\twhile (divisor < n) {\n\t\tif (n % divisor == 0) {\n\t\t\tlargest =\
    \ divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n}\nunittest\n{\n  \
    \  alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n  \
    \  assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (n > 1) {\n\t\td = d * (n % 2);\n\t\tn = n / 2;\n\t}\n\t\
    while (d > 1) {\n\t\tlargest = d;\n\t\td = d / 2;\n\t}\n\treturn largest;\n}\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpv9pi0wih.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427db5]

    ??:? void tmpv9pi0wih.__unittest_L22_C1() [0x427aa0]

    ??:? void tmpv9pi0wih.__modtest() [0x427b38]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42badb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a96e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb01]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffb0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa8d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a945]

    ??:? runModuleUnitTests [0x42b8b1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428204]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160558
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tlong d = 1L;\n\t\n\twhile (d < largest) {\n\t\tif (n % d == 0) {\n\t\t\tlargest\
    \ = d;\n\t\t}\n\t\td *= 2L;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmphu1q9jdj.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmphu1q9jdj.__unittest_L22_C1() [0x427ab2]

    ??:? void tmphu1q9jdj.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160558
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong divisor\
    \ = 1;\n\t\n\twhile (divisor < largest) {\n\t\tif (n % divisor == 0) {\n\t\t\t\
    largest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\t\n\treturn largest;\n}\nunittest\n\
    {\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp08b9xnd7.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp08b9xnd7.__unittest_L22_C1() [0x427ab2]

    ??:? void tmp08b9xnd7.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160558
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 1;\n\tlong max_div7 = 1;\n\tlong max_div8 = 1;\n\tlong max_div9 =\
    \ 1;\n\tlong max_div10 = 1;\n\tlong max_div11 = 1;\n\tlong max_div12 = 1;\n\t\
    long max_div13 = 1;\n\tlong max_div14 = 1;\n\tlong max_div15 = 1;\n\tlong max_div16\
    \ = 1;\n\tlong max_div17 = 1;\n\tlong max_div18 = 1;\n\tlong max_div19 = 1;\n\t\
    long max_div20 = 1;\n\tlong max_div21 = 1;\n\tlong max_div22 = 1;\n\tlong max_div23\
    \ = 1;\n\tlong max_div24 = 1;\n\tlong max_div25 = 1;\n\tlong max_div26 = 1;\n\t\
    long max_div27 = 1;\n\tlong max_div28 = 1;\n\tlong max_div29 = 1;\n\tlong max_div30\
    \ = 1;\n\tlong max_div31 = 1;\n\tlong max_div32 = 1;\n\tlong max_div33 = 1;\n\t\
    long max_div34 = 1;\n\tlong max_div35 = 1;\n\tlong max_div36 = 1;\n\tlong max_div37\
    \ = 1;\n\tlong max_div38 = 1;\n\tlong max_div39 = 1;\n\tlong max_div40 = 1;\n\t\
    long max_div41 = 1;\n\tlong max_div42 = 1;\n\tlong max_div43 = 1;\n\tlong max_div44\
    \ = 1;\n\tlong max_div45 = 1;\n\tlong max_div46 = 1;\n\tlong max_div47 = 1;\n\t\
    long max_div48 = 1;\n\tlong max_div49 = 1;\n\tlong max_div50 = 1;\n\tlong max_div51\
    \ = 1;\n\tlong max_div52 = 1;\n\tlong max_div53 = 1;\n\tlong max_div54 = 1;\n\t\
    long max_div55 = 1;\n\tlong max_div56 = 1;\n\tlong max_div57 = 1;\n\tlong max_div58\
    \ = 1;\n\tlong max_div59 = 1;\n\tlong max_div60 = 1;\n\tlong max_div61 = 1;\n\t\
    long max_div62 = 1;\n\tlong max_div63 = 1;\n\tlong max_div64 = 1;\n\tlong max_div65\
    \ = 1;\n\tlong max_div66 = 1;\n\tlong max_div67 = 1;\n\tlong max_div68 = 1;\n\t\
    long max_div69 = 1;\n\tlong max_div70 = 1;\n\tlong max_div71 = 1;\n\tlong max_div72\
    \ = 1;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw1966858.d(83): Error: no identifier for declarator `long`

    /tmp/tmpw1966858.d(83): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw1966858.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong div = 1;\n\
    \t\n\twhile(div <= n) \n\t{\n\t\tif(n%div == 0) \n\t\t{\n\t\t\tmax_div = div;\n\
    \t\t}\n\t\tdiv++;\n\t}\n\t\n\treturn max_div;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp6xkiqyl2.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp6xkiqyl2.__unittest_L24_C1() [0x427a70]

    ??:? void tmp6xkiqyl2.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160558
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (largest%2 == 0)\n\t{\n\t\tlargest/=2;\n\t\td++;\n\t}\n\
    \twhile (largest%3 == 0)\n\t{\n\t\tlargest/=3;\n\t\td++;\n\t}\n\twhile (largest%5\
    \ == 0)\n\t{\n\t\tlargest/=5;\n\t\td++;\n\t}\n\twhile (largest%7 == 0)\n\t{\n\t\
    \tlargest/=7;\n\t\td++;\n\t}\n\twhile (largest%11 == 0)\n\t{\n\t\tlargest/=11;\n\
    \t\td++;\n\t}\n\twhile (largest%13 == 0)\n\t{\n\t\tlargest/=13;\n\t\td++;\n\t\
    }\n\twhile (largest%17 == 0)\n\t{\n\t\tlargest/=17;\n\t\td++;\n\t}\n\twhile (largest%19\
    \ == 0)\n\t{\n\t\tlargest/=19;\n\t\td++;\n\t}\n\twhile (largest%23 == 0)\n\t{\n\
    \t\tlargest/=23;\n\t\td++;\n\t}\n\twhile (largest%29 == 0)\n\t{\n\t\tlargest/=29;\n\
    \t\td++;\n\t}\n\twhile (largest%37 == 0)\n\t{\n\t\tlargest/=37;\n\t\td++;\n\t\
    }\n\twhile (largest%41 == 0)\n\t{\n\t\tlargest/=41;\n\t\td++;\n\t}\n\twhile (largest%43\
    \ == 0)\n\t{\n\t\tlargest/=43;\n\t\td++;\n\t}\n\twhile (largest%47 == 0)\n\t{\n\
    \t\tlargest/=47;\n\t\td++;\n\t}\n\twhile (largest%51 == 0)\n\t{\n\t\tlargest/=51;\n\
    \t\td++;\n\t}\n\twhile (largest%55 == 0)\n\t{\n\t\tlargest/=55;\n\t\td++;\n\t\
    }\n\twhile (largest%59 == 0)\n\t{\n\t\tlargest/=59;\n\t\td++;\n\t}\n\twhile (largest%63\
    \ == 0)\n\t{\n\t\tlargest/=63;\n\t\td++;\n\t}\n\twhile (largest%67 == 0)\n\t{\n\
    \t\tlargest/=67;\n\t\td++;\n\t}\n\twhile (largest%71 == 0)\n\t{\n\t\tlargest/=71;\n\
    \t\td++;\n\t}\n\twhile (largest%73\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfmi1kzc2.d(113): Error: found `unittest` when expecting `)`

    /tmp/tmpfmi1kzc2.d(123): Error: found `End of File` when expecting `}` following
    compound statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfmi1kzc2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160557
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong divisor = 1;\n\twhile (divisor < n)\n\t{\n\t\tif (n % divisor == 0)\n\t\
    \t{\n\t\t\tlargest = divisor;\n\t\t}\n\t\tdivisor++;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160558
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong i;\n\tfor(i\
    \ = 2; i <= n/2; i++)\n\t{\n\t\tif(n % i == 0)\n\t\t{\n\t\t\tlargest = i;\n\t\t\
    \tbreak;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpby1_bxxm.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmpby1_bxxm.__unittest_L22_C1() [0x427a84]

    ??:? void tmpby1_bxxm.__modtest() [0x427b1c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile(d <= largest)\n\t{\n\t\tif(n % d == 0)\n\t\t{\n\t\t\tlargest\
    \ = d;\n\t\t}\n\t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmplz__p5fk.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmplz__p5fk.__unittest_L22_C1() [0x427ab2]

    ??:? void tmplz__p5fk.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile(div < n)\n\t{\n\t\tif(n%div == 0)\n\t\t{\n\t\t\tlargest = div;\n\t\t}\n\
    \t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160558
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= n) {\n\t\tlargest = div;\n\t\tdiv += 2;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpwmy704_x.d(22): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d75]

    ??:? void tmpwmy704_x.__unittest_L18_C1() [0x427a60]

    ??:? void tmpwmy704_x.__modtest() [0x427af8]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba9b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a92e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff70]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa4d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]

    ??:? runModuleUnitTests [0x42b871]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281c4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160558
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \t\n\twhile (d < largest) {\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\n\twhile (largest\
    \ % 2 == 0) {\n\t\tlargest /= 2;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7_4b0_da.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmp7_4b0_da.__unittest_L24_C1() [0x427aca]

    ??:? void tmp7_4b0_da.__modtest() [0x427b20]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong currentDivisor\
    \ = 1;\n\tlong currentDivisorRemainder = 0;\n\t\n\twhile (currentDivisorRemainder\
    \ != 0)\n\t{\n\t\tcurrentDivisorRemainder = n % currentDivisor;\n\t\tcurrentDivisor\
    \ = currentDivisor * 10;\n\t\tmaxDivisor = currentDivisor;\n\t}\n\t\n\treturn\
    \ maxDivisor;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpdmzh14k9.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d95]

    ??:? void tmpdmzh14k9.__unittest_L23_C1() [0x427abe]

    ??:? void tmpdmzh14k9.__modtest() [0x427b14]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42babb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a94e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff90]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa6d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a925]

    ??:? runModuleUnitTests [0x42b891]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281e4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160558
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong maxDivisor = 1;\n\tlong div =\
    \ 1;\n\t\n\twhile (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tmaxDivisor = div;\n\
    \t\t}\n\t\tdiv++;\n\t}\n\t\n\treturn maxDivisor;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpprbpgahr.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpprbpgahr.__unittest_L22_C1() [0x427a70]

    ??:? void tmpprbpgahr.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160558
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile (d < largest) {\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\
    while (largest % 2 == 0) {\n\t\tlargest /= 2;\n\t}\n\treturn largest;\n}\n/*\n\
    \ For a given number n, find the smallest number that divides n evenly, larger\
    \ than n\n    >>> smallest_divisor(15L)\n    3L\n    \n*/\nlong smallest_divisor(long\
    \ n) \n{\n\tlong smallest = n; //start with n\n\tlong d = 1;\n\twhile (d < smallest)\
    \ {\n\t\tsmallest = d;\n\t\td *= 2;\n\t}\n\twhile (smallest % 2 == 0) {\n\t\t\
    smallest /= 2;\n\t}\n\treturn smallest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpxvxm9v34.d(46): unittest failure

    ----------------

    ??:? _d_unittestp [0x427e3d]

    ??:? void tmpxvxm9v34.__unittest_L40_C1() [0x427b6a]

    ??:? void tmpxvxm9v34.__modtest() [0x427bc0]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb63]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9f6]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb89]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x430038]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fb15]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a9cd]

    ??:? runModuleUnitTests [0x42b939]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42828c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160558
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 2;\n\twhile (d <= largest) {\n\t\tif (n % d == 0) {\n\t\t\tlargest\
    \ = d;\n\t\t}\n\t\td += 2;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9gm6y9zv.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp9gm6y9zv.__unittest_L20_C1() [0x427a70]

    ??:? void tmp9gm6y9zv.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160558
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1L;\n\twhile(d <= largest)\n\t{\n\t\tif(n % d == 0)\n\t\t{\n\t\t\t\
    largest = d;\n\t\t}\n\t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp2c3k2sid.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp2c3k2sid.__unittest_L22_C1() [0x427ab2]

    ??:? void tmp2c3k2sid.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= largest) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t\
    }\n\t\tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpqqbghvji.d(26): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpqqbghvji.__unittest_L20_C1() [0x427ab2]

    ??:? void tmpqqbghvji.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = 1;\n\tlong max_div2\
    \ = 1;\n\tlong max_div3 = 1;\n\tlong max_div4 = 1;\n\tlong max_div5 = 1;\n\tlong\
    \ max_div6 = 1;\n\tlong max_div7 = 1;\n\tlong max_div8 = 1;\n\tlong max_div9 =\
    \ 1;\n\tlong max_div10 = 1;\n\tlong max_div11 = 1;\n\tlong max_div12 = 1;\n\t\
    long max_div13 = 1;\n\tlong max_div14 = 1;\n\tlong max_div15 = 1;\n\tlong max_div16\
    \ = 1;\n\tlong max_div17 = 1;\n\tlong max_div18 = 1;\n\tlong max_div19 = 1;\n\t\
    long max_div20 = 1;\n\tlong max_div21 = 1;\n\tlong max_div22 = 1;\n\tlong max_div23\
    \ = 1;\n\tlong max_div24 = 1;\n\tlong max_div25 = 1;\n\tlong max_div26 = 1;\n\t\
    long max_div27 = 1;\n\tlong max_div28 = 1;\n\tlong max_div29 = 1;\n\tlong max_div30\
    \ = 1;\n\tlong max_div31 = 1;\n\tlong max_div32 = 1;\n\tlong max_div33 = 1;\n\t\
    long max_div34 = 1;\n\tlong max_div35 = 1;\n\tlong max_div36 = 1;\n\tlong max_div37\
    \ = 1;\n\tlong max_div38 = 1;\n\tlong max_div39 = 1;\n\tlong max_div40 = 1;\n\t\
    long max_div41 = 1;\n\tlong max_div42 = 1;\n\tlong max_div43 = 1;\n\tlong max_div44\
    \ = 1;\n\tlong max_div45 = 1;\n\tlong max_div46 = 1;\n\tlong max_div47 = 1;\n\t\
    long max_div48 = 1;\n\tlong max_div49 = 1;\n\tlong max_div50 = 1;\n\tlong max_div51\
    \ = 1;\n\tlong max_div52 = 1;\n\tlong max_div53 = 1;\n\tlong max_div54 = 1;\n\t\
    long max_div55 = 1;\n\tlong max_div56 = 1;\n\tlong max_div57 = 1;\n\tlong max_div58\
    \ = 1;\n\tlong max_div59 = 1;\n\tlong max_div60 = 1;\n\tlong max_div61 = 1;\n\t\
    long max_div62 = 1;\n\tlong max_div63 = 1;\n\tlong max_div64 = 1;\n\tlong max_div65\
    \ = 1;\n\tlong max_div66 = 1;\n\tlong max_div67 = 1;\n\tlong max_div68 = 1;\n\t\
    long max_div69 = 1;\n\tlong max_div70 = 1;\n\tlong max_div71 = 1;\n\tlong max_div72\
    \ = 1;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw1966858.d(83): Error: no identifier for declarator `long`

    /tmp/tmpw1966858.d(83): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw1966858.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 0
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\t\
    div++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; // start with n\n\
    \tlong d = 1L;\n\twhile (d < n) \n\t{\n\t\tif (n % d == 0) \n\t\t{\n\t\t\tlargest\
    \ = d;\n\t\t}\n\t\td *= 2L;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp9cm0gp1i.d(28): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmp9cm0gp1i.__unittest_L22_C1() [0x427ab2]

    ??:? void tmp9cm0gp1i.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]

    ??:? _d_run_main [0x4280c6]

    ??:? main [0x427b1b]

    ??:? __libc_start_main [0x65655554]

    1/1 unittests FAILED

    '
  stdout: ''
  timestamp: 1660160558
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \t\n\twhile (d < largest)\n\t{\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\n\twhile\
    \ (largest % 2 == 0)\n\t{\n\t\tlargest /= 2;\n\t}\n\t\n\treturn largest;\n}\n\
    unittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp_2ejn5t4.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmp_2ejn5t4.__unittest_L26_C1() [0x427aca]

    ??:? void tmp_2ejn5t4.__modtest() [0x427b20]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160558
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div <= n) {\n\t\tif (n % div == 0) {\n\t\t\tlargest = div;\n\t\t}\n\t\
    \tdiv++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate = largest_divisor;\n\
    \n    assert(candidate(3L) == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L)\
    \ == 5L);\n    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpf5mtj1js.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpf5mtj1js.__unittest_L20_C1() [0x427a70]

    ??:? void tmpf5mtj1js.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \t\n\twhile (d <= largest)\n\t{\n\t\tif (n % d == 0)\n\t\t{\n\t\t\tlargest = d;\n\
    \t\t}\n\t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate =\
    \ largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmph7w_untp.d(29): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmph7w_untp.__unittest_L23_C1() [0x427ab2]

    ??:? void tmph7w_untp.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160558
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \t\n\twhile (d < largest)\n\t{\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\n\twhile\
    \ (largest % 2 == 0)\n\t{\n\t\tlargest = largest / 2;\n\t}\n\t\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp02f4wfwh.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmp02f4wfwh.__unittest_L26_C1() [0x427aca]

    ??:? void tmp02f4wfwh.__modtest() [0x427b20]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160556
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong d = 1;\n\
    \t\n\twhile (d < largest) {\n\t\tlargest = d;\n\t\td *= 2;\n\t}\n\t\n\twhile (largest\
    \ % 2 == 0) {\n\t\tlargest /= 2;\n\t}\n\t\n\treturn largest;\n}\nunittest\n{\n\
    \    alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n\
    \    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp7_4b0_da.d(30): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d9d]

    ??:? void tmp7_4b0_da.__unittest_L24_C1() [0x427aca]

    ??:? void tmp7_4b0_da.__modtest() [0x427b20]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bac3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a956]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fae9]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff98]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa75]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a92d]

    ??:? runModuleUnitTests [0x42b899]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281ec]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160510
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = 1;\n\tlong d = 1;\n\
    \tlong m = n;\n\twhile (m != 0) {\n\t\tif (m % 2 == 0) {\n\t\t\tm /= 2;\n\t\t\t\
    d *= 2;\n\t\t}\n\t\telse {\n\t\t\tm /= 2;\n\t\t\td *= 3;\n\t\t}\n\t\tif (d > largest)\
    \ {\n\t\t\tlargest = d;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias\
    \ candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmp5c0t9qf9.d(32): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dcd]

    ??:? void tmp5c0t9qf9.__unittest_L28_C1() [0x427ab4]

    ??:? void tmp5c0t9qf9.__modtest() [0x427b4c]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baf3]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a986]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb19]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffc8]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42faa5]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a95d]

    ??:? runModuleUnitTests [0x42b8c9]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42821c]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160558
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong max_div = n;\n\tlong max_div2\
    \ = n;\n\tlong max_div3 = n;\n\tlong max_div4 = n;\n\tlong max_div5 = n;\n\tlong\
    \ max_div6 = n;\n\tlong max_div7 = n;\n\tlong max_div8 = n;\n\tlong max_div9 =\
    \ n;\n\tlong max_div10 = n;\n\tlong max_div11 = n;\n\tlong max_div12 = n;\n\t\
    long max_div13 = n;\n\tlong max_div14 = n;\n\tlong max_div15 = n;\n\tlong max_div16\
    \ = n;\n\tlong max_div17 = n;\n\tlong max_div18 = n;\n\tlong max_div19 = n;\n\t\
    long max_div20 = n;\n\tlong max_div21 = n;\n\tlong max_div22 = n;\n\tlong max_div23\
    \ = n;\n\tlong max_div24 = n;\n\tlong max_div25 = n;\n\tlong max_div26 = n;\n\t\
    long max_div27 = n;\n\tlong max_div28 = n;\n\tlong max_div29 = n;\n\tlong max_div30\
    \ = n;\n\tlong max_div31 = n;\n\tlong max_div32 = n;\n\tlong max_div33 = n;\n\t\
    long max_div34 = n;\n\tlong max_div35 = n;\n\tlong max_div36 = n;\n\tlong max_div37\
    \ = n;\n\tlong max_div38 = n;\n\tlong max_div39 = n;\n\tlong max_div40 = n;\n\t\
    long max_div41 = n;\n\tlong max_div42 = n;\n\tlong max_div43 = n;\n\tlong max_div44\
    \ = n;\n\tlong max_div45 = n;\n\tlong max_div46 = n;\n\tlong max_div47 = n;\n\t\
    long max_div48 = n;\n\tlong max_div49 = n;\n\tlong max_div50 = n;\n\tlong max_div51\
    \ = n;\n\tlong max_div52 = n;\n\tlong max_div53 = n;\n\tlong max_div54 = n;\n\t\
    long max_div55 = n;\n\tlong max_div56 = n;\n\tlong max_div57 = n;\n\tlong max_div58\
    \ = n;\n\tlong max_div59 = n;\n\tlong max_div60 = n;\n\tlong max_div61 = n;\n\t\
    long max_div62 = n;\n\tlong max_div63 = n;\n\tlong max_div64 = n;\n\tlong max_div65\
    \ = n;\n\tlong \nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1ajbr1o2.d(76): Error: no identifier for declarator `long`

    /tmp/tmp1ajbr1o2.d(76): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1ajbr1o2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660160508
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 1;\n\twhile(n > 1)\n\t{\n\t\tif(n%2 == 0)\n\t\t{\n\t\t\tn = (n/2);\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\tn = n/2;\n\t\t}\n\t\td = d*2;\n\t\tif(d > largest)\n\
    \t\t{\n\t\t\tlargest = d;\n\t\t}\n\t}\n\treturn largest;\n}\nunittest\n{\n   \
    \ alias candidate = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n   \
    \ assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L)\
    \ == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmputrgugmo.d(34): unittest failure

    ----------------

    ??:? _d_unittestp [0x427dc5]

    ??:? void tmputrgugmo.__unittest_L30_C1() [0x427ab0]

    ??:? void tmputrgugmo.__modtest() [0x427b48]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baeb]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a97e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb11]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ffc0]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa9d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a955]

    ??:? runModuleUnitTests [0x42b8c1]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428214]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160558
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n; //start with n\n\
    \tlong d = 2;\n\twhile (d < largest) {\n\t\tif (n % d == 0) {\n\t\t\tlargest =\
    \ d;\n\t\t}\n\t\td++;\n\t}\n\treturn largest;\n}\nunittest\n{\n    alias candidate\
    \ = largest_divisor;\n\n    assert(candidate(3L) == 1L);\n    assert(candidate(7L)\
    \ == 1L);\n    assert(candidate(10L) == 5L);\n    assert(candidate(100L) == 50L);\n\
    \    assert(candidate(49L) == 7L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpmuz4b8y1.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d85]

    ??:? void tmpmuz4b8y1.__unittest_L20_C1() [0x427a70]

    ??:? void tmpmuz4b8y1.__modtest() [0x427b08]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff80]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa5d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a915]

    ??:? runModuleUnitTests [0x42b881]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160555
- exit_code: 1
  program: "import std.math;\n/*\n For a given number n, find the largest number that\
    \ divides n evenly, smaller than n\n    >>> largest_divisor(15L)\n    5L\n   \
    \ \n*/\nlong largest_divisor(long n) \n{\n\tlong largest = n;\n\tlong div = 1;\n\
    \twhile (div < largest) {\n\t\tlargest = div;\n\t\tdiv *= 2;\n\t}\n\treturn largest;\n\
    }\nunittest\n{\n    alias candidate = largest_divisor;\n\n    assert(candidate(3L)\
    \ == 1L);\n    assert(candidate(7L) == 1L);\n    assert(candidate(10L) == 5L);\n\
    \    assert(candidate(100L) == 50L);\n    assert(candidate(49L) == 7L);\n}\nvoid\
    \ main(){}"
  status: Exception
  stderr: 'core.exception.AssertError@/tmp/tmpjofdlbvt.d(24): unittest failure

    ----------------

    ??:? _d_unittestp [0x427d75]

    ??:? void tmpjofdlbvt.__unittest_L18_C1() [0x427a9e]

    ??:? void tmpjofdlbvt.__modtest() [0x427af4]

    ??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42ba9b]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a92e]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fac1]

    ??:? int rt.sections_elf_shared.DSO.opApply(scope int delegate(ref rt.sections_elf_shared.DSO))
    [0x42ff70]

    ??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*)))
    [0x42fa4d]

    ??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)) [0x42a905]

    ??:? runModuleUnitTests [0x42b871]

    ??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281c4]

    ??:? void rt.dmain2._d_r'
  stdout: ''
  timestamp: 1660160558

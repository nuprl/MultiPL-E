language: d
name: HumanEval_53_add
results:
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    2L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the square root of x\n    >>> sqrt(4L)\n    2.0\n    \n*/\ndouble sqrt(double\
    \ x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet the square root of x\n    >>>\
    \ sqrt(4L)\n    2.0\n    \n*/\nfloat sqrt(float x) \n{\n    return std.math.sqrt(x);\n\
    }\n/*\nGet the square root of x\n    >>> sqrt(4L)\n    2.0\n    \n*/\nlong double\
    \ sqrt(long double x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet the square\
    \ root of x\n    >>> sqrt(4L)\n    2.0\n    \n*/\ndouble sqrt(double x) \n{\n\
    \    return std.math.sqrt(x);\n}\n/*\nGet the square root of x\n    >>> sqrt(4L)\n\
    \    2.0\n    \n*/\nfloat sqrt(float x) \n{\n    return std.math.sqrt(x);\n}\n\
    /*\nGet the square root of x\n    >>> sqrt(4L)\n    2.0\n    \n*/\nlong double\
    \ sqrt(long double x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet the square\
    \ root of x\n    >>> sqrt(4L)\n    2.0\n    \n*/\ndouble sqrt(double x) \n{\n\
    \    return std.math.sqrt(x);\n}\n/*\nGet the square root of x\n    >>> sqrt(4L)\n\
    \    2.0\n    \n*/\nfloat sqrt(float x) \n{\n    return std.math.sqrt(x);\n}\n\
    /*\nGet the square root of x\n    >>> sqrt(4L)\n    2.0\n    \n*/\nlong double\
    \ sqrt(long double x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet the square\
    \ root of x\n    >>> sqrt(4L)\n    2.0\n    \n*/\ndouble sqrt(double x) \n{\n\
    \    return std.math.sqrt(x);\nunittest\n{\n    alias candidate = add;\n\n   \
    \ assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n   \
    \ assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n  \
    \  assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxqkw_u69.d(77): Error: use `real` instead of `long double`

    /tmp/tmpxqkw_u69.d(77): Error: use `real` instead of `long double`

    /tmp/tmpxqkw_u69.d(107): Error: use `real` instead of `long double`

    /tmp/tmpxqkw_u69.d(107): Error: use `real` instead of `long double`

    /tmp/tmpxqkw_u69.d(137): Error: use `real` instead of `long double`

    /tmp/tmpxqkw_u69.d(137): Error: use `real` instead of `long double`

    /tmp/tmpxqkw_u69.d(150): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxqkw_u69.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n    \n*/\n\
    long multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    3L\n  \
    \  \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\nGet the modulus\
    \ of two numbers x and y\n    >>> modulus(2L, 3L)\n    1L\n    >>> modulus(5L,\
    \ 7L)\n    2L\n    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nGet the absolute value of number x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n\
    \    5L\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the square root of number x\n    >>> sqrt(2L)\n    1.41421356237\n    >>> sqrt(-5L)\n\
    \    -1.41421356237\n    \n*/\ndouble sqrt(double x) \n{\n    return std.math.sqrt(x);\n\
    }\n/*\nGet the square root of number x\n    >>> sqrt(2L)\n    1.41421356237\n\
    \    >>> sqrt(-5L)\n    -1.41421356237\n    \n*/\ndouble sqrt(double x) \n{\n\
    \    return std.math.sqrt(x);\n}\n/*\nGet the square root of number x\n    >>>\
    \ sqrt(2L)\n    1.41421356237\n    >>> sqrt(-5L)\n    -1.41421356237\n    \n*/\n\
    double sqrt(double x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet the square\
    \ root of number x\n    >>> sqrt(2L)\n    1.41421356237\n    >>> sqrt(-5L)\n \
    \   -1.41421356237\n    \n*/\ndouble sqrt(double x) \n{\n    return std.math.sqrt(x);\n\
    }\n/*\nGet the square root of number x\n    >>> sqrt(2L)\n    1.41421356237\n\
    \    >>> sqrt(-5L)\n    -1.41421356237\n    \n*/\ndouble sqrt(double x) \n{\n\
    \    return std.math.sqrt(x);\n}\n/*\nGet the square root of number x\n    >>>\
    \ sqrt(2L)\n    1.41421356237\n    >>> sqrt(-5L)\n    -1.41421356237\n    \n*/\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n\
    \    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n\
    \    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n\
    }\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163958
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    6L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    2L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the remainder of x divided by y\n    >>> remainder(2L, 3L)\n    1L\n    >>>\
    \ remainder(5L, 7L)\n    2L\n    \n*/\nlong remainder(long x, long y) \n{\n  \
    \  return x % y;\n}\n/*\nGet the sign of x\n    >>> sign(1L)\n    1L\n    >>>\
    \ sign(-2L)\n    -1L\n    \n*/\nlong sign(long x) \n{\n    return x < 0 ? -1L\
    \ : 1L;\n}\n/*\nGet the absolute value of x\n    >>> abs(1L)\n    1L\n    >>>\
    \ abs(-2L)\n    2L\n    \n*/\nlong abs(long x) \n{\n    return x > 0 ? x : -x;\n\
    }\n/*\nGet the floor of x\n    >>> floor(1L)\n    1L\n    >>> floor(-2L)\n   \
    \ -1L\n    \n*/\nlong floor(long x) \n{\n    return x < 0 ? x + 1L : x;\n}\n/*\n\
    Get the ceiling of x\n    >>> ceil(1L)\n    2L\n    >>> ceil(-2L)\n    -1L\n \
    \   \n*/\nlong ceil(long x) \n{\n    return x < 0 ? x - 1L : x;\n}\n/*\nGet the\
    \ absolute value of the square root of x\n    >>> sqrt(1L)\n    1L\n    >>> sqrt(-2L)\n\
    \    -1L\n    \n*/\nlong sqrt(long x) \n{\n    return x < 0 ? -sqrt(-x) : sqrt(x);\n\
    }\n/*\nGet the floor of the square root of x\n    >>> floor(sqrt(1L))\n    1L\n\
    \    >>> floor(sqrt(-2L))\n    -1L\n    \n*/\nlong floor(long x) \n{\n    return\
    \ x < 0 ? -floor(-x) : floor(x);\n}\n/*\nGet the ceiling of the square root of\
    \ x\n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L)\
    \ == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L)\
    \ == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L)\
    \ == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp4nta79o6.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4nta79o6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    -1L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    42L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the absolute value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-2L)\n    2L\n\
    \    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the modulus\
    \ of x and y\n    >>> modulus(2L, 3L)\n    1L\n    >>> modulus(5L, 7L)\n    3L\n\
    \    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n}\n/*\nGet the\
    \ remainder of x and y\n    >>> remainder(2L, 3L)\n    2L\n    >>> remainder(5L,\
    \ 7L)\n    1L\n    \n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nGet the floor of x\n    >>> floor(2L)\n    2L\n    >>> floor(-2L)\n-2L\n\
    \    \n*/\nlong floor(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the\
    \ ceiling of x\n    >>> ceil(2L)\n    2L\n    >>> ceil(-2L)\n-1L\n    \n*/\nlong\
    \ ceil(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the round of x\n  \
    \  >>> round(2L)\n    2L\n    >>> round(-2L)\n-1L\n    \n*/\nlong round(long x)\
    \ \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the floor of x\n    >>> floor(2L)\n\
    \    2L\n    >>> floor(-2L)\n-2L\n    \n*/\nlong floor(long x) \n{\n    return\
    \ x < 0 ? -x : x;\n}\n/*\nGet the ceiling of x\n    >>> ceil(2L)\n    2L\n   \
    \ >>> ceil(-2L)\n-1L\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpymhw5i7e.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpymhw5i7e.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> sub(2L, 3L)\n    1L\n    >>> sub(5L, 7L)\n    3L\n    \n*/\nlong sub(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> mul(3L, 5L)\n    15L\n    >>> mul(4L, 7L)\n    42L\n    \n*/\nlong mul(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ div(2L, 3L)\n    1L\n    >>> div(5L, 7L)\n    2L\n    \n*/\nlong div(long x,\
    \ long y) \n{\n    return x / y;\n}\n/*\nGet the absolute value of x\n    >>>\
    \ abs(-5)\n    5\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n\
    }\n/*\nGet the floor of x\n    >>> floor(3.5)\n    3\n    \n*/\nlong floor(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the ceiling of x\n    >>> ceil(3.5)\n\
    \    4\n    \n*/\nlong ceil(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the natural logarithm of x\n    >>> log(3.5)\n    1.6094379124341\n    \n*/\n\
    double log(double x) \n{\n    return std::log(x);\n}\n/*\nGet the square root\
    \ of x\n    >>> sqrt(3.5)\n    1.4142135623731\n    \n*/\ndouble sqrt(double x)\
    \ \n{\n    return std::sqrt(x);\n}\n/*\nGet the reciprocal of x\n    >>> recip(3.5)\n\
    \    0.5\n    \n*/\ndouble recip(double x) \n{\n    return 1.0 / x;\n}\n/*\nGet\
    \ the sine of x\n    >>> sin(3.5)\n    0.841470984807897\n    \n*/\ndouble sin(double\
    \ x) \n{\n    return std::sin(x);\n}\n/*\nGet the cosine of x\n    >>> cos(3.5)\n\
    \    -0.41614683654714\n    \n*/\ndouble cos(double x) \n{\n    return std::cos(x);\n\
    }\n/*\nGet the tangent of x\n    >>> tan(3.5)\n    -0.577215664901532\n    \n\
    */\ndouble tan(double x) \n{\n    return std::tan(x);\n}\n/*\nGet the arc sine\
    \ of x\n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp40zh0sk_.d(89): Error: found `:` when expecting `;` following `return`
    statement

    /tmp/tmp40zh0sk_.d(89): Error: found `:` instead of statement

    /tmp/tmp40zh0sk_.d(99): Error: found `:` when expecting `;` following `return`
    statement

    /tmp/tmp40zh0sk_.d(99): Error: found `:` instead of statement

    /tmp/tmp40zh0sk_.d(119): Error: found `:` when expecting `;` following `return`
    statement

    /tmp/tmp40zh0sk_.d(119): Error: found `:` instead of statement

    /tmp/tmp40zh0sk_.d(129): Error: found `:` when expecting `;` following `return`
    statement

    /tmp/tmp40zh0sk_.d(129): Error: found `:` instead of statement

    /tmp/tmp40zh0sk_.d(139): Error: found `:` when expecting `;` following `return`
    statement

    /tmp/tmp40zh0sk_.d(139): Error: found `:` instead of statement

    /tmp/tmp40zh0sk_.d(141): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp40zh0sk_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    -1L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    42L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    2L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulus of two numbers x and y\n    >>> modulus(2L, 3L)\n    1L\n    >>> modulus(5L,\
    \ 7L)\n    2L\n    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nCompare two numbers x and y\n    >>> compare(2L, 3L)\n    1L\n    >>> compare(5L,\
    \ 7L)\n    1L\n    \n*/\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163958
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    42L\n    \n*/\n\
    long multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    3L\n  \
    \  \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\nGet the absolute\
    \ value of a number\n    >>> abs(1L)\n    1L\n    >>> abs(-1L)\n    1L\n    \n\
    */\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the modulus of\
    \ a number\n    >>> modulus(1L, 2L)\n    1L\n    >>> modulus(1L, 3L)\n    0L\n\
    \    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n}\n/*\nGet the\
    \ remainder of a number\n    >>> remainder(1L, 2L)\n    1L\n    >>> remainder(1L,\
    \ 3L)\n    2L\n    \n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nGet the floor of a number\n    >>> floor(1L)\n    1L\n    >>> floor(-1L)\n\
    -1L\n    \n*/\nlong floor(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the ceiling of a number\n    >>> ceil(1L)\n    1L\n    >>> ceil(-1L)\n-1L\n\
    \    \n*/\nlong ceil(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the square\
    \ root of a number\n    >>> sqrt(1L)\n    1L\n    >>> sqrt(-1L)\n-1L\n    \n*/\n\
    long sqrt(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the square root\
    \ of a number\n    >>> sqrt(1L)\n    1L\n    >>> sqrt(-1L)\n-1L\n    \n*/\nlong\
    \ sqrt(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the square root of\
    \ a number\n    >>> sqrt(1L)\n    1L\n    >>> sqrt(-1L)\n-1L\n    \n*/\nlong sqrt(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the square root of a number\n\
    \    >>> sqrt(1L)\n    1L\n    >>> sqrt(-1L)\n-1L\n    \n*/\nlong sqrt(long x)\
    \ \n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L)\
    \ == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L)\
    \ == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L)\
    \ == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzpqi9tsd.d(145): Error: semicolon expected following function declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzpqi9tsd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    42L\n    \n*/\n\
    long multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    2L\n    >>> divide(5L, 7L)\n    3L\n  \
    \  \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\nGet the remainder\
    \ of dividing x by y\n    >>> remainder(2L, 3L)\n    1L\n    >>> remainder(5L,\
    \ 7L)\n    2L\n    \n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nGet the absolute value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n\
    \    5L\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the sign of x\n    >>> sign(-2L)\n    -1L\n    >>> sign(-5L)\n    1L\n    \n\
    */\nlong sign(long x) \n{\n    return x < 0 ? -1 : 1;\n}\n/*\nGet the absolute\
    \ value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong\
    \ abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the sign of x\n    >>>\
    \ sign(-2L)\n    -1L\n    >>> sign(-5L)\n    1L\n    \n*/\nlong sign(long x) \n\
    {\n    return x < 0 ? -1 : 1;\n}\n/*\nGet the absolute value of x\n    >>> abs(2L)\n\
    \    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long x) \n{\n    return\
    \ x < 0 ? -x : x;\n}\n/*\nGet the sign of x\n    >>> sign(-2L)\n    -1L\n    >>>\
    \ sign(-5L)\n    1L\n    \n*/\nlong sign(long x) \n{\n    return x < 0 ? -1 :\
    \ 1;\n}\n/*\nGet the absolute value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n\
    \    5L\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the sign of x\n    >>> sign(-2L)\n    -1L\n    >>> sign(-5L)\n    1L\n    \n\
    */\nlong sign(long x) \n{\n    return x < 0 ? \nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpz0_5fzmx.d(146): Error: expression expected, not `unittest`

    /tmp/tmpz0_5fzmx.d(147): Error: found `{` when expecting `:`

    /tmp/tmpz0_5fzmx.d(148): Error: expression expected, not `alias`

    /tmp/tmpz0_5fzmx.d(148): Error: found `candidate` when expecting `;` following
    `return` statement

    /tmp/tmpz0_5fzmx.d(148): Error: found `=` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz0_5fzmx.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long add(long long\
    \ x, long long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n   \
    \ >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong double\
    \ add(long double x, long double y) \n{\n    return x + y;\n}\n/*\nAdd two numbers\
    \ x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\n\
    float add(float x, float y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and\
    \ y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\ndouble\
    \ add(double x, double y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and\
    \ y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong\
    \ long int add(long long int x, long long int y) \n{\n    return x + y;\n}\n/*\n\
    Add two numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n  \
    \  12L\n    \n*/\nlong long unsigned int add(long long unsigned int x, long long\
    \ unsigned int y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n   \
    \ >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long long\
    \ add(long long long x, long long long y) \n{\n    return x + y;\n}\n/*\nAdd two\
    \ numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n\
    \    \n*/\nlong long long long add(long long long long x, long long long long\
    \ y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L, 3L)\n\
    \    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nunsigned long add(unsigned long\
    \ x, unsigned long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nunsigned\
    \ long long add(unsigned long long x, \nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8ky959pa.d(23): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmp8ky959pa.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp8ky959pa.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp8ky959pa.d(35): Error: use `real` instead of `long double`

    /tmp/tmp8ky959pa.d(35): Error: use `real` instead of `long double`

    /tmp/tmp8ky959pa.d(35): Error: use `real` instead of `long double`

    /tmp/tmp8ky959pa.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp8ky959pa.d(71): Error: no identifier for declarator `long`

    /tmp/tmp8ky959pa.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp8ky959pa.d(71): Error: found `int` when expecting `)`

    /tmp/tmp8ky959pa.d(71): Error: semicolon expected following function declaration

    /tmp/tmp8ky959pa.d(71): Error: no identifier for declarator `x`

    /tmp/tmp8ky959pa.d(71): Error: declaration expected, not `,`

    /tmp/tmp8ky959pa.d(74): Error: unrecognized declaration

    Fa'
  stdout: ''
  timestamp: 1660163957
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long add(long long\
    \ x, long long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n   \
    \ >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\ndouble add(double\
    \ x, double y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>>\
    \ add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nfloat add(float\
    \ x, float y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>>\
    \ add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong double add(long\
    \ double x, long double y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and\
    \ y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg4rgiojj.d(23): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpg4rgiojj.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpg4rgiojj.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpg4rgiojj.d(59): Error: use `real` instead of `long double`

    /tmp/tmpg4rgiojj.d(59): Error: use `real` instead of `long double`

    /tmp/tmpg4rgiojj.d(59): Error: use `real` instead of `long double`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg4rgiojj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163958
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long add(long long\
    \ x, long long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n\
    \    >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nSubtract two numbers\
    \ x and y\n    >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n\
    \    \n*/\nlong long subtract(long long x, long long y) \n{\n    return x - y;\n\
    }\n/*\nMultiply two numbers x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>>\
    \ multiply(5L, 7L)\n    42L\n    \n*/\nlong multiply(long x, long y) \n{\n   \
    \ return x * y;\n}\n/*\nMultiply two numbers x and y\n    >>> multiply(2L, 3L)\n\
    \    6L\n    >>> multiply(5L, 7L)\n    42L\n    \n*/\nlong long multiply(long\
    \ long x, long long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and\
    \ y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    3L\n    \n*/\n\
    long divide(long x, long y) \n{\n    return x / y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    3L\n  \
    \  \n*/\nlong long divide(long long x, long long y) \n{\n    return x / y;\n}\n\
    /*\nModulus of two numbers x and y\n    >>> modulus(2L, 3L)\n    1L\n    >>> modulus(5L,\
    \ 7L)\n    2L\n    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nModulus of two numbers x and y\n    >>> modulus(2L, 3L)\n    1L\n    >>>\
    \ modulus(5L, 7L)\n    2L\n    \n*/\nlong long modulus(long long x, long long\
    \ y) \n{\n    return x % y;\n}\n/*\nCompare two numbers x and y\n    >>> compare(2L,\
    \ 3L)\n    1L\n    >>> compare(5\nunittest\n{\n    alias candidate = add;\n\n\
    \    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpfvd_9we7.d(23): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpfvd_9we7.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpfvd_9we7.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpfvd_9we7.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpfvd_9we7.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpfvd_9we7.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpfvd_9we7.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpfvd_9we7.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpfvd_9we7.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpfvd_9we7.d(95): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpfvd_9we7.d(95): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpfvd_9we7.d(95): Error: use `long` for a 64 bit integer instead of `lon'
  stdout: ''
  timestamp: 1660163957
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long add(long long\
    \ x, long long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n   \
    \ >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong double\
    \ add(long double x, long double y) \n{\n    return x + y;\n}\n/*\nAdd two numbers\
    \ x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\n\
    float add(float x, float y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and\
    \ y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\ndouble\
    \ add(double x, double y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and\
    \ y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong\
    \ double add(long double x, long double y) \n{\n    return x + y;\n}\n/*\nAdd\
    \ two numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n\
    \    \n*/\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpurudgzsg.d(23): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpurudgzsg.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpurudgzsg.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpurudgzsg.d(35): Error: use `real` instead of `long double`

    /tmp/tmpurudgzsg.d(35): Error: use `real` instead of `long double`

    /tmp/tmpurudgzsg.d(35): Error: use `real` instead of `long double`

    /tmp/tmpurudgzsg.d(71): Error: use `real` instead of `long double`

    /tmp/tmpurudgzsg.d(71): Error: use `real` instead of `long double`

    /tmp/tmpurudgzsg.d(71): Error: use `real` instead of `long double`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpurudgzsg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    6L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the remainder of dividing x by y\n    >>> remainder(2L, 3L)\n    1L\n    >>>\
    \ remainder(5L, 7L)\n    2L\n    \n*/\nlong remainder(long x, long y) \n{\n  \
    \  return x % y;\n}\n/*\nGet the absolute value of x\n    >>> abs(2L)\n    2L\n\
    \    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ?\
    \ -x : x;\n}\n/*\nGet the sign of x\n    >>> sign(2L)\n    1L\n    >>> sign(-5L)\n\
    \    -1L\n    \n*/\nlong sign(long x) \n{\n    return x < 0 ? -1 : 1;\n}\n/*\n\
    Get the floor of x\n    >>> floor(2L)\n    2L\n    >>> floor(-5L)\n    -5L\n \
    \   \n*/\nlong floor(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the ceiling\
    \ of x\n    >>> ceil(2L)\n    3L\n    >>> ceil(-5L)\n    -5L\n    \n*/\nlong ceil(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the absolute value of x\n   \
    \ >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long x) \n\
    {\n    return x < 0 ? -x : x;\n}\n/*\nGet the sign of x\n    >>> sign(2L)\n  \
    \  1L\n    >>> sign(-5L)\n    -1L\n    \n*/\nlong sign(long x) \n{\n    return\
    \ x < 0 ? -1 : 1;\n}\n/*\nGet the floor of x\n    >>> floor(2L)\n    2L\n    >>>\
    \ floor(-5L)\n    -5L\n    \n*/\nlong \nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa897xgk3.d(144): Error: no identifier for declarator `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa897xgk3.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    2L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the absolute value of a number\n    >>> abs(-1L)\n    1L\n    >>> abs(1L)\n\
    \    1L\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the floor of a number\n    >>> floor(-1L)\n    -1L\n    >>> floor(-2L)\n   \
    \ 0L\n    >>> floor(1L)\n    1L\n    \n*/\nlong floor(long x) \n{\n    return\
    \ x < 0 ? -x : x;\n}\n/*\nGet the ceiling of a number\n    >>> ceil(-1L)\n   \
    \ 0L\n    >>> ceil(-2L)\n    1L\n    >>> ceil(-3L)\n    -1L\n    >>> ceil(-4L)\n\
    \    -2L\n    >>> ceil(-5L)\n    -3L\n    \n*/\nlong ceil(long x) \n{\n    return\
    \ x < 0 ? -x : x;\n}\n/*\nGet the remainder of a number divided by another\n \
    \   >>> remainder(-1L, 2L)\n    1L\n    >>> remainder(1L, 2L)\n    0L\n    \n\
    */\nlong remainder(long x, long y) \n{\n    return x % y;\n}\n/*\nGet the modulus\
    \ of a number divided by another\n    >>> modulus(-1L, 2L)\n    1L\n    >>> modulus(1L,\
    \ 2L)\n    1L\n    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nGet the absolute value of a number\n    >>> abs(-1L)\n    1L\n    >>> abs(1L)\n\
    \    1L\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the floor of a number\n    >>> floor(-1L)\n    -1L\n    >>> floor(-2L)\n   \
    \ 0L\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L)\
    \ == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L)\
    \ == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L)\
    \ == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa6ago2jn.d(131): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa6ago2jn.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long add(long long\
    \ x, long long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n\
    \    >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nSubtract two numbers\
    \ x and y\n    >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n\
    \    \n*/\nlong long subtract(long long x, long long y) \n{\n    return x - y;\n\
    }\n/*\nMultiply two numbers x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>>\
    \ multiply(5L, 7L)\n    42L\n    \n*/\nlong multiply(long x, long y) \n{\n   \
    \ return x * y;\n}\n/*\nMultiply two numbers x and y\n    >>> multiply(2L, 3L)\n\
    \    6L\n    >>> multiply(5L, 7L)\n    42L\n    \n*/\nlong long multiply(long\
    \ long x, long long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and\
    \ y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    2L\n    \n*/\n\
    long divide(long x, long y) \n{\n    return x / y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    2L\n  \
    \  \n*/\nlong long divide(long long x, long long y) \n{\n    return x / y;\n}\n\
    /*\nCompare two numbers x and y\n    >>> compare(2L, 3L)\n    1\n    >>> compare(5L,\
    \ 7L)\n    1\n    \n*/\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpiwkgpldw.d(23): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpiwkgpldw.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpiwkgpldw.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpiwkgpldw.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpiwkgpldw.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpiwkgpldw.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpiwkgpldw.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpiwkgpldw.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpiwkgpldw.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpiwkgpldw.d(95): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpiwkgpldw.d(95): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpiwkgpldw.d(95): Error: use `long` for a 64 bit integer instead of `lon'
  stdout: ''
  timestamp: 1660163957
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long add(long long\
    \ x, long long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n\
    \    >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    -1L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nSubtract two numbers\
    \ x and y\n    >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    -1L\n\
    \    \n*/\nlong long subtract(long long x, long long y) \n{\n    return x - y;\n\
    }\n/*\nMultiply two numbers x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>>\
    \ multiply(5L, 7L)\n    42L\n    \n*/\nlong multiply(long x, long y) \n{\n   \
    \ return x * y;\n}\n/*\nMultiply two numbers x and y\n    >>> multiply(2L, 3L)\n\
    \    6L\n    >>> multiply(5L, 7L)\n    42L\n    \n*/\nlong long multiply(long\
    \ long x, long long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and\
    \ y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    3L\n    \n*/\n\
    long divide(long x, long y) \n{\n    return x / y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    3L\n  \
    \  \n*/\nlong long divide(long long x, long long y) \n{\n    return x / y;\n}\n\
    /*\nGet the absolute value of x\n    >>> abs(-1L)\n    1L\n    >>> abs(1L)\n \
    \   1L\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the absolute value of x\n    >>> abs(-1L)\n    1L\n    >>> abs(1L)\n    1L\n\
    \    \n*/\nlong long abs(long long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\n\
    Get the remainder of x divided by y\n    >>> remainder(2L, 3L)\n    1L\n    >>>\
    \ remainder(5L, 7L)\n    3L\n    \n*/\nlong remainder(long x, long y) \n{\n  \
    \  return x % y;\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpc1nh0yvb.d(23): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpc1nh0yvb.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpc1nh0yvb.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpc1nh0yvb.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpc1nh0yvb.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpc1nh0yvb.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpc1nh0yvb.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpc1nh0yvb.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpc1nh0yvb.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpc1nh0yvb.d(95): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpc1nh0yvb.d(95): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpc1nh0yvb.d(95): Error: use `long` for a 64 bit integer instead of `lon'
  stdout: ''
  timestamp: 1660163957
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long add(long long\
    \ x, long long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n   \
    \ >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong double\
    \ add(long double x, long double y) \n{\n    return x + y;\n}\n/*\nAdd two numbers\
    \ x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\n\
    float add(float x, float y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and\
    \ y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\ndouble\
    \ add(double x, double y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and\
    \ y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong\
    \ double add(long double x, long double y) \n{\n    return x + y;\n}\n/*\nAdd\
    \ two numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n\
    \    \n*/\nfloat add(float x, float y) \n{\n    return x + y;\n}\n/*\nAdd two\
    \ numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n\
    \    \n*/\ndouble add(double x, double y) \n{\n    return x + y;\n}\n/*\nAdd two\
    \ numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n\
    \    \n*/\nlong double add(long double x, long double y) \n{\n    return x + y;\n\
    }\n/*\nAdd two numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n\
    \    12L\n    \n*/\nfloat add(float x, float y) \n{\n    return x + y;\n}\n/*\n\
    Add two numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n  \
    \  12L\n    \n*/\ndouble add(double x, double y) \n{\n    return x + y;\n}\n/*\n\
    Add two numbers x and y\n    >>> add(2L, \nunittest\n{\n    alias candidate =\
    \ add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) ==\
    \ 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) ==\
    \ 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdbcemqk_.d(23): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpdbcemqk_.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpdbcemqk_.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpdbcemqk_.d(35): Error: use `real` instead of `long double`

    /tmp/tmpdbcemqk_.d(35): Error: use `real` instead of `long double`

    /tmp/tmpdbcemqk_.d(35): Error: use `real` instead of `long double`

    /tmp/tmpdbcemqk_.d(71): Error: use `real` instead of `long double`

    /tmp/tmpdbcemqk_.d(71): Error: use `real` instead of `long double`

    /tmp/tmpdbcemqk_.d(71): Error: use `real` instead of `long double`

    /tmp/tmpdbcemqk_.d(107): Error: use `real` instead of `long double`

    /tmp/tmpdbcemqk_.d(107): Error: use `real` instead of `long double`

    /tmp/tmpdbcemqk_.d(107): Error: use `real` instead of `long double`

    /tmp/tmpdbcemqk_.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdbcemqk_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the remainder of dividing two numbers x and y\n    >>> remainder(2L, 3L)\n\
    \    1L\n    >>> remainder(5L, 7L)\n    2L\n    \n*/\nlong remainder(long x, long\
    \ y) \n{\n    return x % y;\n}\n/*\nGet the sign of x\n    >>> sign(1L)\n    1L\n\
    \    >>> sign(2L)\n    1L\n    \n*/\nlong sign(long x) \n{\n    return x < 0 ?\
    \ -1 : (x > 0 ? 1 : 0);\n}\n/*\nGet the absolute value of x\n    >>> abs(1L)\n\
    \    1L\n    >>> abs(2L)\n    2L\n    \n*/\nlong abs(long x) \n{\n    return x\
    \ >= 0 ? x : -x;\n}\n/*\nGet the floor of x\n    >>> floor(1L)\n    1L\n    >>>\
    \ floor(2L)\n    1L\n    \n*/\nlong floor(long x) \n{\n    return x < 0 ? x +\
    \ 1 : x;\n}\n/*\nGet the ceiling of x\n    >>> ceil(1L)\n    1L\n    >>> ceil(2L)\n\
    \    2L\n    \n*/\nlong ceil(long x) \n{\n    return x < 0 ? x - 1 : x;\n}\n/*\n\
    Get the floor of x\n    >>> trunc(1L)\n    1L\n    >>> trunc(2L)\n    1L\n   \
    \ \n*/\nlong trunc(long x) \n{\n    return x < 0 ? x : x;\n}\n/*\nGet the ceiling\
    \ of x\n    >>> round(1L)\n    1L\n    >>> round(2L)\n    1L\n    \n*/\nlong round(long\
    \ x) \n{\n    return x < 0 ? x + 0.5 : x;\n}\n/*\nGet the floor of x\n    >>>\
    \ trunc(1L)\n    1L\n    >>> trunc(2L)\n    1L\n    \n*/\n\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj8i95mtb.d(133): Error: cannot implicitly convert expression `x
    < 0L ? cast(double)x + 0.5 : cast(double)x` of type `double` to `long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj8i95mtb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the absolute value of x\n    >>> abs(1L)\n    1L\n    >>> abs(-1L)\n    1L\n\
    \    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the floor\
    \ of x\n    >>> floor(1L)\n    1L\n    >>> floor(-1L)\n-1L\n    \n*/\nlong floor(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the ceiling of x\n    >>> ceil(1L)\n\
    1L\n    >>> ceil(-1L)\n-1L\n    \n*/\nlong ceil(long x) \n{\n    return x < 0\
    \ ? -x : x;\n}\n/*\nGet the remainder of x divided by y\n    >>> remainder(1L,\
    \ 3L)\n    2L\n    >>> remainder(2L, 3L)\n    1L\n    \n*/\nlong remainder(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nGet the remainder of x divided by\
    \ y with rounding\n    >>> remainder(1L, 3L, std.math.RoundingMode.FLOOR)\n  \
    \  2L\n    >>> remainder(2L, 3L, std.math.RoundingMode.FLOOR)\n    1L\n    \n\
    */\nlong remainder(long x, long y, RoundingMode roundingMode) \n{\n    return\
    \ x % y;\n}\n/*\nGet the remainder of x divided by y with rounding\n    >>> remainder(1L,\
    \ 3L, std.math.RoundingMode.CEILING)\n    1L\n    >>> remainder(2L, 3L, std.math.RoundingMode.CEILING)\n\
    \    2L\n    \n*/\nlong remainder(long x, long y, RoundingMode roundingMode) \n\
    {\n    return x % y;\n}\n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvbfp9e9l.d(107): Error: undefined identifier `RoundingMode`

    /tmp/tmpvbfp9e9l.d(119): Error: undefined identifier `RoundingMode`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvbfp9e9l.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> sub(2L, 3L)\n    1L\n    >>> sub(5L, 7L)\n    6L\n    \n*/\nlong sub(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> mul(3L, 4L)\n    12L\n    \n*/\nlong mul(long x, long y) \n{\n    return\
    \ x * y;\n}\n/*\nDivide two numbers x and y\n    >>> div(2L, 3L)\n    1L\n   \
    \ \n*/\nlong div(long x, long y) \n{\n    return x / y;\n}\n/*\nModulus two numbers\
    \ x and y\n    >>> mod(2L, 3L)\n    1L\n    \n*/\nlong mod(long x, long y) \n\
    {\n    return x % y;\n}\n/*\nCompare two numbers x and y\n    >>> cmp(3L, 4L)\n\
    \    1L\n    \n*/\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163958
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    6L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    2L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the absolute value of a number\n    >>> abs(-1L)\n    1L\n    >>> abs(1L)\n\
    \    1L\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the sign of a number\n    >>> sign(-1)\n    -1\n    >>> sign(0)\n    0\n   \
    \ \n*/\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L)\
    \ == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L)\
    \ == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L)\
    \ == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163958
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n    \n*/\n\
    long multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    3L\n  \
    \  \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\nGet the absolute\
    \ value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-2L)\n    2L\n    \n*/\nlong\
    \ abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the floor of x\n   \
    \ >>> floor(2L)\n    2L\n    >>> floor(-2L)\n-2L\n    \n*/\nlong floor(long x)\
    \ \n{\n    return x < 0 ? x + 1 : x;\n}\n/*\nGet the ceiling of x\n    >>> ceil(2L)\n\
    \    2L\n    >>> ceil(-2L)\n-1L\n    \n*/\nlong ceil(long x) \n{\n    return x\
    \ < 0 ? x - 1 : x;\n}\n/*\nGet the remainder of x divided by y\n    >>> remainder(2L,\
    \ 3L)\n    1L\n    >>> remainder(5L, 7L)\n    3L\n    \n*/\nlong remainder(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nGet the remainder of x divided by\
    \ y with integer truncation\n    >>> remainder(2L, 3L)\n    1L\n    >>> remainder(5L,\
    \ 7L)\n    3L\n    \n*/\nlong remainderi(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nGet the absolute value of x raised to the power y\n    >>> power(2L, 3L)\n\
    \    8L\n    >>> power(5L, 7L)\n    15L\n    \n*/\nlong power(long x, long y)\
    \ \n{\n    return x * pow(x, y);\n}\n/*\nGet the absolute value of x raised to\
    \ the power y with integer truncation\n    >>> power(2L, 3L)\n    8L\n    >>>\
    \ power(5L, 7L)\n    15L\n    \n*/\nlong poweri(long x, long y) \n{\n    return\
    \ x * pow(x, y);\n}\n/*\nGet the square root of x\n    >>> sqrt(2L)\n    1L\n\
    \    >>> sqrt(-2L)\n    1L\n    \n*/\nlong sqrt(long x) \n{\n    return x < 0\
    \ ? -sqrt(-x) : sqrt(x);\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9mz7y3zp.d(134): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9mz7y3zp.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long add(long long\
    \ x, long long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n   \
    \ >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong double\
    \ add(long double x, long double y) \n{\n    return x + y;\n}\n/*\nAdd two numbers\
    \ x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\n\
    double add(double x, double y) \n{\n    return x + y;\n}\n/*\nAdd two numbers\
    \ x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\n\
    float add(float x, float y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and\
    \ y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong\
    \ double add(long double x, long double y) \n{\n    return x + y;\n}\n/*\nAdd\
    \ two numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n\
    \    \n*/\nfloat add(float x, float y) \n{\n    return x + y;\n}\n/*\nAdd two\
    \ numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n\
    \    \n*/\ndouble add(double x, double y) \n{\n    return x + y;\n}\n/*\nAdd two\
    \ numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n\
    \    \n*/\nlong double add(long double x, long double y) \n{\n    return x + y;\n\
    }\n/*\nAdd two numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n\
    \    12L\n    \n*/\nfloat add(float x, float y) \n{\n    return x + y;\n}\n/*\n\
    Add two numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n  \
    \  12L\n    \n*/\ndouble add(double x, double y) \n{\n    return x + y;\n}\n/*\n\
    Add two numbers x and y\n    >>> add(2L, \nunittest\n{\n    alias candidate =\
    \ add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) ==\
    \ 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) ==\
    \ 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp42oghhk2.d(23): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmp42oghhk2.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp42oghhk2.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp42oghhk2.d(35): Error: use `real` instead of `long double`

    /tmp/tmp42oghhk2.d(35): Error: use `real` instead of `long double`

    /tmp/tmp42oghhk2.d(35): Error: use `real` instead of `long double`

    /tmp/tmp42oghhk2.d(71): Error: use `real` instead of `long double`

    /tmp/tmp42oghhk2.d(71): Error: use `real` instead of `long double`

    /tmp/tmp42oghhk2.d(71): Error: use `real` instead of `long double`

    /tmp/tmp42oghhk2.d(107): Error: use `real` instead of `long double`

    /tmp/tmp42oghhk2.d(107): Error: use `real` instead of `long double`

    /tmp/tmp42oghhk2.d(107): Error: use `real` instead of `long double`

    /tmp/tmp42oghhk2.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp42oghhk2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    6L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    42L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    2L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the absolute value of a number\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n\
    \    5L\n    \n*/\nlong abs(long x) \n{\n    return x > 0 ? x : -x;\n}\n/*\nGet\
    \ the modulus of a number\n    >>> modulus(2L, 3L)\n    1L\n    >>> modulus(5L,\
    \ 7L)\n    2L\n    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nGet the remainder of a number divided by another\n    >>> remainder(2L,\
    \ 3L)\n    1L\n    >>> remainder(5L, 7L)\n    2L\n    \n*/\nlong remainder(long\
    \ x, long y) \n{\n    return x % y;\n}\n/*\nGet the sign of a number\n    >>>\
    \ sign(2L)\n    1L\n    >>> sign(-5L)\n    -1L\n    \n*/\nlong sign(long x) \n\
    {\n    return x < 0 ? -1 : 1;\n}\n/*\nGet the absolute value of a number\n   \
    \ >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long x) \n\
    {\n    return x > 0 ? x : -x;\n}\n/*\nGet the modulus of a number\n    >>> modulus(2L,\
    \ 3L)\n    1L\n    >>> modulus(5L, 7L)\n    2L\n    \n*/\nlong modulus(long x,\
    \ long y) \n{\n    return x % y;\n}\n/*\nGet the remainder of a number divided\
    \ by another\n    >>> remainder(2L, 3L)\n    1L\n    >>> remainder(5L, 7L)\n \
    \   2L\n    \n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n}\n/*\n\
    Get the sign of a \nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpumdn0otf.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpumdn0otf.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    2L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the square root of a number\n    >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n\
    \    2.0\n    \n*/\ndouble sqrt(double x) \n{\n    return std.math.sqrt(x);\n\
    }\n/*\nGet the square root of a number\n    >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n\
    \    2.0\n    \n*/\nfloat sqrt(float x) \n{\n    return std.math.sqrt(x);\n}\n\
    /*\nGet the square root of a number\n    >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n\
    \    2.0\n    \n*/\nlong double sqrt(long double x) \n{\n    return std.math.sqrt(x);\n\
    }\n/*\nGet the square root of a number\n    >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n\
    \    2.0\n    \n*/\ndouble sqrt(double x) \n{\n    return std.math.sqrt(x);\n\
    }\n/*\nGet the square root of a number\n    >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n\
    \    2.0\n    \n*/\nfloat sqrt(float x) \n{\n    return std.math.sqrt(x);\n}\n\
    /*\nGet the square root of a number\n    >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n\
    \    2.0\n    \n*/\nlong double sqrt(long double x) \n{\n    return std.math.sqrt(x);\n\
    }\n/*\nGet the square root of a number\n    >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n\
    \    2.0\n    \n*/\ndouble sqrt(double x) \n{\n    return std.math.sqrt(x);\n\
    }\n/*\nGet the square root of a number\n    >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n\
    \    2.0\n    \n*/\nfloat sqrt(float x) \n{\n    return std.math.sqrt(x);\n}\n\
    /*\nGet the square root \nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpkrownw9r.d(83): Error: use `real` instead of `long double`

    /tmp/tmpkrownw9r.d(83): Error: use `real` instead of `long double`

    /tmp/tmpkrownw9r.d(119): Error: use `real` instead of `long double`

    /tmp/tmpkrownw9r.d(119): Error: use `real` instead of `long double`

    /tmp/tmpkrownw9r.d(147): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkrownw9r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long add(long long\
    \ x, long long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n   \
    \ >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3gtbzk_7.d(23): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmp3gtbzk_7.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp3gtbzk_7.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3gtbzk_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163958
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    -1L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    42L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    2L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the absolute value of x\n    >>> abs(1L)\n    1L\n    >>> abs(-1L)\n    1L\n\
    \    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the modulus\
    \ of x and y\n    >>> modulus(1L, 3L)\n    1L\n    >>> modulus(3L, 3L)\n    0L\n\
    \    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n}\n/*\nGet the\
    \ remainder of x and y\n    >>> remainder(1L, 3L)\n    2L\n    >>> remainder(3L,\
    \ 3L)\n    1L\n    \n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nGet the floor of x\n    >>> floor(1L)\n    1L\n    >>> floor(-1L)\n   \
    \ -1L\n    \n*/\nlong floor(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the ceiling of x\n    >>> ceil(1L)\n    1L\n    >>> ceil(-1L)\n    0L\n    \n\
    */\nlong ceil(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the floor of\
    \ x\n    >>> trunc(1L)\n    1L\n    >>> trunc(-1L)\n    -1L\n    \n*/\nlong trunc(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the ceiling of x\n    >>> round(1L)\n\
    \    1L\n    >>> round(-1L)\n    0L\n    \n*/\nlong round(long x) \n{\n    return\
    \ x < 0 ? -x : x;\n}\n/*\nGet the floor of x\n    >>> floor(1L)\n    1L\n    >>>\
    \ floor(-1L)\n    -1L\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplsus1yuu.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplsus1yuu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long add(long long\
    \ x, long long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n\
    \    >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nSubtract two numbers\
    \ x and y\n    >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n\
    \    \n*/\nlong long subtract(long long x, long long y) \n{\n    return x - y;\n\
    }\n/*\nMultiply two numbers x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>>\
    \ multiply(5L, 7L)\n    42L\n    \n*/\nlong multiply(long x, long y) \n{\n   \
    \ return x * y;\n}\n/*\nMultiply two numbers x and y\n    >>> multiply(2L, 3L)\n\
    \    6L\n    >>> multiply(5L, 7L)\n    42L\n    \n*/\nlong long multiply(long\
    \ long x, long long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and\
    \ y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    3L\n    \n*/\n\
    long divide(long x, long y) \n{\n    return x / y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    3L\n  \
    \  \n*/\nlong long divide(long long x, long long y) \n{\n    return x / y;\n}\n\
    /*\nCompare two numbers x and y\n    >>> compare(2L, 3L)\n    1\n    >>> compare(5L,\
    \ 7L)\n    1\n    \n*/\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsoauzoe1.d(23): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpsoauzoe1.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(95): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(95): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(95): Error: use `long` for a 64 bit integer instead of `lon'
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    42L\n    \n*/\n\
    long multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    3L\n  \
    \  \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\nGet the remainder\
    \ of x divided by y\n    >>> remainder(2L, 3L)\n    1L\n    >>> remainder(5L,\
    \ 7L)\n    2L\n    \n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nGet the absolute value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n\
    \    5L\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the sign of x\n    >>> sign(-2L)\n    -1L\n    >>> sign(-5L)\n    1L\n    \n\
    */\nlong sign(long x) \n{\n    return x < 0 ? -1 : 1;\n}\n/*\nGet the absolute\
    \ value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong\
    \ abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the sign of x\n    >>>\
    \ sign(-2L)\n    -1L\n    >>> sign(-5L)\n    1L\n    \n*/\nlong sign(long x) \n\
    {\n    return x < 0 ? -1 : 1;\n}\n/*\nGet the absolute value of x\n    >>> abs(2L)\n\
    \    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long x) \n{\n    return\
    \ x < 0 ? -x : x;\n}\n/*\nGet the sign of x\n    >>> sign(-2L)\n    -1L\n    >>>\
    \ sign(-5L)\n    1L\n    \n*/\nlong sign(long x) \n{\n    return x < 0 ? -1 :\
    \ 1;\n}\n/*\nGet the absolute value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n\
    \    5L\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the sign of x\n    >>> sign(-2L)\n    -1L\n    >>> sign(-5L)\n    1L\n    \n\
    */\nlong sign(long x) \n{\n    return x < 0 ? -1 : \nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2hnqj8xo.d(146): Error: expression expected, not `unittest`

    /tmp/tmp2hnqj8xo.d(147): Error: found `{` when expecting `;` following `return`
    statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2hnqj8xo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163958
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    6L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the absolute value of a number\n    >>> abs(-5)\n    5\n    \n*/\nlong abs(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the sign of a number\n    >>>\
    \ sign(-5)\n    -1\n    \n*/\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163958
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163958
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n    \n*/\n\
    long multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    3L\n  \
    \  \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\nGet the absolute\
    \ value of a number\n    >>> abs(-5)\n    5\n    \n*/\nlong abs(long x) \n{\n\
    \    return x < 0 ? -x : x;\n}\n/*\nGet the floor of a number\n    >>> floor(5)\n\
    \    5\n    \n*/\nlong floor(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\n\
    Get the ceiling of a number\n    >>> ceil(5)\n    6\n    \n*/\nlong ceil(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the remainder of a number divided\
    \ by another\n    >>> remainder(5, 2)\n    1\n    \n*/\nlong remainder(long x,\
    \ long y) \n{\n    return x % y;\n}\n/*\nGet the modulus of a number divided by\
    \ another\n    >>> modulus(5, 2)\n    1\n    \n*/\nlong modulus(long x, long y)\
    \ \n{\n    return x % y;\n}\n/*\nGet the sign of a number\n    >>> sign(-1)\n\
    \    1\n    \n*/\nlong sign(long x) \n{\n    return x < 0 ? -1 : 1;\n}\n/*\nGet\
    \ the absolute value of a number\n    >>> abs(-5)\n    5\n    \n*/\nlong abs(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the floor of a number\n    >>>\
    \ floor(5)\n    5\n    \n*/\nlong floor(long x) \n{\n    return x < 0 ? -x : x;\n\
    }\n/*\nGet the ceiling of a number\n    >>> ceil(5)\n    6\n    \n*/\nlong ceil(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the remainder of a number divided\
    \ by another\n    >>> remainder(5, 2)\n    1\n    \n*/\nlong remainder(long x,\
    \ long y) \n{\n    return x % y;\n}\n/*\nGet the modulus of a number divided by\
    \ another\n    >>> modulus(5, 2)\n    1\n    \n*/\nlong modulus(long x, long y)\
    \ \n{\n    return x % y;\n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxkqfdcrq.d(149): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxkqfdcrq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long add(long long\
    \ x, long long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n\
    \    >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nSubtract two numbers\
    \ x and y\n    >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n\
    \    \n*/\nlong long subtract(long long x, long long y) \n{\n    return x - y;\n\
    }\n/*\nMultiply two numbers x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>>\
    \ multiply(5L, 7L)\n    42L\n    \n*/\nlong multiply(long x, long y) \n{\n   \
    \ return x * y;\n}\n/*\nMultiply two numbers x and y\n    >>> multiply(2L, 3L)\n\
    \    6L\n    >>> multiply(5L, 7L)\n    42L\n    \n*/\nlong long multiply(long\
    \ long x, long long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and\
    \ y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    3L\n    \n*/\n\
    long divide(long x, long y) \n{\n    return x / y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    3L\n  \
    \  \n*/\nlong long divide(long long x, long long y) \n{\n    return x / y;\n}\n\
    /*\nCompare two numbers x and y\n    >>> compare(2L, 3L)\n    1\n    >>> compare(5L,\
    \ 7L)\n    1\n    \n*/\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsoauzoe1.d(23): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpsoauzoe1.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(95): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(95): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsoauzoe1.d(95): Error: use `long` for a 64 bit integer instead of `lon'
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    -1L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    42L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the modulus of two numbers x and y\n    >>> modulus(2L, 3L)\n    1L\n    >>>\
    \ modulus(5L, 7L)\n    2L\n    \n*/\nlong modulus(long x, long y) \n{\n    return\
    \ x % y;\n}\n/*\nGet the remainder of x divided by y\n    >>> remainder(2L, 3L)\n\
    \    1L\n    >>> remainder(5L, 7L)\n    2L\n    \n*/\nlong remainder(long x, long\
    \ y) \n{\n    return x % y;\n}\n/*\nGet the absolute value of x\n    >>> abs(2L)\n\
    \    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long x) \n{\n    return\
    \ x;\n}\n/*\nGet the absolute value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n\
    \    5L\n    \n*/\nlong abs(long x) \n{\n    return x;\n}\n/*\nGet the absolute\
    \ value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong\
    \ abs(long x) \n{\n    return x;\n}\n/*\nGet the absolute value of x\n    >>>\
    \ abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long x) \n{\n\
    \    return x;\n}\n/*\nGet the absolute value of x\n    >>> abs(2L)\n    2L\n\
    \    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long x) \n{\n    return x;\n}\n\
    /*\nGet the absolute value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n \
    \   5L\n    \n*/\nlong abs(long x) \n{\n    return x;\n}\n/*\nGet the absolute\
    \ value of x\n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxhv74hcz.d(147): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxhv74hcz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> sub(2L, 3L)\n    1L\n    >>> sub(5L, 7L)\n    3L\n    \n*/\nlong sub(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> mul(3L, 2L)\n    6L\n    >>> mul(4L, 7L)\n    21L\n    \n*/\nlong mul(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ div(2L, 3L)\n    1L\n    >>> div(5L, 7L)\n    2L\n    \n*/\nlong div(long x,\
    \ long y) \n{\n    return x / y;\n}\n/*\nReturn x to the power of y\n    >>> pow(3L,\
    \ 2L)\n    9L\n    >>> pow(3L, 3L)\n    27L\n    \n*/\nlong pow(long x, long y)\
    \ \n{\n    return pow(x, y);\n}\n/*\nReturn x to the power of y modulo m\n   \
    \ >>> pow(3L, 2L, 2L)\n    9L\n    >>> pow(3L, 3L, 2L)\n    27L\n    \n*/\nlong\
    \ pow(long x, long y, long m) \n{\n    return pow(x, y);\n}\n/*\nReturn x to the\
    \ power of y modulo m and return the remainder\n    >>> pow(3L, 2L, 2L)\n    9L\n\
    \    >>> pow(3L, 3L, 2L)\n    27L\n    \n*/\nlong pow(long x, long y, long m)\
    \ \n{\n    return pow(x, y);\n}\n/*\nReturn x to the power of y modulo m and return\
    \ the remainder\n    >>> pow(3L, 2L, 2L)\n    9L\n    >>> pow(3L, 3L, 2L)\n  \
    \  27L\n    \n*/\nlong pow(long x, long y, long m) \n{\n    return pow(x, y);\n\
    }\n/*\nReturn x to the power of y modulo m and return the remainder\n    >>> pow(3L,\
    \ 2L, 2L)\n    9L\n    >>> pow(3L, 3L, 2L)\n    27L\n    \n*/\nlong pow(long x,\
    \ long y, long m) \n{\n    return pow(x, y);\n}\n/*\nReturn x to the power of\
    \ y modulo m and return the remainder\n    >>> pow(3L, 2L, 2L)\n    9L\n    >>>\
    \ pow(3L, 3L, 2L)\n    27L\n    \n*/\n\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163958
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> sub(2L, 3L)\n    1L\n    >>> sub(5L, 7L)\n    -1L\n    \n*/\nlong sub(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> mul(3L, 2L)\n    6L\n    >>> mul(3L, 7L)\n    21L\n    \n*/\nlong mul(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ div(2L, 3L)\n    1L\n    >>> div(5L, 7L)\n    3L\n    \n*/\nlong div(long x,\
    \ long y) \n{\n    return x / y;\n}\n/*\nModulus of two numbers x and y\n    >>>\
    \ mod(3L, 2L)\n    1L\n    >>> mod(3L, 7L)\n    3L\n    \n*/\nlong mod(long x,\
    \ long y) \n{\n    return x % y;\n}\n/*\nCompare two numbers x and y\n    >>>\
    \ cmp(2L, 3L)\n    1\n    >>> cmp(5L, 7L)\n    1\n    \n*/\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163958
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    -1L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the absolute value of a number\n    >>> abs(2L)\n    2L\n    >>> abs(-2L)\n\
    \    2L\n    \n*/\nlong abs(long x) \n{\n    return x > 0 ? x : -x;\n}\n/*\nGet\
    \ the modulus of a number\n    >>> modulus(2L, 3L)\n    1L\n    >>> modulus(5L,\
    \ 7L)\n    3L\n    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nGet the remainder of a number\n    >>> remainder(2L, 3L)\n    2L\n    >>>\
    \ remainder(5L, 7L)\n    3L\n    \n*/\nlong remainder(long x, long y) \n{\n  \
    \  return x % y;\n}\n/*\nGet the floor of a number\n    >>> floor(2L)\n    2L\n\
    \    >>> floor(5L)\n    5L\n    \n*/\nlong floor(long x) \n{\n    return x < 0\
    \ ? x + 1 : x;\n}\n/*\nGet the ceiling of a number\n    >>> ceil(2L)\n    3L\n\
    \    >>> ceil(5L)\n    5L\n    \n*/\nlong ceil(long x) \n{\n    return x < 0 ?\
    \ x - 1 : x;\n}\n/*\nGet the round of a number\n    >>> round(2L)\n    2L\n  \
    \  >>> round(5L)\n    5L\n    \n*/\nlong round(long x) \n{\n    return x < 0 ?\
    \ x + 0.5 : x;\n}\n/*\nGet the floor and ceiling of a number\n    >>> floor(2L)\n\
    \    2L\n    >>> ceil(2L)\n    3L\n    \n*/\nlong floor_and_ceil(long x) \n{\n\
    \    return x < 0 ? x + 0.5 : x;\n}\n/*\nGet the floor and ceiling of a number\n\
    \    >>> floor(2L)\n\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9i38b0si.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9i38b0si.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\n/*\nSubtract two numbers x and y\n    >>>\
    \ subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    -1L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n\treturn x - y;\n}\n/*\nMultiply two numbers x\
    \ and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    42L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n\treturn x * y;\n}\n/*\nDivide two\
    \ numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n  \
    \  2L\n    \n*/\nlong divide(long x, long y) \n{\n\treturn x / y;\n}\n/*\nGet\
    \ the absolute value of a number\n    >>> abs(1L)\n    1L\n    >>> abs(-1L)\n\
    \    1L\n    \n*/\nlong abs(long x) \n{\n\treturn x < 0 ? -x : x;\n}\n/*\nGet\
    \ the floor value of a number\n    >>> floor(1L)\n    1L\n    >>> floor(-1L)\n\
    \    -1L\n    \n*/\nlong floor(long x) \n{\n\treturn x < 0 ? -x : x;\n}\n/*\n\
    Get the ceiling value of a number\n    >>> ceil(1L)\n    1L\n    >>> ceil(-1L)\n\
    \    0L\n    \n*/\nlong ceil(long x) \n{\n\treturn x < 0 ? -x : x;\n}\n/*\nGet\
    \ the remainder of a number divided by another\n    >>> remainder(2L, 3L)\n  \
    \  1L\n    >>> remainder(5L, 7L)\n    2L\n    \n*/\nlong remainder(long x, long\
    \ y) \n{\n\treturn x - y * (x / y);\n}\n/*\nGet the modulus of a number divided\
    \ by another\n    >>> modulus(2L, 3L)\n    1L\n    >>> modulus(5L, 7L)\n    2L\n\
    \    \n*/\nlong modulus(long x, long y) \n{\n\treturn x - y * (x / y);\n}\n/*\n\
    Get the sign of a number\n    >>> sign(1L)\n    1L\n    >>> sign(-1L)\n    1L\n\
    \    \n*/\nlong sign(long x) \n{\n\treturn x < 0 ? -1 : 1;\n}\n/*\nGet the absolute\
    \ value of a number\n    >>> abs(1L)\n    1L\n    >>> abs(-1L)\n    1L\n    \n\
    */\nlong abs(long x) \n{\n\treturn x < 0 ? -x : x;\n}\n/*\nGet the floor value\
    \ of a number\n    >>> floor(1L)\n    1L\n\nunittest\n{\n    alias candidate =\
    \ add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) ==\
    \ 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) ==\
    \ 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8_rjh88s.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8_rjh88s.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> sub(2L, 3L)\n    1L\n    >>> sub(5L, 7L)\n    3L\n    \n*/\nlong sub(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> mul(3L, 2L)\n    6L\n    >>> mul(3L, 5L)\n    15L\n    \n*/\nlong mul(long\
    \ x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and y\n    >>>\
    \ div(3L, 2L)\n    1L\n    >>> div(3L, 5L)\n    3L\n    \n*/\nlong div(long x,\
    \ long y) \n{\n    return x / y;\n}\n/*\nReturn x raised to the power of y\n \
    \   >>> power(3L, 2L)\n    6L\n    >>> power(3L, 5L)\n    15L\n    \n*/\nlong\
    \ power(long x, long y) \n{\n    return pow(x, y);\n}\n/*\nReturn the square root\
    \ of x\n    >>> sqrt(3L)\n    1.7320508075688772\n    \n*/\ndouble sqrt(double\
    \ x) \n{\n    return sqrt(x);\n}\n/*\nReturn the reciprocal of x\n    >>> recip(3L)\n\
    \    0.03333333333333333\n    \n*/\ndouble recip(double x) \n{\n    return 1.0\
    \ / x;\n}\n/*\nReturn the natural logarithm of x\n    >>> log(3L)\n    1.0986122886681098\n\
    \    \n*/\ndouble log(double x) \n{\n    return log(x);\n}\n/*\nReturn the base\
    \ 10 logarithm of x\n    >>> log10(3L)\n    1.0986122886681098\n    \n*/\ndouble\
    \ log10(double x) \n{\n    return log10(x);\n}\n/*\nReturn the base 2 logarithm\
    \ of x\n    >>> log2(3L)\n    1.0986122886681098\n    \n*/\ndouble log2(double\
    \ x) \n{\n    return log2(x);\n}\n/*\nReturn the base e logarithm of x\n    >>>\
    \ logb(3L)\n    1.0986122886681098\n    \n*/\ndouble logb(double x) \n{\n    return\
    \ logb(x);\n}\n/*\nReturn the natural logarithm of x to the power of y\n    >>>\
    \ log2(3L, 2L)\n    1.0986122886681098\n    \n*/\ndouble log2(double x, double\
    \ y) \n{\n    return log2(x, \nunittest\n{\n    alias candidate = add;\n\n   \
    \ assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n   \
    \ assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n  \
    \  assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp45_2erde.d(132): Error: expression expected, not `unittest`

    /tmp/tmp45_2erde.d(133): Error: found `{` when expecting `,`

    /tmp/tmp45_2erde.d(134): Error: expression expected, not `alias`

    /tmp/tmp45_2erde.d(134): Error: found `candidate` when expecting `,`

    /tmp/tmp45_2erde.d(134): Error: expression expected, not `=`

    /tmp/tmp45_2erde.d(134): Error: found `add` when expecting `,`

    /tmp/tmp45_2erde.d(134): Error: expression expected, not `;`

    /tmp/tmp45_2erde.d(136): Error: found `assert` when expecting `,`

    /tmp/tmp45_2erde.d(136): Error: found `;` when expecting `,`

    /tmp/tmp45_2erde.d(137): Error: found `;` when expecting `,`

    /tmp/tmp45_2erde.d(138): Error: found `;` when expecting `,`

    /tmp/tmp45_2erde.d(139): Error: found `;` when expecting `,`

    /tmp/tmp45_2erde.d(140): Error: found `;` when expecting `,`

    /tmp/tmp45_2erde.d(141): Error: expression expected, not `}`

    /tmp/tmp45_2erde.d(142): Error: found `void` when expecting `,`

    /tmp/tmp45_2erde.d(142): Error: found `{` when expecting `,`

    /tmp/tmp45_2erde.d('
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163958
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n    \n*/\n\
    long multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    2L\n  \
    \  \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\nGet the remainder\
    \ of x divided by y\n    >>> remainder(2L, 3L)\n    1L\n    >>> remainder(5L,\
    \ 7L)\n    2L\n    \n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nGet the absolute value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n\
    \    5L\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the sign of x\n    >>> sign(2L)\n    1L\n    >>> sign(-5L)\n    -1L\n    \n\
    */\nlong sign(long x) \n{\n    return x < 0 ? -1 : 1;\n}\n/*\nGet the absolute\
    \ value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong\
    \ abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the sign of x\n    >>>\
    \ sign(2L)\n    1L\n    >>> sign(-5L)\n    -1L\n    \n*/\nlong sign(long x) \n\
    {\n    return x < 0 ? -1 : 1;\n}\n/*\nGet the absolute value of x\n    >>> abs(2L)\n\
    \    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long x) \n{\n    return\
    \ x < 0 ? -x : x;\n}\n/*\nGet the sign of x\n    >>> sign(2L)\n    1L\n    >>>\
    \ sign(-5L)\n    -1L\n    \n*/\nlong sign(long x) \n{\n    return x < 0 ? -1 :\
    \ 1;\n}\n/*\nGet the absolute value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n\
    \    5L\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the sign of x\n    >>> sign(2L)\n    1L\n    >>> sign(-5L)\n    -1L\n    \n\
    */\nlong sign(long x) \n{\n    return x < 0 ? -1 : 1;\n}\n/*\nunittest\n{\n  \
    \  alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj5d3sluj.d(147): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj5d3sluj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the square root of a number\n    >>> sqrt(7L)\n    2.6457513110645907\n  \
    \  \n*/\ndouble sqrt(double x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet the\
    \ square root of a number\n    >>> sqrt(7L)\n    2.6457513110645907\n    \n*/\n\
    float sqrt(float x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet the square root\
    \ of a number\n    >>> sqrt(7L)\n    2.6457513110645907\n    \n*/\nlong sqrt(long\
    \ x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet the square root of a number\n\
    \    >>> sqrt(7L)\n    2.6457513110645907\n    \n*/\nulong sqrt(ulong x) \n{\n\
    \    return std.math.sqrt(x);\n}\n/*\nGet the square root of a number\n    >>>\
    \ sqrt(7L)\n    2.6457513110645907\n    \n*/\nuint sqrt(uint x) \n{\n    return\
    \ std.math.sqrt(x);\n}\n/*\nGet the square root of a number\n    >>> sqrt(7L)\n\
    \    2.6457513110645907\n    \n*/\nuint sqrt(uint x) \n{\n    return std.math.sqrt(x);\n\
    }\n/*\nGet the square root of a number\n    >>> sqrt(7L)\n    2.6457513110645907\n\
    \    \n*/\nulong sqrt(ulong x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet the\
    \ square root of a number\n    >>> sqrt(7L)\n    2.6457513110645907\n    \n*/\n\
    uint sqrt(uint x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet the square root\
    \ of a number\n    >>> sqrt(7L)\nunittest\n{\n    alias candidate = add;\n\n \
    \   assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n \
    \   assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgs759qtc.d(131): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgs759qtc.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    42L\n    \n*/\n\
    long multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    3L\n  \
    \  \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\nGet the square\
    \ root of a number\n    >>> sqrt(2L)\n    1.0\n    >>> sqrt(3L)\n    1.7320508075688772\n\
    \    \n*/\ndouble sqrt(long x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet the\
    \ square root of a number\n    >>> sqrt(2L)\n    1.0\n    >>> sqrt(3L)\n    1.7320508075688772\n\
    \    \n*/\ndouble sqrt(double x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet\
    \ the square root of a number\n    >>> sqrt(2L)\n    1.0\n    >>> sqrt(3L)\n \
    \   1.7320508075688772\n    \n*/\nfloat sqrt(float x) \n{\n    return std.math.sqrt(x);\n\
    }\n/*\nGet the square root of a number\n    >>> sqrt(2L)\n    1.0\n    >>> sqrt(3L)\n\
    \    1.7320508075688772\n    \n*/\nlong double sqrt(long double x) \n{\n    return\
    \ std.math.sqrt(x);\n}\n/*\nGet the square root of a number\n    >>> sqrt(2L)\n\
    \    1.0\n    >>> sqrt(3L)\n    1.7320508075688772\n    \n*/\nfloat sqrt(float\
    \ x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet the square root of a number\n\
    \    >>> sqrt(2L)\n    1.0\n    >>> sqrt(3L)\n    1.7320508075688772\n    \n*/\n\
    double sqrt(double x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet the square\
    \ root of a number\n    >>> sqrt(2L)\n    1.0\n    >>> sqrt(3L)\n    1.7320508075688772\n\
    \    \n*/\nlong double sqrt(long double x) \n{\n    return std.math.sqrt(x);\n\
    }\n/*\nGet the square root of a number\n    >>> sqrt(2L)\n    1.0\n    >>> sqrt(3L)\n\
    \    1.7320508075688772\n    \n*/\nfloat sqrt(float x) \n\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe72x9t57.d(83): Error: use `real` instead of `long double`

    /tmp/tmpe72x9t57.d(83): Error: use `real` instead of `long double`

    /tmp/tmpe72x9t57.d(119): Error: use `real` instead of `long double`

    /tmp/tmpe72x9t57.d(119): Error: use `real` instead of `long double`

    /tmp/tmpe72x9t57.d(133): Error: semicolon expected following function declaration

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe72x9t57.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the remainder of x divided by y\n    >>> remainder(2L, 3L)\n    1L\n    >>>\
    \ remainder(5L, 7L)\n    2L\n    \n*/\nlong remainder(long x, long y) \n{\n  \
    \  return x % y;\n}\n/*\nGet the absolute value of x\n    >>> abs(2L)\n    2L\n\
    \    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ?\
    \ -x : x;\n}\n/*\nGet the sign of x\n    >>> sign(-2L)\n    -1L\n    >>> sign(-5L)\n\
    \    1L\n    \n*/\nlong sign(long x) \n{\n    return x < 0 ? -1 : 1;\n}\n/*\n\
    Get the floor of x\n    >>> floor(2L)\n    2L\n    >>> floor(5L)\n    5L\n   \
    \ \n*/\nlong floor(long x) \n{\n    return x < 0 ? x + 1 : x;\n}\n/*\nGet the\
    \ ceiling of x\n    >>> ceil(2L)\n    3L\n    >>> ceil(5L)\n    6L\n    \n*/\n\
    long ceil(long x) \n{\n    return x < 0 ? x - 1 : x;\n}\n/*\nGet the floor of\
    \ x rounded down\n    >>> floorDown(2L)\n    2L\n    >>> floorDown(5L)\n    4L\n\
    \    \n*/\nlong floorDown(long x) \n{\n    return x < 0 ? x + 1 : x;\n}\n/*\n\
    Get the ceiling of x rounded down\n    >>> ceilDown(2L)\n    3L\n    >>> ceilDown(5L)\n\
    \    4L\n    \n*/\nlong ceilDown(long x) \n{\n    return x < 0 ? x - 1 : x;\n\
    }\n/*\nGet the floor of x rounded up\n    >>> floorUp(2L)\n\nunittest\n{\n   \
    \ alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdcfydcwo.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdcfydcwo.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    6L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    2L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the absolute value of a number\n    >>> abs(-5)\n    5\n    >>> abs(5)\n \
    \   5\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the square root of a number\n    >>> sqrt(-5)\n    -5\n    >>> sqrt(5)\n   \
    \ 2.6457513110645907\n    \n*/\ndouble sqrt(double x) \n{\n    return std.math.sqrt(x);\n\
    }\n/*\nGet the floor of a number\n    >>> floor(3.5)\n    3\n    >>> floor(3.6)\n\
    \    3\n    \n*/\nlong floor(double x) \n{\n    return std.math.floor(x);\n}\n\
    /*\nGet the ceil of a number\n    >>> ceil(3.5)\n    4\n    >>> ceil(3.6)\n  \
    \  4\n    \n*/\nlong ceil(double x) \n{\n    return std.math.ceil(x);\n}\n/*\n\
    Get the round of a number\n    >>> round(3.5)\n    3\n    >>> round(3.6)\n   \
    \ 4\n    \n*/\nlong round(double x) \n{\n    return std.math.round(x);\n}\n/*\n\
    Get the round of a number with specified precision\n    >>> round(3.5, 2)\n  \
    \  3.5\n    >>> round(3.6, 2)\n    3.6\n    \n*/\ndouble round(double x, int y)\
    \ \n{\n    return std.math.round(x, y);\n}\n/*\nGet the remainder of a number\
    \ divided by another\n    >>> remainder(3.5, 2)\n    1.5\n    >>> remainder(3.6,\
    \ 2)\n    3.6\n    \n*/\ndouble remainder(double x, double y) \n{\n    return\
    \ std.math.remainder(x, y);\n}\n/*\nGet the remainder of a number divided by another\
    \ with specified precision\n    >>> remainder(3.5, 2, 2)\n    1.5\n    >>> \n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n\
    \    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n\
    \    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8r6861ve.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8r6861ve.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\n/*\nSubtract two numbers x and y\n    >>>\
    \ subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    -1L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n\treturn x - y;\n}\n/*\nMultiply two numbers x\
    \ and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    42L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n\treturn x * y;\n}\n/*\nDivide two\
    \ numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n  \
    \  3L\n    \n*/\nlong divide(long x, long y) \n{\n\treturn x / y;\n}\n/*\nGet\
    \ the remainder of x divided by y\n    >>> remainder(2L, 3L)\n    1L\n    >>>\
    \ remainder(5L, 7L)\n    2L\n    \n*/\nlong remainder(long x, long y) \n{\n\t\
    return x % y;\n}\n/*\nGet the sign of x\n    >>> sign(2L)\n    1L\n    >>> sign(-2L)\n\
    \    -1L\n    \n*/\nlong sign(long x) \n{\n\treturn (x < 0) ? -1 : 1;\n}\n/*\n\
    Get the absolute value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-2L)\n    2L\n\
    \    \n*/\nlong abs(long x) \n{\n\treturn x >= 0 ? x : -x;\n}\n/*\nGet the absolute\
    \ value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-2L)\n    2L\n    \n*/\nlong\
    \ abs(long x) \n{\n\treturn x >= 0 ? x : -x;\n}\n/*\nGet the absolute value of\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-2L)\n    2L\n    \n*/\nlong abs(long\
    \ x) \n{\n\treturn x >= 0 ? x : -x;\n}\n/*\nGet the absolute value of x\n    >>>\
    \ abs(2L)\n    2L\n    >>> abs(-2L)\n    2L\n    \n*/\nlong abs(long x) \n{\n\t\
    return x >= 0 ? x : -x;\n}\n/*\nGet the absolute value of x\n    >>> abs(2L)\n\
    \    2L\n    >>> abs(-2L)\n    2L\n    \n*/\nlong abs(long x) \n{\n\treturn x\
    \ >= 0 ? x : -x;\n}\n/*\nGet the absolute value of x\n    >>> abs(2L)\n    2L\n\
    \    >>> abs(-2L)\n    2L\n    \n*/\nlong abs(long x) \n{\n\treturn x >= 0 ? x\
    \ : \nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L)\
    \ == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L)\
    \ == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L)\
    \ == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdhokfggz.d(146): Error: expression expected, not `unittest`

    /tmp/tmpdhokfggz.d(147): Error: found `{` when expecting `;` following `return`
    statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdhokfggz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the absolute value of x\n    >>> abs(-1L)\n    1L\n    >>> abs(1L)\n    1L\n\
    \    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the sign\
    \ of x\n    >>> sign(-1)\n    1L\n    >>> sign(1)\n    1L\n    \n*/\nlong sign(long\
    \ x) \n{\n    return x < 0 ? -1 : 1;\n}\n/*\nGet the floor of x\n    >>> floor(-1L)\n\
    \    -1L\n    >>> floor(-2L)\n    0L\n    >>> floor(1L)\n    1L\n    >>> floor(-3L)\n\
    \    -1L\n    \n*/\nlong floor(long x) \n{\n    return x < 0 ? -floor(-x) : floor(x);\n\
    }\n/*\nGet the ceiling of x\n    >>> ceil(-1L)\n    0L\n    >>> ceil(-2L)\n  \
    \  1L\n    >>> ceil(1L)\n    1L\n    >>> ceil(-3L)\n    -1L\n    \n*/\nlong ceil(long\
    \ x) \n{\n    return x < 0 ? -ceil(-x) : ceil(x);\n}\n/*\nGet the remainder of\
    \ x divided by y\n    >>> remainder(-1L, 2L)\n    -1L\n    >>> remainder(1L, 2L)\n\
    \    0L\n    \n*/\nlong remainder(long x, long y) \n{\n    return x - y * (x /\
    \ y);\n}\n/*\nGet the remainder of x divided by y rounded towards zero\n    >>>\
    \ remainderz(-1L, 2L)\n    -1L\n    >>> remainderz(1L, 2L)\n    0L\n    \n*/\n\
    long remainderz(long x, long y) \n{\n    return x - y * (x / y);\n}\n/*\nGet the\
    \ absolute value of x rounded towards zero\n    >>> \nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpj9txqqq6.d(131): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpj9txqqq6.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    -1L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    42L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the modulus of two numbers x and y\n    >>> modulus(2L, 3L)\n    1L\n    >>>\
    \ modulus(5L, 7L)\n    2L\n    \n*/\nlong modulus(long x, long y) \n{\n    return\
    \ x % y;\n}\n/*\nGet the absolute value of number x\n    >>> abs(2L)\n    2L\n\
    \    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long x) \n{\n    return x > 0 ?\
    \ x : -x;\n}\n/*\nGet the square root of number x\n    >>> sqrt(2L)\n    1.41421356237\n\
    \    >>> sqrt(-5L)\n    -0.707106781186\n    \n*/\ndouble sqrt(double x) \n{\n\
    \    return std.math.sqrt(x);\n}\n/*\nGet the square root of number x\n    >>>\
    \ sqrt(2L)\n    1.41421356237\n    >>> sqrt(-5L)\n    -0.707106781186\n    \n\
    */\ndouble sqrt(double x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet the square\
    \ root of number x\n    >>> sqrt(2L)\n    1.41421356237\n    >>> sqrt(-5L)\n \
    \   -0.707106781186\n    \n*/\ndouble sqrt(double x) \n{\n    return std.math.sqrt(x);\n\
    }\n/*\nGet the square root of number x\n    >>> sqrt(2L)\n    1.41421356237\n\
    \    >>> sqrt(-5L)\n    -0.707106781186\n    \n*/\ndouble sqrt(double x) \n{\n\
    \    return std.math.sqrt(x);\n}\n/*\nGet the square root of number x\n    >>>\
    \ sqrt(2L)\n    1.41421356237\n    >>> sqrt(-5L)\n    -0.707106781186\n    \n\
    */\ndouble \nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsv79_pze.d(132): Error: no identifier for declarator `double`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpsv79_pze.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    2L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the absolute value of x\n    >>> abs(-1L)\n    1L\n    >>> abs(1L)\n    1L\n\
    \    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the modulus\
    \ of x and y\n    >>> modulus(2L, 3L)\n    1L\n    >>> modulus(5L, 7L)\n    2L\n\
    \    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n}\n/*\nGet the\
    \ remainder of x and y\n    >>> remainder(2L, 3L)\n    2L\n    >>> remainder(5L,\
    \ 7L)\n    3L\n    \n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nGet the sign of x\n    >>> sign(-1L)\n    -1L\n    >>> sign(1L)\n    1L\n\
    \    \n*/\nlong sign(long x) \n{\n    return x < 0 ? -1 : 1;\n}\n/*\nGet the absolute\
    \ value of x\n    >>> abs(-1L)\n    1L\n    >>> abs(1L)\n    1L\n    \n*/\nlong\
    \ abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the modulus of x and\
    \ y\n    >>> modulus(2L, 3L)\n    1L\n    >>> modulus(5L, 7L)\n    2L\n    \n\
    */\nlong modulus(long x, long y) \n{\n    return x % y;\n}\n/*\nGet the remainder\
    \ of x and y\n    >>> remainder(2L, 3L)\n    2L\n    >>> remainder(5L, 7L)\n \
    \   3L\n    \n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n}\n/*\n\
    Get the sign of x\n    >>> \nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxsh6_joq.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxsh6_joq.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulus operator returns the remainder of x divided by y\n    >>> mod(2L, 3L)\n\
    \    1L\n    >>> mod(5L, 7L)\n    2L\n    \n*/\nlong mod(long x, long y) \n{\n\
    \    return x % y;\n}\n/*\nBitwise AND operator returns x & y\n    >>> bitand(2L,\
    \ 3L)\n    3L\n    >>> bitand(5L, 7L)\n    3L\n    \n*/\nlong bitand(long x, long\
    \ y) \n{\n    return x & y;\n}\n/*\nBitwise OR operator returns x | y\n    >>>\
    \ bitor(2L, 3L)\n    6L\n    >>> bitor(5L, 7L)\n    11L\n    \n*/\nlong bitor(long\
    \ x, long y) \n{\n    return x | y;\n}\n/*\nBitwise XOR operator returns x ^ y\n\
    \    >>> bitxor(2L, 3L)\n    3L\n    >>> bitxor(5L, 7L)\n    7L\n    \n*/\nlong\
    \ bitxor(long x, long y) \n{\n    return x ^ y;\n}\n/*\nBitwise NOT operator returns\
    \ ~x\n    >>> bitnot(2L)\n    -2L\n    >>> bitnot(5L)\n    -5L\n    \n*/\nlong\
    \ bitnot(long x) \n{\n    return ~x;\n}\n/*\nBitwise shift left operator returns\
    \ x << y\n    >>> bitshl(2L, 3L)\n    6L\n    >>> bitshl(5L, 7L)\n    21L\n  \
    \  \n*/\nlong bitshl(long x, long y) \n{\n    return x << y;\n}\n/*\nBitwise shift\
    \ right operator returns x >> y\n    >>> bit\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppzpwv_ys.d(123): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppzpwv_ys.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long add(long long\
    \ x, long long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n\
    \    >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nSubtract two numbers\
    \ x and y\n    >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n\
    \    \n*/\nlong long subtract(long long x, long long y) \n{\n    return x - y;\n\
    }\n/*\nMultiply two numbers x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>>\
    \ multiply(5L, 7L)\n    42L\n    \n*/\nlong multiply(long x, long y) \n{\n   \
    \ return x * y;\n}\n/*\nMultiply two numbers x and y\n    >>> multiply(2L, 3L)\n\
    \    6L\n    >>> multiply(5L, 7L)\n    42L\n    \n*/\nlong long multiply(long\
    \ long x, long long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and\
    \ y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    2L\n    \n*/\n\
    long divide(long x, long y) \n{\n    return x / y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    2L\n  \
    \  \n*/\nlong long divide(long long x, long long y) \n{\n    return x / y;\n}\n\
    /*\nGet the remainder of x divided by y\n    >>> remainder(2L, 3L)\n    1L\n \
    \   >>> remainder(5L, 7L)\n    2L\n    \n*/\nlong remainder(long x, long y) \n\
    {\n    return x % y;\n}\n/*\nGet the remainder of x divided by y\n    >>> remainder(2L,\
    \ 3L)\n    1L\n    >>> remainder(5L, 7L)\n    2L\n    \n*/\nlong long remainder(long\
    \ long x, long long y) \n{\n    return x % y;\n}\n/*\nGet the absolute value of\
    \ x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long\
    \ x) \nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L)\
    \ == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L)\
    \ == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L)\
    \ == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9p16y3yt.d(23): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmp9p16y3yt.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp9p16y3yt.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp9p16y3yt.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp9p16y3yt.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp9p16y3yt.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp9p16y3yt.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp9p16y3yt.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp9p16y3yt.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp9p16y3yt.d(95): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp9p16y3yt.d(95): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp9p16y3yt.d(95): Error: use `long` for a 64 bit integer instead of `lon'
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long add(long long\
    \ x, long long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n   \
    \ >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nfloat add(float\
    \ x, float y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>>\
    \ add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\ndouble add(double\
    \ x, double y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>>\
    \ add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong double add(long\
    \ double x, long double y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and\
    \ y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpr8zyi8dh.d(23): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpr8zyi8dh.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpr8zyi8dh.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpr8zyi8dh.d(59): Error: use `real` instead of `long double`

    /tmp/tmpr8zyi8dh.d(59): Error: use `real` instead of `long double`

    /tmp/tmpr8zyi8dh.d(59): Error: use `real` instead of `long double`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr8zyi8dh.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the absolute value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n\
    \    \n*/\nlong abs(long x) \n{\n    return x > 0 ? x : -x;\n}\n/*\nGet the sign\
    \ of x\n    >>> sign(-2L)\n    -1L\n    >>> sign(-5L)\n    1L\n    \n*/\nlong\
    \ sign(long x) \n{\n    return x > 0 ? 1 : -1;\n}\n/*\nGet the floor of x\n  \
    \  >>> floor(2L)\n    2L\n    >>> floor(5L)\n    5L\n    \n*/\nlong floor(long\
    \ x) \n{\n    return x < 0 ? x + 1 : x;\n}\n/*\nGet the ceiling of x\n    >>>\
    \ ceil(2L)\n    3L\n    >>> ceil(5L)\n    6L\n    \n*/\nlong ceil(long x) \n{\n\
    \    return x < 0 ? x - 1 : x;\n}\n/*\nGet the nearest integer to the value of\
    \ x\n    >>> round(2L)\n    2L\n    >>> round(5L)\n    3L\n    \n*/\nlong round(long\
    \ x) \n{\n    return x < 0 ? x + 1 : x;\n}\n/*\nGet the remainder of x / y\n \
    \   >>> remainder(2L, 3L)\n    1L\n    >>> remainder(5L, 7L)\n    3L\n    \n*/\n\
    long remainder(long x, long y) \n{\n    return x % y;\n}\n/*\nGet the absolute\
    \ value of the remainder of x / y\n    >>> remainder(2L, 3L)\n    1L\n    >>>\
    \ remainder(5L, 7L)\n    3L\n    \n*/\nlong remainder(long x, long y) \n{\n  \
    \  return x % y;\n}\n/*\nGet the floor of the remainder of x / y\n    >>> remainder(2L,\
    \ 3L)\n    1\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp9revdmf4.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9revdmf4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long add(long long\
    \ x, long long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n   \
    \ >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong double\
    \ add(long double x, long double y) \n{\n    return x + y;\n}\n/*\nAdd two numbers\
    \ x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\n\
    float add(float x, float y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and\
    \ y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\ndouble\
    \ add(double x, double y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and\
    \ y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong\
    \ double add(long double x, long double y) \n{\n    return x + y;\n}\n/*\nAdd\
    \ two numbers x and y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n\
    \    \n*/\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpurudgzsg.d(23): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpurudgzsg.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpurudgzsg.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpurudgzsg.d(35): Error: use `real` instead of `long double`

    /tmp/tmpurudgzsg.d(35): Error: use `real` instead of `long double`

    /tmp/tmpurudgzsg.d(35): Error: use `real` instead of `long double`

    /tmp/tmpurudgzsg.d(71): Error: use `real` instead of `long double`

    /tmp/tmpurudgzsg.d(71): Error: use `real` instead of `long double`

    /tmp/tmpurudgzsg.d(71): Error: use `real` instead of `long double`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpurudgzsg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n    \n*/\n\
    long multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    3L\n  \
    \  \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\nReturn whether\
    \ x is even\n    >>> is_even(2L)\n    True\n    >>> is_even(5L)\n    False\n \
    \   \n*/\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163958
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    -1L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    42L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    2L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulus two numbers x and y\n    >>> modulus(2L, 3L)\n    1L\n    >>> modulus(5L,\
    \ 7L)\n    2L\n    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nCompare two numbers x and y\n    >>> compare(2L, 3L)\n    1\n    >>> compare(5L,\
    \ 7L)\n    -1\n    \n*/\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163958
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long add(long long\
    \ x, long long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n\
    \    >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    6L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nSubtract two numbers\
    \ x and y\n    >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    6L\n\
    \    \n*/\nlong long subtract(long long x, long long y) \n{\n    return x - y;\n\
    }\n/*\nMultiply two numbers x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>>\
    \ multiply(5L, 7L)\n    42L\n    \n*/\nlong multiply(long x, long y) \n{\n   \
    \ return x * y;\n}\n/*\nMultiply two numbers x and y\n    >>> multiply(2L, 3L)\n\
    \    6L\n    >>> multiply(5L, 7L)\n    42L\n    \n*/\nlong long multiply(long\
    \ long x, long long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and\
    \ y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    3L\n    \n*/\n\
    long divide(long x, long y) \n{\n    return x / y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    3L\n  \
    \  \n*/\nlong long divide(long long x, long long y) \n{\n    return x / y;\n}\n\
    /*\nModulus of two numbers x and y\n    >>> modulus(2L, 3L)\n    1L\n    >>> modulus(5L,\
    \ 7L)\n    2L\n    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nModulus of two numbers x and y\n    >>> modulus(2L, 3L)\n    1L\n    >>>\
    \ modulus(5L, 7L)\n    2L\n    \n*/\nlong long modulus(long long x, long long\
    \ y) \n{\n    return x % y;\n}\n/*\nCompare two numbers x and y\n    >>> compare(2L,\
    \ 3L)\n    1L\n    >>> compare(5\nunittest\n{\n    alias candidate = add;\n\n\
    \    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplx2b4rj_.d(23): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmplx2b4rj_.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmplx2b4rj_.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmplx2b4rj_.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmplx2b4rj_.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmplx2b4rj_.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmplx2b4rj_.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmplx2b4rj_.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmplx2b4rj_.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmplx2b4rj_.d(95): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmplx2b4rj_.d(95): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmplx2b4rj_.d(95): Error: use `long` for a 64 bit integer instead of `lon'
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    2L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Modulus operator returns the remainder of x divided by y\n    >>> modulus(2L,\
    \ 3L)\n    1L\n    >>> modulus(5L, 7L)\n    2L\n    \n*/\nlong modulus(long x,\
    \ long y) \n{\n    return x % y;\n}\n/*\nCompare two numbers x and y\n    >>>\
    \ compare(2L, 3L)\n    1L\n    >>> compare(5L, 7L)\n    1L\n    \n*/\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163958
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163958
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the absolute value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n\
    \    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the modulus\
    \ of x and y\n    >>> modulus(2L, 3L)\n    1L\n    >>> modulus(5L, 7L)\n    3L\n\
    \    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n}\n/*\nGet the\
    \ remainder of x and y\n    >>> remainder(2L, 3L)\n    2L\n    >>> remainder(5L,\
    \ 7L)\n    3L\n    \n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nGet the sign of x\n    >>> sign(-2L)\n    1L\n    >>> sign(-5L)\n    -1L\n\
    \    \n*/\nlong sign(long x) \n{\n    return x < 0 ? -1 : 1;\n}\n/*\nGet the absolute\
    \ value of x\n    >>> abs(-2L)\n    -2L\n    >>> abs(-5L)\n    5L\n    \n*/\n\
    long abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the modulus of x\
    \ and y\n    >>> modulus(-2L, 3L)\n    1L\n    >>> modulus(-5L, 7L)\n    3L\n\
    \    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n}\n/*\nGet the\
    \ remainder of x and y\n    >>> remainder(-2L, 3L)\n    -2L\n    >>> remainder(-5L,\
    \ 7L)\n    3L\n    \n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L)\
    \ == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L)\
    \ == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L)\
    \ == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpzl9ut759.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzl9ut759.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the absolute value of a number\n    >>> abs(-1L)\n    1L\n    >>> abs(1L)\n\
    \    1L\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the floor value of a number\n    >>> floor(-1L)\n    -1L\n    >>> floor(-2L)\n\
    \    0L\n    >>> floor(1L)\n    1L\n    \n*/\nlong floor(long x) \n{\n    return\
    \ x < 0 ? -x : x;\n}\n/*\nGet the ceiling value of a number\n    >>> ceil(-1L)\n\
    \    0L\n    >>> ceil(-2L)\n    1L\n    >>> ceil(-3L)\n    -1L\n    >>> ceil(1L)\n\
    \    1L\n    \n*/\nlong ceil(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\n\
    Get the remainder of a number divided by another\n    >>> remainder(2L, 3L)\n\
    \    1L\n    >>> remainder(5L, 7L)\n    2L\n    \n*/\nlong remainder(long x, long\
    \ y) \n{\n    return x % y;\n}\n/*\nGet the remainder of x divided by y rounded\
    \ towards zero\n    >>> remainderRound(2L, 3L)\n    1L\n    >>> remainderRound(5L,\
    \ 7L)\n    2L\n    \n*/\nlong remainderRound(long x, long y) \n{\n    return x\
    \ % y;\n}\n/*\nGet the remainder of x divided by y rounded towards minus infinity\n\
    \    >>> remainderCeil(2L, 3L)\n    1L\n    >>> remainderCeil(5L, 7L)\n    2L\n\
    \    \n*/\nlong remainderCeil(long x, long y) \n{\n    return x % y;\n\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp75c2lbj4.d(129): Error: found `unittest` instead of statement

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp75c2lbj4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nMultiply two numbers x and y\n   \
    \ >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    42L\n    \n*/\n\
    long multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    3L\n  \
    \  \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\nGet the square\
    \ root of a number\n    >>> sqrt(3L)\n    1.7320508075688772\n    \n*/\ndouble\
    \ sqrt(double x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet the square root\
    \ of a number\n    >>> sqrt(3L)\n    1.7320508075688772\n    \n*/\nfloat sqrt(float\
    \ x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet the square root of a number\n\
    \    >>> sqrt(3L)\n    1.7320508075688772\n    \n*/\nlong double sqrt(long double\
    \ x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet the square root of a number\n\
    \    >>> sqrt(3L)\n    1.7320508075688772\n    \n*/\ndouble sqrt(double x) \n\
    {\n    return std.math.sqrt(x);\n}\n/*\nGet the square root of a number\n    >>>\
    \ sqrt(3L)\n    1.7320508075688772\n    \n*/\nfloat sqrt(float x) \n{\n    return\
    \ std.math.sqrt(x);\n}\n/*\nGet the square root of a number\n    >>> sqrt(3L)\n\
    \    1.7320508075688772\n    \n*/\nlong double sqrt(long double x) \n{\n    return\
    \ std.math.sqrt(x);\n}\n/*\nGet the square root of a number\n    >>> sqrt(3L)\n\
    \    1.7320508075688772\n    \n*/\ndouble sqrt(double x) \n{\n    return std.math.sqrt(x);\n\
    }\n/*\nGet the square root of a number\n    >>> sqrt(3L)\n    1.7320508075688772\n\
    \    \n*/\nfloat sqrt(float x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet the\
    \ square root of a number\n    >>> sqrt(3L)\n    1.7320508075688772\n    \n*/\n\
    long double sqrt(long double x) \n{\n    return std.math.sqrt(x);\n}\n/*\nGet\
    \ the square root of a number\n    >>> \nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmk2sxpg4.d(65): Error: use `real` instead of `long double`

    /tmp/tmpmk2sxpg4.d(65): Error: use `real` instead of `long double`

    /tmp/tmpmk2sxpg4.d(95): Error: use `real` instead of `long double`

    /tmp/tmpmk2sxpg4.d(95): Error: use `real` instead of `long double`

    /tmp/tmpmk2sxpg4.d(125): Error: use `real` instead of `long double`

    /tmp/tmpmk2sxpg4.d(125): Error: use `real` instead of `long double`

    /tmp/tmpmk2sxpg4.d(129): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmk2sxpg4.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\n/*\nSubtract two numbers x and y\n    >>>\
    \ sub(2L, 3L)\n    1L\n    >>> sub(5L, 7L)\n    3L\n    \n*/\nlong sub(long x,\
    \ long y) \n{\n\treturn x - y;\n}\n/*\nMultiply two numbers x and y\n    >>> mul(3L,\
    \ 2L)\n    6L\n    >>> mul(4L, 3L)\n    12L\n    \n*/\nlong mul(long x, long y)\
    \ \n{\n\treturn x * y;\n}\n/*\nDivide two numbers x and y\n    >>> div(2L, 3L)\n\
    \    1L\n    >>> div(5L, 7L)\n    3L\n    \n*/\nlong div(long x, long y) \n{\n\
    \treturn x / y;\n}\n/*\nGet the modulo of two numbers x and y\n    >>> mod(2L,\
    \ 3L)\n    1L\n    >>> mod(5L, 7L)\n    3L\n    \n*/\nlong mod(long x, long y)\
    \ \n{\n\treturn x % y;\n}\n/*\nGet the remainder of x divided by y\n    >>> rem(2L,\
    \ 3L)\n    1L\n    >>> rem(5L, 7L)\n    3L\n    \n*/\nlong rem(long x, long y)\
    \ \n{\n\treturn x % y;\n}\n/*\nGet the absolute value of x\n    >>> abs(2L)\n\
    \    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long x) \n{\n\treturn x\
    \ < 0 ? -x : x;\n}\n/*\nGet the sign of x\n    >>> sign(-2L)\n    -1L\n    >>>\
    \ sign(-5L)\n    1L\n    \n*/\nlong sign(long x) \n{\n\treturn x < 0 ? -1 : 1;\n\
    }\n/*\nGet the absolute value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n\
    \    5L\n    \n*/\nlong abs(long x) \n{\n\treturn x < 0 ? -x : x;\n}\n/*\nGet\
    \ the sign of x\n    >>> sign(-2L)\n    -1L\n    >>> sign(-5L)\n    1L\n    \n\
    */\nlong sign(long x) \n{\n\treturn x < 0 ? -1 : 1;\n}\n/*\nGet the absolute value\
    \ of x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long\
    \ x) \n{\n\treturn x < 0 ? -x : x;\n}\n/*\nGet the sign of x\n    >>> sign(-2L)\n\
    \    -1L\n    >>> sign(-5L)\n    1L\n\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnglwrsra.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnglwrsra.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    6L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    42L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    2L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the absolute value of a number\n    >>> abs(-1L)\n    1L\n    >>> abs(1L)\n\
    \    1L\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the sign of a number\n    >>> sign(-1)\n    1L\n    >>> sign(1)\n    1L\n  \
    \  \n*/\nlong sign(long x) \n{\n    return x < 0 ? -1 : 1;\n}\n/*\nGet the floor\
    \ of a number\n    >>> floor(-1L)\n    -1L\n    >>> floor(-2L)\n    0L\n    >>>\
    \ floor(-3L)\n    -1L\n    >>> floor(-4L)\n    -2L\n    \n*/\nlong floor(long\
    \ x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the ceiling of a number\n   \
    \ >>> ceil(-1L)\n    0L\n    >>> ceil(-2L)\n    1L\n    >>> ceil(-3L)\n    1L\n\
    \    >>> ceil(-4L)\n    2L\n    \n*/\nlong ceil(long x) \n{\n    return x < 0\
    \ ? -x : x;\n}\n/*\nGet the remainder of a number divided by another\n    >>>\
    \ remainder(3L, 2L)\n    1L\n    >>> remainder(5L, 7L)\n    2L\n    \n*/\nlong\
    \ remainder(long x, long y) \n{\n    return x % y;\n}\n/*\nGet the modulo of a\
    \ number divided by another\n    >>> modulo(3L, 2L)\n    1L\n    >>> modulo(5L,\
    \ 7L)\n    2L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nGet the floor division of two numbers\n    >>> floordiv(2L, 3L)\n    1L\n\
    \    >>> floordiv(5L, 7L)\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpe1se7siw.d(131): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe1se7siw.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    -1L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    42L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    2L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the absolute value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-2L)\n    2L\n\
    \    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the modulus\
    \ of x and y\n    >>> modulus(2L, 3L)\n    1L\n    >>> modulus(5L, 7L)\n    2L\n\
    \    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n}\n/*\nGet the\
    \ remainder of x and y\n    >>> remainder(2L, 3L)\n    1L\n    >>> remainder(5L,\
    \ 7L)\n    2L\n    \n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nGet the sign of x\n    >>> sign(2L)\n    1L\n    >>> sign(-2L)\n    1L\n\
    \    \n*/\nlong sign(long x) \n{\n    return x < 0 ? -1 : 1;\n}\n/*\nGet the absolute\
    \ value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-2L)\n    2L\n    \n*/\nlong\
    \ abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the modulus of x and\
    \ y\n    >>> modulus(2L, 3L)\n    1L\n    >>> modulus(5L, 7L)\n    2L\n    \n\
    */\nlong modulus(long x, long y) \n{\n    return x % y;\n}\n/*\nGet the remainder\
    \ of x and y\n    >>> remainder(2L, 3L)\n    1L\n    >>> remainder(5L, 7L)\n \
    \   2L\n    \n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n}\n/*\n\
    Get the sign of x\n    >>> sign(2\nunittest\n{\n    alias candidate = add;\n\n\
    \    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpw94rvnya.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw94rvnya.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    6L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    42L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the square root of a number\n    >>> sqrt(2L)\n    1.0\n    >>> sqrt(5L)\n\
    \    2.0\n    \n*/\ndouble sqrt(double x) \n{\n    return std.math.sqrt(x);\n\
    }\n/*\nGet the square root of a number\n    >>> sqrt(2L)\n    1.0\n    >>> sqrt(5L)\n\
    \    2.0\n    \n*/\nfloat sqrt(float x) \n{\n    return std.math.sqrt(x);\n}\n\
    /*\nGet the square root of a number\n    >>> sqrt(2L)\n    1.0\n    >>> sqrt(5L)\n\
    \    2.0\n    \n*/\nlong double sqrt(long double x) \n{\n    return std.math.sqrt(x);\n\
    }\n/*\nGet the square root of a number\n    >>> sqrt(2L)\n    1.0\n    >>> sqrt(5L)\n\
    \    2.0\n    \n*/\ndouble sqrt(double x) \n{\n    return std.math.sqrt(x);\n\
    }\n/*\nGet the square root of a number\n    >>> sqrt(2L)\n    1.0\n    >>> sqrt(5L)\n\
    \    2.0\n    \n*/\nfloat sqrt(float x) \n{\n    return std.math.sqrt(x);\n}\n\
    /*\nGet the square root of a number\n    >>> sqrt(2L)\n    1.0\n    >>> sqrt(5L)\n\
    \    2.0\n    \n*/\nlong double sqrt(long double x) \n{\n    return std.math.sqrt(x);\n\
    }\n/*\nGet the square root of a number\n    >>> sqrt(2L)\n    1.0\n    >>> sqrt(5L)\n\
    \    2.0\n    \n*/\ndouble sqrt(double x) \n{\n    return std.math.sqrt(x);\n\
    }\n/*\nGet the square root of a number\n    >>> sqrt(2L)\n    1.0\n    >>> sqrt(5L)\n\
    \    2.0\n    \n*/\nfloat sqrt(float x) \n{\n    return std.math.sqrt(\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpea77dixj.d(83): Error: use `real` instead of `long double`

    /tmp/tmpea77dixj.d(83): Error: use `real` instead of `long double`

    /tmp/tmpea77dixj.d(119): Error: use `real` instead of `long double`

    /tmp/tmpea77dixj.d(119): Error: use `real` instead of `long double`

    /tmp/tmpea77dixj.d(146): Error: expression expected, not `unittest`

    /tmp/tmpea77dixj.d(147): Error: found `{` when expecting `,`

    /tmp/tmpea77dixj.d(148): Error: expression expected, not `alias`

    /tmp/tmpea77dixj.d(148): Error: found `candidate` when expecting `,`

    /tmp/tmpea77dixj.d(148): Error: expression expected, not `=`

    /tmp/tmpea77dixj.d(148): Error: found `add` when expecting `,`

    /tmp/tmpea77dixj.d(148): Error: expression expected, not `;`

    /tmp/tmpea77dixj.d(150): Error: found `assert` when expecting `,`

    /tmp/tmpea77dixj.d(150): Error: found `;` when expecting `,`

    /tmp/tmpea77dixj.d(151): Error: found `;` when expecting `,`

    /tmp/tmpea77dixj.d(152): Error: found `;` when expecting `,`

    /tmp/tmpea77dixj.d(153): Error: found `;` when expecting '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the absolute value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-5L)\n    5L\n\
    \    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the sign\
    \ of x\n    >>> sign(-2L)\n    -1L\n    >>> sign(-5L)\n    1L\n    \n*/\nlong\
    \ sign(long x) \n{\n    return x < 0 ? -1 : 1;\n}\n/*\nGet the floor of x\n  \
    \  >>> floor(2L)\n    2L\n    >>> floor(5L)\n    5L\n    \n*/\nlong floor(long\
    \ x) \n{\n    return x < 0 ? x + 1 : x;\n}\n/*\nGet the ceiling of x\n    >>>\
    \ ceil(2L)\n    3L\n    >>> ceil(5L)\n    6L\n    \n*/\nlong ceil(long x) \n{\n\
    \    return x < 0 ? x - 1 : x;\n}\n/*\nGet the remainder of x divided by y\n \
    \   >>> remainder(2L, 3L)\n    1L\n    >>> remainder(5L, 7L)\n    3L\n    \n*/\n\
    long remainder(long x, long y) \n{\n    return x % y;\n}\n/*\nGet the modulo of\
    \ x divided by y\n    >>> modulo(2L, 3L)\n    2L\n    >>> modulo(5L, 7L)\n   \
    \ 3L\n    \n*/\nlong modulo(long x, long y) \n{\n    return x % y;\n}\n/*\nGet\
    \ the floor division of x divided by y\n    >>> floorDivision(2L, 3L)\n    1L\n\
    \    >>> floorDivision(5L, 7L)\n    3L\n    \n*/\nlong floorDivision(long x, long\
    \ y) \n{\n    return x % y;\n}\n/*\nGet the \nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpf_uh60nd.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpf_uh60nd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\n/*\nSubtract two numbers x and y\n    >>>\
    \ subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\nlong subtract(long\
    \ x, long y) \n{\n\treturn x - y;\n}\n/*\nMultiply two numbers x and y\n    >>>\
    \ multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n    \n*/\nlong\
    \ multiply(long x, long y) \n{\n\treturn x * y;\n}\n/*\nDivide two numbers x and\
    \ y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    3L\n    \n*/\n\
    long divide(long x, long y) \n{\n\treturn x / y;\n}\n/*\nGet the absolute value\
    \ of a number\n    >>> abs(-1L)\n    1L\n    >>> abs(1L)\n    1L\n    \n*/\nlong\
    \ abs(long x) \n{\n\treturn x < 0 ? -x : x;\n}\n/*\nGet the sign of a number\n\
    \    >>> sign(-1)\n    1L\n    >>> sign(1)\n    1L\n    \n*/\nlong sign(long x)\
    \ \n{\n\treturn x < 0 ? -1 : 1;\n}\n/*\nGet the floor of a number\n    >>> floor(-1L)\n\
    \    -1L\n    >>> floor(-2L)\n    0L\n    >>> floor(-3L)\n    -1L\n    >>> floor(-4L)\n\
    \    -2L\n    >>> floor(-1L)\n    -1L\n    \n*/\nlong floor(long x) \n{\n\treturn\
    \ x < 0 ? -x : x;\n}\n/*\nGet the ceiling of a number\n    >>> ceil(-1L)\n   \
    \ 0L\n    >>> ceil(-2L)\n    1L\n    >>> ceil(-3L)\n    1L\n    >>> ceil(-4L)\n\
    \    2L\n    >>> ceil(-1L)\n    0L\n    \n*/\nlong ceil(long x) \n{\n\treturn\
    \ x < 0 ? -x : x;\n}\n/*\nGet the remainder of a number divided by another\n \
    \   >>> remainder(2L, 3L)\n    1L\n    >>> remainder(5L, 7L)\n    3L\n    \n*/\n\
    long remainder(long x, long y) \n{\n\treturn x - y % y;\n}\n/*\nGet the modulus\
    \ of a number divided by another\n    >>> modulus(2L, 3L)\n    1L\n    >>> modulus(5L,\
    \ 7L)\n    3L\n    \n*/\nlong modulus(long x, long y) \n{\n\treturn x % y;\n}\n\
    /*\nGet the absolute value of a number\n\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpb9j0gv2r.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb9j0gv2r.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Return x raised to the power of y\n    >>> power(2L, 3L)\n    8L\n    >>> power(5L,\
    \ 7L)\n    121L\n    \n*/\nlong power(long x, long y) \n{\n    return pow(x, y);\n\
    }\n/*\nReturn x to the power of y\n    >>> power(2L, 3L)\n    8L\n    >>> power(5L,\
    \ 7L)\n    121L\n    \n*/\nlong power(long x, long y) \n{\n    return pow(x, y);\n\
    }\n/*\nReturn the square root of x\n    >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n\
    \    1.41421356237\n    \n*/\ndouble sqrt(double x) \n{\n    return sqrt(x);\n\
    }\n/*\nReturn the square root of x\n    >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n\
    \    1.41421356237\n    \n*/\ndouble sqrt(long x) \n{\n    return sqrt(x);\n}\n\
    /*\nReturn the square root of x\n    >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n\
    \    1.41421356237\n    \n*/\ndouble sqrt(int x) \n{\n    return sqrt(x);\n}\n\
    /*\nReturn the square root of x\n    >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n\
    \    1.41421356237\n    \n*/\ndouble sqrt(short x) \n{\n    return sqrt(x);\n\
    }\n/*\nReturn the square root of x\n    >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n\
    \    1.41421356237\n    \n*/\ndouble sqrt(byte x) \n{\n    return sqrt(x);\n}\n\
    /*\nReturn the square root of x\n    >>> sqrt(2L)\n    1L\n    >>> sqrt(5L)\n\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n\
    \    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n\
    \    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpowut4hwk.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpowut4hwk.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    3L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    21L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the absolute value of x\n    >>> abs(1L)\n    1L\n    >>> abs(-1L)\n    1L\n\
    \    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the modulus\
    \ of x and y\n    >>> modulus(1L, 2L)\n    1L\n    >>> modulus(-1L, 2L)\n    1L\n\
    \    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n}\n/*\nGet the\
    \ remainder of x and y\n    >>> remainder(1L, 2L)\n    1L\n    >>> remainder(-1L,\
    \ 2L)\n    -1L\n    \n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nGet the sign of x\n    >>> sign(1L)\n    1L\n    >>> sign(-1L)\n    1L\n\
    \    \n*/\nlong sign(long x) \n{\n    return x < 0 ? -1L : 1L;\n}\n/*\nGet the\
    \ absolute value of x\n    >>> abs(1L)\n    1L\n    >>> abs(-1L)\n    1L\n   \
    \ \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the modulus\
    \ of x and y\n    >>> modulus(1L, 2L)\n    1L\n    >>> modulus(-1L, 2L)\n    1L\n\
    \    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n}\n/*\nGet the\
    \ remainder of x and y\n    >>> remainder(1L, 2L)\n    1L\n    >>> remainder(-1L,\
    \ 2L)\n    -1L\n    \n*/\nlong remainder(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nGet the sign of \nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L,\
    \ 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L,\
    \ 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L,\
    \ 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpx6x6s3ut.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpx6x6s3ut.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163958
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    -1L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    42L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the absolute value of a number\n    >>> abs(-5)\n    5\n    >>> abs(5)\n \
    \   5\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the floor value of a number\n    >>> floor(5)\n    5\n    >>> floor(5.5)\n \
    \   5\n    \n*/\nlong floor(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the ceiling value of a number\n    >>> ceil(5)\n    6\n    >>> ceil(5.5)\n \
    \   6\n    \n*/\nlong ceil(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the natural logarithm of a number\n    >>> log(5)\n    1.6094379124341\n   \
    \ >>> log(5.5)\n    1.6094379124341\n    \n*/\ndouble log(double x) \n{\n    return\
    \ log(x);\n}\n/*\nGet the square root of a number\n    >>> sqrt(5)\n    1.41421356237\n\
    \    >>> sqrt(5.5)\n    1.7320508075688\n    \n*/\ndouble sqrt(double x) \n{\n\
    \    return sqrt(x);\n}\n/*\nGet the reciprocal of a number\n    >>> reciprocal(5)\n\
    \    0.5\n    >>> reciprocal(5.5)\n    0.5\n    \n*/\ndouble reciprocal(double\
    \ x) \n{\n    return 1 / x;\n}\n/*\nGet the modulus of a number\n    >>> modulus(5,\
    \ 3)\n    1\n    >>> modulus(5.5, 3)\n    1\n    \n*/\ndouble modulus(double x,\
    \ double y) \n{\n    return fmod(x, y);\n}\n/*\nGet the sine of a number\n   \
    \ >>> sin(5)\n    0.841470984807897\n    >>> sin(5.\nunittest\n{\n    alias candidate\
    \ = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L)\
    \ == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L)\
    \ == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp2oqaqszz.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2oqaqszz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163958
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    6L\n    \n*/\nlong\
    \ subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers\
    \ x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>> multiply(5L, 7L)\n    42L\n\
    \    \n*/\nlong multiply(long x, long y) \n{\n    return x * y;\n}\n/*\nDivide\
    \ two numbers x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n\
    \    3L\n    \n*/\nlong divide(long x, long y) \n{\n    return x / y;\n}\n/*\n\
    Get the remainder of x divided by y\n    >>> remainder(2L, 3L)\n    1L\n    >>>\
    \ remainder(5L, 7L)\n    2L\n    \n*/\nlong remainder(long x, long y) \n{\n  \
    \  return x % y;\n}\n/*\nGet the sign of x\n    >>> sign(1L)\n    1L\n    >>>\
    \ sign(-1L)\n    1L\n    \n*/\nlong sign(long x) \n{\n    return x < 0 ? -1 :\
    \ 1;\n}\n/*\nGet the absolute value of x\n    >>> abs(1L)\n    1L\n    >>> abs(-1L)\n\
    \    1L\n    \n*/\nlong abs(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the modulus of x divided by y\n    >>> modulus(2L, 3L)\n    1L\n    >>> modulus(5L,\
    \ 7L)\n    2L\n    \n*/\nlong modulus(long x, long y) \n{\n    return x % y;\n\
    }\n/*\nGet the floor of x\n    >>> floor(1L)\n    1L\n    >>> floor(-1L)\n   \
    \ -1L\n    \n*/\nlong floor(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet\
    \ the ceiling of x\n    >>> ceil(1L)\n    1L\n    >>> ceil(-1L)\n    0L\n    \n\
    */\nlong ceil(long x) \n{\n    return x < 0 ? -x : x;\n}\n/*\nGet the floor of\
    \ x with decimal precision\n    >>> floor(1L, 2L)\n    1L\n    >>> floor(-1L,\
    \ 2L)\n    -1L\n    \n*/\nlong floor(long x, int d) \n{\n    return x < 0 ? -x\
    \ : x;\n}\n/*\nGet the ceiling of x with decimal precision\n    >>> ceil(1L, \n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n\
    \    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n\
    \    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplr4h9sg_.d(135): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplr4h9sg_.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163958
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163958
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long add(long long\
    \ x, long long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n   \
    \ >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\ndouble add(double\
    \ x, double y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>>\
    \ add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nfloat add(float\
    \ x, float y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>>\
    \ add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong double add(long\
    \ double x, long double y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and\
    \ y\n    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpg4rgiojj.d(23): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpg4rgiojj.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpg4rgiojj.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpg4rgiojj.d(59): Error: use `real` instead of `long double`

    /tmp/tmpg4rgiojj.d(59): Error: use `real` instead of `long double`

    /tmp/tmpg4rgiojj.d(59): Error: use `real` instead of `long double`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg4rgiojj.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long add(long long\
    \ x, long long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n\
    \    >>> sub(2L, 3L)\n    1L\n    >>> sub(5L, 7L)\n    -1L\n    \n*/\nlong sub(long\
    \ x, long y) \n{\n    return x - y;\n}\n/*\nSubtract two numbers x and y\n   \
    \ >>> sub(2L, 3L)\n    1L\n    >>> sub(5L, 7L)\n    -1L\n    \n*/\nlong long sub(long\
    \ long x, long long y) \n{\n    return x - y;\n}\n/*\nMultiply two numbers x and\
    \ y\n    >>> mul(3L, 2L)\n    6L\n    >>> mul(2L, 3L)\n    6L\n    \n*/\nlong\
    \ mul(long x, long y) \n{\n    return x * y;\n}\n/*\nMultiply two numbers x and\
    \ y\n    >>> mul(3L, 2L)\n    6L\n    >>> mul(2L, 3L)\n    6L\n    \n*/\nlong\
    \ long mul(long long x, long long y) \n{\n    return x * y;\n}\n/*\nDivide two\
    \ numbers x and y\n    >>> div(2L, 3L)\n    1L\n    >>> div(5L, 7L)\n    3L\n\
    \    \n*/\nlong div(long x, long y) \n{\n    return x / y;\n}\n/*\nDivide two\
    \ numbers x and y\n    >>> div(2L, 3L)\n    1L\n    >>> div(5L, 7L)\n    3L\n\
    \    \n*/\nlong long div(long long x, long long y) \n{\n    return x / y;\n}\n\
    /*\nGet the remainder of dividing two numbers x and y\n    >>> rem(2L, 3L)\n \
    \   1L\n    >>> rem(5L, 7L)\n    3L\n    \n*/\nlong rem(long x, long y) \n{\n\
    \    return x % y;\n}\n/*\nGet the remainder of dividing two numbers x and y\n\
    \    >>> rem(2L, 3L)\n    1L\n    >>> rem(5L, 7L)\n    3L\n    \n*/\nlong long\
    \ rem(long long x, long long y) \n{\n    return x % y;\n}\n/*\nGet the absolute\
    \ value of x\n    >>> abs(2L)\n    2L\n    >>> abs(-2L)\n    2L\n\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpsg5rjo_t.d(23): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpsg5rjo_t.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsg5rjo_t.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsg5rjo_t.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsg5rjo_t.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsg5rjo_t.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsg5rjo_t.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsg5rjo_t.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsg5rjo_t.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsg5rjo_t.d(95): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsg5rjo_t.d(95): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpsg5rjo_t.d(95): Error: use `long` for a 64 bit integer instead of `lon'
  stdout: ''
  timestamp: 1660163958
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nunittest\n{\n    alias\
    \ candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163958
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long add(long long\
    \ x, long long y) \n{\n    return x + y;\n}\n/*\nSubtract two numbers x and y\n\
    \    >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    -1L\n    \n*/\n\
    long subtract(long x, long y) \n{\n    return x - y;\n}\n/*\nSubtract two numbers\
    \ x and y\n    >>> subtract(2L, 3L)\n    1L\n    >>> subtract(5L, 7L)\n    -1L\n\
    \    \n*/\nlong long subtract(long long x, long long y) \n{\n    return x - y;\n\
    }\n/*\nMultiply two numbers x and y\n    >>> multiply(2L, 3L)\n    6L\n    >>>\
    \ multiply(5L, 7L)\n    42L\n    \n*/\nlong multiply(long x, long y) \n{\n   \
    \ return x * y;\n}\n/*\nMultiply two numbers x and y\n    >>> multiply(2L, 3L)\n\
    \    6L\n    >>> multiply(5L, 7L)\n    42L\n    \n*/\nlong long multiply(long\
    \ long x, long long y) \n{\n    return x * y;\n}\n/*\nDivide two numbers x and\
    \ y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    2L\n    \n*/\n\
    long divide(long x, long y) \n{\n    return x / y;\n}\n/*\nDivide two numbers\
    \ x and y\n    >>> divide(2L, 3L)\n    1L\n    >>> divide(5L, 7L)\n    2L\n  \
    \  \n*/\nlong long divide(long long x, long long y) \n{\n    return x / y;\n}\n\
    /*\nRaise a number to a power\n    >>> power(2L, 3L)\n    8L\n    >>> power(5L,\
    \ 7L)\n    50L\n    \n*/\nlong power(long x, long y) \n{\n    return x * y;\n\
    }\n/*\nRaise a number to a power\n    >>> power(2L, 3L)\n    8L\n    >>> power(5L,\
    \ 7L)\n    50L\n    \n*/\nlong long power(long long x, long long y) \n{\n    return\
    \ x * y;\n}\n/*\nGet the absolute value of a number\n    >>> abs(2L)\n    2L\n\
    \    >>> abs(-5L)\n    5L\n    \n*/\nlong abs(long x) \n{\n    return x;\n}\n\
    /*\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) ==\
    \ 1L);\n    assert(candidate(1L, 0L) == 1L);\n    assert(candidate(2L, 3L) ==\
    \ 5L);\n    assert(candidate(5L, 7L) == 12L);\n    assert(candidate(7L, 5L) ==\
    \ 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpmxal26ql.d(23): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmpmxal26ql.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmxal26ql.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmxal26ql.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmxal26ql.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmxal26ql.d(47): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmxal26ql.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmxal26ql.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmxal26ql.d(71): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmxal26ql.d(95): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmxal26ql.d(95): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmpmxal26ql.d(95): Error: use `long` for a 64 bit integer instead of `lon'
  stdout: ''
  timestamp: 1660163958
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 0
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n\treturn x + y;\n}\nunittest\n{\n    alias candidate = add;\n\
    \n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L, 0L) == 1L);\n\
    \    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L, 7L) == 12L);\n\
    \    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660163937
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nAdd two numbers x and y\n\
    \    >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong add(long\
    \ x, long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n    >>> add(2L,\
    \ 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nlong long add(long long\
    \ x, long long y) \n{\n    return x + y;\n}\n/*\nAdd two numbers x and y\n   \
    \ >>> add(2L, 3L)\n    5L\n    >>> add(5L, 7L)\n    12L\n    \n*/\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate(0L, 1L) == 1L);\n    assert(candidate(1L,\
    \ 0L) == 1L);\n    assert(candidate(2L, 3L) == 5L);\n    assert(candidate(5L,\
    \ 7L) == 12L);\n    assert(candidate(7L, 5L) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3gtbzk_7.d(23): Error: use `long` for a 64 bit integer instead
    of `long long`

    /tmp/tmp3gtbzk_7.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    /tmp/tmp3gtbzk_7.d(23): Error: use `long` for a 64 bit integer instead of `long
    long`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3gtbzk_7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660163957

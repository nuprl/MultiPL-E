language: d
name: HumanEval_155_even_odd_count
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprzso1yea.d(29): Error: multiple ! arguments are not allowed\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprzso1yea.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even, odd;\n    even = num / 10;\n    odd = num % 10;\n    return Tuple!(even,\
    \ odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(even, odd)` cannot use local `even` as parameter
    to non-global template `parseSpecs(Specs...)`\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(501):
    Error: template instance `parseSpecs!(even, odd)` cannot use local `odd` as parameter
    to non-global template `parseSpecs(Specs...)`\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(614):
    Error: CTFE failed because of previous errors in `injectNamedFields`\n/tmp/tmpolvtj51j.d(18):
    Error: template instance `tmpolvtj51j.even_odd_count.Tuple!(even, odd)` error
    instantiating\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpolvtj51j.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num\
    \ % 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\t\telse\n\t\t{\n\
    \t\t\todd++;\n\t\t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) odd, even;\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplhoelxvo.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmplhoelxvo.d(30): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplhoelxvo.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\
    \t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n{\n    alias\
    \ candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n\
    \    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L) ==\
    \ tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7oftxgr4.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmp7oftxgr4.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7oftxgr4.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num % 10;\n\t\t\
    num /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\todd\
    \ += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\n/*\nGiven an integer.\
    \ return a tuple that has the number of even and odd digits respectively.\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphqocxadp.d(25): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmphqocxadp.d(25): Error: found `,` instead of statement\n/tmp/tmphqocxadp.d(27):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphqocxadp.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\t\
    odd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgr7bebvz.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpgr7bebvz.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgr7bebvz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num\
    \ % 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven++;\n\t\t}\n\
    \t\telse\n\t\t{\n\t\t\todd++;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n\
    }\nunittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpogxe79ag.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpogxe79ag.d(30): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpogxe79ag.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0) {\n        long digit\
    \ = num % 10;\n        num /= 10;\n        if(digit % 2 == 0) {\n            even++;\n\
    \        } else {\n            odd++;\n        }\n    }\n    return Tuple!(long,\
    \ long) odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpz270fctr.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpz270fctr.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpz270fctr.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile(num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tnum /= 10;\n\t\tif(digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else\
    \ {\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprfke0h7m.d(26): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmprfke0h7m.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long\
    \ digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n        num\
    \ /= 10;\n    }\n    return Tuple!(long, long) odd, even;\n}\n/*\nGiven a positive\
    \ integer. return a tuple that has the number of even and odd digits respectively.\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0hfxk8uk.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp0hfxk8uk.d(30): Error: found `,` instead of statement\n/tmp/tmp0hfxk8uk.d(32):
    Error: unterminated /* */ comment\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0hfxk8uk.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0) {\n        long digit\
    \ = num % 10;\n        if(digit % 2 == 0) {\n            even++;\n        } else\
    \ {\n            odd++;\n        }\n        num /= 10;\n    }\n    return Tuple!(long,\
    \ long) odd, even;\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\n\
    \    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqn22a3oe.d(26): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpqn22a3oe.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqn22a3oe.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num % 10;\n\t\
    \tnum /= 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven += 1;\n\t\t} else {\n\t\t\t\
    odd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long)!(even, odd);\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmtzgzuwv.d(25): Error: multiple ! arguments are not allowed\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmtzgzuwv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvy4gcp1l.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpvy4gcp1l.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvy4gcp1l.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long\
    \ digit = num % 10;\n        num /= 10;\n        if(digit % 2 == 0)\n        {\n\
    \            even++;\n        }\n        else\n        {\n            odd++;\n\
    \        }\n    }\n    return Tuple!(long, long) odd, even;\n}\nunittest\n{\n\
    \    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6l13y00y.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp6l13y00y.d(30): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6l13y00y.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvy4gcp1l.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpvy4gcp1l.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvy4gcp1l.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) even_odd_count(even),\
    \ even_odd_count(odd);\n}\nunittest\n{\n    alias candidate = even_odd_count;\n\
    \n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L,\
    \ 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpg4aze2qv.d(29): Error: found `even_odd_count` when expecting
    `;` following `return` statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg4aze2qv.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t\teven++;\n\t\telse\n\t\t\todd++;\n\
    \t}\n\treturn Tuple!(long, long) odd, even;\n}\nunittest\n{\n    alias candidate\
    \ = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L, 1L));\n    assert(candidate(-78L)\
    \ == tuple(1L, 1L));\n    assert(candidate(3452L) == tuple(2L, 2L));\n    assert(candidate(346211L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-345821L) == tuple(3L, 3L));\n    assert(candidate(-2L)\
    \ == tuple(1L, 0L));\n    assert(candidate(-45347L) == tuple(2L, 3L));\n    assert(candidate(0L)\
    \ == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpu3okia9j.d(25): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpu3okia9j.d(25): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu3okia9j.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0, odd = 0;\n\twhile(num > 0)\n\t{\n\t\tlong digit = num % 10;\n\
    \t\tnum /= 10;\n\t\tif(digit % 2 == 0)\n\t\t{\n\t\t\teven += 1;\n\t\t}\n\t\telse\n\
    \t\t{\n\t\t\todd += 1;\n\t\t}\n\t}\n\treturn Tuple!(long, long) odd, even;\n}\n\
    unittest\n{\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L)\
    \ == tuple(0L, 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpvy4gcp1l.d(29): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmpvy4gcp1l.d(29): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvy4gcp1l.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \tlong even = 0;\n\tlong odd = 0;\n\twhile (num > 0) {\n\t\tlong digit = num %\
    \ 10;\n\t\tif (digit % 2 == 0) {\n\t\t\teven++;\n\t\t} else {\n\t\t\todd++;\n\t\
    \t}\n\t\tnum /= 10;\n\t}\n\treturn Tuple!(long, long) even, odd;\n}\nunittest\n\
    {\n    alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptptbc9wz.d(26): Error: found `even` when expecting `;` following
    `return` statement\n/tmp/tmptptbc9wz.d(26): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptptbc9wz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven an integer. return a\
    \ tuple that has the number of even and odd digits respectively.\n\n     Example:\n\
    \    >>> even_odd_count(-12L)\n    tuple(1L, 1L)\n    >>> even_odd_count(123L)\n\
    \    tuple(1L, 2L)\n    \n*/\nTuple!(long, long) even_odd_count(long num) \n{\n\
    \    long even = 0;\n    long odd = 0;\n    while(num > 0)\n    {\n        long\
    \ digit = num % 10;\n        if(digit % 2 == 0)\n        {\n            even++;\n\
    \        }\n        else\n        {\n            odd++;\n        }\n        num\
    \ /= 10;\n    }\n    return Tuple!(long, long) odd, even;\n}\nunittest\n{\n  \
    \  alias candidate = even_odd_count;\n\n    assert(candidate(7L) == tuple(0L,\
    \ 1L));\n    assert(candidate(-78L) == tuple(1L, 1L));\n    assert(candidate(3452L)\
    \ == tuple(2L, 2L));\n    assert(candidate(346211L) == tuple(3L, 3L));\n    assert(candidate(-345821L)\
    \ == tuple(3L, 3L));\n    assert(candidate(-2L) == tuple(1L, 0L));\n    assert(candidate(-45347L)\
    \ == tuple(2L, 3L));\n    assert(candidate(0L) == tuple(1L, 0L));\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9afkaeam.d(30): Error: found `odd` when expecting `;` following
    `return` statement\n/tmp/tmp9afkaeam.d(30): Error: found `,` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9afkaeam.d", "-I/tmp"]\n'''
  stdout: b''

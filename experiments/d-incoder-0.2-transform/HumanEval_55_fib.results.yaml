language: d
name: HumanEval_55_fib
results:
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n\tlong a,b;\n\ta=1L;\n\tb=1L;\n\tfor(long i=2L;i<=n;i++)\n\t{\n\t\t\
    a=b;\n\t\tb=a+b;\n\t}\n\treturn a;\n}\n/*\nReturn n-th Fibonacci number.\n   \
    \ >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n \
    \   \n*/\nlong fib2(long n) \n{\n\tlong a,b;\n\ta=1L;\n\tb=1L;\n\tfor(long i=2L;i<=n;i++)\n\
    \t{\n\t\ta=b;\n\t\tb=a+b;\n\t}\n\treturn b;\n}\n/*\nReturn n-th Fibonacci number.\n\
    \    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n\
    \    \n*/\nlong fib3(long n) \n{\n\tlong a,b;\n\ta=1L;\n\tb=1L;\n\tfor(long i=2L;i<=n;i++)\n\
    \t{\n\t\ta=b;\n\t\tb=a+b;\n\t}\n\treturn a;\n}\n/*\nReturn n-th Fibonacci number.\n\
    \    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n\
    \    \n*/\nlong fib4(long n) \n{\n\tlong a,b;\n\ta=1L;\n\tb=1L;\n\tfor(long i=2L;i<=n;i++)\n\
    \t{\n\t\ta=b;\n\t\tb=a+b;\n\t}\n\treturn b;\n}\n/*\nReturn n-th Fibonacci number.\n\
    \    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n\
    \    \n*/\nlong fib5(long n) \n{\n\tlong a,b;\n\ta=1L;\n\tb=1L;\n\tfor(long i=2L;i<=n;i++)\n\
    \t{\n\t\ta=b;\n\t\tb=a+b;\n\t}\n\treturn a;\n}\n/*\nReturn n-th Fibonacci number.\n\
    \    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n\
    \    \n*/\nlong fib6(long n) \n{\n\tlong a,b;\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpromwz3uq.d(125): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpromwz3uq.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n\tif (n <= 2L) return 1L;\n\telse return fib(n-2L) + fib(n-1L);\n}\n\
    /*\nReturn Fibonacci number for given integer.\n    >>> fib(10L)\n    55L\n  \
    \  >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(int n) \n\
    {\n\tif (n <= 2L) return 1L;\n\telse return fib(n-2L) + fib(n-1L);\n}\n/*\nReturn\
    \ Fibonacci number for given float.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n\
    \    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(float n) \n{\n\tif (n <=\
    \ 2L) return 1L;\n\telse return fib(n-2L) + fib(n-1L);\n}\n/*\nReturn Fibonacci\
    \ number for given double.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n\
    \    >>> fib(8L)\n    21L\n    \n*/\nlong fib(double n) \n{\n\tif (n <= 2L) return\
    \ 1L;\n\telse return fib(n-2L) + fib(n-1L);\n}\n/*\nReturn Fibonacci number for\
    \ given long double.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n   \
    \ >>> fib(8L)\n    21L\n    \n*/\nlong fib(long double n) \n{\n\tif (n <= 2L)\
    \ return 1L;\n\telse return fib(n-2L) + fib(n-1L);\n}\n/*\nReturn Fibonacci number\
    \ for given complex.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n   \
    \ >>> fib(8L)\n    21L\n    \n*/\nlong fib(complex n) \n{\n\tif (n <= 2L) return\
    \ 1L;\n\telse return fib(n-2L) + fib(n-1L);\n}\n/*\nReturn Fibonacci number for\
    \ given complex double.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n\
    \    >>> fib(8L)\n    21L\n    \n*/\nlong fib(complex double n) \n{\n\tif (n <=\
    \ 2L) return 1L;\n\telse return fib(n-2\nunittest\n{\n    alias candidate = fib;\n\
    \n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L)\
    \ == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp9c0rtayn.d(72): Error: use `real` instead of `long double`\n/tmp/tmp9c0rtayn.d(102):
    Error: found `double` when expecting `)`\n/tmp/tmp9c0rtayn.d(102): Error: semicolon
    expected following function declaration\n/tmp/tmp9c0rtayn.d(102): Error: no identifier
    for declarator `n`\n/tmp/tmp9c0rtayn.d(102): Error: declaration expected, not
    `)`\n/tmp/tmp9c0rtayn.d(105): Error: declaration expected, not `else`\n/tmp/tmp9c0rtayn.d(110):
    Error: declaration expected, not `assert`\n/tmp/tmp9c0rtayn.d(111): Error: declaration
    expected, not `assert`\n/tmp/tmp9c0rtayn.d(112): Error: declaration expected,
    not `assert`\n/tmp/tmp9c0rtayn.d(113): Error: declaration expected, not `assert`\n/tmp/tmp9c0rtayn.d(114):
    Error: declaration expected, not `assert`\n/tmp/tmp9c0rtayn.d(115): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9c0rtayn.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n\tlong a,b;\n\ta = 1;\n\tb = 1;\n\twhile (n>0)\n\t{\n\t\tlong c = a\
    \ + b;\n\t\ta = b;\n\t\tb = c;\n\t\tn--;\n\t}\n\treturn b;\n}\n/*\nReturn n-th\
    \ Fibonacci number.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>>\
    \ fib(8L)\n    21L\n    \n*/\nlong fib(long n) \n{\n\tlong a,b;\n\ta = 1;\n\t\
    b = 1;\n\twhile (n>0)\n\t{\n\t\tlong c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t\t\
    n--;\n\t}\n\treturn b;\n}\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n\tlong a,b;\n\ta = 1;\n\tb = 1;\n\twhile (n>0)\n\t{\n\t\tlong c = a\
    \ + b;\n\t\ta = b;\n\t\tb = c;\n\t\tn--;\n\t}\n\treturn b;\n}\n/*\nReturn n-th\
    \ Fibonacci number.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>>\
    \ fib(8L)\n    21L\n    \n*/\nlong fib(long n) \n{\n\tlong a,b;\n\ta = 1;\n\t\
    b = 1;\n\twhile (n>0)\n\t{\n\t\tlong c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t\t\
    n--;\n\t}\n\treturn b;\n}\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n\tlong a,b;\n\ta = 1;\n\tb = 1;\n\twhile (n>0)\n\t{\n\t\tlong c = a\
    \ + b;\n\t\ta = b;\n\t\tb = c;\n\t\tn--;\n\t}\n\treturn b;\n}\n/*\nReturn n-th\
    \ Fibonacci number.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>>\
    \ fib(8L)\n    21L\n    \n*/\nlong fib(long n) \n{\n\tlong a,b;\n\ta = 1;\n\t\n\
    unittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbgpy4h6b.d(137): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbgpy4h6b.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n\tlong ret = 1;\n\tlong i;\n\tfor(i = 2; i <= n; i++)\n\t\tret += i;\n\
    \treturn ret;\n}\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n    55L\n\
    \    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long n)\
    \ \n{\n\tlong ret = 1;\n\tlong i;\n\tfor(i = 2; i <= n; i++)\n\t\tret += i;\n\t\
    return ret;\n}\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n    55L\n\
    \    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long n)\
    \ \n{\n\tlong ret = 1;\n\tlong i;\n\tfor(i = 2; i <= n; i++)\n\t\tret += i;\n\t\
    return ret;\n}\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n    55L\n\
    \    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long n)\
    \ \n{\n\tlong ret = 1;\n\tlong i;\n\tfor(i = 2; i <= n; i++)\n\t\tret += i;\n\t\
    return ret;\n}\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n    55L\n\
    \    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long n)\
    \ \n{\n\tlong ret = 1;\n\tlong i;\n\tfor(i = 2; i <= n; i++)\n\t\tret += i;\n\t\
    return ret;\n}\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n    55L\n\
    \    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long n)\
    \ \n{\n\tlong ret = 1;\n\tlong i;\n\tfor(i = 2; i <= n; i++)\n\t\tret += i;\n\t\
    return ret;\n}\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n    55L\n\
    \    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long n)\
    \ \n{\n\tlong ret = 1;\n\tlong i;\n\tfor(i = 2; i <= n; i++)\n\t\tret += i;\n\t\
    return ret;\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5shdpqph.d(127): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5shdpqph.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    long ret = 1;\n    long i;\n    for(i = 2; i <= n; i++)\n    {\n\
    \        ret *= i;\n        ret %= (long)LONG_MAX;\n    }\n    return ret;\n}\n\
    </code>\n<|/ a tags=fibonacci,c++,c |>\n<| c |>\nThe `%` operator is undefined\
    \ for signed integers. Use `%llu` instead.\n<|/ c |>\n<| c |>\n: Thanks. I didn't\
    \ know that. I've edited my answer.\n<|/ c |>\n<| c |>\n`%` is undefined for signed\
    \ integers because `%` has undefined behavior for negative operands. `%` has undefined\
    \ behavior for signed operands because `%` has undefined behavior for negative\
    \ operands.\n<|/ c |>\n<| c |>\n: Thanks. I didn't know that. I've edited my answer.\n\
    <|/ c |>\n<| c |>\nThe `%` operator is undefined for signed integers because `%`\
    \ has undefined behavior for negative operands. `%` has undefined behavior for\
    \ signed operands because `%` has undefined behavior for negative operands.\n\
    <|/ c |>\n<| a tags=fibonacci,c++,c |>\n<code>\n#include <stdio.h>\n#include <stdlib.h>\n\
    unittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqrye6lxi.d(19): Error: C style cast illegal, use `cast(long)LONG_MAX`\n/tmp/tmpqrye6lxi.d(23):
    Error: declaration expected, not `<`\n/tmp/tmpqrye6lxi.d(29): Error: unterminated
    character constant\n/tmp/tmpqrye6lxi.d(29): Error: unterminated character constant\n/tmp/tmpqrye6lxi.d(35):
    Error: unterminated character constant\n/tmp/tmpqrye6lxi.d(35): Error: unterminated
    character constant\n/tmp/tmpqrye6lxi.d(48): Error: declaration expected, not `assert`\n/tmp/tmpqrye6lxi.d(49):
    Error: declaration expected, not `assert`\n/tmp/tmpqrye6lxi.d(50): Error: declaration
    expected, not `assert`\n/tmp/tmpqrye6lxi.d(51): Error: declaration expected, not
    `assert`\n/tmp/tmpqrye6lxi.d(52): Error: declaration expected, not `assert`\n/tmp/tmpqrye6lxi.d(53):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqrye6lxi.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    long a,b;\n    a=1;\n    b=1;\n    for(long i=2;i<=n;i++)\n    {\n\
    \        long c=a+b;\n        a=b;\n        b=c;\n    }\n    return b;\n}\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n#include <stdio.h>\n#include <stdlib.h>\n\
    unittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp0rsdu_as.d(25): Error: declaration expected, not `<`\n/tmp/tmp0rsdu_as.d(35):
    Error: declaration expected, not `assert`\n/tmp/tmp0rsdu_as.d(36): Error: declaration
    expected, not `assert`\n/tmp/tmp0rsdu_as.d(37): Error: declaration expected, not
    `assert`\n/tmp/tmp0rsdu_as.d(38): Error: declaration expected, not `assert`\n/tmp/tmp0rsdu_as.d(39):
    Error: declaration expected, not `assert`\n/tmp/tmp0rsdu_as.d(40): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0rsdu_as.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n\tlong a,b;\n\ta = 1;\n\tb = 1;\n\tfor (long i = 0; i < n; i++) {\n\t\
    \tlong c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn b;\n}\nunittest\n{\n\
    \    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n\
    \    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp23gw1r25.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d8d]\n??:? void tmp23gw1r25.__unittest_L24_C1() [0x427a70]\n??:?
    void tmp23gw1r25.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428163]\n??:? _d_run_main [0x4280ce]\n??:? main [0x427b23]\n??:?
    __libc_start_main [0x38be1554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    long a = 1, b = 1;\n    long i;\n    for(i = 2; i <= n; i++) {\n\
    \        long c = a + b;\n        a = b;\n        b = c;\n    }\n    return b;\n\
    }\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nunittest\n{\n    alias\
    \ candidate = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n\
    \    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpaignx_tt.d(23): Error: declaration expected, not `<`\n/tmp/tmpaignx_tt.d(31):
    Error: declaration expected, not `assert`\n/tmp/tmpaignx_tt.d(32): Error: declaration
    expected, not `assert`\n/tmp/tmpaignx_tt.d(33): Error: declaration expected, not
    `assert`\n/tmp/tmpaignx_tt.d(34): Error: declaration expected, not `assert`\n/tmp/tmpaignx_tt.d(35):
    Error: declaration expected, not `assert`\n/tmp/tmpaignx_tt.d(36): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpaignx_tt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n\tlong a = 1, b = 1;\n\twhile (n > 0) {\n\t\tlong c = a + b;\n\t\ta\
    \ = b;\n\t\tb = c;\n\t\tn--;\n\t}\n\treturn b;\n}\n/*\nReturn n-th Fibonacci number.\n\
    \    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n\
    \    \n*/\nlong fib(long n) \n{\n\tlong a = 1, b = 1;\n\twhile (n > 0) {\n\t\t\
    long c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t\tn--;\n\t}\n\treturn b;\n}\n/*\nReturn\
    \ n-th Fibonacci number.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n\
    \    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long n) \n{\n\tlong a = 1, b = 1;\n\
    \twhile (n > 0) {\n\t\tlong c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t\tn--;\n\t}\n\
    \treturn b;\n}\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n    55L\n\
    \    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long n)\
    \ \n{\n\tlong a = 1, b = 1;\n\twhile (n > 0) {\n\t\tlong c = a + b;\n\t\ta = b;\n\
    \t\tb = c;\n\t\tn--;\n\t}\n\treturn b;\n}\n/*\nReturn n-th Fibonacci number.\n\
    \    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n\
    \    \n*/\nlong fib(long n) \n{\n\tlong a = 1, b = 1;\n\twhile (n > 0) {\n\t\t\
    long c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t\tn--;\n\t}\n\treturn b;\n}\n/*\nReturn\
    \ n-th Fibonacci number.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n\
    \    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long n) \n{\n\tlong a = 1, b = 1;\n\
    \twhile (n > 0) {\n\t\tlong c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t\tn--;\n\t}\n\
    \treturn b;\n}\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\nunittest\n\
    {\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n\
    \    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6hhv7ilw.d(128): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp6hhv7ilw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    long a = 1, b = 1;\n    long i;\n    \n    for (i = 2; i <= n; i++)\
    \ {\n        long c = a + b;\n        a = b;\n        b = c;\n    }\n    return\
    \ b;\n}\n</cell>\n<text>\nExercise 4\nWrite a function that returns the n-th Fibonacci\
    \ number modulo 1000000007 (i.e. the remainder after dividing by 1000000007).\n\
    unittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n\
    \    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L)\
    \ == 89L);\n    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmptfno0as1.d(24): Error: declaration expected, not `<`\n/tmp/tmptfno0as1.d(32):
    Error: declaration expected, not `assert`\n/tmp/tmptfno0as1.d(33): Error: declaration
    expected, not `assert`\n/tmp/tmptfno0as1.d(34): Error: declaration expected, not
    `assert`\n/tmp/tmptfno0as1.d(35): Error: declaration expected, not `assert`\n/tmp/tmptfno0as1.d(36):
    Error: declaration expected, not `assert`\n/tmp/tmptfno0as1.d(37): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptfno0as1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    long ret = 1;\n    long i;\n    for(i = 2; i <= n; i++)\n    {\n\
    \        ret += i;\n    }\n    return ret;\n}\n</code>\n<|/ a tags=fibonacci,c++\
    \ |>\n<| c |>\nThe `fib` function should return `long` not `int`.\n<|/ c |>\n\
    <| c |>\n: I agree, but I wanted to keep it simple. Of course the OP can change\
    \ it to `long` as he pleases.\n<|/ c |>\n<| c |>\n: I added a version that uses\
    \ `long long` instead of `long`.\n<|/ c |>\n<| c |>\n: I added a version that\
    \ uses `long long` instead of `long`.\n<|/ c |>\n<| c |>\n: I added a version\
    \ that uses `long long` instead of `long`.\n<|/ c |>\n<| a tags=fibonacci,c++\
    \ |>\n<code>\n#include <iostream>\nusing namespace std;\nunittest\n{\n    alias\
    \ candidate = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n\
    \    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpldo1hwyz.d(22): Error: declaration expected, not `<`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpldo1hwyz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n\tlong a,b,c,d;\n\ta = 1;\n\tb = 1;\n\tc = 1;\n\td = 1;\n\twhile (n\
    \ > 0)\n\t{\n\t\tlong temp = a;\n\t\ta = b;\n\t\tb = c;\n\t\tc = d;\n\t\td = temp;\n\
    \t\tn--;\n\t}\n\treturn d;\n}\n/*\nReturn Fibonacci number for given integer.\n\
    \    >>> fib2(10)\n    55\n    >>> fib2(8)\n    21\n    \n*/\nlong fib2(long n)\
    \ \n{\n\tlong a,b,c,d;\n\ta = 1;\n\tb = 1;\n\tc = 1;\n\td = 1;\n\twhile (n > 0)\n\
    \t{\n\t\tlong temp = a;\n\t\ta = b;\n\t\tb = c;\n\t\tc = d;\n\t\td = temp;\n\t\
    \tn--;\n\t}\n\treturn d;\n}\n/*\nReturn Fibonacci number for given integer.\n\
    \    >>> fib3(10)\n    55\n    >>> fib3(8)\n    21\n    \n*/\nlong fib3(long n)\
    \ \n{\n\tlong a,b,c,d;\n\ta = 1;\n\tb = 1;\n\tc = 1;\n\td = 1;\n\twhile (n > 0)\n\
    \t{\n\t\tlong temp = a;\n\t\ta = b;\n\t\tb = c;\n\t\tc = d;\n\t\td = temp;\n\t\
    \tn--;\n\t}\n\treturn d;\n}\n/*\nReturn Fibonacci number for given integer.\n\
    \    >>> fib4(10)\n    55\n    >>> fib4(8)\n    21\n    \n*/\nlong fib4(long n)\
    \ \n{\n\tlong a,b,c,d;\n\ta = 1;\n\tb = 1;\n\tc = 1;\n\td = 1;\n\twhile (n > 0)\n\
    \t{\n\t\tlong temp = a;\n\t\ta = b;\n\t\tb = c;\n\t\tc = d;\n\t\td = temp;\n\t\
    \tn--;\n\t}\n\treturn d;\n}\n/*\nReturn Fibonacci number for given integer.\n\
    \    >>> fib5(10)\n    55\n    >>> fib5(8)\n    21\n    \n*/\nlong fib5(long n)\
    \ \n{\n\tlong a,b,c,d;\n\ta = 1;\n\tb = 1;\n\tc = 1;\n\td = 1;\n\twhile (n > 0)\n\
    \t{\n\t\tlong temp = a;\n\t\ta = b;\n\t\tb = c;\n\t\tc = d;\n\t\td = temp;\n\t\
    \tn--;\n\t}\n\treturn d;\n}\n/*\nReturn Fibonacci number for given integer.\n\
    \    >>> fib6(10)\n    55\n\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcjuxuu_2.d(134): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcjuxuu_2.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n\tlong a,b;\n\ta = 1;\n\tb = 1;\n\twhile (n > 0)\n\t{\n\t\tlong c =\
    \ a + b;\n\t\ta = b;\n\t\tb = c;\n\t\tn--;\n\t}\n\treturn b;\n}\n/*\nReturn n-th\
    \ Fibonacci number.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>>\
    \ fib(8L)\n    21L\n    \n*/\nlong fib2(long n) \n{\n\tlong a,b;\n\ta = 1;\n\t\
    b = 1;\n\twhile (n > 0)\n\t{\n\t\tlong c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t\t\
    n--;\n\t}\n\treturn b;\n}\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib_n(long\
    \ n) \n{\n\tlong a,b;\n\ta = 1;\n\tb = 1;\n\twhile (n > 0)\n\t{\n\t\tlong c =\
    \ a + b;\n\t\ta = b;\n\t\tb = c;\n\t\tn--;\n\t}\n\treturn b;\n}\n/*\nReturn n-th\
    \ Fibonacci number.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>>\
    \ fib(8L)\n    21L\n    \n*/\nlong fib3(long n) \n{\n\tlong a,b;\n\ta = 1;\n\t\
    b = 1;\n\twhile (n > 0)\n\t{\n\t\tlong c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t\t\
    n--;\n\t}\n\treturn b;\n}\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib_n_1(long\
    \ n) \n{\n\tlong a,b;\n\ta = 1;\n\tb = 1;\n\twhile (n > 0)\n\t{\n\t\tlong c =\
    \ a + b;\n\t\ta = b;\n\t\tb = c;\n\t\tn--;\n\t}\n\treturn b;\n}\n/*\nReturn n-th\
    \ Fibonacci number.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>>\
    \ fib(8L)\n    21L\n    \n*/\nlong fib4(long n) \n{\n\tlong a,b;\n\ta = 1;\n\t\
    b = 1;\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) ==\
    \ 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp43u1q_4d.d(137): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp43u1q_4d.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n\tlong ret = 1;\n\tlong i;\n\tfor(i = 2; i <= n; i++)\n\t\tret = ret\
    \ + i;\n\treturn ret;\n}\n/*\nReturn Fibonacci number for given number.\n    >>>\
    \ fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n\
    */\nlong fib2(long n) \n{\n\tlong ret = 1;\n\tlong i;\n\tfor(i = 2; i <= n; i++)\n\
    \t\tret = ret * i;\n\treturn ret;\n}\n/*\nReturn Fibonacci number for given number.\n\
    \    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n\
    \    \n*/\nlong fib3(long n) \n{\n\tlong ret = 1;\n\tlong i;\n\tfor(i = 2; i <=\
    \ n; i++)\n\t\tret = ret * fib2(i - 1);\n\treturn ret;\n}\n/*\nReturn Fibonacci\
    \ number for given number.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n\
    \    >>> fib(8L)\n    21L\n    \n*/\nlong fib_memo(long n) \n{\n\tlong ret = 1;\n\
    \tlong i;\n\tfor(i = 2; i <= n; i++)\n\t\tret = ret * fib3(i - 1);\n\treturn ret;\n\
    }\n/*\nReturn Fibonacci number for given number.\n    >>> fib(10L)\n    55L\n\
    \    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib_memo2(long\
    \ n) \n{\n\tlong ret = 1;\n\tlong i;\n\tfor(i = 2; i <= n; i++)\n\t\tret = ret\
    \ * fib2(i - 1);\n\treturn ret;\n}\n/*\nReturn Fibonacci number for given number.\n\
    \    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n\
    \    \n*/\nlong fib_memo3(long n) \n{\n\tlong ret = 1;\n\tlong i;\n\tfor(i = 2;\
    \ i <= n; i++)\n\t\tret = ret * fib3(i - 1);\n\treturn ret;\n}\n/*\nReturn Fibonacci\
    \ number for given number.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n\
    \    >>> fib(8L)\n    21L\n    \n*/\nlong fib_\nunittest\n{\n    alias candidate\
    \ = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n\
    \    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L)\
    \ == 144L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbb5y75ew.d(121): Error: semicolon expected, not `unittest`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbb5y75ew.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n\tlong a,b;\n\ta=1L;\n\tb=1L;\n\twhile(n>0)\n\t{\n\t\tlong temp=b;\n\
    \t\tb=a;\n\t\ta=temp+b;\n\t\tn-=1;\n\t}\n\treturn a;\n}\n/*\nReturn n-th Fibonacci\
    \ number.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n\
    \    21L\n    \n*/\nlong fib(long n) \n{\n\tlong a,b;\n\ta=1L;\n\tb=1L;\n\twhile(n>0)\n\
    \t{\n\t\tlong temp=b;\n\t\tb=a;\n\t\ta=temp+b;\n\t\tn-=1;\n\t}\n\treturn a;\n\
    }\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n\
    \    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long n) \n{\n\tlong a,b;\n\
    \ta=1L;\n\tb=1L;\n\twhile(n>0)\n\t{\n\t\tlong temp=b;\n\t\tb=a;\n\t\ta=temp+b;\n\
    \t\tn-=1;\n\t}\n\treturn a;\n}\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n\tlong a,b;\n\ta=1L;\n\tb=1L;\n\twhile(n>0)\n\t{\n\t\tlong temp=b;\n\
    \t\tb=a;\n\t\ta=temp+b;\n\t\tn-=1;\n\t}\n\treturn a;\n}\n/*\nReturn n-th Fibonacci\
    \ number.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n\
    \    21L\n    \n*/\nlong fib(long n) \n{\n\tlong a,b;\n\ta=1L;\n\tb=1L;\n\twhile(n>0)\n\
    \t{\n\t\tlong temp=b;\n\t\tb=a;\n\t\ta=temp+b;\n\t\tn-=1;\n\t}\n\treturn a;\n\
    }\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n    55L\n    >>> fib(1L)\n\
    \    1\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L) ==\
    \ 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr5m_s82z.d(122): Error: unterminated /* */ comment\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr5m_s82z.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    long a = 1, b = 1;\n    for(long i = 0; i < n; i++)\n    {\n   \
    \     long c = a + b;\n        a = b;\n        b = c;\n    }\n    return b;\n\
    }\n</code>\n<|/ a tags=fibonacci,c++,algorithm |>\n<| c |>\nThe question is tagged\
    \ C++, so why not use the standard library?\n<|/ c |>\n<| c |>\nBecause the OP\
    \ asked for C++.\n<|/ c |>\n<| c |>\nThe question was tagged C++, so why not use\
    \ the standard library?\n<|/ c |>\n<| c |>\nBecause the OP asked for C++.\n<|/\
    \ c |>\n<| c |>\nThe question is tagged C++, so why not use the standard library?\n\
    <|/ c |>\n<| a tags=fibonacci,c++,algorithm |>\n<code>\n#include <iostream>\n\
    using namespace std;\nunittest\n{\n    alias candidate = fib;\n\n    assert(candidate(10L)\
    \ == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L) == 21L);\n\
    \    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n}\n\
    void main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqzdgy08k.d(23): Error: declaration expected, not `<`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqzdgy08k.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n\tlong a,b;\n\ta = 1;\n\tb = 1;\n\t\n\tfor (long i = 0; i < n; i++)\n\
    \t{\n\t\tlong c = a + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn b;\n}\nunittest\n\
    {\n    alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n\
    \    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp315m2l7l.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d8d]\n??:? void tmp315m2l7l.__unittest_L26_C1() [0x427a70]\n??:?
    void tmp315m2l7l.__modtest() [0x427b10]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bab3]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a946]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad9]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff88]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa65]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a91d]\n??:? runModuleUnitTests [0x42b889]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281dc]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x428163]\n??:? _d_run_main [0x4280ce]\n??:? main [0x427b23]\n??:?
    __libc_start_main [0x88336554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n\tlong a,b;\n\ta = 1;\n\tb = 1;\n\twhile (n > 0) {\n\t\tlong c = a +\
    \ b;\n\t\ta = b;\n\t\tb = c;\n\t\tn--;\n\t}\n\treturn b;\n}\nunittest\n{\n   \
    \ alias candidate = fib;\n\n    assert(candidate(10L) == 55L);\n    assert(candidate(1L)\
    \ == 1L);\n    assert(candidate(8L) == 21L);\n    assert(candidate(11L) == 89L);\n\
    \    assert(candidate(12L) == 144L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpp_o30q6o.d(29): unittest failure\n----------------\n??:?
    _d_unittestp [0x427d85]\n??:? void tmpp_o30q6o.__unittest_L25_C1() [0x427a68]\n??:?
    void tmpp_o30q6o.__modtest() [0x427b08]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42baab]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a93e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fad1]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ff80]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fa5d]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a915]\n??:? runModuleUnitTests [0x42b881]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x4281d4]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x42815b]\n??:? _d_run_main [0x4280c6]\n??:? main [0x427b1b]\n??:?
    __libc_start_main [0x33ab8554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    long ret = 1;\n    long i;\n    for(i = 2; i <= n; i++) {\n    \
    \    ret *= i;\n        ret += i;\n    }\n    return ret;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nI like your solution, but I wonder why you didn't use recursion?\n\
    <|/ c |>\n<| c |>\nBecause I didn't know about recursion. Thanks for the tip.\n\
    <|/ c |>\n<| c |>\nI like your solution, but I wonder why you didn't use recursion?\n\
    <|/ c |>\n<| c |>\nBecause I didn't know about recursion. Thanks for the tip.\n\
    <|/ c |>\n<| c |>\nI like your solution, but I wonder why you didn't use recursion?\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\nunittest\n{\n    alias candidate = fib;\n\n\
    \    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L)\
    \ == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfkznwht6.d(22): Error: declaration expected, not `<`\n/tmp/tmpfkznwht6.d(25):
    Error: unterminated character constant\n/tmp/tmpfkznwht6.d(28): Error: unterminated
    character constant\n/tmp/tmpfkznwht6.d(31): Error: unterminated character constant\n/tmp/tmpfkznwht6.d(34):
    Error: unterminated character constant\n/tmp/tmpfkznwht6.d(37): Error: unterminated
    character constant\n/tmp/tmpfkznwht6.d(45): Error: declaration expected, not `assert`\n/tmp/tmpfkznwht6.d(46):
    Error: declaration expected, not `assert`\n/tmp/tmpfkznwht6.d(47): Error: declaration
    expected, not `assert`\n/tmp/tmpfkznwht6.d(48): Error: declaration expected, not
    `assert`\n/tmp/tmpfkznwht6.d(49): Error: declaration expected, not `assert`\n/tmp/tmpfkznwht6.d(50):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfkznwht6.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\n/*\nReturn n-th Fibonacci number.\n    >>> fib(10L)\n\
    \    55L\n    >>> fib(1L)\n    1L\n    >>> fib(8L)\n    21L\n    \n*/\nlong fib(long\
    \ n) \n{\n    long ret = 1;\n    long i;\n    for(i = 2; i <= n; i++) {\n    \
    \    ret *= i;\n    }\n    return ret;\n}\n</code>\n<|/ a tags=fibonacci,c++,c++11\
    \ |>\n<| c |>\nThis code is not correct. `fib(0)` returns `1`, not `0`\n<|/ c\
    \ |>\n<| c |>\nThe code is not correct. `fib(0)` returns `1`, not `0`.\n<|/ c\
    \ |>\n<| c |>\nI fixed the code (I hope)\n<|/ c |>\n<| c |>\nThe code is not correct.\
    \ `fib(0)` returns `1`, not `0`.\n<|/ c |>\n<| c |>\nI fixed the code (I hope)\n\
    <|/ c |>\n<| a dscore=5 |>\n<code>\nunittest\n{\n    alias candidate = fib;\n\n\
    \    assert(candidate(10L) == 55L);\n    assert(candidate(1L) == 1L);\n    assert(candidate(8L)\
    \ == 21L);\n    assert(candidate(11L) == 89L);\n    assert(candidate(12L) == 144L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpuowqf_dp.d(21): Error: declaration expected, not `<`\n/tmp/tmpuowqf_dp.d(44):
    Error: declaration expected, not `assert`\n/tmp/tmpuowqf_dp.d(45): Error: declaration
    expected, not `assert`\n/tmp/tmpuowqf_dp.d(46): Error: declaration expected, not
    `assert`\n/tmp/tmpuowqf_dp.d(47): Error: declaration expected, not `assert`\n/tmp/tmpuowqf_dp.d(48):
    Error: declaration expected, not `assert`\n/tmp/tmpuowqf_dp.d(49): Error: unrecognized
    declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuowqf_dp.d", "-I/tmp"]\n'''
  stdout: b''

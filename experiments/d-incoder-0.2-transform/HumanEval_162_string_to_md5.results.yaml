language: d
name: HumanEval_162_string_to_md5
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp22s85ice.d(17): Error: undefined identifier `MD5`\n/tmp/tmp22s85ice.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp22s85ice.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp22s85ice.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb7_a5r4w.d(14): Error: no property `len` for type `string`\n/tmp/tmpb7_a5r4w.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpb7_a5r4w.d(17): Error: undefined identifier
    `MD5`\n/tmp/tmpb7_a5r4w.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpb7_a5r4w.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.getBytes());\n\
    \    byte[] result = md5.digest();\n    \n    StringBuilder sb = new StringBuilder();\n\
    \    for (int i = 0; i < result.length; i++)\n        sb.append(String.format(\"\
    %02x\", result[i]));\n    \n    return sb.toString();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp79k1rs02.d(17): Error: undefined identifier `MD5`\n/tmp/tmp79k1rs02.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp79k1rs02.d(21): Error: undefined identifier
    `StringBuilder`\n/tmp/tmp79k1rs02.d(21): Error: undefined identifier `StringBuilder`\n/tmp/tmp79k1rs02.d(15):
    Error: cannot implicitly convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp79k1rs02.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbey1wde9.d(15): Error: type `inout(string)` is not an expression\n/tmp/tmpbey1wde9.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpbey1wde9.d(17): Error: undefined identifier
    `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbey1wde9.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes());\n    return md5.digest();\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb7ot3t9y.d(14): Error: undefined identifier `MD5`\n/tmp/tmpb7ot3t9y.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb7ot3t9y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return Nullable!(string);\n    \n    string digest = md5(text);\n   \
    \ \n    return Nullable!(digest);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmprvjf5m57.d(14): Error: no property `empty` for type `string`\n/tmp/tmprvjf5m57.d(15):
    Error: type `inout(string)` is not an expression\n/tmp/tmprvjf5m57.d(17): Error:
    undefined identifier `md5`\n/tmp/tmprvjf5m57.d(19): Error: struct `std.typecons.Nullable`
    does not match any template declaration\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmprvjf5m57.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.getBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfedeg2pd.d(17): Error: undefined identifier `MD5`\n/tmp/tmpfedeg2pd.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpfedeg2pd.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfedeg2pd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes());\n    return md5.digest();\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb7ot3t9y.d(14): Error: undefined identifier `MD5`\n/tmp/tmpb7ot3t9y.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb7ot3t9y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ hash = null;\n    \n    if (text != \"\")\n    {\n        hash = md5(text);\n\
    \    }\n    \n    return hash;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7wnfgnq1.d(18): Error: undefined identifier `md5`\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmp7wnfgnq1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.getBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfedeg2pd.d(17): Error: undefined identifier `MD5`\n/tmp/tmpfedeg2pd.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpfedeg2pd.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfedeg2pd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    md5 = md5(text);\n    \n    return md5;\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpapp0ixdn.d(16): Error: function expected before `()`, not `md5`
    of type `string`\n/tmp/tmpapp0ixdn.d(18): Error: cannot implicitly convert expression
    `md5` of type `string` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpapp0ixdn.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxw6g4oi1.d(14): Error: no property `empty` for type `string`\n/tmp/tmpxw6g4oi1.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpxw6g4oi1.d(17): Error: undefined identifier
    `MD5`\n/tmp/tmpxw6g4oi1.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpxw6g4oi1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt8klcxwu.d(17): Error: undefined identifier `MD5`\n/tmp/tmpt8klcxwu.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpt8klcxwu.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt8klcxwu.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ \"\";\n    for(uint i = 0; i < text.length; ++i)\n    {\n        md5 += char_to_md5(text[i]);\n\
    \    }\n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpw47ws2bf.d(17): Error: undefined identifier `char_to_md5`\n/tmp/tmpw47ws2bf.d(19):
    Error: cannot implicitly convert expression `md5` of type `string` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw47ws2bf.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpigq2gkng.d(15): Error: type `inout(string)` is not an expression\n/tmp/tmpigq2gkng.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpigq2gkng.d(17): Error: undefined identifier
    `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigq2gkng.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbey1wde9.d(15): Error: type `inout(string)` is not an expression\n/tmp/tmpbey1wde9.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpbey1wde9.d(17): Error: undefined identifier
    `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbey1wde9.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptk3pcpju.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpigq2gkng.d(15): Error: type `inout(string)` is not an expression\n/tmp/tmpigq2gkng.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpigq2gkng.d(17): Error: undefined identifier
    `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigq2gkng.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnb5b1mx9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnb5b1mx9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    md5!(string)\
    \ hash;\n    if (text.empty())\n        return Nullable!(string);\n    hash =\
    \ (md5!(string) hash + text).hash;\n    return Nullable!(string)hash;\n}\n</code>\n\
    <|/ a tags=hash,c++,md5 |>\n<| c |>\nI believe this should be the accepted answer.\
    \ `md5` isn't a standard C++ library, but it is available on most platforms.\n\
    <|/ c |>\n<| a tags=hash,c++,md5 |>\nThe MD5 algorithm is very simple, just take\
    \ each character and multiply it by some prime number. \n<code>\n#include <iostream>\n\
    #include <string>\n#include <cstdlib>\n#include <ctime>\n#include <cstring>\n\
    #include <cstdio>\n#include <cmath>\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplx37bz2u.d(17): Error: found \''hash\'' when expecting \'')\''\n/tmp/tmplx37bz2u.d(17):
    Error: found \'')\'' when expecting \'';\'' following statement\n/tmp/tmplx37bz2u.d(18):
    Error: found \''hash\'' when expecting \'';\'' following return statement\n/tmp/tmplx37bz2u.d(20):
    Error: Declaration expected, not \''<\''\n/tmp/tmplx37bz2u.d(23): Error: unterminated
    character constant\n/tmp/tmplx37bz2u.d(39): Error: Declaration expected, not \''{\''\n/tmp/tmplx37bz2u.d(41):
    Error: Declaration expected, not \''assert\''\n/tmp/tmplx37bz2u.d(42): Error:
    unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplx37bz2u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxw6g4oi1.d(14): Error: no property `empty` for type `string`\n/tmp/tmpxw6g4oi1.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpxw6g4oi1.d(17): Error: undefined identifier
    `MD5`\n/tmp/tmpxw6g4oi1.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpxw6g4oi1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnb5b1mx9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\") return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppvw8gi2r.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnsg9kbt_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnb5b1mx9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplzk00lqr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes());\n    return md5.digest();\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb7ot3t9y.d(14): Error: undefined identifier `MD5`\n/tmp/tmpb7ot3t9y.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb7ot3t9y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnb5b1mx9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1wq3pt6h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpigq2gkng.d(15): Error: type `inout(string)` is not an expression\n/tmp/tmpigq2gkng.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpigq2gkng.d(17): Error: undefined identifier
    `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigq2gkng.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = md5(text);\n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7ke48fhh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes());\n    return md5.digest();\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb7ot3t9y.d(14): Error: undefined identifier `MD5`\n/tmp/tmpb7ot3t9y.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb7ot3t9y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n    }\n\
    \    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5w9fika.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ result;\n    if (text.length == 0) {\n        result = None;\n    } else {\n\
    \        result = md5(text);\n    }\n    return result;\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphj6s1enj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppdb1cgdh.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnb5b1mx9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpty7e0tfm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.toCharArray());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcl_klp96.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch(Exception\
    \ e)\n    {\n        md5 = null;\n    }\n    return md5;\n}\nunittest\n{\n   \
    \ alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpho8p0uvw.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp22s85ice.d(17): Error: undefined identifier `MD5`\n/tmp/tmp22s85ice.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp22s85ice.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp22s85ice.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\
    \ return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdeakz1vy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmparv9rgeq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\") return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2jikoe87.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpweyolx_p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ result;\n    \n    if (text == \"\")\n    {\n        result = null;\n    }\n\
    \    else\n    {\n        result = md5(text);\n    }\n    \n    return result;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd7nj34d7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5.new();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpj5bvmsbj.d(17): Error: basic type expected, not ;\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpj5bvmsbj.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    if (text != \"\")\n        md5 = md5(text);\n    return md5;\n}\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe9akaan8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnsg9kbt_.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptk3pcpju.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    if (text != \"\")\n        md5 = md5(text);\n    return md5;\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpg22h0do2.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnb5b1mx9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    if (text != \"\") {\n        md5 = md5(text);\n    }\n    return\
    \ md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9a39sasc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpq0lx080j.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpweyolx_p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    \n    if (text != \"\")\n        md5 = md5(text);\n    \n \
    \   return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n \
    \       auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqwu1f2gl.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt8klcxwu.d(17): Error: undefined identifier `MD5`\n/tmp/tmpt8klcxwu.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpt8klcxwu.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt8klcxwu.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnb5b1mx9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes());\n    return md5.digest();\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb7ot3t9y.d(14): Error: undefined identifier `MD5`\n/tmp/tmpb7ot3t9y.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb7ot3t9y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    md5!(string)\
    \ md5 = md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi1vn8tqw.d(14): Error: semicolon expected, not \''md5\''\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpi1vn8tqw.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = new MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2o3nr15g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp22s85ice.d(17): Error: undefined identifier `MD5`\n/tmp/tmp22s85ice.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp22s85ice.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp22s85ice.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return Nullable!(md5.digest());\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_tfsi53f.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5.new();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpprfyo4v1.d(14): Error: basic type expected, not ;\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpprfyo4v1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\
    \ {\n        return Nullable!(string);\n    }\n    \n    MD5 md5 = MD5();\n  \
    \  md5.update(text.as_bytes());\n    \n    return md5.digest();\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzd5nl1v6.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp22s85ice.d(17): Error: undefined identifier `MD5`\n/tmp/tmp22s85ice.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp22s85ice.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp22s85ice.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1wq3pt6h.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5.create();\n    md5.update(text);\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyn350cyy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    md5.finalize();\n    \n    return md5.digest();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb544b_we.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpweyolx_p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n        md5 = md5(text);\n    \n    return\
    \ md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfq0y919g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu_rpokyn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5.create();\n    md5.update(text.asBytes());\n\
    \    md5.update(0x80);\n    md5.update(0x20);\n    md5.update(0x20);\n    md5.update(0x20);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpm6s139sq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt8klcxwu.d(17): Error: undefined identifier `MD5`\n/tmp/tmpt8klcxwu.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpt8klcxwu.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt8klcxwu.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5.create();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9v8g7hfc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnb5b1mx9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    md5(text);\n\
    \    return text;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu03mf06x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp12rbion4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp22s85ice.d(17): Error: undefined identifier `MD5`\n/tmp/tmp22s85ice.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp22s85ice.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp22s85ice.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpigq2gkng.d(15): Error: type `inout(string)` is not an expression\n/tmp/tmpigq2gkng.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpigq2gkng.d(17): Error: undefined identifier
    `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigq2gkng.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\") return Null!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp50eyib7w.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptk3pcpju.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxw6g4oi1.d(14): Error: no property `empty` for type `string`\n/tmp/tmpxw6g4oi1.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpxw6g4oi1.d(17): Error: undefined identifier
    `MD5`\n/tmp/tmpxw6g4oi1.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpxw6g4oi1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt8klcxwu.d(17): Error: undefined identifier `MD5`\n/tmp/tmpt8klcxwu.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpt8klcxwu.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt8klcxwu.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n    }\n\
    \    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5w9fika.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    try\n    {\n        md5 = md5(text);\n    }\n    catch (Exception\
    \ e)\n    {\n        md5 = null;\n    }\n    return md5;\n}\nunittest\n{\n   \
    \ alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpolqj1mwb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt8klcxwu.d(17): Error: undefined identifier `MD5`\n/tmp/tmpt8klcxwu.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpt8klcxwu.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt8klcxwu.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5.create();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3da430u7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5.new();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpephgn7ja.d(17): Error: basic type expected, not ;\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpephgn7ja.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.len\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4p88h9zx.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n    {\n        md5 = MD5Hash(text);\n  \
    \  }\n    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa1eotc5z.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5.new();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpprfyo4v1.d(14): Error: basic type expected, not ;\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpprfyo4v1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpigq2gkng.d(15): Error: type `inout(string)` is not an expression\n/tmp/tmpigq2gkng.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpigq2gkng.d(17): Error: undefined identifier
    `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigq2gkng.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ \"\";\n    for(uint i = 0; i < text.size(); ++i)\n    {\n        md5 += text[i];\n\
    \    }\n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpup8malir.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnb5b1mx9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmparv9rgeq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdq15k520.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0) {\n        return Nullable!(string);\n    }\n    \n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    \n    return md5.digest();\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpekvcrm_m.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\
    \ {\n        return Nullable!(string);\n    }\n    \n    MD5 md5 = MD5();\n  \
    \  md5.update(text.as_bytes());\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3flnzbqj.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes());\n    return md5.digest();\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb7ot3t9y.d(14): Error: undefined identifier `MD5`\n/tmp/tmpb7ot3t9y.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb7ot3t9y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\") return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2jikoe87.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpbey1wde9.d(15): Error: type `inout(string)` is not an expression\n/tmp/tmpbey1wde9.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpbey1wde9.d(17): Error: undefined identifier
    `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpbey1wde9.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\
    \ {\n        return null;\n    }\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5pzvez3i.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfk76_r2u.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5.new();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpl0_gy_id.d(17): Error: basic type expected, not ;\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpl0_gy_id.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu_rpokyn.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    md5(text);\n\
    \    return text;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n\
    \        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpu03mf06x.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes());\n    return md5.digest();\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb7ot3t9y.d(14): Error: undefined identifier `MD5`\n/tmp/tmpb7ot3t9y.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb7ot3t9y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.getBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfedeg2pd.d(17): Error: undefined identifier `MD5`\n/tmp/tmpfedeg2pd.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpfedeg2pd.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfedeg2pd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnb5b1mx9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp22s85ice.d(17): Error: undefined identifier `MD5`\n/tmp/tmp22s85ice.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp22s85ice.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp22s85ice.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpweyolx_p.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if(!text.empty())\n    {\n        md5 = md5(text);\n    }\n\
    \    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0kk1j_4c.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return Nullable!(string);\n    \n    string hash = md5(text);\n    \n\
    \    return Nullable!(hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp49u3cv7a.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    if (text != \"\")\n    {\n        md5 = md5(text);\n    }\n    return\
    \ md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvx5nbdsm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    md5.finalize();\n    \n    return md5.digest();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb544b_we.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.getBytes());\n\
    \    \n    byte[] digest = md5.digest();\n    \n    StringBuilder sb = new StringBuilder();\n\
    \    for (int i = 0; i < digest.length; i++) {\n        sb.append(Integer.toHexString(0xFF\
    \ & digest[i]));\n    }\n    \n    return sb.toString();\n}\nunittest\n{\n   \
    \ alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmphh58lrz3.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5.create();\n    md5.update(text);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa1hzgvmo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnb5b1mx9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptk3pcpju.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnb5b1mx9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    md5.finalize();\n    return Nullable!(md5.digest());\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpw1a3z2is.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes());\n    return md5.digest();\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb7ot3t9y.d(14): Error: undefined identifier `MD5`\n/tmp/tmpb7ot3t9y.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb7ot3t9y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes());\n    return md5.digest();\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb7ot3t9y.d(14): Error: undefined identifier `MD5`\n/tmp/tmpb7ot3t9y.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb7ot3t9y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string result;\n\
    \    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n    result = md5.digest();\n\
    \    if (result.length == 0)\n        return null;\n    return result.as_bytes();\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp0rtep8yi.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes());\n    return md5.digest();\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb7ot3t9y.d(14): Error: undefined identifier `MD5`\n/tmp/tmpb7ot3t9y.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb7ot3t9y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp22s85ice.d(17): Error: undefined identifier `MD5`\n/tmp/tmp22s85ice.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmp22s85ice.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp22s85ice.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpxw6g4oi1.d(14): Error: no property `empty` for type `string`\n/tmp/tmpxw6g4oi1.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpxw6g4oi1.d(17): Error: undefined identifier
    `MD5`\n/tmp/tmpxw6g4oi1.d(15): Error: cannot implicitly convert expression `null`
    of type `typeof(null)` to `Nullable!string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpxw6g4oi1.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n    }\n\
    \    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5w9fika.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.getBytes());\n\
    \    md5.finalize();\n    \n    return Nullable!(string)md5.digest();\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpconx2ugc.d(21): Error: found \''md5\'' when expecting \'';\''
    following return statement\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpconx2ugc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnb5b1mx9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    \n    if (text != \"\")\n    {\n        md5 = md5(text);\n    }\n\
    \    \n    return md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpk5w9fika.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5.create();\n    md5.update(text);\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpyn350cyy.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return Nullable!(string);\n    \n    string md5Hash = md5(text);\n  \
    \  \n    return Nullable!(md5Hash);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppj0r4jbs.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5.create();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpr_jkrvbq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    md5.finalize();\n    \n    return md5.digest();\n}\nunittest\n{\n    alias\
    \ candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\"\
    );\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpd0mbbhrt.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5.new();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpaejm0_14.d(14): Error: basic type expected, not ;\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpaejm0_14.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnb5b1mx9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5.create();\n\
    \    md5.update(text);\n    return md5.digest();\n}\nunittest\n{\n    alias candidate\
    \ = string_to_md5;\n\n{\n        auto result = candidate(\"Hello world\");\n \
    \       assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpis6zks7l.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    string md5 =\
    \ null;\n    if (text != \"\")\n    {\n        md5 = md5(text);\n    }\n    return\
    \ md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvx5nbdsm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = new MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp2o3nr15g.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    md5(text);\n\
    \    return Nullable!(string);\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt72w8f00.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return Nullable!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpigq2gkng.d(15): Error: type `inout(string)` is not an expression\n/tmp/tmpigq2gkng.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpigq2gkng.d(17): Error: undefined identifier
    `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpigq2gkng.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    md5(text);\n\
    }\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result\
    \ = candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpuyl0g8qb.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\") return Null!(string);\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3ne0gchc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5.new();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpprfyo4v1.d(14): Error: basic type expected, not ;\nFailed: ["dmd",
    "-unittest", "-v", "-o-", "/tmp/tmpprfyo4v1.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.getBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpfedeg2pd.d(17): Error: undefined identifier `MD5`\n/tmp/tmpfedeg2pd.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpfedeg2pd.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpfedeg2pd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5.create();\n\
    \    md5.update(text.asBytes());\n    return md5.digest();\n}\nunittest\n{\n \
    \   alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3da430u7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes());\n    return md5.digest();\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb7ot3t9y.d(14): Error: undefined identifier `MD5`\n/tmp/tmpb7ot3t9y.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb7ot3t9y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp12rbion4.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\
    \ {\n        return Nullable!(string);\n    }\n    \n    string md5Hash = md5(text);\n\
    \    \n    return md5Hash;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1teo6ag9.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    md5!(string)\
    \ md5 = md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string)\
    \ md5!(string) md5!(string) md5!(string) md5!(string) md5!(string) md5!(string\n\
    unittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto result =\
    \ candidate(\"Hello world\");\n        assert(!result.isNull && result.get ==\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpi1vn8tqw.d(14): Error: semicolon expected, not \''md5\''\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\n/tmp/tmpi1vn8tqw.d(14):
    Error: found \''md5\'' when expecting \'';\'' following statement\n/tmp/tmpi1vn8tqw.d(14):
    Error: C style cast illegal, use cast(string)md5!string\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpi1vn8tqw.d", "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    Nullable!(string)\
    \ md5 = null;\n    if (text != \"\") {\n        md5 = md5(text);\n    }\n    return\
    \ md5;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n{\n        auto\
    \ result = candidate(\"Hello world\");\n        assert(!result.isNull && result.get\
    \ == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto result = candidate(\"\
    \");\n        assert(result.isNull);\n}\n\n{\n        auto result = candidate(\"\
    A B C\");\n        assert(!result.isNull && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    );\n}\n\n{\n        auto result = candidate(\"password\");\n        assert(!result.isNull\
    \ && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp9a39sasc.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.empty())\n\
    \        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpghfby9a7.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpty7e0tfm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes);\n    return md5.digest();\n}\nunittest\n{\n  \
    \  alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"Hello\
    \ world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp_btpevof.d(14): Error: undefined identifier `MD5`\n/tmp/tmp_btpevof.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp_btpevof.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return Nullable!(string);\n    \n    byte[] bytes = text.as_bytes();\n\
    \    \n    MD5 md5 = MD5();\n    md5.update(bytes);\n    \n    byte[] hash = md5.digest();\n\
    \    \n    string result = \"\";\n    for (int i = 0; i < hash.length; i++)\n\
    \        result += hash[i].toHexString();\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpktry2wc8.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmptk3pcpju.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.toByteArray());\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpltt4e7nm.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes());\n    return md5.digest();\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb7ot3t9y.d(14): Error: undefined identifier `MD5`\n/tmp/tmpb7ot3t9y.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb7ot3t9y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text.length\
    \ == 0)\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt8klcxwu.d(17): Error: undefined identifier `MD5`\n/tmp/tmpt8klcxwu.d(17):
    Error: undefined identifier `MD5`\n/tmp/tmpt8klcxwu.d(15): Error: cannot implicitly
    convert expression `null` of type `typeof(null)` to `Nullable!string`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt8klcxwu.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.asBytes());\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmparv9rgeq.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    \n    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpoghcu7ak.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.getBytes());\n\
    \    byte[] hash = md5.digest();\n    \n    string result = \"\";\n    for (int\
    \ i = 0; i < hash.length; ++i)\n        result += hash[i].toString(16);\n    \n\
    \    return result;\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\n\
    {\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpayri7tyo.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    MD5 md5 = MD5();\n\
    \    md5.update(text.as_bytes());\n    return md5.digest();\n}\nunittest\n{\n\
    \    alias candidate = string_to_md5;\n\n{\n        auto result = candidate(\"\
    Hello world\");\n        assert(!result.isNull && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    );\n}\n\n{\n        auto result = candidate(\"\");\n        assert(result.isNull);\n\
    }\n\n{\n        auto result = candidate(\"A B C\");\n        assert(!result.isNull\
    \ && result.get == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto\
    \ result = candidate(\"password\");\n        assert(!result.isNull && result.get\
    \ == \"5f4dcc3b5aa765d61d8327deb882cf99\");\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpb7ot3t9y.d(14): Error: undefined identifier `MD5`\n/tmp/tmpb7ot3t9y.d(14):
    Error: undefined identifier `MD5`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpb7ot3t9y.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\n\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ None.\n\n    >>> string_to_md5(\"Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n    \n*/\nNullable!(string) string_to_md5(string text) \n{\n    if (text ==\
    \ \"\")\n        return null;\n    \n    MD5 md5 = MD5();\n    md5.update(text.as_bytes);\n\
    \    return md5.digest();\n}\nunittest\n{\n    alias candidate = string_to_md5;\n\
    \n{\n        auto result = candidate(\"Hello world\");\n        assert(!result.isNull\
    \ && result.get == \"3e25960a79dbc69b674cd4ec67a72c62\");\n}\n\n{\n        auto\
    \ result = candidate(\"\");\n        assert(result.isNull);\n}\n\n{\n        auto\
    \ result = candidate(\"A B C\");\n        assert(!result.isNull && result.get\
    \ == \"0ef78513b0cb8cef12743f5aeb35f888\");\n}\n\n{\n        auto result = candidate(\"\
    password\");\n        assert(!result.isNull && result.get == \"5f4dcc3b5aa765d61d8327deb882cf99\"\
    );\n}\n\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''Error: cannot find source code for runtime library file \''object.d\''\n       dmd
    might not be correctly installed. Run \''dmd -man\'' for installation instructions.\nimport
    path[0] = /tmp\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplzk00lqr.d",
    "-I/tmp"]\n'''
  stdout: b''
  timestamp: 1659798652

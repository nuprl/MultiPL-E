name: HumanEval_104_unique_digits
language: d
prompt: "import std.math;\n/*\nGiven a list of positive integers x. return a sorted\
  \ list of all \n    elements that hasn't any even digit.\n\n    Note: Returned list\
  \ should be sorted in increasing order.\n    \n    For example:\n    >>> unique_digits([15L,\
  \ 33L, 1422L, 1L])\n    [1L, 15L, 33L]\n    >>> unique_digits([152L, 323L, 1422L,\
  \ 10L])\n    []\n    \n*/\nlong[] unique_digits(long[] x) \n"
tests: "unittest\n{\n    alias candidate = unique_digits;\n\n    assert(candidate([15L,\
  \ 33L, 1422L, 1L]) == [1L, 15L, 33L]);\n    assert(candidate([152L, 323L, 1422L,\
  \ 10L]) == []);\n    assert(candidate([12345L, 2033L, 111L, 151L]) == [111L, 151L]);\n\
  \    assert(candidate([135L, 103L, 31L]) == [31L, 135L]);\n}\nvoid main(){}"
completions: ["{\n    long[] result = new long[x.length];\n    \n    for(int i = 0;\
    \ i < x.length; i++)\n    {\n        int count = 0;\n        \n        for(int\
    \ j = 0; j < x.length; j++)\n        {\n            if(x[j] % 10 == 0)\n     \
    \       {\n                count++;\n            }\n        }\n        \n    \
    \    if(count == 0)\n        {\n            result[i] = x[i];\n        }\n   \
    \ }\n    \n    Arrays.sort(result);\n    \n    return result;\n}", "{\n    long[]\
    \ result = new long[x.length];\n    long temp = 0;\n    int i = 0;\n    for(;\
    \ i < x.length; i++)\n    {\n        temp = x[i];\n        while(temp != 0)\n\
    \        {\n            if(temp % 10 == 0)\n            {\n                temp/=10;\n\
    \            }\n            else\n            {\n                break;\n    \
    \        }\n        }\n        result[i] = temp;\n    }\n    Arrays.sort(result);\n\
    \    return result;\n}\n</code>\n<|/ a tags=algorithm,c# |>\n<| c |>\nThis doesn't\
    \ work. Try it with `unique_digits([15L, 33L, 1422L, 1L])`\n<|/ c |>\n<| c |>\n\
    It does work. Try it with `unique_digits([152L, 323L, 1422L, 10L])`\n<|/ c |>\n\
    <| c |>\nYes, it does. I tested it before posting. Try it with `unique_digits([152L,\
    \ 323L, 1422L, 10L])`\n<|/ c |>\n<| c |>\nYes, it does. I tested it before posting.\
    \ Try it with `unique_digits([152L, 323L, 1422L, 10L])`\n<|/ c |>\n<| c |>\nYes,\
    \ it does. I tested it before posting. Try it with `unique_digits([152L, 323L,\
    \ 1422L, 10L])`\n<|/ c |>\n<| a dscore=0 |>\n<code>\nusing System;\nusing System.Collections.Generic;\n\
    using System.Linq;\nusing System.Text;\nusing System.IO;", "{\n    long[] result\
    \ = new long[x.length];\n    long sum = 0;\n    for(int i = 0; i < x.length; i++)\n\
    \    {\n        sum += x[i];\n    }\n    for(int i = 0; i < x.length; i++)\n \
    \   {\n        if(sum % 2 == 0)\n        {\n            result[i] = x[i];\n  \
    \      }\n    }\n    Arrays.sort(result);\n    return result;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=algorithm,java |>\n<code>\nimport java.util.ArrayList;\n\
    import java.util.Arrays;\nimport java.util.List;", "{\n    long[] result = new\
    \ long[x.length];\n    \n    for(int i = 0; i < x.length; i++)\n    {\n      \
    \  int count = 0;\n        for(int j = 0; j < x.length; j++)\n        {\n    \
    \        if(x[j] % 10 == 0)\n            {\n                count++;\n       \
    \     }\n        }\n        if(count == 0)\n        {\n            result[i] =\
    \ x[i];\n        }\n    }\n    \n    Arrays.sort(result);\n    \n    return result;\n\
    }\n</code>\n<|/ a tags=c#,arrays |>\n<| a tags=c#,arrays |>\n<code>\nusing System;\n\
    using System.Collections.Generic;\nusing System.Linq;\nusing System.Text;", "{\n\
    \    long[] result = new long[x.length];\n    long temp;\n    int i;\n    \n \
    \   for(i = 0; i < x.length; i++)\n    {\n        temp = x[i];\n        while(temp\
    \ != 0)\n        {\n            if(temp % 10 == 0)\n            {\n          \
    \      temp/=10;\n            }\n            else\n            {\n           \
    \     temp/=10;\n                result[result.length-1] = temp;\n           \
    \     break;\n            }\n        }\n    }\n    \n    for(i = 0; i < result.length;\
    \ i++)\n    {\n        if(result[i] % 2 == 0)\n        {\n            result[i]\
    \ = result[i]/2;\n        }\n    }\n    \n    return result;\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| c |>\nThis solution does not work if there are two or more\
    \ even numbers in the list. For example, `unique_digits([15L, 33L, 1422L, 1L])`\
    \ returns `[1, 15, 33]` instead of `[1, 15]`.\n<|/ c |>\n<| c |>\nThanks for pointing\
    \ out. I've updated my answer accordingly.\n<|/ c |>\n<| a tags=algorithm,arrays,java\
    \ |>\n<code>\npublic static void main(String[] args) {\n    int[] arr = {15L,\
    \ 33L, 1422L, 1L};\n    List<Integer> list = new ArrayList<Integer>();\n    for(int\
    \ i : arr) {\n        if(i%2 == 0) {\n            list.add(i);\n        }\n  \
    \  }\n    System.out.println(list);\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=algorithm,arrays,java\
    \ |>\n<code>\npublic static void main(String[] args) {\n    int[] arr = {15L,\
    \ 33L, 1422L, 1L};\n    List<Integer> list = new ArrayList<Integer>();\n    for(int\
    \ i : arr) {\n        if(i%2 == 0) {\n            list.add(i);\n        }\n  \
    \  }\n    System.out.println(list);\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    Please add some explanation to your answer such that others can learn from it\n\
    <|/ c |>\n<| a tags=algorithm,arrays,java |>\n<code>\npublic static void main(String[]\
    \ args) {\n    int[] arr = {15L, 33L, 1422L, 1L};\n    List<Integer> list = new\
    \ ArrayList<Integer>();\n    for(int i : arr) {\n        if(i%2 == 0) {\n    \
    \        list.add(i);\n        }\n    }\n    System.out.println(list);\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a |>\n<code>\npublic static void main(String[] args) {\n\
    \    int[] arr = {15L, 33L, 1422L, 1", "{\n    long[] result = new long[x.length];\n\
    \    long sum = 0;\n    for(int i = 0; i < x.length; i++)\n    {\n        sum\
    \ += x[i];\n    }\n    for(int i = 0; i < x.length; i++)\n    {\n        if(sum\
    \ % 2 == 0)\n        {\n            result[i] = x[i];\n        }\n    }\n    Arrays.sort(result);\n\
    \    return result;\n}\n</code>\n<|/ a |>\n<| a |>\n<code>\nimport java.util.Arrays;\n\
    import java.util.List;\nimport java.util.stream.Collectors;", "{\n    long[] result\
    \ = new long[x.length];\n    long sum = 0;\n    for(int i = 0; i < x.length; i++)\n\
    \    {\n        sum += x[i];\n    }\n    for(int i = 0; i < x.length; i++)\n \
    \   {\n        if(sum % 2 == 0)\n        {\n            result[i] = x[i];\n  \
    \      }\n    }\n    Arrays.sort(result);\n    return result;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=java,arrays |>\n<code>\nimport java.util.ArrayList;\n\
    import java.util.Arrays;\nimport java.util.List;", "{\n    long[] result = new\
    \ long[x.length];\n    long temp = 0;\n    for(int i = 0; i < x.length; i++)\n\
    \    {\n        temp = x[i];\n        for(int j = 0; j < i; j++)\n        {\n\
    \            if(temp % 10 == 0)\n            {\n                temp = temp /\
    \ 10;\n            }\n            else\n            {\n                break;\n\
    \            }\n        }\n        if(temp % 2 == 0)\n        {\n            result[i]\
    \ = temp;\n        }\n    }\n    Arrays.sort(result);\n    return result;\n}\n\
    </code>\n<|/ a tags=algorithm,sorting,arrays,java |>\n<| a tags=algorithm,sorting,arrays,java\
    \ |>\n<code>\nimport java.util.Arrays;", "{\n    long[] result = new long[x.length];\n\
    \    long temp;\n    for(int i = 0; i < x.length; i++)\n    {\n        temp =\
    \ x[i];\n        while(temp > 0)\n        {\n            if(temp % 2 == 0)\n \
    \           {\n                temp = temp / 2;\n            }\n            else\n\
    \            {\n                temp = temp / 10;\n                result[i] =\
    \ temp;\n                break;\n            }\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=c#,arrays |>\n<| a tags=c#,arrays |>\n<code>\nusing System;\n\
    using System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing\
    \ System.IO;", "{\n    long[] result = new long[x.length];\n    long lastDigit\
    \ = 0;\n    for(int i = 0; i < x.length; i++)\n    {\n        if(x[i] % 2 == 0)\n\
    \        {\n            lastDigit = x[i];\n        }\n        else\n        {\n\
    \            int pos = -1;\n            for(int j = 0; j < result.length; j++)\n\
    \            {\n                if(result[j] == lastDigit)\n                {\n\
    \                    pos = j;\n                    break;\n                }\n\
    \            }\n            if(pos == -1)\n            {\n                result[result.length]\
    \ = lastDigit;\n            }\n            else\n            {\n             \
    \   for(int j = pos; j < result.length; j++)\n                {\n            \
    \        result[j] = result[j + 1];\n                }\n                result[result.length\
    \ - 1] = lastDigit;\n            }\n        }\n    }\n    return result;\n}\n\
    </code>\n<|/ a tags=arrays,c#,algorithm |>\n<| c |>\nThis solution has O(n^2)\
    \ complexity. Not a good solution for large arrays.\n<|/ c |>\n<| c |>\nI agree\
    \ with you, it's O(n^2) complexity. But the question was about how to solve this\
    \ problem in O(n) complexity. So, I posted this solution. Anyway, thanks for your\
    \ comment.\n<|/ c |>\n<| c |>\nI agree with you, it's O(n^2) complexity. But the\
    \ question was about how to solve this problem in O(n) complexity. So, I posted\
    \ this solution. Anyway, thanks for your comment.\n<|/ c |>\n<| c |>\nI agree\
    \ with you, it's O(n^2) complexity. But the question was about how to solve this\
    \ problem in O(n) complexity. So, I posted this solution. Anyway, thanks for your\
    \ comment.\n<|/ c |>\n<| c |>\nI agree with you, it's O(n^2) complexity. But the\
    \ question was about how to solve this problem in O(n) complexity. So, I posted\
    \ this solution. Anyway, thanks for your comment.\n<|/ c |>\n<| a dscore=0 |>\n\
    <code>\npublic static void Main()\n{\n    int[] arr = new int[] { 1, 2, 3, 4 };\n\
    \    int[] result = new int[arr.Length];\n    Array.Sort(arr);\n    Array.Sort(result);\n\
    \    for(int i = 0; i < result.Length; i++)\n    {\n        if(result[i] % 2 ==\
    \ 0)\n        {\n            Console.WriteLine(result[i]);\n        }\n    }\n\
    }\n</code>\n<|/ a tags=arrays,c#,algorithm |>\n<| c |>\nThis solution has O",
  "{\n    long[] result = new long[x.length];\n    for(int i = 0; i < x.length; i++)\n\
    \    {\n        long digit = x[i];\n        if(digit % 2 == 0)\n            continue;\n\
    \        for(int j = i; j < x.length; j++)\n        {\n            long digit2\
    \ = x[j];\n            if(digit2 % 2 == 0)\n                break;\n         \
    \   if(digit < digit2)\n            {\n                result[i] = digit;\n  \
    \              break;\n            }\n        }\n    }\n    Arrays.sort(result);\n\
    \    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does not provide\
    \ an answer to the question. To critique or request clarification from an author,\
    \ leave a comment below their post. - [From Review](/review/low-quality-posts/11889206)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He asked for a way\
    \ to find all elements that don't have a even digit. He also asked for help with\
    \ his code. He also asked for help with his code. He also asked for help with\
    \ his code. He also asked for help with his code. He also asked for help with\
    \ his code. He also asked for help with his code. He also asked for help with\
    \ his code. He also asked for help with his code. He also asked for help with\
    \ his code. He also asked for help with his code. He also asked for help with\
    \ his code. He also asked for help with his code. He also asked for help with\
    \ his code. He also asked for help with his code. He also asked for help with\
    \ his code. He also asked for help with his code. He also asked for help with\
    \ his code. He also asked for help with his code. He also asked for help with\
    \ his code. He also asked for help with his code. He also asked for help with\
    \ his code. He also asked for help with his code. He also asked for help with\
    \ his code. He also asked for help with his code. He also asked for help with\
    \ his code. He also asked for help with his code. He also asked for help with\
    \ his code. He also asked for help with his code. He also asked for help with\
    \ his code. He also as", "{\n    long[] result = new long[x.length];\n    long\
    \ sum = 0;\n    for(int i = 0; i < x.length; i++)\n    {\n        sum += x[i];\n\
    \    }\n    for(int i = 0; i < x.length; i++)\n    {\n        if(sum % 2 == 0)\n\
    \        {\n            result[i] = x[i];\n        }\n    }\n    Arrays.sort(result);\n\
    \    return result;\n}\n</code>\n<|/ a tags=arrays,algorithm,java |>\n<| c |>\n\
    This doesn't work. Try it with `unique_digits([15L, 33L, 1422L, 1L])`.\n<|/ c\
    \ |>\n<| c |>\nI tested it and it works. I added the test case in the answer.\
    \ Can you please check it again?\n<|/ c |>\n<| c |>\nI tested it and it works.\
    \ I added the test case in the answer. Can you please check it again?\n<|/ c |>\n\
    <| c |>\nI tested it and it works. I added the test case in the answer. Can you\
    \ please check it again?\n<|/ c |>\n<| c |>\nI tested it and it works. I added\
    \ the test case in the answer. Can you please check it again?\n<|/ c |>\n<| a\
    \ tags=arrays,algorithm,java |>\n<code>\nimport java.util.Arrays;\nimport java.util.Collections;\n\
    import java.util.List;", "{\n    long[] result = new long[x.length];\n    long\
    \ temp;\n    int i;\n    \n    for(i = 0; i < x.length; i++)\n    {\n        temp\
    \ = x[i];\n        while(temp != 0)\n        {\n            if(temp % 10 == 0)\n\
    \            {\n                temp = temp / 10;\n            }\n           \
    \ else\n            {\n                temp = temp / 10 + 1;\n            }\n\
    \        }\n        result[i] = temp;\n    }\n    \n    Arrays.sort(result);\n\
    \    \n    for(i = 0; i < x.length; i++)\n    {\n        if(x[i] != result[i])\n\
    \        {\n            return new long[] { x[i] };\n        }\n    }\n    \n\
    \    return new long[] {};\n}", "{\n    long[] result = new long[x.length];\n\
    \    \n    for(int i = 0; i < x.length; i++)\n    {\n        long digit = x[i];\n\
    \        \n        while(digit > 0)\n        {\n            digit = digit/10;\n\
    \            \n            if(digit % 2 == 0)\n            {\n               \
    \ result[i] = digit;\n                break;\n            }\n        }\n    }\n\
    \    \n    Arrays.sort(result);\n    \n    return result;\n}\n</code>\n<|/ a tags=java,arrays,algorithm\
    \ |>\n<| c |>\nThis doesn't work for negative numbers. `unique_digits([15L, 33L,\
    \ 1422L, -1L])` returns `[-1L]`.\n<|/ c |>\n<| c |>\nThis doesn't work for negative\
    \ numbers. `unique_digits([15L, 33L, 1422L, -1L])` returns `[-1L]`.\n<|/ c |>\n\
    <| c |>\nI tested it and it works fine for negative numbers. I added a test case\
    \ to my answer.\n<|/ c |>\n<| c |>\nI tested it and it works fine for negative\
    \ numbers. I added a test case to my answer.\n<|/ c |>\n<| c |>\nI tested it and\
    \ it works fine for negative numbers. I added a test case to my answer.\n<|/ c\
    \ |>\n<| a tags=java,arrays,algorithm |>\n<code>\npublic static void main(String[]\
    \ args) {\n    int[] arr = {15L, 33L, 1422L, -1L};\n    System.out.println(Arrays.toString(unique(arr)));\n\
    }", "{\n    long[] result = new long[x.length];\n    long sum = 0;\n    for(int\
    \ i = 0; i < x.length; i++)\n    {\n        sum += x[i];\n    }\n    for(int i\
    \ = 0; i < x.length; i++)\n    {\n        if(sum % 2 == 0)\n        {\n      \
    \      result[i] = x[i];\n        }\n    }\n    Arrays.sort(result);\n    return\
    \ result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\nimport java.util.ArrayList;\n\
    import java.util.Arrays;\nimport java.util.List;", "{\n    long result[] = new\
    \ long[x.length];\n    long result2[] = new long[x.length];\n    long result3[]\
    \ = new long[x.length];\n    long result4[] = new long[x.length];\n    long result5[]\
    \ = new long[x.length];\n    long result6[] = new long[x.length];\n    long result7[]\
    \ = new long[x.length];\n    long result8[] = new long[x.length];\n    long result9[]\
    \ = new long[x.length];\n    long result10[] = new long[x.length];\n    long result11[]\
    \ = new long[x.length];\n    long result12[] = new long[x.length];\n    long result13[]\
    \ = new long[x.length];\n    long result14[] = new long[x.length];\n    long result15[]\
    \ = new long[x.length];\n    long result16[] = new long[x.length];\n    long result17[]\
    \ = new long[x.length];\n    long result18[] = new long[x.length];\n    long result19[]\
    \ = new long[x.length];\n    long result20[] = new long[x.length];\n    long result21[]\
    \ = new long[x.length];\n    long result22[] = new long[x.length];\n    long result23[]\
    \ = new long[x.length];\n    long result24[] = new long[x.length];\n    long result25[]\
    \ = new long[x.length];\n    long result26[] = new long[x.length];\n    long result27[]\
    \ = new long[x.length];\n    long result28[] = new long[x.length];\n    long result29[]\
    \ = new long[x.length];\n    long result30[] = new long[x.length];\n    long result31[]\
    \ = new long[x.length];\n    long result32[] = new long[x.length];\n    long result33[]\
    \ = new long[x.length];\n    long result34[] = new long[x.length];\n    long result35[]\
    \ = new long[x.length];\n    long result36[] = new long[x.length];\n    long result37[]\
    \ = new long[x.length];\n    long result38[] = new long[x.length];\n    long result39[]\
    \ = new long[x.length];\n    long result40[] = new long[x.length];\n    long result41[]\
    \ = new long[x.length];\n    long result42[] = new long[x.length];\n    long result43[]\
    \ = new long[x.length];\n    long result44[] = new long[x.length];\n    long result45[]\
    \ = new long[x.length];\n    long result46[] = new long[x.length];\n    long result47[]",
  "{\n    long result[] = new long[x.length];\n    long temp;\n    for(int i = 0;\
    \ i < x.length; i++)\n    {\n        temp = x[i];\n        while(temp > 0)\n \
    \       {\n            temp = temp / 10;\n        }\n        result[i] = temp;\n\
    \    }\n    Arrays.sort(result);\n    long[] result = new long[result.length];\n\
    \    for(int i = 0; i < result.length; i++)\n    {\n        result[i] = result[i]\
    \ % 10;\n    }\n    return result;\n}\n</code>\n<|/ a tags=arrays,sorting,java\
    \ |>\n<| a tags=arrays,sorting,java |>\n<code>\nimport java.util.Arrays;\nimport\
    \ java.util.Collections;\nimport java.util.List;", "{\n    long[] result = new\
    \ long[x.length];\n    for(int i = 0; i < x.length; i++)\n    {\n        long\
    \ c = x[i];\n        for(int j = 0; j < i; j++)\n        {\n            if(c%10\
    \ == 0)\n            {\n                c = c/10;\n                result[j] =\
    \ c;\n                break;\n            }\n        }\n    }\n    Arrays.sort(result);\n\
    \    return result;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't work.\
    \ Try it with `unique_digits([15L, 33L, 1422L, 1L])`.\n<|/ c |>\n<| c |>\nIt works.\
    \ I tested it before posting. What is the problem you are facing?\n<|/ c |>\n\
    <| c |>\nIt doesn't work. Try it with `unique_digits([152L, 323L, 1422L, 10L])`.\n\
    <|/ c |>\n<| c |>\nIt works. I tested it before posting. What is the problem you\
    \ are facing?\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with `unique_digits([152L,\
    \ 323L, 1422L, 10L])`.\n<|/ c |>\n<| a tags=arrays,algorithm,java |>\n<code>\n\
    import java.util.Arrays;", "{\n    long[] result = new long[x.length];\n    \n\
    \    for(int i = 0; i < x.length; i++)\n    {\n        long digit = x[i];\n  \
    \      \n        for(int j = i+1; j < x.length; j++)\n        {\n            long\
    \ digit2 = x[j];\n            \n            if(digit != digit2)\n            {\n\
    \                break;\n            }\n        }\n        \n        if(j == x.length)\n\
    \        {\n            result[i] = digit;\n        }\n    }\n    \n    return\
    \ result;\n}\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\nimport java.util.ArrayList;\n\
    import java.util.Collections;\nimport java.util.List;", "{\n    long[] result\
    \ = new long[x.length];\n    \n    for(int i = 0; i < x.length; i++)\n    {\n\
    \        long digit = x[i];\n        \n        for(int j = 0; j < result.length;\
    \ j++)\n        {\n            if(digit % 2 == 0)\n            {\n           \
    \     result[j] += 1;\n                break;\n            }\n        }\n    }\n\
    \    \n    for(int i = 0; i < result.length; i++)\n    {\n        if(result[i]\
    \ > 1)\n        {\n            result[i] -= 1;\n            break;\n        }\n\
    \    }\n    \n    for(int i = 0; i < result.length; i++)\n    {\n        if(result[i]\
    \ != 0)\n        {\n            result[i] = 0;\n            break;\n        }\n\
    \    }\n    \n    for(int i = 0; i < result.length; i++)\n    {\n        if(result[i]\
    \ == 0)\n        {\n            result[i] = 1;\n            break;\n        }\n\
    \    }\n    \n    for(int i = 0; i < result.length; i++)\n    {\n        if(result[i]\
    \ != 0)\n        {\n            result[i] = 0;\n            break;\n        }\n\
    \    }\n    \n    for(int i = 0; i < result.length; i++)\n    {\n        if(result[i]\
    \ == 0)\n        {\n            result[i] = 1;\n            break;\n        }\n\
    \    }\n    \n    for(int i = 0; i < result.length; i++)\n    {\n        if(result[i]\
    \ != 0)\n        {\n            result[i] = 0;\n            break;\n        }\n\
    \    }\n    \n    for(int i = 0; i < result.length; i++)\n    {\n        if(result[i]\
    \ == 0)\n        {\n            result[i] = 1;\n            break;\n        }\n\
    \    }\n    \n    for(int i = 0; i < result.length; i++)\n    {\n        if(result[i]\
    \ != 0)\n        {\n            result[i] = 0;\n            break;\n        }\n\
    \    }\n    \n    for(int i = 0; i < result.length; i++)\n    {\n        if(result[i]\
    \ == 0)\n        {\n            result[i] = 1;\n            break;\n        }\n\
    \    }\n    \n    for(int i = 0; i < result.length; i++)\n    {\n        if(result[i]\
    \ != 0)\n        {\n            result[i] = 0;\n            break;\n        }\n\
    \    }\n    \n    for(int i = 0; i < result.length; i++)\n    {\n        if(result[i]\
    \ == 0)\n        {\n            result[i] = 1;\n            break;\n        }\n\
    \    }\n    \n    for(int i = 0; i < result.length; i++)\n    {\n        if(result[i]\
    \ != 0)\n        {\n            result[i] = 0;\n            break;\n        }\n\
    \    }\n    \n    for(int i = 0; i < result.length; i++)\n    {\n        if(result[i]\
    \ == 0)\n        {\n            result[i] = 1;\n            break;\n        }\n\
    \    }\n    \n    for(int i = 0; i < result.length; i++)\n    {\n        if(result[i]\
    \ != 0)\n        {\n            result[i] = 0;\n            break;\n        }\n\
    \    }\n    \n    for(int i = 0; i < result.length; i++)\n    {\n        if(result[i]\
    \ == 0)\n        {\n            result[i] = 1;\n            break;\n        }\n\
    \    }\n    \n    for(int i = 0; i < result.length; i++)\n    {\n        if(result[i]\
    \ != 0)\n        {\n            result[i] = 0;"]
stop_tokens:
- "\n\n"
- "\nvoid"
- "\nbool"
- "\nint"

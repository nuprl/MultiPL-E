language: d
name: HumanEval_85_add
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the even elements that are at odd indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3m9cws3c.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3m9cws3c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164351
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp00tu31yr.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp00tu31yr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3lrqcge9.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lrqcge9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the even elements that are at odd indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3m9cws3c.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3m9cws3c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164351
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the even elements that are at odd indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3m9cws3c.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3m9cws3c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164351
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the even elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo0r2zbgu.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo0r2zbgu.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the even elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmplsxc722g.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplsxc722g.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3lrqcge9.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lrqcge9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo43rdd1v.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo43rdd1v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxvzjftby.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxvzjftby.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxvzjftby.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxvzjftby.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp00tu31yr.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp00tu31yr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3lrqcge9.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lrqcge9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3lrqcge9.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lrqcge9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.Length; i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwq4g003b.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwq4g003b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (i %\
    \ 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\
    /*\nGiven a non-empty list of integers lst. add the even elements that are at\
    \ odd indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpypkifqda.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpypkifqda.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3lrqcge9.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lrqcge9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwtxc0sg2.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwtxc0sg2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxvzjftby.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxvzjftby.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the even elements that are at odd indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3m9cws3c.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3m9cws3c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164351
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.Length; i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjj_8h6nd.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjj_8h6nd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp00tu31yr.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp00tu31yr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgyxnu63z.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgyxnu63z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp00tu31yr.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp00tu31yr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the even elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpt7lr6zjt.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt7lr6zjt.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxvzjftby.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxvzjftby.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwtxc0sg2.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwtxc0sg2.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.Length; i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjj_8h6nd.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjj_8h6nd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); ++i)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the even elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpdmhvpr_1.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpdmhvpr_1.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3lrqcge9.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lrqcge9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); ++i)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1lo53tho.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1lo53tho.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgsrg0tfb.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgsrg0tfb.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the even elements that are at odd indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgcvjv8w0.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgcvjv8w0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the even elements that are at odd indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3m9cws3c.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3m9cws3c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164351
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.Length; i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwq4g003b.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwq4g003b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); ++i)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5nvvhq1y.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5nvvhq1y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (i %\
    \ 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\
    /*\nGiven a non-empty list of integers lst. add the odd elements that are at even\
    \ indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmppcu701ji.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmppcu701ji.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3lrqcge9.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lrqcge9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.Length; i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjj_8h6nd.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjj_8h6nd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3lrqcge9.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lrqcge9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); ++i)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5nvvhq1y.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5nvvhq1y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxvzjftby.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxvzjftby.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp00tu31yr.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp00tu31yr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.Length; i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjj_8h6nd.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjj_8h6nd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxvzjftby.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxvzjftby.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the even elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn3qe1tv7.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn3qe1tv7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo43rdd1v.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo43rdd1v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3lrqcge9.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lrqcge9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3lrqcge9.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lrqcge9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); ++i)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1lo53tho.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1lo53tho.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxvzjftby.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxvzjftby.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i+=2)\n        sum += lst[i];\n\
    \    return sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements\
    \ that are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpubw3u3xg.d(19): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpubw3u3xg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); ++i)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1lo53tho.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1lo53tho.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3lrqcge9.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lrqcge9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i+=2)\n        sum += lst[i];\n\
    \    return sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements\
    \ that are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpubw3u3xg.d(19): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpubw3u3xg.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the even elements that are at odd indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3m9cws3c.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3m9cws3c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164351
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.Length; i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwq4g003b.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwq4g003b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); ++i)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp1lo53tho.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1lo53tho.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp8cl0efbv.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp8cl0efbv.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the even elements that are at odd indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3m9cws3c.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3m9cws3c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164351
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3lrqcge9.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lrqcge9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp00tu31yr.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp00tu31yr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxvzjftby.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxvzjftby.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the even elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpn3qe1tv7.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpn3qe1tv7.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.Length; i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwq4g003b.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwq4g003b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp00tu31yr.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp00tu31yr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp00tu31yr.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp00tu31yr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.Length; i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjj_8h6nd.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjj_8h6nd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxvzjftby.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxvzjftby.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the even elements that are at odd indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3m9cws3c.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3m9cws3c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164351
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++) {\n        if (i %\
    \ 2 == 0) {\n            sum += lst[i];\n        }\n    }\n    return sum;\n}\n\
    /*\nGiven a non-empty list of integers lst. add the even elements that are at\
    \ odd indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpypkifqda.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpypkifqda.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo43rdd1v.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo43rdd1v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.Length; i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwq4g003b.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwq4g003b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpnziyhe5o.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpnziyhe5o.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the even elements that are at odd indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgcvjv8w0.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgcvjv8w0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); ++i)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpa27ol895.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpa27ol895.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.Length; i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpjj_8h6nd.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpjj_8h6nd.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the even elements that are at odd indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgcvjv8w0.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgcvjv8w0.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxvzjftby.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxvzjftby.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxvzjftby.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxvzjftby.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3lrqcge9.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lrqcge9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.Length; i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpwq4g003b.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwq4g003b.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); ++i)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5nvvhq1y.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5nvvhq1y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3lrqcge9.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lrqcge9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo43rdd1v.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo43rdd1v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo43rdd1v.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo43rdd1v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the even elements that\
    \ are at odd indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpgyxnu63z.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgyxnu63z.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3lrqcge9.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3lrqcge9.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the even elements that are at odd indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3m9cws3c.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3m9cws3c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164351
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpxvzjftby.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpxvzjftby.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); ++i)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp5nvvhq1y.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5nvvhq1y.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); ++i)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\nunittest\n\
    {\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) == 88L);\n  \
    \  assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpo43rdd1v.d(15): Error: no property `size` for type `long[]`

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpo43rdd1v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the even elements that are at odd indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp3m9cws3c.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp3m9cws3c.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164351
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp00tu31yr.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp00tu31yr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpppzr_y47.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpppzr_y47.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp00tu31yr.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp00tu31yr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for(int i = 0; i < lst.size(); i++)\n    {\n        if(i\
    \ % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmpvnesnhoz.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpvnesnhoz.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n            sum += lst[i];\n    }\n    return sum;\n}\n/*\nGiven\
    \ a non-empty list of integers lst. add the odd elements that are at even indices..\n\
    unittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L, 88L]) ==\
    \ 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n    assert(candidate([4L,\
    \ 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L, 6L, 8L]) == 12L);\n}\nvoid\
    \ main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp09es3e3v.d(22): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp09es3e3v.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nGiven a non-empty list of\
    \ integers lst. add the even elements that are at odd indices..\n\n\n    Examples:\n\
    \    >>> add([4L, 2L, 6L, 7L])\n    2L\n    \n*/\nlong add(long[] lst) \n{\n \
    \   long sum = 0;\n    for (int i = 0; i < lst.size(); i++)\n    {\n        if\
    \ (i % 2 == 0)\n        {\n            sum += lst[i];\n        }\n    }\n    return\
    \ sum;\n}\n/*\nGiven a non-empty list of integers lst. add the odd elements that\
    \ are at even indices..\nunittest\n{\n    alias candidate = add;\n\n    assert(candidate([4L,\
    \ 88L]) == 88L);\n    assert(candidate([4L, 5L, 6L, 7L, 2L, 122L]) == 122L);\n\
    \    assert(candidate([4L, 0L, 6L, 7L]) == 0L);\n    assert(candidate([4L, 4L,\
    \ 6L, 8L]) == 12L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: '/tmp/tmp00tu31yr.d(24): Error: unterminated /* */ comment

    Failed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp00tu31yr.d", "-I/tmp"]

    '
  stdout: ''
  timestamp: 1660164352

language: d
name: HumanEval_36_fizz_buzz
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n    long count = 0;\n    for(long\
    \ i = 1; i < n; ++i)\n    {\n        if(i % 11 == 0 || i % 13 == 0)\n        {\n\
    \            ++count;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\n\
    using namespace std;\nunittest\n{\n    alias candidate = fizz_buzz;\n\n    assert(candidate(50L)\
    \ == 0L);\n    assert(candidate(78L) == 2L);\n    assert(candidate(79L) == 3L);\n\
    \    assert(candidate(100L) == 3L);\n    assert(candidate(200L) == 6L);\n    assert(candidate(4000L)\
    \ == 192L);\n    assert(candidate(10000L) == 639L);\n    assert(candidate(100000L)\
    \ == 8026L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwcxa_zb9.d(25): Error: declaration expected, not `<`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwcxa_zb9.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n    long count = 0;\n    long i;\n\
    \    for(i = n - 1; i >= 0; --i)\n    {\n        if((n % 10) == 7)\n         \
    \   ++count;\n        n /= 10;\n    }\n    return count;\n}\nunittest\n{\n   \
    \ alias candidate = fizz_buzz;\n\n    assert(candidate(50L) == 0L);\n    assert(candidate(78L)\
    \ == 2L);\n    assert(candidate(79L) == 3L);\n    assert(candidate(100L) == 3L);\n\
    \    assert(candidate(200L) == 6L);\n    assert(candidate(4000L) == 192L);\n \
    \   assert(candidate(10000L) == 639L);\n    assert(candidate(100000L) == 8026L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpv95ynkc8.d(30): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ded]\n??:? void tmpv95ynkc8.__unittest_L25_C1() [0x427a8c]\n??:?
    void tmpv95ynkc8.__modtest() [0x427b70]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb13]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9a6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb39]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fac5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a97d]\n??:? runModuleUnitTests [0x42b8e9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42823c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281c3]\n??:? _d_run_main [0x42812e]\n??:? main [0x427b83]\n??:?
    __libc_start_main [0x46042554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n    long count = 0;\n    long x\
    \ = n;\n    long y = n;\n    long z = n;\n    long a = n;\n    long b = n;\n \
    \   long c = n;\n    long d = n;\n    long e = n;\n    long f = n;\n    long g\
    \ = n;\n    long h = n;\n    long i = n;\n    long j = n;\n    long k = n;\n \
    \   long l = n;\n    long m = n;\n    long n = n;\n    long o = n;\n    long p\
    \ = n;\n    long q = n;\n    long r = n;\n    long s = n;\n    long t = n;\n \
    \   long u = n;\n    long v = n;\n    long w = n;\n    long x = n;\n    long y\
    \ = n;\n    long z = n;\n    long a = n;\n    long b = n;\n    long c = n;\n \
    \   long d = n;\n    long e = n;\n    long f = n;\n    long g = n;\n    long h\
    \ = n;\n    long i = n;\n    long j = n;\n    long k = n;\n    long l = n;\n \
    \   long m = n;\n    long n = n;\n    long o = n;\n    long p = n;\n    long q\
    \ = n;\n    long r = n;\n    long s = n;\n    long t = n;\n    long u = n;\n \
    \   long v = n;\n    long w = n;\n    long x = n;\n    long y = n;\n    long z\
    \ = n;\n    long a = n;\n    long b = n;\n    long c = n;\n    long d = n;\n \
    \   long e = n;\n    long f = n;\n    long g = n;\n    long h = n;\n    long i\
    \ = n;\n    long j = n;\n    long k = n;\n    long l = n;\n    long m = n;\n \
    \   long n = n;\n    long o = n;\n    long p = n;\n    long q = n;\n    long r\
    \ = n;\n    long s = n;\n    long t = n;\n    long u = n;\n    long v = n;\n \
    \   long w = n;\n    long x = n;\n    long y = n;\n    long z = n;\n    long a\
    \ = n;\n    long b = n;\n    long c = n;\n    long d = n;\n    long e = n;\n \
    \   long f = n;\n    long g = n;\n    long h = n;\n    long i = n;\n    long j\
    \ = n;\n    long k = n;\n    long l = n;\n    long m = n;\n    long n = n;\n \
    \   long o = n;\n    long p = n;\n    long q = n;\n    long r = n;\n    long s\
    \ = n;\n    long t = n;\n    \nunittest\n{\n    alias candidate = fizz_buzz;\n\
    \n    assert(candidate(50L) == 0L);\n    assert(candidate(78L) == 2L);\n    assert(candidate(79L)\
    \ == 3L);\n    assert(candidate(100L) == 3L);\n    assert(candidate(200L) == 6L);\n\
    \    assert(candidate(4000L) == 192L);\n    assert(candidate(10000L) == 639L);\n\
    \    assert(candidate(100000L) == 8026L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpij324v7b.d(118): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpij324v7b.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n    long count = 0;\n    long d\
    \ = n % 10;\n    long m = n / 10;\n    \n    if (m % 11 == 0 || m % 13 == 0) {\n\
    \        count++;\n    }\n    \n    while (d != 7) {\n        d = n % 10;\n  \
    \      m = n / 10;\n        \n        if (m % 11 == 0 || m % 13 == 0) {\n    \
    \        count++;\n        }\n        \n        n = m;\n    }\n    \n    return\
    \ count;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=fizzbuzz,c++,algorithm |>\n\
    <code>\n#include <iostream>\nusing namespace std;\nunittest\n{\n    alias candidate\
    \ = fizz_buzz;\n\n    assert(candidate(50L) == 0L);\n    assert(candidate(78L)\
    \ == 2L);\n    assert(candidate(79L) == 3L);\n    assert(candidate(100L) == 3L);\n\
    \    assert(candidate(200L) == 6L);\n    assert(candidate(4000L) == 192L);\n \
    \   assert(candidate(10000L) == 639L);\n    assert(candidate(100000L) == 8026L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpkeknzjwd.d(36): Error: declaration expected, not `<`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpkeknzjwd.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n\tlong count = 0;\n\tlong i;\n\t\
    for(i = 1; i <= n; i++){\n\t\tif((i % 11) == 0 || i % 13 == 0){\n\t\t\tcount++;\n\
    \t\t}\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = fizz_buzz;\n\
    \n    assert(candidate(50L) == 0L);\n    assert(candidate(78L) == 2L);\n    assert(candidate(79L)\
    \ == 3L);\n    assert(candidate(100L) == 3L);\n    assert(candidate(200L) == 6L);\n\
    \    assert(candidate(4000L) == 192L);\n    assert(candidate(10000L) == 639L);\n\
    \    assert(candidate(100000L) == 8026L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp4gjbzqyf.d(28): unittest failure\n----------------\n??:?
    _d_unittestp [0x427dfd]\n??:? void tmp4gjbzqyf.__unittest_L24_C1() [0x427a7b]\n??:?
    void tmp4gjbzqyf.__modtest() [0x427b80]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb23]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9b6]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb49]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42fff8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fad5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a98d]\n??:? runModuleUnitTests [0x42b8f9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42824c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281d3]\n??:? _d_run_main [0x42813e]\n??:? main [0x427b93]\n??:?
    __libc_start_main [0x65f2a554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n    long count = 0;\n    long remainder;\n\
    \    \n    while (n>0) {\n        remainder = n % 11;\n        if (remainder ==\
    \ 0 || remainder == 7) {\n            count++;\n        }\n        n = n / 11;\n\
    \    }\n    return count;\n}\nunittest\n{\n    alias candidate = fizz_buzz;\n\n\
    \    assert(candidate(50L) == 0L);\n    assert(candidate(78L) == 2L);\n    assert(candidate(79L)\
    \ == 3L);\n    assert(candidate(100L) == 3L);\n    assert(candidate(200L) == 6L);\n\
    \    assert(candidate(4000L) == 192L);\n    assert(candidate(10000L) == 639L);\n\
    \    assert(candidate(100000L) == 8026L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp6mik8wee.d(32): unittest failure\n----------------\n??:?
    _d_unittestp [0x427de5]\n??:? void tmp6mik8wee.__unittest_L27_C1() [0x427a80]\n??:?
    void tmp6mik8wee.__modtest() [0x427b64]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb0b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a99e]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb31]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffe0]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fabd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a975]\n??:? runModuleUnitTests [0x42b8e1]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428234]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281bb]\n??:? _d_run_main [0x428126]\n??:? main [0x427b77]\n??:?
    __libc_start_main [0xea14f554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n    long count = 0;\n    for(long\
    \ i = n; i > 0; i /= 11)\n    {\n        if(i%11 == 7)\n            count++;\n\
    \    }\n    for(long i = n; i > 0; i /= 13)\n    {\n        if(i%13 == 7)\n  \
    \          count++;\n    }\n    return count;\n}\nunittest\n{\n    alias candidate\
    \ = fizz_buzz;\n\n    assert(candidate(50L) == 0L);\n    assert(candidate(78L)\
    \ == 2L);\n    assert(candidate(79L) == 3L);\n    assert(candidate(100L) == 3L);\n\
    \    assert(candidate(200L) == 6L);\n    assert(candidate(4000L) == 192L);\n \
    \   assert(candidate(10000L) == 639L);\n    assert(candidate(100000L) == 8026L);\n\
    }\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmpqj_76d1j.d(33): unittest failure\n----------------\n??:?
    _d_unittestp [0x427e25]\n??:? void tmpqj_76d1j.__unittest_L28_C1() [0x427ac0]\n??:?
    void tmpqj_76d1j.__modtest() [0x427ba4]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb4b]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a9de]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb71]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x430020]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fafd]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a9b5]\n??:? runModuleUnitTests [0x42b921]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x428274]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281fb]\n??:? _d_run_main [0x428166]\n??:? main [0x427bb7]\n??:?
    __libc_start_main [0xc600f554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n    long count = 0;\n    long remainder;\n\
    \    \n    while (n>0) {\n        remainder = n%11;\n        if (remainder ==\
    \ 7) {\n            count++;\n        }\n        n = n/11;\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\nThis doesn't\
    \ work. Try it with `fizz_buzz(78L)`\n<|/ c |>\n<| c |>\nIt works fine for me.\
    \ Try it with `fizz_buzz(78L)`\n<|/ c |>\n<| c |>\nIt doesn't work for me on `fizz_buzz(78L)`\n\
    <|/ c |>\n<| c |>\nIt works for me on `fizz_buzz(78L)`\n<|/ c |>\n<| c |>\nIt\
    \ works for me on `fizz_buzz(78L)`\n<|/ c |>\n<| a |>\n<code>\n#include <iostream>\n\
    using namespace std;\nunittest\n{\n    alias candidate = fizz_buzz;\n\n    assert(candidate(50L)\
    \ == 0L);\n    assert(candidate(78L) == 2L);\n    assert(candidate(79L) == 3L);\n\
    \    assert(candidate(100L) == 3L);\n    assert(candidate(200L) == 6L);\n    assert(candidate(4000L)\
    \ == 192L);\n    assert(candidate(10000L) == 639L);\n    assert(candidate(100000L)\
    \ == 8026L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmporayel11.d(27): Error: declaration expected, not `<`\n/tmp/tmporayel11.d(30):
    Error: unterminated character constant\n/tmp/tmporayel11.d(36): Error: unterminated
    character constant\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmporayel11.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n\tlong count = 0;\n\tlong temp;\n\
    \t\n\twhile (n>0) {\n\t\ttemp = n % 11;\n\t\tif (temp == 7)\n\t\t\tcount++;\n\t\
    \tn = n / 11;\n\t}\n\treturn count;\n}\nunittest\n{\n    alias candidate = fizz_buzz;\n\
    \n    assert(candidate(50L) == 0L);\n    assert(candidate(78L) == 2L);\n    assert(candidate(79L)\
    \ == 3L);\n    assert(candidate(100L) == 3L);\n    assert(candidate(200L) == 6L);\n\
    \    assert(candidate(4000L) == 192L);\n    assert(candidate(10000L) == 639L);\n\
    \    assert(candidate(100000L) == 8026L);\n}\nvoid main(){}"
  status: Exception
  stderr: 'b''core.exception.AssertError@/tmp/tmp_jjs3i9h.d(31): unittest failure\n----------------\n??:?
    _d_unittestp [0x427ddd]\n??:? void tmp_jjs3i9h.__unittest_L26_C1() [0x427a7c]\n??:?
    void tmp_jjs3i9h.__modtest() [0x427b60]\n??:? int core.runtime.runModuleUnitTests().__foreachbody2(object.ModuleInfo*)
    [0x42bb03]\n??:? int object.ModuleInfo.opApply(scope int delegate(object.ModuleInfo*)).__lambda2(immutable(object.ModuleInfo*))
    [0x42a996]\n??:? int rt.minfo.moduleinfos_apply(scope int delegate(immutable(object.ModuleInfo*))).__foreachbody2(ref
    rt.sections_elf_shared.DSO) [0x42fb29]\n??:? int rt.sections_elf_shared.DSO.opApply(scope
    int delegate(ref rt.sections_elf_shared.DSO)) [0x42ffd8]\n??:? int rt.minfo.moduleinfos_apply(scope
    int delegate(immutable(object.ModuleInfo*))) [0x42fab5]\n??:? int object.ModuleInfo.opApply(scope
    int delegate(object.ModuleInfo*)) [0x42a96d]\n??:? runModuleUnitTests [0x42b8d9]\n??:?
    void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).runAll()
    [0x42822c]\n??:? void rt.dmain2._d_run_main(int, char**, extern (C) int function(char[][])*).tryExec(scope
    void delegate()) [0x4281b3]\n??:? _d_run_main [0x42811e]\n??:? main [0x427b73]\n??:?
    __libc_start_main [0x4dd5b554]\n1/1 unittests FAILED\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n    long count = 0;\n    long i;\n\
    \    for(i = 1; i <= n; i += 11)\n    {\n        if((i % 11) == 0)\n         \
    \   count += 1;\n    }\n    for(i = 1; i <= n; i += 13)\n    {\n        if((i\
    \ % 13) == 0)\n            count += 1;\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\nThis is not the correct answer,\
    \ as it will return `0` for `fizz_buzz(50)`.\n<|/ c |>\n<| c |>\nYes, it does.\
    \ I tested it and it returns `0` for `fizz_buzz(50)`.\n<|/ c |>\n<| c |>\nIt returns\
    \ `0` for `fizz_buzz(50)` because `50 % 11 == 0` and `50 % 13 == 0`.\n<|/ c |>\n\
    <| c |>\nI tested it and it returns `0` for `fizz_buzz(50)` because `50 % 11 ==\
    \ 0` and `50 % 13 == 0`.\n<|/ c |>\n<| c |>\nI tested it and it returns `0` for\
    \ `fizz_buzz(50)` because `50 % 11 == 0` and `50 % 13 == 0`.\n<|/ c |>\n<| a |>\n\
    <code>\n#include <iostream>\nusing namespace std;\nunittest\n{\n    alias candidate\
    \ = fizz_buzz;\n\n    assert(candidate(50L) == 0L);\n    assert(candidate(78L)\
    \ == 2L);\n    assert(candidate(79L) == 3L);\n    assert(candidate(100L) == 3L);\n\
    \    assert(candidate(200L) == 6L);\n    assert(candidate(4000L) == 192L);\n \
    \   assert(candidate(10000L) == 639L);\n    assert(candidate(100000L) == 8026L);\n\
    }\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4aza66d7.d(29): Error: declaration expected, not `<`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp4aza66d7.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n    long count = 0;\n    long remainder;\n\
    \    \n    while (n) {\n        remainder = n % 11;\n        if (remainder ==\
    \ 7 || remainder == 13) count++;\n        n /= 11;\n    }\n    return count;\n\
    }\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\nThis doesn't work.\
    \ `fizz_buzz(78L)` returns `2L`, but `fizz_buzz(79L)` returns `3L`.\n<|/ c |>\n\
    <| c |>\n: I fixed the bug. Thanks.\n<|/ c |>\n<| c |>\nThe bug is still there.\
    \ `fizz_buzz(78L)` returns `2L`, but `fizz_buzz(79L)` returns `3L`.\n<|/ c |>\n\
    <| c |>\n: I fixed the bug. Thanks.\n<|/ c |>\n<| c |>\nThe bug is still there.\
    \ `fizz_buzz(78L)` returns `2L`, but `fizz_buzz(79L)` returns `3L`.\n<|/ c |>\n\
    <| a dscore=2 |>\n<code>\n#include <iostream>\n#include <cmath>\nusing namespace\
    \ std;\nunittest\n{\n    alias candidate = fizz_buzz;\n\n    assert(candidate(50L)\
    \ == 0L);\n    assert(candidate(78L) == 2L);\n    assert(candidate(79L) == 3L);\n\
    \    assert(candidate(100L) == 3L);\n    assert(candidate(200L) == 6L);\n    assert(candidate(4000L)\
    \ == 192L);\n    assert(candidate(10000L) == 639L);\n    assert(candidate(100000L)\
    \ == 8026L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqgfquxdw.d(25): Error: declaration expected, not `<`\n/tmp/tmpqgfquxdw.d(28):
    Error: unterminated character constant\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpqgfquxdw.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n    long count = 0;\n    for(long\
    \ i = n; i > 0; i /= 10) {\n        if((i % 11) == 0 || i % 13 == 0) {\n     \
    \       count++;\n        }\n    }\n    return count;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nI like this solution, but I wonder if it would be faster than the\
    \ one I posted.\n<|/ c |>\n<| c |>\nI doubt it would be. My solution uses `long`\
    \ division which is not very fast on modern processors. I suspect my solution\
    \ would be faster than yours because I avoid the overhead of division.\n<|/ c\
    \ |>\n<| c |>\nI added a solution that uses `long` division.\n<|/ c |>\n<| a dscore=1\
    \ |>\n<code>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nunittest\n\
    {\n    alias candidate = fizz_buzz;\n\n    assert(candidate(50L) == 0L);\n   \
    \ assert(candidate(78L) == 2L);\n    assert(candidate(79L) == 3L);\n    assert(candidate(100L)\
    \ == 3L);\n    assert(candidate(200L) == 6L);\n    assert(candidate(4000L) ==\
    \ 192L);\n    assert(candidate(10000L) == 639L);\n    assert(candidate(100000L)\
    \ == 8026L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpeaxl2g7h.d(23): Error: declaration expected, not `<`\n/tmp/tmpeaxl2g7h.d(43):
    Error: declaration expected, not `assert`\n/tmp/tmpeaxl2g7h.d(44): Error: declaration
    expected, not `assert`\n/tmp/tmpeaxl2g7h.d(45): Error: declaration expected, not
    `assert`\n/tmp/tmpeaxl2g7h.d(46): Error: declaration expected, not `assert`\n/tmp/tmpeaxl2g7h.d(47):
    Error: declaration expected, not `assert`\n/tmp/tmpeaxl2g7h.d(48): Error: declaration
    expected, not `assert`\n/tmp/tmpeaxl2g7h.d(49): Error: declaration expected, not
    `assert`\n/tmp/tmpeaxl2g7h.d(50): Error: declaration expected, not `assert`\n/tmp/tmpeaxl2g7h.d(51):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpeaxl2g7h.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n    long count = 0;\n    long i;\n\
    \    for(i = 1; i <= n; i += 11)\n    {\n        if((i % 11) == 0)\n         \
    \   count += 1;\n    }\n    for(i = 1; i <= n; i += 13)\n    {\n        if((i\
    \ % 13) == 0)\n            count += 1;\n    }\n    return count;\n}\n</code>\n\
    <|/ a tags=fizzbuzz,c++ |>\n<| a tags=fizzbuzz,c++ |>\n<code>\n#include <iostream>\n\
    using namespace std;\nunittest\n{\n    alias candidate = fizz_buzz;\n\n    assert(candidate(50L)\
    \ == 0L);\n    assert(candidate(78L) == 2L);\n    assert(candidate(79L) == 3L);\n\
    \    assert(candidate(100L) == 3L);\n    assert(candidate(200L) == 6L);\n    assert(candidate(4000L)\
    \ == 192L);\n    assert(candidate(10000L) == 639L);\n    assert(candidate(100000L)\
    \ == 8026L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgi4_uvx9.d(29): Error: declaration expected, not `<`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpgi4_uvx9.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n    long count = 0;\n    long x\
    \ = n;\n    long remainder;\n    \n    while (x>0)\n    {\n        remainder =\
    \ x % 11;\n        if (remainder == 0 || remainder == 7)\n            count++;\n\
    \        x /= 11;\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| c |>\nThis doesn't work. Try `fizz_buzz(50L)` - it returns `0L`.\n<|/\
    \ c |>\n<| c |>\n: I fixed the bug. Thanks for pointing it out.\n<|/ c |>\n<|\
    \ c |>\n: Thanks for pointing it out. Fixed now.\n<|/ c |>\n<| c |>\n: Thanks\
    \ for pointing it out. Fixed now.\n<|/ c |>\n<| c |>\n: Thanks for pointing it\
    \ out. Fixed now.\n<|/ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include\
    \ <iostream>\nusing namespace std;\nunittest\n{\n    alias candidate = fizz_buzz;\n\
    \n    assert(candidate(50L) == 0L);\n    assert(candidate(78L) == 2L);\n    assert(candidate(79L)\
    \ == 3L);\n    assert(candidate(100L) == 3L);\n    assert(candidate(200L) == 6L);\n\
    \    assert(candidate(4000L) == 192L);\n    assert(candidate(10000L) == 639L);\n\
    \    assert(candidate(100000L) == 8026L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp4uvgi_85.d(28): Error: declaration expected, not `<`\n/tmp/tmp4uvgi_85.d(31):
    Error: unterminated character constant\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp4uvgi_85.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n    long count = 0;\n    for(long\
    \ i = 0; i <= n; i += 11)\n    {\n        if((i % 11) == 0)\n        {\n     \
    \       if((i % 13) == 0)\n            {\n                count++;\n         \
    \   }\n        }\n    }\n    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm\
    \ |>\n<| c |>\nThis code does not work. `fizz_buzz(78L)` returns `3L` instead\
    \ of `2L`.\n<|/ c |>\n<| c |>\nI fixed the bug, thanks for pointing it out. Now\
    \ it works.\n<|/ c |>\n<| c |>\nI fixed the bug, thanks for pointing it out. Now\
    \ it works.\n<|/ c |>\n<| c |>\nI fixed the bug, thanks for pointing it out. Now\
    \ it works.\n<|/ c |>\n<| c |>\nI fixed the bug, thanks for pointing it out. Now\
    \ it works.\n<|/ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\n\
    using namespace std;\nunittest\n{\n    alias candidate = fizz_buzz;\n\n    assert(candidate(50L)\
    \ == 0L);\n    assert(candidate(78L) == 2L);\n    assert(candidate(79L) == 3L);\n\
    \    assert(candidate(100L) == 3L);\n    assert(candidate(200L) == 6L);\n    assert(candidate(4000L)\
    \ == 192L);\n    assert(candidate(10000L) == 639L);\n    assert(candidate(100000L)\
    \ == 8026L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp7s_lcive.d(28): Error: declaration expected, not `<`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp7s_lcive.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n    long count = 0;\n    long remainder;\n\
    \    \n    while(n > 0)\n    {\n        remainder = n % 11;\n        n /= 11;\n\
    \        if(remainder == 7)\n        {\n            count++;\n        }\n    }\n\
    \    return count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\n\
    This code doesn't work for `n = 100` because `n % 11` is `0` when `n = 100`.\n\
    <|/ c |>\n<| c |>\nIt works for any number less than 100. `n % 11` is `0` when\
    \ `n = 100` because `100 % 11` is `0`.\n<|/ c |>\n<| c |>\nYes, but `100 % 11`\
    \ is `0` when `n = 100`. So `n % 11` is `0` when `n = 100`.\n<|/ c |>\n<| c |>\n\
    I see what you mean. Thanks for pointing that out. I fixed my answer.\n<|/ c |>\n\
    <| c |>\nThis code doesn't work for `n = 100` because `n % 11` is `0` when `n\
    \ = 100`.\n<|/ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include <iostream>\n\
    using namespace std;\nunittest\n{\n    alias candidate = fizz_buzz;\n\n    assert(candidate(50L)\
    \ == 0L);\n    assert(candidate(78L) == 2L);\n    assert(candidate(79L) == 3L);\n\
    \    assert(candidate(100L) == 3L);\n    assert(candidate(200L) == 6L);\n    assert(candidate(4000L)\
    \ == 192L);\n    assert(candidate(10000L) == 639L);\n    assert(candidate(100000L)\
    \ == 8026L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpwkagzkjh.d(29): Error: declaration expected, not `<`\n/tmp/tmpwkagzkjh.d(32):
    Error: unterminated character constant\n/tmp/tmpwkagzkjh.d(44): Error: unterminated
    character constant\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpwkagzkjh.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n    long count = 0;\n    for(long\
    \ i = n; i > 0; i /= 10L)\n    {\n        if((i % 11L) == 7L)\n            count\
    \ += 1;\n        if((i % 13L) == 7L)\n            count += 1;\n    }\n    return\
    \ count;\n}\n</code>\n<|/ a tags=fizzbuzz,c++,algorithm |>\n<| c |>\nThanks for\
    \ your answer. I was looking for a solution that doesn't require any loops or\
    \ conditional statements. I guess I should have specified that in the question.\n\
    <|/ c |>\n<| c |>\nI added a solution that doesn't use any loops or conditional\
    \ statements.\n<|/ c |>\n<| a tags=fizzbuzz,c++,algorithm |>\n<code>\n#include\
    \ <iostream>\nusing namespace std;\nunittest\n{\n    alias candidate = fizz_buzz;\n\
    \n    assert(candidate(50L) == 0L);\n    assert(candidate(78L) == 2L);\n    assert(candidate(79L)\
    \ == 3L);\n    assert(candidate(100L) == 3L);\n    assert(candidate(200L) == 6L);\n\
    \    assert(candidate(4000L) == 192L);\n    assert(candidate(10000L) == 639L);\n\
    \    assert(candidate(100000L) == 8026L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpmsvdy4jy.d(25): Error: declaration expected, not `<`\n/tmp/tmpmsvdy4jy.d(28):
    Error: unterminated character constant\n/tmp/tmpmsvdy4jy.d(31): Error: unterminated
    character constant\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpmsvdy4jy.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n    long count = 0;\n    long i;\n\
    \    for(i = 0; i <= n; i+=11)\n    {\n        if((i % 11) == 0)\n        {\n\
    \            count += 1;\n        }\n    }\n    for(i = 0; i <= n; i+=13)\n  \
    \  {\n        if((i % 13) == 0)\n        {\n            count += 1;\n        }\n\
    \    }\n    return count;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't\
    \ answer the question. OP asked for a solution that doesn't use any loops.\n<|/\
    \ c |>\n<| c |>\nI agree with you, however I believe that this is an answer to\
    \ the question asked.\n<|/ c |>\n<| c |>\nI agree with you but this doesn't answer\
    \ the question. OP asked for a solution that doesn't use any loops.\n<|/ c |>\n\
    <| c |>\nI agree with you, however I believe that this is an answer to the question\
    \ asked.\n<|/ c |>\n<| c |>\nI agree with you but this doesn't answer the question.\
    \ OP asked for a solution that doesn't use any loops.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\nunittest\n{\n    alias candidate = fizz_buzz;\n\n    assert(candidate(50L)\
    \ == 0L);\n    assert(candidate(78L) == 2L);\n    assert(candidate(79L) == 3L);\n\
    \    assert(candidate(100L) == 3L);\n    assert(candidate(200L) == 6L);\n    assert(candidate(4000L)\
    \ == 192L);\n    assert(candidate(10000L) == 639L);\n    assert(candidate(100000L)\
    \ == 8026L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpcovaidcy.d(33): Error: declaration expected, not `<`\n/tmp/tmpcovaidcy.d(36):
    Error: unterminated character constant\n/tmp/tmpcovaidcy.d(36): Error: unterminated
    character constant\n/tmp/tmpcovaidcy.d(42): Error: unterminated character constant\n/tmp/tmpcovaidcy.d(42):
    Error: unterminated character constant\n/tmp/tmpcovaidcy.d(48): Error: unterminated
    character constant\n/tmp/tmpcovaidcy.d(48): Error: unterminated character constant\n/tmp/tmpcovaidcy.d(56):
    Error: declaration expected, not `assert`\n/tmp/tmpcovaidcy.d(57): Error: declaration
    expected, not `assert`\n/tmp/tmpcovaidcy.d(58): Error: declaration expected, not
    `assert`\n/tmp/tmpcovaidcy.d(59): Error: declaration expected, not `assert`\n/tmp/tmpcovaidcy.d(60):
    Error: declaration expected, not `assert`\n/tmp/tmpcovaidcy.d(61): Error: declaration
    expected, not `assert`\n/tmp/tmpcovaidcy.d(62): Error: declaration expected, not
    `assert`\n/tmp/tmpcovaidcy.d(63): Error: declaration expected, not `assert`\n/tmp/tmpcovaidcy.d(64):
    Error: unrecognized declaration\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpcovaidcy.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n\tlong count = 0;\n\tlong x = n;\n\
    \twhile (x>0)\n\t{\n\t\tlong y = x % 11;\n\t\tif (y==7 || y==13)\n\t\t\tcount++;\n\
    \t\tx = x / 11;\n\t}\n\treturn count;\n}\n/*\nReturn the number of times the digit\
    \ 7 appears in integers less than n which are divisible by 11 or 13 and are multiples\
    \ of 3 or 5.\n    >>> fizz_buzz_multiples(50L)\n    0L\n    >>> fizz_buzz_multiples(78L)\n\
    \    1L\n    >>> fizz_buzz_multiples(79L)\n    1L\n    \n*/\nlong fizz_buzz_multiples(long\
    \ n) \n{\n\tlong count = 0;\n\tlong x = n;\n\twhile (x>0)\n\t{\n\t\tlong y = x\
    \ % 11;\n\t\tif (y==7 || y==13 && x%3==0 || x%5==0)\n\t\t\tcount++;\n\t\tx = x\
    \ / 11;\n\t}\n\treturn count;\n}\n/*\nReturn the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13 and are multiples of\
    \ 3 or 5.\n    >>> fizz_buzz_multiples_fast(50L)\n    0L\n    >>> fizz_buzz_multiples_fast(78L)\n\
    \    1L\n    >>> fizz_buzz_multiples_fast(79L)\n    1L\n    \n*/\nlong fizz_buzz_multiples_fast(long\
    \ n) \n{\n\tlong count = 0;\n\tlong x = n;\n\twhile (x>0)\n\t{\n\t\tlong y = x\
    \ % 11;\n\t\tif (y==7 || y==13 && x%3==0 || x%5==0)\n\t\t\tcount++;\n\t\tx = x\
    \ / 11;\n\t}\n\treturn count;\n}\n/*\nReturn the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13 and are multiples of\
    \ 3 or 5.\n    >>> fizz_buzz_multiples_fast(50L)\n    0L\n    >>> fizz_buzz_multiples_fast(78L)\n\
    \    1L\n    >>> fizz_buzz_multiples_fast(79L)\n    1L\n    \n*/\nlong fizz_buzz_multiples_fast(long\
    \ n) \n{\n\tlong count = 0;\n\tlong x = n;\n\twhile (x>0)\n\t{\n\t\tlong y = x\
    \ % 11;\n\t\tif (y==7 || y==13 && x%3==0 || x%5==0)\n\t\t\tcount++;\n\t\t\nunittest\n\
    {\n    alias candidate = fizz_buzz;\n\n    assert(candidate(50L) == 0L);\n   \
    \ assert(candidate(78L) == 2L);\n    assert(candidate(79L) == 3L);\n    assert(candidate(100L)\
    \ == 3L);\n    assert(candidate(200L) == 6L);\n    assert(candidate(4000L) ==\
    \ 192L);\n    assert(candidate(10000L) == 639L);\n    assert(candidate(100000L)\
    \ == 8026L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqllgxscv.d(92): Error: found `unittest` instead of statement\n/tmp/tmpqllgxscv.d(105):
    Error: found `End of File` when expecting `}` following compound statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqllgxscv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nReturn the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\n\
    \    >>> fizz_buzz(50L)\n    0L\n    >>> fizz_buzz(78L)\n    2L\n    >>> fizz_buzz(79L)\n\
    \    3L\n    \n*/\nlong fizz_buzz(long n) \n{\n    long count = 0;\n    long x\
    \ = n;\n    long y = x;\n    long z = x;\n    long a = x;\n    long b = x;\n \
    \   long c = x;\n    long d = x;\n    long e = x;\n    long f = x;\n    long g\
    \ = x;\n    long h = x;\n    long i = x;\n    long j = x;\n    long k = x;\n \
    \   long l = x;\n    long m = x;\n    long n = x;\n    long o = x;\n    long p\
    \ = x;\n    long q = x;\n    long r = x;\n    long s = x;\n    long t = x;\n \
    \   long u = x;\n    long v = x;\n    long w = x;\n    long x = x;\n    long y\
    \ = x;\n    long z = x;\n    long a = x;\n    long b = x;\n    long c = x;\n \
    \   long d = x;\n    long e = x;\n    long f = x;\n    long g = x;\n    long h\
    \ = x;\n    long i = x;\n    long j = x;\n    long k = x;\n    long l = x;\n \
    \   long m = x;\n    long n = x;\n    long o = x;\n    long p = x;\n    long q\
    \ = x;\n    long r = x;\n    long s = x;\n    long t = x;\n    long u = x;\n \
    \   long v = x;\n    long w = x;\n    long x = x;\n    long y = x;\n    long z\
    \ = x;\n    long a = x;\n    long b = x;\n    long c = x;\n    long d = x;\n \
    \   long e = x;\n    long f = x;\n    long g = x;\n    long h = x;\n    long i\
    \ = x;\n    long j = x;\n    long k = x;\n    long l = x;\n    long m = x;\n \
    \   long n = x;\n    long o = x;\n    long p = x;\n    long q = x;\n    long r\
    \ = x;\n    long s = x;\n    long t = x;\n    long u = x;\n    long v = x;\n \
    \   long w = x;\n    long x = x;\n    long y = x;\n    long z = x;\n    long a\
    \ = x;\n    long b = x;\n    long c = x;\n    long d = x;\n    long e = x;\n \
    \   long f = x;\n    long g = x;\n    long h = x;\n    long i = x;\n    long j\
    \ = x;\n    long k = x;\n    long l = x;\n    long m = x;\n    long n = x;\n \
    \   long o = x;\n    long p = x;\n    long q = x;\n    long r = x;\n    long s\
    \ = x;\n    long t = x;\n    \nunittest\n{\n    alias candidate = fizz_buzz;\n\
    \n    assert(candidate(50L) == 0L);\n    assert(candidate(78L) == 2L);\n    assert(candidate(79L)\
    \ == 3L);\n    assert(candidate(100L) == 3L);\n    assert(candidate(200L) == 6L);\n\
    \    assert(candidate(4000L) == 192L);\n    assert(candidate(10000L) == 639L);\n\
    \    assert(candidate(100000L) == 8026L);\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp5_gvlbbp.d(118): Error: found `unittest` instead of statement\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp5_gvlbbp.d", "-I/tmp"]\n'''
  stdout: b''

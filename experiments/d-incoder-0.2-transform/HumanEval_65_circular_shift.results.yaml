language: d
name: HumanEval_65_circular_shift
results:
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long remainder;\n    \n    if (shift > digits(x))\n    {\n\
    \        remainder = x % 10;\n        x /= 10;\n        shift -= digits(x);\n\
    \        result += to_string(remainder);\n    }\n    \n    while (shift > 0)\n\
    \    {\n        remainder = x % 10;\n        x /= 10;\n        shift -= digits(x);\n\
    \        result += to_string(remainder);\n    }\n    \n    return result;\n}\n\
    unittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt1gqf0a_.d(18): Error: undefined identifier `digits`\n/tmp/tmpt1gqf0a_.d(22):
    Error: undefined identifier `digits`\n/tmp/tmpt1gqf0a_.d(23): Error: undefined
    identifier `to_string`\n/tmp/tmpt1gqf0a_.d(30): Error: undefined identifier `digits`\n/tmp/tmpt1gqf0a_.d(31):
    Error: undefined identifier `to_string`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpt1gqf0a_.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long remainder;\n    \n    if (shift > __digits__)\n   \
    \ {\n        shift = __digits__ - shift;\n    }\n    \n    while (shift > 0)\n\
    \    {\n        remainder = (x % __digits__);\n        x /= __digits__;\n    \
    \    x <<= 1;\n        x |= remainder;\n        shift -= 1;\n    }\n    \n   \
    \ while (x != 0)\n    {\n        remainder = (x % __digits__);\n        x /= __digits__;\n\
    \        result += __digits__ - remainder;\n    }\n    \n    return result;\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpqr0l0i8q.d(18): Error: undefined identifier `__digits__`\n/tmp/tmpqr0l0i8q.d(20):
    Error: undefined identifier `__digits__`\n/tmp/tmpqr0l0i8q.d(25): Error: undefined
    identifier `__digits__`\n/tmp/tmpqr0l0i8q.d(26): Error: undefined identifier `__digits__`\n/tmp/tmpqr0l0i8q.d(34):
    Error: undefined identifier `__digits__`\n/tmp/tmpqr0l0i8q.d(35): Error: undefined
    identifier `__digits__`\n/tmp/tmpqr0l0i8q.d(36): Error: undefined identifier `__digits__`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpqr0l0i8q.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long remainder;\n    \n    if (shift > digits(x))\n    {\n\
    \        remainder = x % 10;\n        x /= 10;\n        shift -= digits(x);\n\
    \        \n        while (remainder > 0)\n        {\n            result += digits[remainder];\n\
    \            remainder /= 10;\n        }\n        \n        return result + digits[remainder];\n\
    \    }\n    \n    while (shift > 0)\n    {\n        remainder = x % 10;\n    \
    \    x /= 10;\n        shift -= digits(x);\n        \n        result += digits[remainder];\n\
    \    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpe6q69qrc.d(18): Error: undefined identifier `digits`\n/tmp/tmpe6q69qrc.d(22):
    Error: undefined identifier `digits`\n/tmp/tmpe6q69qrc.d(26): Error: undefined
    identifier `digits`\n/tmp/tmpe6q69qrc.d(30): Error: undefined identifier `digits`\n/tmp/tmpe6q69qrc.d(37):
    Error: undefined identifier `digits`\n/tmp/tmpe6q69qrc.d(39): Error: undefined
    identifier `digits`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpe6q69qrc.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long n = x;\n    long remainder;\n    \n    while(shift\
    \ > 0)\n    {\n        remainder = n % 10;\n        n = n / 10;\n        result\
    \ = remainder + result;\n        shift--;\n    }\n    \n    if(n < 10)\n    {\n\
    \        result = n + result;\n    }\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) ==\
    \ \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpw81p7gc5.d(23): Error: incompatible types for `(remainder) +
    (result)`: `long` and `string`\n/tmp/tmpw81p7gc5.d(29): Error: incompatible types
    for `(n) + (result)`: `long` and `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpw81p7gc5.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long n = x;\n    long m = n;\n    long shift2 = shift;\n\
    \    \n    while (m > 0)\n    {\n        result += (n % 10) + \"\";\n        n\
    \ /= 10;\n        m -= shift2;\n        shift2 -= shift;\n    }\n    \n    if\
    \ (shift2 > 0)\n    {\n        result += (n % 10) + \"\";\n    }\n    \n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2n0tm5iv.d(22): Error: incompatible types for `(n % cast(long)10)
    + ("")`: `long` and `string`\n/tmp/tmp2n0tm5iv.d(30): Error: incompatible types
    for `(n % cast(long)10) + ("")`: `long` and `string`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp2n0tm5iv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long n = x;\n    long carry = 0;\n    \n    while(n > 0)\n\
    \    {\n        long digit = n % 10;\n        result += digits[digit];\n     \
    \   carry = digit + carry;\n        n /= 10;\n    }\n    \n    if(carry > 0)\n\
    \        result += digits[carry];\n    \n    for(int i = result.length() - 1;\
    \ i >= shift; i--)\n        result[i] = digits[result[i]];\n    \n    return result;\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpirlazd2x.d(22): Error: undefined identifier `digits`, did you
    mean variable `digit`?\n/tmp/tmpirlazd2x.d(28): Error: undefined identifier `digits`\n/tmp/tmpirlazd2x.d(30):
    Error: no property `length` for type `string`\n/tmp/tmpirlazd2x.d(31): Error:
    undefined identifier `digits`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpirlazd2x.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long remainder;\n    \n    if (shift > __digits__)\n   \
    \ {\n        shift = __digits__ - shift;\n    }\n    \n    while (shift > 0)\n\
    \    {\n        remainder = (x % 10);\n        x /= 10;\n        x += (shift -=\
    \ __digits__);\n        result += __digits__ - remainder;\n    }\n    \n    return\
    \ result;\n}\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp57q8lx_y.d(18): Error: undefined identifier `__digits__`\n/tmp/tmp57q8lx_y.d(20):
    Error: undefined identifier `__digits__`\n/tmp/tmp57q8lx_y.d(27): Error: undefined
    identifier `__digits__`\n/tmp/tmp57q8lx_y.d(28): Error: undefined identifier `__digits__`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp57q8lx_y.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long digit;\n    \n    if (shift > digits_in_long(x))\n\
    \    {\n        digit = x % 10;\n        x /= 10;\n        result += digit;\n\
    \        \n        while (shift > digits_in_long(x))\n        {\n            digit\
    \ = x % 10;\n            x /= 10;\n            result += digit;\n            shift\
    \ -= digits_in_long(x);\n        }\n    }\n    else\n    {\n        while (shift\
    \ > digits_in_long(x))\n        {\n            digit = x % 10;\n            x\
    \ /= 10;\n            result += digit;\n            shift -= digits_in_long(x);\n\
    \        }\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpoj5o40zz.d(18): Error: undefined identifier `digits_in_long`\n/tmp/tmpoj5o40zz.d(22):
    Error: incompatible types for `(result) += (digit)`: `string` and `long`\n/tmp/tmpoj5o40zz.d(24):
    Error: undefined identifier `digits_in_long`\n/tmp/tmpoj5o40zz.d(28): Error: incompatible
    types for `(result) += (digit)`: `string` and `long`\n/tmp/tmpoj5o40zz.d(29):
    Error: undefined identifier `digits_in_long`\n/tmp/tmpoj5o40zz.d(34): Error: undefined
    identifier `digits_in_long`\n/tmp/tmpoj5o40zz.d(38): Error: incompatible types
    for `(result) += (digit)`: `string` and `long`\n/tmp/tmpoj5o40zz.d(39): Error:
    undefined identifier `digits_in_long`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpoj5o40zz.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long remainder;\n    \n    while (shift > 0)\n    {\n  \
    \      remainder = (x % 10);\n        x /= 10;\n        x += (shift -= (remainder\
    \ % 10));\n        result += (remainder < 10 ? remainder + \"0\" : remainder +\
    \ \"\");\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpgi6ytj5z.d(23): Error: incompatible types for `(remainder) +
    ("0")`: `long` and `string`\n/tmp/tmpgi6ytj5z.d(23): Error: incompatible types
    for `(remainder) + ("")`: `long` and `string`\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpgi6ytj5z.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long n = x;\n    long m = shift % n;\n    long d = n % m;\n\
    \    long r = m / n;\n    long s = n % r;\n    long t = m / r;\n    long u = t\
    \ % s;\n    long v = s / t;\n    long w = v % t;\n    long x = v / t;\n    long\
    \ y = w % x;\n    long z = w / x;\n    long a = y % z;\n    long b = z / y;\n\
    \    long c = a % b;\n    long d = b / a;\n    long e = c % d;\n    long f = d\
    \ / c;\n    long g = e % f;\n    long h = f / e;\n    long i = g / f;\n    long\
    \ j = h % i;\n    long k = i / h;\n    long l = j % k;\n    long m = l / j;\n\
    \    long n = m % l;\n    long o = n / m;\n    long p = o % n;\n    long q = p\
    \ / o;\n    long r = q % p;\n    long s = r / q;\n    long t = s % r;\n    long\
    \ u = t / s;\n    long v = u % t;\n    long w = v / u;\n    long x = w % v;\n\
    \    long y = x / w;\n    long z = y % x;\n    long a = z / z;\n    long b = a\
    \ % a;\n    long c = b / a;\n    long d = c % b;\n    long e = d / b;\n    long\
    \ f = e % e;\n    long g = f / e;\n    long h = g / f;\n    long i = h % g;\n\
    \    long j = i / h;\n    long k = j % i;\n    long l = k / j;\n    long m = l\
    \ % k;\n    long n = m / m;\n    long o = n / n;\n    long p = o % o;\n    long\
    \ q = p / o;\n    long r = q % p;\n    long s = r / q;\n    long t = s % r;\n\
    \    long u = t / s;\n    long v = u % t;\n    long w = v / u;\n    long x = w\
    \ % v;\n    long y = x / w;\n    long z = y % x;\n    long a = z / z;\n    long\
    \ b = a % a;\n    long c = b / a;\n    long d = c % b;\n    long e = d / b;\n\
    \    long f = e % e;\n    long g = f / e;\n    long h = g\nunittest\n{\n    alias\
    \ candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n\
    \    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"\
    79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L, 101L)\
    \ == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpir53zdbf.d(88): Error: semicolon expected, not `unittest`\n/tmp/tmpir53zdbf.d(88):
    Error: found `unittest` instead of statement\nFailed: ["dmd", "-unittest", "-v",
    "-o-", "/tmp/tmpir53zdbf.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long n = x;\n    long m = shift % n;\n    long r = n % m;\n\
    \    long s = m / r;\n    long t = m % r;\n    \n    for(long i = 0; i < s; ++i)\n\
    \    {\n        result += to_string(t);\n        t += r;\n    }\n    \n    for(long\
    \ i = 0; i < r; ++i)\n    {\n        result += to_string(n);\n        n -= m;\n\
    \    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp2uac3bis.d(24): Error: undefined identifier `to_string`\n/tmp/tmp2uac3bis.d(30):
    Error: undefined identifier `to_string`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmp2uac3bis.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long n = x;\n    long m = shift % n;\n    long r = n >>\
    \ m;\n    long s = n - (r<<m);\n    \n    while(s > 0)\n    {\n        result\
    \ = char(r % 10) + result;\n        r = r >> 10;\n        s = s >> 10;\n    }\n\
    \    \n    while(m > 0)\n    {\n        result = char(r % 10) + result;\n    \
    \    r = r >> 10;\n        m = m >> 10;\n    }\n    \n    return result;\n}\n\
    unittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp6k8f_2jt.d(23): Error: cannot implicitly convert expression
    `r % 10L` of type `long` to `char`\n/tmp/tmp6k8f_2jt.d(30): Error: cannot implicitly
    convert expression `r % 10L` of type `long` to `char`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmp6k8f_2jt.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long digit = x;\n    long carry = 0;\n    \n    while (shift\
    \ > 0)\n    {\n        digit = digit >> shift;\n        carry = digit & 1;\n \
    \       result += char(carry);\n        shift -= 1;\n    }\n    \n    if (carry\
    \ > 0)\n        result += char(carry);\n    \n    return result;\n}\nunittest\n\
    {\n    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) ==\
    \ \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpr5fqkq9z.d(23): Error: cannot implicitly convert expression
    `carry` of type `long` to `char`\n/tmp/tmpr5fqkq9z.d(28): Error: cannot implicitly
    convert expression `carry` of type `long` to `char`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpr5fqkq9z.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long remainder;\n    \n    while(shift > 0)\n    {\n   \
    \     remainder = x % 10;\n        x /= 10;\n        result += to_string(remainder);\n\
    \        shift -= 1;\n    }\n    \n    if(x < 0)\n    {\n        while(x < 0)\n\
    \        {\n            result += to_string(-x);\n            x /= 10;\n     \
    \   }\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate =\
    \ circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpywzar8m6.d(22): Error: undefined identifier `to_string`\n/tmp/tmpywzar8m6.d(30):
    Error: undefined identifier `to_string`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmpywzar8m6.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long digits = x;\n    long remainder;\n    \n    while (digits\
    \ > 0)\n    {\n        remainder = digits % 10;\n        digits = digits / 10;\n\
    \        result += to_string(remainder);\n    }\n    \n    if (shift > result.length())\n\
    \    {\n        string reversed = result;\n        reversed.reverse();\n     \
    \   result = reversed;\n    }\n    \n    result += (shift - result.length()) *\
    \ '0';\n    \n    return result;\n}\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmp1wvp22_r.d(23): Error: undefined identifier `to_string`\n/tmp/tmp1wvp22_r.d(26):
    Error: no property `length` for type `string`\n/tmp/tmp1wvp22_r.d(29): Error:
    template `std.typecons.reverse` cannot deduce function from argument types `!()(string)`,
    candidates are:\n/home/zi.ya/spack/opt/spack/linux-centos7-haswell/gcc-4.8.5/dmd-2.081.1-uf6xyx53fosvucuy7fkpiod2bnffx7of/linux/bin64/../../src/phobos/std/typecons.d(1486):        `std.typecons.reverse(T)(T
    t) if (isTuple!T)`\n/tmp/tmp1wvp22_r.d(33): Error: no property `length` for type
    `string`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmp1wvp22_r.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long remainder;\n    \n    if (shift > digits(x))\n    {\n\
    \        remainder = x % 10;\n        x /= 10;\n        shift -= digits(x);\n\
    \        result += remainder;\n    }\n    \n    while (shift > 0)\n    {\n   \
    \     remainder = x % 10;\n        x /= 10;\n        shift -= digits(x);\n   \
    \     result += remainder;\n    }\n    \n    return result;\n}\nunittest\n{\n\
    \    alias candidate = circular_shift;\n\n    assert(candidate(100L, 2L) == \"\
    001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpdow56mg9.d(18): Error: undefined identifier `digits`\n/tmp/tmpdow56mg9.d(22):
    Error: undefined identifier `digits`\n/tmp/tmpdow56mg9.d(23): Error: incompatible
    types for `(result) += (remainder)`: `string` and `long`\n/tmp/tmpdow56mg9.d(30):
    Error: undefined identifier `digits`\n/tmp/tmpdow56mg9.d(31): Error: incompatible
    types for `(result) += (remainder)`: `string` and `long`\nFailed: ["dmd", "-unittest",
    "-v", "-o-", "/tmp/tmpdow56mg9.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long remainder;\n    \n    if (shift > digits(x))\n    {\n\
    \        remainder = x % 10;\n        x /= 10;\n        shift -= digits(x);\n\
    \        \n        while (remainder != 0)\n        {\n            result += remainder;\n\
    \            x /= 10;\n            remainder = x % 10;\n            x /= 10;\n\
    \            shift -= digits(x);\n        }\n    }\n    else\n    {\n        shift\
    \ -= digits(x);\n    }\n    \n    while (shift > 0)\n    {\n        result +=\
    \ digit(x);\n        x /= 10;\n        shift--;\n    }\n    \n    return result;\n\
    }\nunittest\n{\n    alias candidate = circular_shift;\n\n    assert(candidate(100L,\
    \ 2L) == \"001\");\n    assert(candidate(12L, 2L) == \"12\");\n    assert(candidate(97L,\
    \ 8L) == \"79\");\n    assert(candidate(12L, 1L) == \"21\");\n    assert(candidate(11L,\
    \ 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmplq2ljwmv.d(18): Error: undefined identifier `digits`\n/tmp/tmplq2ljwmv.d(22):
    Error: undefined identifier `digits`\n/tmp/tmplq2ljwmv.d(26): Error: incompatible
    types for `(result) += (remainder)`: `string` and `long`\n/tmp/tmplq2ljwmv.d(30):
    Error: undefined identifier `digits`\n/tmp/tmplq2ljwmv.d(35): Error: undefined
    identifier `digits`\n/tmp/tmplq2ljwmv.d(40): Error: undefined identifier `digit`\nFailed:
    ["dmd", "-unittest", "-v", "-o-", "/tmp/tmplq2ljwmv.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long remainder;\n    \n    if (shift > digits(x))\n    {\n\
    \        remainder = digits(x) % shift;\n        \n        while (remainder >\
    \ 0)\n        {\n            result += digits(x % 10);\n            x /= 10;\n\
    \            remainder--;\n        }\n        \n        while (remainder < 0)\n\
    \        {\n            result += digits(x % 10);\n            x /= 10;\n    \
    \        remainder++;\n        }\n    }\n    else\n    {\n        long remainder;\n\
    \        \n        while ((x > 0) && (shift > 0))\n        {\n            result\
    \ += digits(x % 10);\n            x /= 10;\n            shift--;\n        }\n\
    \        \n        while ((x < 0) && (shift < 0))\n        {\n            result\
    \ += digits(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \        \n        while ((x > 0) && (shift > 0))\n        {\n            result\
    \ += digits(x % 10);\n            x /= 10;\n            shift--;\n        }\n\
    \        \n        while ((x < 0) && (shift < 0))\n        {\n            result\
    \ += digits(x % 10);\n            x /= 10;\n            shift++;\n        }\n\
    \    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmphg6vbdnc.d(18): Error: undefined identifier `digits`\n/tmp/tmphg6vbdnc.d(20):
    Error: undefined identifier `digits`\n/tmp/tmphg6vbdnc.d(24): Error: undefined
    identifier `digits`\n/tmp/tmphg6vbdnc.d(31): Error: undefined identifier `digits`\n/tmp/tmphg6vbdnc.d(38):
    Error: variable `remainder` is shadowing variable `tmphg6vbdnc.circular_shift.remainder`\n/tmp/tmphg6vbdnc.d(42):
    Error: undefined identifier `digits`\n/tmp/tmphg6vbdnc.d(49): Error: undefined
    identifier `digits`\n/tmp/tmphg6vbdnc.d(56): Error: undefined identifier `digits`\n/tmp/tmphg6vbdnc.d(63):
    Error: undefined identifier `digits`\nFailed: ["dmd", "-unittest", "-v", "-o-",
    "/tmp/tmphg6vbdnc.d", "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long remainder;\n    \n    if (shift > digits(x))\n    {\n\
    \        remainder = x;\n        shift = 0;\n    }\n    else\n    {\n        remainder\
    \ = 0;\n    }\n    \n    while (shift > 0)\n    {\n        remainder = remainder\
    \ << 1;\n        shift = shift - 1;\n    }\n    \n    while (remainder != 0)\n\
    \    {\n        result = remainder % 10 + result;\n        remainder = remainder\
    \ / 10;\n    }\n    \n    return result;\n}\nunittest\n{\n    alias candidate\
    \ = circular_shift;\n\n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L,\
    \ 2L) == \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpzwfac86d.d(18): Error: undefined identifier `digits`\n/tmp/tmpzwfac86d.d(36):
    Error: incompatible types for `(remainder % cast(long)10) + (result)`: `long`
    and `string`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpzwfac86d.d",
    "-I/tmp"]\n'''
  stdout: b''
- exit_code: 1
  program: "import std.math;\nimport std.typecons;\n/*\nCircular shift the digits\
    \ of the integer x, shift the digits right by shift\n    and return the result\
    \ as a string.\n    If shift > number of digits, return digits reversed.\n   \
    \ >>> circular_shift(12L, 1L)\n    \"21\"\n    >>> circular_shift(12L, 2L)\n \
    \   \"12\"\n    \n*/\nstring circular_shift(long x, long shift) \n{\n    string\
    \ result = \"\";\n    long remainder;\n    \n    while (x) {\n        remainder\
    \ = x%10;\n        result += char(remainder);\n        x /= 10;\n    }\n    \n\
    \    if (shift > result.length())\n        result = circular_shift(result, shift-result.length());\n\
    \    \n    return result;\n}\nunittest\n{\n    alias candidate = circular_shift;\n\
    \n    assert(candidate(100L, 2L) == \"001\");\n    assert(candidate(12L, 2L) ==\
    \ \"12\");\n    assert(candidate(97L, 8L) == \"79\");\n    assert(candidate(12L,\
    \ 1L) == \"21\");\n    assert(candidate(11L, 101L) == \"11\");\n}\nvoid main(){}"
  status: SyntaxError
  stderr: 'b''/tmp/tmpt9bzf781.d(20): Error: cannot implicitly convert expression
    `remainder` of type `long` to `char`\n/tmp/tmpt9bzf781.d(24): Error: no property
    `length` for type `string`\n/tmp/tmpt9bzf781.d(25): Error: no property `length`
    for type `string`\nFailed: ["dmd", "-unittest", "-v", "-o-", "/tmp/tmpt9bzf781.d",
    "-I/tmp"]\n'''
  stdout: b''

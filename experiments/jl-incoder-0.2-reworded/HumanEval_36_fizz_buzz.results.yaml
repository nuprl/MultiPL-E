language: jl
name: HumanEval_36_fizz_buzz
results:
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw4khbse0.jl:10\nin expression starting at /tmp/tmpw4khbse0.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    else\n        if n%11==0\n            1\n    \
    \    else\n            if n%13==0\n                2\n            else\n     \
    \           3\n        end\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 3 or 5.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmkf35f_l.jl:23\nin expression starting at\
    \ /tmp/tmpmkf35f_l.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        if n%11==0\n\
    \            then return 1\n        else if n%13==0\n            then return 2\n\
    \        else return 3\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\
    \"Return the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n\
    \    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_01de2kl.jl:10\nin expression starting at /tmp/tmp_01de2kl.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n-1)\nend\n\
    </code>\n<|/ a tags=fizzbuzz,julia |>\n<| a tags=fizzbuzz,julia |>\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphme9wgzz.jl:10\nin expression starting at /tmp/tmphme9wgzz.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0\n    else return fizz_buzz(n/11)\
    \ + fizz_buzz(n/13)\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"Return the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n \
    \   >>> fizz_buzz(79)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpf6q46zto.jl:11\nin expression starting at /tmp/tmpf6q46zto.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n/11)+fizz_buzz(n/13)\n\
    end\n</cell>\n<code language=julia-1.3>\n\"\"\"Return the number of times the\
    \ digit 7 appears in integers less than n which are divisible by 11 or 13.\n \
    \   >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t\
    @test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsj1vpkk8.jl:10\nin expression starting at /tmp/tmpsj1vpkk8.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     if n % 11 == 1 \n            then return 1\n        else if n % 13 == 1\
    \ \n            then return 2\n        else return 3\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmponx5b2s5.jl:10\nin expression starting at /tmp/tmponx5b2s5.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%3==3 then return 3\n    if n%3==4 then return 3\n    if n%3==5\
    \ then return 3\n    if n%3==6 then return 3\n    if n%3==7 then return 3\n  \
    \  if n%3==8 then return 3\n    if n%3==9 then return 3\n    if n%3==10 then return\
    \ 3\n    if n%3==11 then return 3\n    if n%3==12 then return 3\n    if n%3==13\
    \ then return 3\n    if n%3==14 then return 3\n    if n%3==15 then return 3\n\
    \    if n%3==16 then return 3\n    if n%3==17 then return 3\n    if n%3==18 then\
    \ return 3\n    if n%3==19 then return 3\n    if n%3==20 then return 3\n    if\
    \ n%3==21 then return 3\n    if n%3==22 then return 3\n    if n%3==23 then return\
    \ 3\n    if n%3==24 then return 3\n    if n%3==25 then return 3\n    if n%3==26\
    \ then return 3\n    if n%3==27 then return 3\n    if n%3==28 then return 3\n\
    \    if n%3==29 then return 3\n    if n%3==30 then return 3\n    if n%3==31 then\
    \ return 3\n    if n%3==32 then return 3\n    if n%3==33 then return 3\n    if\
    \ n%3==34 then return 3\n    if n%3==35 then return 3\n    if n%3==36 then return\
    \ 3\n    if n%3==37 then return 3\n    if n%3==38 then return 3\n    if n%3==39\
    \ then return 3\n    if n%3==40 then return 3\n    if n%3==41 then return 3\n\
    \    if n%3==42 then return 3\n    if n%3==43 then return 3\n    if n%3==44 then\
    \ return 3\n    if n%3==45 then return 3\n    if n%3==46 then return 3\n    if\
    \ n%3==47 then return 3\n    if n%3==48 then return 3\n    if n%3==49 then return\
    \ 3\n    if n%3==50 then return 3\n    if n%3==51 then return 3\n    if n%3==52\
    \ then return 3\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvk0a0vio.jl:10\nin expression starting at /tmp/tmpvk0a0vio.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpoz6lamgo.jl:10\nin expression starting at /tmp/tmpoz6lamgo.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=fizzbuzz,haskell,fizzbuzz-buzz |>\n<code>\nfizzbuzz :: Int ->\
    \ Int\nfizzbuzz n = if n `mod` 3 == 0 then n `mod` 5 else if n `mod` 5 == 0 then\
    \ n `mod` 7 else if n `mod` 7 == 0 then n `mod` 11 else if n `mod` 11 == 0 then\
    \ n `mod` 13 else n\n</code>\n<|/ a dscore=0 |>\n<| a tags=fizzbuzz,haskell,fizzbuzz-buzz\
    \ |>\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = if n `mod` 3 == 0 then n `mod`\
    \ 5 else if n `mod` 5 == 0 then n `mod` 7 else if n `mod` 7 == 0 then n `mod`\
    \ 11 else if n `mod` 11 == 0 then n `mod` 13 else n\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nPlease don't post only code as an answer, but also provide an explanation\
    \ what your code does and how it solves the problem of the question. Answers with\
    \ an explanation are usually more helpful and of better quality, and are more\
    \ likely to attract upvotes.\n<|/ c |>\n<| c |>\nThis answer does not provide\
    \ an explanation as to why it works.\n<|/ c |>\n<| c |>\nThis answer does not\
    \ provide an explanation as to why it works.\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    fizzbuzz :: Int -> Int\nfizzbuzz n = if n `mod` 3 == 0 then n `mod` 5 else if\
    \ n `mod` 5 == 0 then n `mod` 7 else if n `mod` 7 == 0 then n `mod` 11 else if\
    \ n `mod` 11 == 0 then n `mod` 13 else n\n</code>\n<|/ a tags=fizzbuzz,haskell,fizzbuzz-buzz\
    \ |>\n<| c |>\nPlease don't post only code as an answer, but also provide an explanation\
    \ what your code does and how it solves the problem of the question. Answers with\
    \ an explanation are usually more helpful\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9dyje84g.jl:10\nin expression starting at /tmp/tmp9dyje84g.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else if n%11==0\n        1\n    else if n%13==0\n\
    \        2\n    else\n        0\nend\n</cell>\n<code language=julia-1.0>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaxyt01c8.jl:12\nin expression starting at\
    \ /tmp/tmpaxyt01c8.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0 \n\
    \        then return 1\n    else if n%13==0 \n        then return 2\n    else\
    \ return 3\nend\n</cell>\n<code language=julia-1.0>\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbutovb56.jl:10\nin expression starting at /tmp/tmpbutovb56.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%7==0 then return 7\n    if n%7==1 then return 7\n    if n%7==2\
    \ then return 7\n    if n%7==3 then return 7\n    if n%7==4 then return 7\n  \
    \  if n%7==5 then return 7\n    if n%7==6 then return 7\n    if n%7==7 then return\
    \ 7\n    if n%11==0 then return 11\n    if n%11==1 then return 11\n    if n%11==2\
    \ then return 11\n    if n%13==0 then return 13\n    if n%13==1 then return 13\n\
    \    if n%13==2 then return 13\n    if n%13==3 then return 13\n    if n%13==4\
    \ then return 13\n    if n%13==5 then return 13\n    if n%13==6 then return 13\n\
    \    if n%13==7 then return 13\n    return 0\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4juhoh_l.jl:10\nin expression starting at /tmp/tmp4juhoh_l.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else return 1\n   \
    \ end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp71_rj3qq.jl:10\nin expression starting at /tmp/tmp71_rj3qq.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfvtbxyim.jl:10\nin expression starting at /tmp/tmpfvtbxyim.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0\n \
    \       then return 1\n    else if n%13==0\n        then return 2\n    else return\
    \ 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\n\
    candidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbic14xjy.jl:10\nin expression starting at /tmp/tmpbic14xjy.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n<| a tags=fizzbuzz,julia\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdpgocwuh.jl:10\nin expression starting at /tmp/tmpdpgocwuh.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaad7rv4t.jl:10\nin expression starting at /tmp/tmpaad7rv4t.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaad7rv4t.jl:10\nin expression starting at /tmp/tmpaad7rv4t.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0 else return 1\n    else\
    \ return fizz_buzz(n/11)\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsqjtq4ba.jl:10\nin expression starting at /tmp/tmpsqjtq4ba.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw4khbse0.jl:10\nin expression starting at /tmp/tmpw4khbse0.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</code>\n<|/ a tags=julia,fizzbuzz |>\n<| a dscore=0\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd3ymmb66.jl:10\nin expression starting at /tmp/tmpd3ymmb66.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<text>\nExercise 9\nWrite a function that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 11\
    \ or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>>\
    \ fizz_buzz(79)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnrfgd1m4.jl:10\nin expression starting at /tmp/tmpnrfgd1m4.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\ndef fizz_buzz(n::Int64)::Int64\n    if n%11==0\
    \ or n%13==0 then return 0 else return 1\n</code>\n<|/ a tags=fizzbuzz,haskell\
    \ |>\n<| c |>\nPlease don't post only code as an answer, but also provide an explanation\
    \ what your code does and how it solves the problem of the question. Answers with\
    \ an explanation are usually more helpful and of better quality, and are more\
    \ likely to attract upvotes.\n<|/ c |>\n<| c |>\nPlease don't post only code as\
    \ an answer, but also provide an explanation what your code does and how it solves\
    \ the problem of the question. Answers with an explanation are usually more helpful\
    \ and of better quality, and are more likely to attract upvotes.\n<|/ c |>\n<|\
    \ c |>\nThis does not provide an answer to the question. Once you have sufficient\
    \ [reputation](https://stackoverflow.com/help/whats-reputation) you will be able\
    \ to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26547878)\n<|/ c |>\n<| c |>\nI disagree.\
    \ While this does answer the question, it is very poorly written. While it does\
    \ provide an explanation, it also does not explain how it solves the problem.\
    \ While it does provide a solution, it is very poorly written. While it does provide\
    \ a solution, it is very poorly written. While it does provide a solution, it\
    \ is very poorly written. While it does provide a solution, it is very poorly\
    \ written. While it does provide a solution, it is very poorly written. While\
    \ it does provide a solution, it is very poorly written. While it does provide\
    \ a solution, it is very poorly written. While it does provide a solution, it\
    \ is very poorly written. While it does provide a solution, it is very poorly\
    \ written. While it does provide a solution, it is very poorly written. While\
    \ it does provide a solution, it is very poorly written. While it \nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2_w9aag0.jl:10\nin expression starting at /tmp/tmp2_w9aag0.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11)+1\nend\n</cell>\n<code language=julia-1.3>\nfizz_buzz(50)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the number of times the\
    \ digit 7 appears in integers less than n which are divisible by 11 or 13. \n\
    Write a function that returns the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13. \nWrite a function that returns\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13. \nWrite a function that returns the number of times the digit 7\
    \ appears in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by \nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy4ru_krz.jl:10\nin expression starting at /tmp/tmpy4ru_krz.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    else if n==1\n        1\n    else if n==2\n  \
    \      2\n    else if n%3==0\n        fizz_buzz(n/3)\n    else\n        fizz_buzz(n/3)+1\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp41uuvpje.jl:12\nin expression starting at\
    \ /tmp/tmp41uuvpje.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.0>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphglf53ca.jl:10\nin expression starting at /tmp/tmphglf53ca.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpng3sn22h.jl:10\nin expression starting at /tmp/tmpng3sn22h.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw4khbse0.jl:10\nin expression starting at /tmp/tmpw4khbse0.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else if n%11==0\n        1\n    else if n%13==0\n\
    \        2\n    else \n        fizz_buzz(n/11)\nend\n</cell>\n<code language=julia-1.0>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk0uag07v.jl:12\nin expression starting at\
    \ /tmp/tmpk0uag07v.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return fizz_buzz(n / 11) + fizz_buzz(n / 13)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp_axbkwn.jl:10\nin expression starting at /tmp/tmpp_axbkwn.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%3==3 then return 3\n    if n%3==4 then return 3\n    if n%3==5\
    \ then return 3\n    if n%3==6 then return 3\n    if n%3==7 then return 3\n  \
    \  if n%3==8 then return 3\n    if n%3==9 then return 3\n    if n%3==10 then return\
    \ 3\n    if n%3==11 then return 3\n    if n%3==12 then return 3\n    if n%3==13\
    \ then return 3\n    if n%3==14 then return 3\n    if n%3==15 then return 3\n\
    \    if n%3==16 then return 3\n    if n%3==17 then return 3\n    if n%3==18 then\
    \ return 3\n    if n%3==19 then return 3\n    if n%3==20 then return 3\n    if\
    \ n%3==21 then return 3\n    if n%3==22 then return 3\n    if n%3==23 then return\
    \ 3\n    if n%3==24 then return 3\n    if n%3==25 then return 3\n    if n%3==26\
    \ then return 3\n    if n%3==27 then return 3\n    if n%3==28 then return 3\n\
    \    if n%3==29 then return 3\n    if n%3==30 then return 3\n    if n%3==31 then\
    \ return 3\n    if n%3==32 then return 3\n    if n%3==33 then return 3\n    if\
    \ n%3==34 then return 3\n    if n%3==35 then return 3\n    if n%3==36 then return\
    \ 3\n    if n%3==37 then return 3\n    if n%3==38 then return 3\n    if n%3==39\
    \ then return 3\n    if n%3==40 then return 3\n    if n%3==41 then return 3\n\
    \    if n%3==42 then return 3\n    if n%3==43 then return 3\n    if n%3==44 then\
    \ return 3\n    if n%3==45 then return 3\n    if n%3==46 then return 3\n    if\
    \ n%3==47 then return 3\n    if n%3==48 then return 3\n    if n%3==49 then return\
    \ 3\n    if n%3==50 then return 3\n    if n%3==51 then return 3\n    if n%3==52\
    \ then return 3\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvk0a0vio.jl:10\nin expression starting at /tmp/tmpvk0a0vio.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</code>\n<|/ a dscore=2 |>\n<| a tags=fizzbuzz,julia\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp30ig9rpp.jl:10\nin expression starting at /tmp/tmp30ig9rpp.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfvtbxyim.jl:10\nin expression starting at /tmp/tmpfvtbxyim.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0\n    else return 1\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd7mmitmg.jl:11\nin expression starting at /tmp/tmpd7mmitmg.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a tags=fizzbuzz,haskell\
    \ |>\n<| a tags=fizzbuzz,haskell |>\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz\
    \ n = if n==0 then \"FizzBuzz\" else if n==1 then \"Fizz\" else if n==2 then \"\
    Buzz\" else if n==3 then \"Fizz\" else if n==4 then \"Buzz\" else if n==5 then\
    \ \"FizzBuzz\" else if n==6 then \"Fizz\" else if n==7 then \"Buzz\" else if n==8\
    \ then \"Fizz\" else if n==9 then \"Buzz\" else if n==10 then \"FizzBuzz\" else\
    \ if n==11 then \"Fizz\" else if n==12 then \"Buzz\" else if n==13 then \"Fizz\"\
    \ else if n==14 then \"Buzz\" else if n==15 then \"FizzBuzz\" else if n==16 then\
    \ \"Fizz\" else if n==17 then \"Buzz\" else if n==18 then \"Fizz\" else if n==19\
    \ then \"Buzz\" else if n==20 then \"FizzBuzz\" else if n==21 then \"Fizz\" else\
    \ if n==22 then \"Buzz\" else if n==23 then \"Fizz\" else if n==24 then \"Buzz\"\
    \ else if n==25 then \"FizzBuzz\" else if n==26 then \"Fizz\" else if n==27 then\
    \ \"Buzz\" else if n==28 then \"Fizz\" else if n==29 then \"Buzz\" else if n==30\
    \ then \"FizzBuzz\" else if n==31 then \"Fizz\" else if n==32 then \"Buzz\" else\
    \ if n==33 then \"Fizz\" else if n==34 then \"Buzz\" else if n==35 then \"FizzBuzz\"\
    \ else if n==36 then \"Fizz\" else if n==37 then \"Buzz\" else if n==38 then \"\
    Fizz\" else if n==39 then \"Buzz\" else if n==40 then \"FizzBuzz\" else if n==41\
    \ then \"Fizz\" else if n==\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplqqwbqem.jl:10\nin expression starting at /tmp/tmplqqwbqem.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else return 1\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 and 13.\
    \ For example, fizz_buzz(50) should return 0, fizz_buzz(78) should return 2, and\
    \ fizz_buzz(79) should return 3.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd15o4k8j.jl:10\nin expression starting at /tmp/tmpd15o4k8j.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        then\
    \ return fizz_buzz(n/11)\n        fizz_buzz(n/13)\nend\n</cell>\n<code language=julia-1.0>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd7ukntbx.jl:10\nin expression starting at /tmp/tmpd7ukntbx.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0\n    else if n%11==0\n \
    \       then return 1\n    else if n%13==0\n        then return 2\n    else return\
    \ 3\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpevfif4x4.jl:11\nin expression starting at /tmp/tmpevfif4x4.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.3>\nfizz_buzz(50)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 3 or 5.\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgwgpuilc.jl:10\nin expression starting at /tmp/tmpgwgpuilc.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     then return 1\n    fizz_buzz(n+1)\nend\n</code>\n<|/ a dscore=0 |>\n<| c\
    \ |>\nPlease don't post only code as an answer, but also provide an explanation\
    \ of what your code does and how it solves the problem of the question. Answers\
    \ with an explanation are usually more helpful and of better quality, and are\
    \ more likely to attract upvotes.\n<|/ c |>\n<| c |>\nI added an explanation to\
    \ the answer\n<|/ c |>\n<| a tags=fizzbuzz,julia,recursion |>\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7m4j14ku.jl:10\nin expression starting at /tmp/tmp7m4j14ku.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     then return 1\n    fizz_buzz(n+1)\nend\n</code>\n<|/ a tags=fizzbuzz,julia,recursion\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or\
    \ request clarification from an author, leave a comment below their post. - [From\
    \ Review](/review/low-quality-posts/27817883)\n<|/ c |>\n<| c |>\nThe question\
    \ was \"how do I do FizzBuzz using recursion?\" The answer was \"use recursion\"\
    . The code I posted is Julia code. How does this not answer the question?\n<|/\
    \ c |>\n<| c |>\nThe question was \"how do I do FizzBuzz using recursion?\" The\
    \ answer was \"use recursion\". The code I posted is Julia code. How does this\
    \ not answer the question?\n<|/ c |>\n<| c |>\nThe question was \"how do I do\
    \ FizzBuzz using recursion?\" The answer was \"use recursion\". The code I posted\
    \ is Julia code. How does this not answer the question?\n<|/ c |>\n<| c |>\nThe\
    \ question was \"how do I do FizzBuzz using recursion?\" The answer was \"use\
    \ recursion\". The code I posted is Julia code. How does this not answer the question?\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzo22k33c.jl:10\nin expression starting at /tmp/tmpzo22k33c.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaad7rv4t.jl:10\nin expression starting at /tmp/tmpaad7rv4t.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else if n==1 \n        1\n    else if n==2 \n\
    \        2\n    else if n%3==0 \n        fizz_buzz(n/3)\n    else if n%5==0 \n\
    \        fizz_buzz(n/5)\n    else if n%7==0 \n        fizz_buzz(n/7)\n    else\
    \ \n        fizz_buzz(n/11)\nend\n</cell>\n<code language=julia-1.3>\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1xvnrp1a.jl:12\nin expression starting at\
    \ /tmp/tmp1xvnrp1a.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else if n==1 \n        1\n    else if n==2 \n\
    \        2\n    else if n%3==0 \n        fizz_buzz(n/3)\n    else if n%5==0 \n\
    \        fizz_buzz(n/5)\n    else if n%7==0 \n        fizz_buzz(n/7)\n    else\
    \ \n        fizz_buzz(n*3+7)\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. For example, fizz_buzz(50) should return 0,\
    \ fizz_buzz(78) should return 2, and fizz_buzz(79) should return 3.\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpikcdq9gm.jl:12\nin expression starting at\
    \ /tmp/tmpikcdq9gm.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a |>\n\
    <| a tags=fizzbuzz,haskell |>\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz n =\
    \ if n `mod` 3 == 0 then \"Fizz\" else if n `mod` 5 == 0 then \"Buzz\" else if\
    \ n `mod` 7 == 0 then \"FizzBuzz\" else show n\n</code>\n<|/ a dscore=2 |>\n<|\
    \ c |>\nThis answer doesn't explain how to solve the problem in the question.\
    \ Also, `fizzbuzz n = show n` would work just fine.\n<|/ c |>\n<| a tags=fizzbuzz,haskell\
    \ |>\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz n = if n==0 then \"FizzBuzz\"\
    \ else if n==1 then \"Fizz\" else if n==2 then \"Buzz\" else if n==3 then \"Fizz\"\
    \ else if n==4 then \"Buzz\" else if n==5 then \"Fizz\" else if n==6 then \"Buzz\"\
    \ else if n==7 then \"FizzBuzz\" else show n\n</code>\n<|/ a dscore=2 |>\n<| a\
    \ tags=fizzbuzz,haskell |>\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz n = if\
    \ n==0 then \"FizzBuzz\" else if n==1 then \"Fizz\" else if n==2 then \"Buzz\"\
    \ else if n==3 then \"Fizz\" else if n==4 then \"Buzz\" else if n==5 then \"Fizz\"\
    \ else if n==6 then \"Buzz\" else if n==7 then \"FizzBuzz\" else show n\n</code>\n\
    <|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz\
    \ n = if n==0 then \"FizzBuzz\" else if n==1 then \"Fizz\" else if n==2 then \"\
    Buzz\" else if n==3 then \"Fizz\" else if n==4 then \"Buzz\" else if n==5 then\
    \ \"Fizz\" else if n==6 then \"Buzz\" else if n==\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl1uihev7.jl:10\nin expression starting at /tmp/tmpl1uihev7.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    else\n        if n%11==0\n            1\n    \
    \    else\n            if n%13==0\n                2\n            else\n     \
    \           3\n        end\n    end\nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n\
    <| a dscore=1 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmedblann.jl:23\nin expression starting at\
    \ /tmp/tmpmedblann.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</code>\n<|/ a tags=fizzbuzz,julia |>\n<| a |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9b74bokd.jl:10\nin expression starting at /tmp/tmp9b74bokd.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then 0 else fizz_buzz(n-1)\nend\n</code>\n<|/ a\
    \ dscore=0 |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzg2d07dx.jl:10\nin expression starting at /tmp/tmpzg2d07dx.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    else if n==1\n        1\n    else if n==2\n  \
    \      2\n    else if n%3==0\n        fizz_buzz(n/3)\n    else if n%5==0\n   \
    \     fizz_buzz(n/5)\n    else if n%7==0\n        fizz_buzz(n/7)\n    else\n \
    \       fizz_buzz(n-1)\nend\n</cell>\n<code language=julia-1.3>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_zgsez7g.jl:12\nin expression starting at\
    \ /tmp/tmp_zgsez7g.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    elseif n==1\n        1\n    elseif n==2\n    \
    \    2\n    elseif n%3==0\n        fizz_buzz(n/3)\n    elseif n%5==0\n       \
    \ fizz_buzz(n/5)\n    elseif n%7==0\n        fizz_buzz(n/7)\n    else\n      \
    \  fizz_buzz(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_4oflz_f.jl:26\nin expression starting at\
    \ /tmp/tmp_4oflz_f.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0 else return 1\n    else\
    \ return fizz_buzz(n/11)+fizz_buzz(n/13)\nend\n</cell>\n<code language=julia-1.0>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpammddmcw.jl:10\nin expression starting at /tmp/tmpammddmcw.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0 \n\
    \        then return 1\n    else if n%13==0 \n        then return 2\n    else\
    \ return 3\nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n<| a dscore=1 |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjoc6ebec.jl:10\nin expression starting at /tmp/tmpjoc6ebec.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaad7rv4t.jl:10\nin expression starting at /tmp/tmpaad7rv4t.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return fizz_buzz(n / 11) + fizz_buzz(n / 13)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fizz_buzz(50)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13. \nThe function should work for any value of n.\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptsc_fa1_.jl:10\nin expression starting at /tmp/tmptsc_fa1_.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     then return 1 + fizz_buzz(n / 11)\n    fizz_buzz(n / 13)\nend\n</code>\n\
    <|/ a tags=fizzbuzz,julia |>\n<| c |>\nThis is not an answer to the question.\
    \ Please, consider adding this as a comment to the question.\n<|/ c |>\n<| c |>\n\
    I added an answer to the question. Thanks for your feedback.\n<|/ c |>\n<| a tags=fizzbuzz,julia\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8mhyv7zz.jl:10\nin expression starting at /tmp/tmp8mhyv7zz.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work. Try\
    \ it with `fizz_buzz(78)`.\n<|/ c |>\n<| c |>\nI see what you mean. Thanks for\
    \ pointing that out. I've updated my answer.\n<|/ c |>\n<| a tags=fizzbuzz,julia\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprx4cfoan.jl:10\nin expression starting at /tmp/tmprx4cfoan.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fizz_buzz(50)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2lnbhglk.jl:10\nin expression starting at /tmp/tmp2lnbhglk.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.3>\n@time fizz_buzz(50)\n\
    </cell>\n<code language=julia-1.3>\n@time fizz_buzz(78)\n</cell>\n<code language=julia-1.3>\n\
    @time fizz_buzz(79)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13. \nWrite a function that returns the number of times the digit 7\
    \ appears in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appear\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkbj8wnau.jl:10\nin expression starting at /tmp/tmpkbj8wnau.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0 \n\
    \        then return 1\n    else if n%13==0 \n        then return 2\n    else\
    \ return 3\nend\n</cell>\n<code language=julia-1.0>\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbutovb56.jl:10\nin expression starting at /tmp/tmpbutovb56.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11) + fizz_buzz(n/13)\nend\n</cell>\n<code language=julia-1.0>\n\
    fizz_buzz(50)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13 and are multiples of 3 or 5.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprdh__xh5.jl:11\nin expression starting at /tmp/tmprdh__xh5.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 11\
    \ or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than \nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3zw8y9cv.jl:10\nin expression starting at /tmp/tmp3zw8y9cv.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11) + fizz_buzz(n/13)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"Return the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n\
    \    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk5_is6v7.jl:10\nin expression starting at /tmp/tmpk5_is6v7.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0 else return 1\n    else\
    \ return fizz_buzz(n/11) + fizz_buzz(n/13)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpec7d1dqb.jl:10\nin expression starting at /tmp/tmpec7d1dqb.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%3==3 then return 3\n    if n%3==4 then return 3\n    if n%3==5\
    \ then return 3\n    if n%3==6 then return 3\n    if n%3==7 then return 3\n  \
    \  if n%3==8 then return 3\n    if n%3==9 then return 3\n    if n%3==10 then return\
    \ 3\n    if n%3==11 then return 3\n    if n%3==12 then return 3\n    if n%3==13\
    \ then return 3\n    if n%3==14 then return 3\n    if n%3==15 then return 3\n\
    \    if n%3==16 then return 3\n    if n%3==17 then return 3\n    if n%3==18 then\
    \ return 3\n    if n%3==19 then return 3\n    if n%3==20 then return 3\n    if\
    \ n%3==21 then return 3\n    if n%3==22 then return 3\n    if n%3==23 then return\
    \ 3\n    if n%3==24 then return 3\n    if n%3==25 then return 3\n    if n%3==26\
    \ then return 3\n    if n%3==27 then return 3\n    if n%3==28 then return 3\n\
    \    if n%3==29 then return 3\n    if n%3==30 then return 3\n    if n%3==31 then\
    \ return 3\n    if n%3==32 then return 3\n    if n%3==33 then return 3\n    if\
    \ n%3==34 then return 3\n    if n%3==35 then return 3\n    if n%3==36 then return\
    \ 3\n    if n%3==37 then return 3\n    if n%3==38 then return 3\n    if n%3==39\
    \ then return 3\n    if n%3==40 then return 3\n    if n%3==41 then return 3\n\
    \    if n%3==42 then return 3\n    if n%3==43 then return 3\n    if n%3==44 then\
    \ return 3\n    if n%3==45 then return 3\n    if n%3==46 then return 3\n    if\
    \ n%3==47 then return 3\n    if n%3==48 then return 3\n    if n%3==49 then return\
    \ 3\n    if n%3==50 then return 3\n    if n%3==51 then return 3\n    if n%3==52\
    \ then return 3\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvk0a0vio.jl:10\nin expression starting at /tmp/tmpvk0a0vio.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaad7rv4t.jl:10\nin expression starting at /tmp/tmpaad7rv4t.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.0>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphglf53ca.jl:10\nin expression starting at /tmp/tmphglf53ca.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    else if n==1\n        1\n    else if n==2\n  \
    \      2\n    else if n%3==0\n        3\n    else if n%5==0\n        5\n    else\
    \ if n%7==0\n        7\n    else if n%11==0\n        11\n    else if n%13==0\n\
    \        13\n    else\n        fizz_buzz(n-1)\nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4orscyo0.jl:12\nin expression starting at\
    \ /tmp/tmp4orscyo0.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then 0 else fizz_buzz(n-1)\nend\n</code>\n<|/ a\
    \ dscore=2 |>\n<| a dscore=2 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8ucf746d.jl:10\nin expression starting at /tmp/tmp8ucf746d.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        fizz_buzz(n/11)\n\
    \        fizz_buzz(n/13)\n</code>\n<|/ a dscore=0 |>\n<| a tags=fizzbuzz,haskell,recursion\
    \ |>\nI wrote a solution in Haskell that uses recursion and pattern matching:\n\
    <code>\nfizzBuzz :: Int -> String\nfizzBuzz n = case n of\n  0 -> \"FizzBuzz\"\
    \n  1 -> \"Fizz\"\n  2 -> \"Buzz\"\n  3 -> \"Fizz\"\n  4 -> \"Buzz\"\n  5 -> \"\
    Fizz\"\n  6 -> \"Buzz\"\n  7 -> \"FizzBuzz\"\n  8 -> \"Fizz\"\n  9 -> \"Buzz\"\
    \n  10 -> \"Fizz\"\n  11 -> \"Buzz\"\n  12 -> \"Fizz\"\n  13 -> \"Buzz\"\n  14\
    \ -> \"Fizz\"\n  15 -> \"Buzz\"\n  16 -> \"Fizz\"\n  17 -> \"Buzz\"\n  18 -> \"\
    Fizz\"\n  19 -> \"Buzz\"\n  20 -> \"Fizz\"\n  21 -> \"Buzz\"\n  22 -> \"Fizz\"\
    \n  23 -> \"Buzz\"\n  24 -> \"Fizz\"\n  25 -> \"Buzz\"\n  26 -> \"Fizz\"\n  27\
    \ -> \"Buzz\"\n  28 -> \"Fizz\"\n  29 -> \"Buzz\"\n  30 -> \"Fizz\"\n  31 -> \"\
    Buzz\"\n  32 -> \"Fizz\"\n  33 -> \"Buzz\"\n  34 -> \"Fizz\"\n  35 -> \"Buzz\"\
    \n  36 -> \"Fizz\"\n  37 -> \"Buzz\"\n  38 -> \"Fizz\"\n  39 -> \"Buzz\"\n  40\
    \ -> \"Fizz\"\n  41 -> \"Buzz\"\n  42 -> \"Fizz\"\n  43 -> \"Buzz\"\n  44 -> \"\
    Fizz\"\n  45 -> \"Buzz\"\n  46 -> \"Fizz\"\n  47 -> \"Buzz\"\n  48 -> \"Fizz\"\
    \n  49 -> \"Buzz\"\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t\
    @test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpix1uw0ns.jl:10\nin expression starting at /tmp/tmpix1uw0ns.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        then\
    \ return 1\n    end\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis does not provide\
    \ an answer to the question. To critique or request clarification from an author,\
    \ leave a comment below their post. - [From Review](/review/low-quality-posts/26810278)\n\
    <|/ c |>\n<| c |>\nThis does provide an answer. He asked how to count the number\
    \ of times a digit appears in an Int64 number. He also asked how to count the\
    \ number of times a digit appears in an Int64 number which are divisible by 11\
    \ or 13. He also asked how to count the number of times a digit appears in an\
    \ Int64 number which are divisible by 11 or 13. He also asked how to count the\
    \ number of times a digit appears in an Int64 number which are divisible by 11\
    \ or 13. He also asked how to count the number of times a digit appears in an\
    \ Int64 number which are divisible by 11 or 13. He also asked how to count the\
    \ number of times a digit appears in an Int64 number which are divisible by 11\
    \ or 13. He also asked how to count the number of times a digit appears in an\
    \ Int64 number which are divisible by 11 or 13. He also asked how to count the\
    \ number of times a digit appears in an Int64 number which are divisible by 11\
    \ or 13. He also asked how to count the number of times a digit appears in an\
    \ Int64 number which are divisible by 11 or 13. He also asked how to count the\
    \ number of times a digit appears in an Int64 number which are divisible by 11\
    \ or 13. He also asked how to count the number of times a digit appears in an\
    \ Int64 number which are divisible by 11 or 13. He also asked how to count the\
    \ number of times a digit appears in an Int64 number which are divisible by 11\
    \ or 13. He also asked how to count the number of times a digit appears in an\
    \ Int64 number which are divisible by 11 or 13. He also asked how to count the\
    \ number of times a digit appears in an Int64 number which are divisible by 11\
    \ or 13. He also asked how to count the number of times a digit appears in an\
    \ Int64 number which are divisible by 11 or 13. He also asked how to count the\
    \ number of times a digit appears in an Int64 number which are divisible by 11\
    \ or 13. He also asked how to count the number of times a digit appears in \n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4htkamn7.jl:10\nin expression starting at /tmp/tmp4htkamn7.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfvtbxyim.jl:10\nin expression starting at /tmp/tmpfvtbxyim.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n==1 then 1 else fizz_buzz(n-1)\nend\n</cell>\n\
    <text>\nExercise 10\nWrite a function that returns the number of times the digit\
    \ 7 appears in integers less than n which are divisible by 3 or 5.\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpq1lqtnqg.jl:10\nin expression starting at /tmp/tmpq1lqtnqg.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%3==3 then return 3\n    if n%3==4 then return 3\n    if n%3==5\
    \ then return 3\n    if n%3==6 then return 3\n    if n%3==7 then return 3\n  \
    \  if n%3==8 then return 3\n    if n%3==9 then return 3\n    if n%3==10 then return\
    \ 3\n    if n%3==11 then return 3\n    if n%3==12 then return 3\n    if n%3==13\
    \ then return 3\n    if n%3==14 then return 3\n    if n%3==15 then return 3\n\
    \    if n%3==16 then return 3\n    if n%3==17 then return 3\n    if n%3==18 then\
    \ return 3\n    if n%3==19 then return 3\n    if n%3==20 then return 3\n    if\
    \ n%3==21 then return 3\n    if n%3==22 then return 3\n    if n%3==23 then return\
    \ 3\n    if n%3==24 then return 3\n    if n%3==25 then return 3\n    if n%3==26\
    \ then return 3\n    if n%3==27 then return 3\n    if n%3==28 then return 3\n\
    \    if n%3==29 then return 3\n    if n%3==30 then return 3\n    if n%3==31 then\
    \ return 3\n    if n%3==32 then return 3\n    if n%3==33 then return 3\n    if\
    \ n%3==34 then return 3\n    if n%3==35 then return 3\n    if n%3==36 then return\
    \ 3\n    if n%3==37 then return 3\n    if n%3==38 then return 3\n    if n%3==39\
    \ then return 3\n    if n%3==40 then return 3\n    if n%3==41 then return 3\n\
    \    if n%3==42 then return 3\n    if n%3==43 then return 3\n    if n%3==44 then\
    \ return 3\n    if n%3==45 then return 3\n    if n%3==46 then return 3\n    if\
    \ n%3==47 then return 3\n    if n%3==48 then return 3\n    if n%3==49 then return\
    \ 3\n    if n%3==50 then return 3\n    if n%3==51 then return 3\n    if n%3==52\
    \ then return 3\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvk0a0vio.jl:10\nin expression starting at /tmp/tmpvk0a0vio.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then 0 else fizz_buzz(n-1)\nend\n</code>\n<|/ a\
    \ tags=fizzbuzz,julia |>\n<| a tags=fizzbuzz,julia |>\n<code>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2s7sy22i.jl:10\nin expression starting at /tmp/tmp2s7sy22i.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n%11==0 then return 1\n    if n%13==0 then\
    \ return 2\n    return fizz_buzz(n/10)\nend\n</cell>\n<code language=julia-1.0>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwq7f77f9.jl:10\nin expression starting at /tmp/tmpwq7f77f9.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw4khbse0.jl:10\nin expression starting at /tmp/tmpw4khbse0.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then 0 else fizz_buzz(n-1)\nend\n</code>\n<|/ a\
    \ tags=fizzbuzz,julia |>\n<| a dscore=2 |>\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7vvuarst.jl:10\nin expression starting at /tmp/tmp7vvuarst.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%3==3 then return 3\n    if n%3==4 then return 3\n    if n%3==5\
    \ then return 3\n    if n%3==6 then return 3\n    if n%3==7 then return 3\n  \
    \  if n%3==8 then return 3\n    if n%3==9 then return 3\n    if n%3==10 then return\
    \ 3\n    if n%3==11 then return 3\n    if n%3==12 then return 3\n    if n%3==13\
    \ then return 3\n    if n%3==14 then return 3\n    if n%3==15 then return 3\n\
    \    if n%3==16 then return 3\n    if n%3==17 then return 3\n    if n%3==18 then\
    \ return 3\n    if n%3==19 then return 3\n    if n%3==20 then return 3\n    if\
    \ n%3==21 then return 3\n    if n%3==22 then return 3\n    if n%3==23 then return\
    \ 3\n    if n%3==24 then return 3\n    if n%3==25 then return 3\n    if n%3==26\
    \ then return 3\n    if n%3==27 then return 3\n    if n%3==28 then return 3\n\
    \    if n%3==29 then return 3\n    if n%3==30 then return 3\n    if n%3==31 then\
    \ return 3\n    if n%3==32 then return 3\n    if n%3==33 then return 3\n    if\
    \ n%3==34 then return 3\n    if n%3==35 then return 3\n    if n%3==36 then return\
    \ 3\n    if n%3==37 then return 3\n    if n%3==38 then return 3\n    if n%3==39\
    \ then return 3\n    if n%3==40 then return 3\n    if n%3==41 then return 3\n\
    \    if n%3==42 then return 3\n    if n%3==43 then return 3\n    if n%3==44 then\
    \ return 3\n    if n%3==45 then return 3\n    if n%3==46 then return 3\n    if\
    \ n%3==47 then return 3\n    if n%3==48 then return 3\n    if n%3==49 then return\
    \ 3\n    if n%3==50 then return 3\n    if n%3==51 then return 3\n    if n%3==52\
    \ then return 3\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvk0a0vio.jl:10\nin expression starting at /tmp/tmpvk0a0vio.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n/11)+fizz_buzz(n/13)\n\
    end\n</cell>\n<code language=julia-1.0>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnbphhyux.jl:10\nin expression starting at /tmp/tmpnbphhyux.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n/11)+fizz_buzz(n/13)\n\
    end\n</cell>\n<code language=julia-1.3>\nfizz_buzz(50)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of times the digit 7 appears in\
    \ integers less than n which are divisible by 11 and 13. \n>>> fizz_buzz(50)\n\
    0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n3\n>>> fizz_buzz(100)\n0\n>>> fizz_buzz(101)\n\
    1\n>>> fizz_buzz(102)\n2\n>>> fizz_buzz(103)\n3\n>>> fizz_buzz(104)\n4\n>>> fizz_buzz(105)\n\
    5\n>>> fizz_buzz(106)\n6\n>>> fizz_buzz(107)\n7\n>>> fizz_buzz(108)\n8\n>>> fizz_buzz(109)\n\
    9\n>>> fizz_buzz(111)\n1\n>>> fizz_buzz(112)\n2\n>>> fizz_buzz(113)\n3\n>>> fizz_buzz(114)\n\
    4\n>>> fizz_buzz(115)\n5\n>>> fizz_buzz(116)\n6\n>>> fizz_buzz(117)\n7\n>>> fizz_buzz(118)\n\
    8\n>>> fizz_buzz(119)\n9\n>>> fizz_buzz(121)\n1\n>>> fizz_buzz(122)\n2\n>>> fizz_buzz(123)\n\
    3\n>>> fizz_buzz(124)\n4\n>>> fizz_buzz(125)\n5\n>>> fizz_buzz(126)\n6\n>>> fizz_buzz(127)\n\
    7\n>>> fizz_buzz(128)\n8\n>>> fizz_buzz(129)\n9\n>>> fizz_buzz(131)\n1\n>>> fizz_buzz(132)\n\
    2\n>>> fizz_buzz(133)\n3\n>>> fizz_buzz(134)\n4\n>>> fizz_buzz(135)\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjx12ygfi.jl:10\nin expression starting at /tmp/tmpjx12ygfi.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else if n==1 \n        1\n    else if n==2 \n\
    \        2\n    else if n%3==0 \n        fizz_buzz(n/3)\n    else if n%5==0 \n\
    \        fizz_buzz(n/5)\n    else if n%7==0 \n        fizz_buzz(n/7)\n    else\
    \ \n        fizz_buzz(n+1)\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp73ib6j1g.jl:12\nin expression starting at\
    \ /tmp/tmp73ib6j1g.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.3>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4tyal3lj.jl:10\nin expression starting at /tmp/tmp4tyal3lj.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\n</code>\n<|/ a tags=fizzbuzz,haskell |>\n<| a |>\n<code>\n\
    fizzbuzz :: Int -> String\nfizzbuzz n = if n==0 then \"FizzBuzz\" else if n==1\
    \ then \"Fizz\" else if n==2 then \"Buzz\" else if n==3 then \"FizzBuzz\" else\
    \ if n==4 then \"Buzz\" else if n==5 then \"Fizz\" else if n==6 then \"Buzz\"\
    \ else if n==7 then \"FizzBuzz\" else if n==8 then \"Buzz\" else if n==9 then\
    \ \"Fizz\" else if n==10 then \"Buzz\" else if n==11 then \"FizzBuzz\" else if\
    \ n==12 then \"Buzz\" else if n==13 then \"FizzBuzz\" else if n==14 then \"Buzz\"\
    \ else if n==15 then \"FizzBuzz\" else if n==16 then \"Buzz\" else if n==17 then\
    \ \"FizzBuzz\" else if n==18 then \"Buzz\" else if n==19 then \"FizzBuzz\" else\
    \ if n==20 then \"Buzz\" else if n==21 then \"FizzBuzz\" else if n==22 then \"\
    Buzz\" else if n==23 then \"FizzBuzz\" else if n==24 then \"Buzz\" else if n==25\
    \ then \"FizzBuzz\" else if n==26 then \"Buzz\" else if n==27 then \"FizzBuzz\"\
    \ else if n==28 then \"Buzz\" else if n==29 then \"FizzBuzz\" else if n==30 then\
    \ \"Buzz\" else if n==31 then \"FizzBuzz\" else if n==32 then \"Buzz\" else if\
    \ n==33 then \"FizzBuzz\" else if n==34 then \"Buzz\" else if n==35 then \"FizzBuzz\"\
    \ else if n==36 then \"Buzz\" else if n==37 then \"FizzBuzz\" else if n==38 then\
    \ \"Buzz\" else if n==\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm53sddma.jl:10\nin expression starting at /tmp/tmpm53sddma.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fizz_buzz(50)\n</cell>\n<code language=julia-1.5>\n@time fizz_buzz(78)\n\
    </cell>\n<code language=julia-1.5>\n@time fizz_buzz(79)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13. \n(Hint: Use a recursive function.)\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkerz_t2q.jl:10\nin expression starting at /tmp/tmpkerz_t2q.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return fizz_buzz(n - 1) \nend\n</cell>\n<code language=julia-1.5>\nfizz_buzz(50)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 3 or 5.\n\
    \    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t\
    @test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd_oejcux.jl:10\nin expression starting at /tmp/tmpd_oejcux.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then 0 else fizz_buzz(n-1)\nend\n</code>\n<|/ a\
    \ dscore=1 |>\n<| c |>\nThis doesn't work. `fizz_buzz(50)` returns `0`, but `fizz_buzz(78)`\
    \ returns `2`.\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing it out.\n\
    <|/ c |>\n<| c |>\nThanks for your answer. I was able to solve the problem using\
    \ recursion. I'll post the solution I came up with.\n<|/ c |>\n<| a tags=fizzbuzz,julia,recursion\
    \ |>\nI solved the problem using recursion. I was able to solve the problem using\
    \ recursion. I'll post the solution I came up with:\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuiwuiwlg.jl:10\nin expression starting at /tmp/tmpuiwuiwlg.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        then\
    \ return 1\n    end\nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n<| a dscore=0\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxf0ezxxe.jl:10\nin expression starting at /tmp/tmpxf0ezxxe.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<code language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpquryzxbc.jl:10\nin expression starting at /tmp/tmpquryzxbc.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%3==3 then return 3\n    if n%3==4 then return 3\n    if n%3==5\
    \ then return 3\n    if n%3==6 then return 3\n    if n%3==7 then return 3\n  \
    \  if n%3==8 then return 3\n    if n%3==9 then return 3\n    if n%3==10 then return\
    \ 3\n    if n%3==11 then return 3\n    if n%3==12 then return 3\n    if n%3==13\
    \ then return 3\n    if n%3==14 then return 3\n    if n%3==15 then return 3\n\
    \    if n%3==16 then return 3\n    if n%3==17 then return 3\n    if n%3==18 then\
    \ return 3\n    if n%3==19 then return 3\n    if n%3==20 then return 3\n    if\
    \ n%3==21 then return 3\n    if n%3==22 then return 3\n    if n%3==23 then return\
    \ 3\n    if n%3==24 then return 3\n    if n%3==25 then return 3\n    if n%3==26\
    \ then return 3\n    if n%3==27 then return 3\n    if n%3==28 then return 3\n\
    \    if n%3==29 then return 3\n    if n%3==30 then return 3\n    if n%3==31 then\
    \ return 3\n    if n%3==32 then return 3\n    if n%3==33 then return 3\n    if\
    \ n%3==34 then return 3\n    if n%3==35 then return 3\n    if n%3==36 then return\
    \ 3\n    if n%3==37 then return 3\n    if n%3==38 then return 3\n    if n%3==39\
    \ then return 3\n    if n%3==40 then return 3\n    if n%3==41 then return 3\n\
    \    if n%3==42 then return 3\n    if n%3==43 then return 3\n    if n%3==44 then\
    \ return 3\n    if n%3==45 then return 3\n    if n%3==46 then return 3\n    if\
    \ n%3==47 then return 3\n    if n%3==48 then return 3\n    if n%3==49 then return\
    \ 3\n    if n%3==50 then return 3\n    if n%3==51 then return 3\n    if n%3==52\
    \ then return 3\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvk0a0vio.jl:10\nin expression starting at /tmp/tmpvk0a0vio.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        then\
    \ return fizz_buzz(n/11)+1\n    fizz_buzz(n/11)+1\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpls0du982.jl:10\nin expression starting at /tmp/tmpls0du982.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0 else if n==1 then return 1 else if n==2 then return\
    \ 2 else if n%3==0 then return fizz_buzz(n/3) else return fizz_buzz(n/3)+1\nend\n\
    </cell>\n<code language=julia-1.3>\nfizz_buzz(50)\n</cell>\n<code language=julia-1.3>\n\
    fizz_buzz(78)\n</cell>\n<code language=julia-1.3>\nfizz_buzz(79)\n</cell>\n<code\
    \ language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpypyjysx9.jl:10\nin expression starting at /tmp/tmpypyjysx9.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        then\
    \ return 1\n    end\nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n<| a dscore=0\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxf0ezxxe.jl:10\nin expression starting at /tmp/tmpxf0ezxxe.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0\n    else if n%11==1\n \
    \       then return 1\n    else if n%13==1\n        then return 2\n    else if\
    \ n%11==2\n        then return 3\n    else if n%13==2\n        then return 4\n\
    \    else if n%11==3\n        then return 5\n    else if n%13==3\n        then\
    \ return 6\n    else if n%11==4\n        then return 7\n    else if n%13==4\n\
    \        then return 8\n    else if n%11==5\n        then return 9\n    else if\
    \ n%13==5\n        then return 10\n    else if n%11==6\n        then return 11\n\
    \    else if n%13==6\n        then return 12\n    else if n%11==7\n        then\
    \ return 13\n    else if n%13==7\n        then return 14\n    else return 15\n\
    end\n</cell>\n<code language=julia-1.4>\n\"\"\"Return the number of times the\
    \ digit 7 appears in integers less than n which are divisible by 11 or 13.\n \
    \   >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t\
    @test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfcviyilu.jl:11\nin expression starting at /tmp/tmpfcviyilu.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        then\
    \ return 1\n    fizz_buzz(n - 1)\nend\n</code>\n<|/ a |>\n<| c |>\nThis doesn't\
    \ work. `fizz_buzz(78)` returns `2`, but `fizz_buzz(79)` returns `3`.\n<|/ c |>\n\
    <| c |>\nI fixed the bug, thanks for pointing it out. Now it works as expected.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprladjy_l.jl:10\nin expression starting at /tmp/tmprladjy_l.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n%11==0 then return 1\n    if n%13==0 then\
    \ return 2\n    return fizz_buzz(n/10)\nend\n</cell>\n<code language=julia-1.0>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwq7f77f9.jl:10\nin expression starting at /tmp/tmpwq7f77f9.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%3==3 then return 3\n    if n%3==4 then return 3\n    if n%3==5\
    \ then return 3\n    if n%3==6 then return 3\n    if n%3==7 then return 3\n  \
    \  if n%3==8 then return 3\n    if n%3==9 then return 3\n    if n%3==10 then return\
    \ 3\n    if n%3==11 then return 3\n    if n%3==12 then return 3\n    if n%3==13\
    \ then return 3\n    if n%3==14 then return 3\n    if n%3==15 then return 3\n\
    \    if n%3==16 then return 3\n    if n%3==17 then return 3\n    if n%3==18 then\
    \ return 3\n    if n%3==19 then return 3\n    if n%3==20 then return 3\n    if\
    \ n%3==21 then return 3\n    if n%3==22 then return 3\n    if n%3==23 then return\
    \ 3\n    if n%3==24 then return 3\n    if n%3==25 then return 3\n    if n%3==26\
    \ then return 3\n    if n%3==27 then return 3\n    if n%3==28 then return 3\n\
    \    if n%3==29 then return 3\n    if n%3==30 then return 3\n    if n%3==31 then\
    \ return 3\n    if n%3==32 then return 3\n    if n%3==33 then return 3\n    if\
    \ n%3==34 then return 3\n    if n%3==35 then return 3\n    if n%3==36 then return\
    \ 3\n    if n%3==37 then return 3\n    if n%3==38 then return 3\n    if n%3==39\
    \ then return 3\n    if n%3==40 then return 3\n    if n%3==41 then return 3\n\
    \    if n%3==42 then return 3\n    if n%3==43 then return 3\n    if n%3==44 then\
    \ return 3\n    if n%3==45 then return 3\n    if n%3==46 then return 3\n    if\
    \ n%3==47 then return 3\n    if n%3==48 then return 3\n    if n%3==49 then return\
    \ 3\n    if n%3==50 then return 3\n    if n%3==51 then return 3\n    if n%3==52\
    \ then return 3\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvk0a0vio.jl:10\nin expression starting at /tmp/tmpvk0a0vio.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return fizz_buzz(n / 11) + fizz_buzz(n / 13)\nend\n</cell>\n<code language=julia-1.4>\n\
    fizz_buzz(50)\n</cell>\n<text>\nExercise: Write a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. Test it on some examples:\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmple96mgv4.jl:10\nin expression starting at /tmp/tmple96mgv4.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp99qmaeez.jl:10\nin expression starting at /tmp/tmp99qmaeez.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11)\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkeigqw0h.jl:10\nin expression starting at /tmp/tmpkeigqw0h.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%3==3 then return 3\n    if n%3==4 then return 4\n    if n%3==5\
    \ then return 4\n    if n%3==6 then return 4\n    if n%3==7 then return 5\n  \
    \  if n%3==8 then return 5\n    if n%3==9 then return 5\n    if n%3==10 then return\
    \ 5\n    if n%3==11 then return 6\n    if n%3==12 then return 6\n    if n%3==13\
    \ then return 6\n    if n%3==14 then return 6\n    if n%3==15 then return 6\n\
    \    if n%3==16 then return 6\n    if n%3==17 then return 6\n    if n%3==18 then\
    \ return 6\n    if n%3==19 then return 6\n    if n%3==20 then return 6\n    if\
    \ n%3==21 then return 6\n    if n%3==22 then return 6\n    if n%3==23 then return\
    \ 6\n    if n%3==24 then return 6\n    if n%3==25 then return 6\n    if n%3==26\
    \ then return 6\n    if n%3==27 then return 6\n    if n%3==28 then return 6\n\
    \    if n%3==29 then return 6\n    if n%3==30 then return 6\n    if n%3==31 then\
    \ return 6\n    if n%3==32 then return 6\n    if n%3==33 then return 6\n    if\
    \ n%3==34 then return 6\n    if n%3==35 then return 6\n    if n%3==36 then return\
    \ 6\n    if n%3==37 then return 6\n    if n%3==38 then return 6\n    if n%3==39\
    \ then return 6\n    if n%3==40 then return 6\n    if n%3==41 then return 6\n\
    \    if n%3==42 then return 6\n    if n%3==43 then return 6\n    if n%3==44 then\
    \ return 6\n    if n%3==45 then return 6\n    if n%3==46 then return 6\n    if\
    \ n%3==47 then return 6\n    if n%3==48 then return 6\n    if n%3==49 then return\
    \ 6\n    if n%3==50 then return 6\n    if n%3==51 then return 6\n    if n%3==52\
    \ then return 6\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptv20ucg1.jl:10\nin expression starting at /tmp/tmptv20ucg1.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaad7rv4t.jl:10\nin expression starting at /tmp/tmpaad7rv4t.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfvtbxyim.jl:10\nin expression starting at /tmp/tmpfvtbxyim.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0\n    else \n        then\
    \ return 1\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 3 or 5.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n   \
    \ >>> fizz_buzz(79)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp300dpw6b.jl:11\nin expression starting at /tmp/tmp300dpw6b.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else if n%11==0 \n        1\n    else if n%13==0\
    \ \n        2\n    else \n        fizz_buzz(n-1)\nend\n</code>\n<|/ a tags=fizzbuzz,julia,recursion\
    \ |>\n<| a |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgvs0myce.jl:12\nin expression starting at\
    \ /tmp/tmpgvs0myce.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return fizz_buzz(n / 11) + fizz_buzz(n / 13)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fizz_buzz(50)\n</cell>\n<text>\nExercise: Write a function that returns\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13 and are also divisible by 3 or 5.\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpicn65p7h.jl:10\nin expression starting at /tmp/tmpicn65p7h.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else \n        return 3\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpf6chei2_.jl:10\nin expression starting at /tmp/tmpf6chei2_.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaad7rv4t.jl:10\nin expression starting at /tmp/tmpaad7rv4t.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then 0 else fizz_buzz(n-1)\nend\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThis doesn't work. `fizz_buzz(50)` returns `0`, not `2`.\n\
    <|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing it out.\n<|/ c |>\n<|\
    \ c |>\nThis still doesn't work. `fizz_buzz(50)` returns `0`, not `2`.\n<|/ c\
    \ |>\n<| c |>\nI fixed the bug. Thanks for pointing it out.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyifjl_mi.jl:10\nin expression starting at /tmp/tmpyifjl_mi.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n%11==0 then return 1\n    if n%13==0 then\
    \ return 2\n    return fizz_buzz(n/11)\nend\n</cell>\n<code language=julia-1.0>\n\
    @time fizz_buzz(50)\n</cell>\n<text>\nExercise: Write a function that returns\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13. For example, fizz_buzz(50) should return 2.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps0qp9nup.jl:10\nin expression starting at /tmp/tmps0qp9nup.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw4khbse0.jl:10\nin expression starting at /tmp/tmpw4khbse0.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else if n==1 \n        1\n    else if n==2 \n\
    \        2\n    else if n%3==0 \n        fizz_buzz(n/3)+1\n    else if n%5==0\
    \ \n        fizz_buzz(n/5)+1\n    else if n%7==0 \n        fizz_buzz(n/7)+1\n\
    \    else \n        fizz_buzz(n/11)+1\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"Return the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n\
    \    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvq8_ousj.jl:12\nin expression starting at\
    \ /tmp/tmpvq8_ousj.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11) + fizz_buzz(n/13)\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13 and which are also divisible by 3 or\
    \ 5.\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcrz4nf0x.jl:10\nin expression starting at /tmp/tmpcrz4nf0x.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n%11==0 then\
    \ return fizz_buzz(n/11)\n    if n%13==0 then return fizz_buzz(n/13)\n    return\
    \ fizz_buzz(n/11)+fizz_buzz(n/13)\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy_748iaq.jl:10\nin expression starting at /tmp/tmpy_748iaq.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0 \n\
    \        then return 1\n    else if n%13==0 \n        then return 2\n    else\
    \ return 3\nend\n</code>\n<|/ a tags=fizzbuzz,julia,for-loop |>\n<| a dscore=0\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2vukvkdo.jl:10\nin expression starting at /tmp/tmp2vukvkdo.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0\n    else \n        then\
    \ return fizz_buzz(n/11) + fizz_buzz(n/13)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn97pmanr.jl:11\nin expression starting at /tmp/tmpn97pmanr.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw4khbse0.jl:10\nin expression starting at /tmp/tmpw4khbse0.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else return 1\nend\n\
    </code>\n<|/ a tags=fizzbuzz,julia |>\n<| c |>\nThis doesn't answer the question,\
    \ which is about how to implement the FizzBuzz algorithm, not how to implement\
    \ a FizzBuzz function.\n<|/ c |>\n<| c |>\nThe question was how to implement the\
    \ FizzBuzz algorithm, not how to implement a FizzBuzz function.  I provided a\
    \ Julia implementation that does that.  I didn't say that my answer was wrong.\
    \  I said that my answer was a Julia implementation that does that.  I provided\
    \ a Julia implementation that does that.  I didn't say that my answer was wrong.\
    \  I said that my answer was a Julia implementation that does that.  I provided\
    \ a Julia implementation that does that.  I didn't say that my answer was wrong.\
    \  I said that my answer was a Julia implementation that does that.  I provided\
    \ a Julia implementation that does that.  I didn't say that my answer was wrong.\
    \  I said that my answer was a Julia implementation that does that.  I provided\
    \ a Julia implementation that does that.  I didn't say that my answer was wrong.\
    \  I said that my answer was a Julia implementation that does that.  I provided\
    \ a Julia implementation that does that.  I didn't say that my answer was wrong.\
    \  I said that my answer was a Julia implementation that does that.  I provided\
    \ a Julia implementation that does that.  I didn't say that my answer was wrong.\
    \  I said that my answer was a Julia implementation that does that.  I provided\
    \ a Julia implementation that does that.  I didn't say that my answer was wrong.\
    \  I said that my answer was a Julia implementation that does that.  I provided\
    \ a Julia implementation that does that.  I didn't say that my answer was wrong.\
    \  I said that my answer was a Julia implementation that does that.  I provided\
    \ a Julia implementation that does that.  I didn't say that my answer was wrong.\
    \  I said that my answer was a Julia implementation that does that.  I provided\
    \ a Julia implementation that does that.  I didn't say that my answer was wrong.\
    \  I said that my answer was a Julia implementation that does that.  I provided\
    \ a Julia implementation that does that.  I didn't say that my answer was wrong.\
    \  I said that my answer was a Julia implementation that does that.  I provided\
    \ a Julia implementation that does that\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvnddo65z.jl:10\nin expression starting at /tmp/tmpvnddo65z.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        then\
    \ return 1\n    fizz_buzz(n - 1)\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/26827177)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He asked how to count\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13. He also asked how to do this recursively, which I believe is the\
    \ correct answer. He also asked how to do this using an iterative solution, which\
    \ I believe is the correct answer. He also asked how to do this using an iterative\
    \ solution, which I believe is the correct answer. He also asked how to do this\
    \ using an iterative solution, which I believe is the correct answer. He also\
    \ asked how to do this using an iterative solution, which I believe is the correct\
    \ answer.\n<|/ c |>\n<| c |>\nI believe this does answer the question. He asked\
    \ how to count the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. He also asked how to do this recursively, which\
    \ I believe is the correct answer. He also asked how to do this using an iterative\
    \ solution, which I believe is the correct answer. He also asked how to do this\
    \ using an iterative solution, which I believe is the correct answer. He also\
    \ asked how to do this using an iterative solution, which I believe is the correct\
    \ answer.\n<|/ c |>\n<| c |>\nI believe this does answer the question. He asked\
    \ how to count the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. He also asked how to do this recursively, which\
    \ I believe is the correct answer. He also asked how to do this using an iterative\
    \ solution, which I believe is the correct answer. He also asked how to do this\
    \ using an iterative solution, which I believe is the correct answer. He also\
    \ asked how to do this using an iterative solution, which I believe is the correct\
    \ answer.\n<|/ c |>\n<| c |>\nI believe this does answer the question. He asked\
    \ how to count the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. He also \nusing Test\n\n@testset begin\n\n\
    candidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpki1yb_tc.jl:10\nin expression starting at /tmp/tmpki1yb_tc.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%7==0 then return 7\n    if n%7==1 then return 7\n    if n%7==2\
    \ then return 7\n    if n%11==0 then return 11\n    if n%11==1 then return 11\n\
    \    if n%11==2 then return 11\n    if n%13==0 then return 13\n    if n%13==1\
    \ then return 13\n    if n%13==2 then return 13\n    return n\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy61eicvj.jl:10\nin expression starting at /tmp/tmpy61eicvj.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    else\n        if n%11==0\n            1\n    \
    \    else\n            if n%13==0\n                2\n            else\n     \
    \           0\n        end\n    end\nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n\
    <| c |>\nThanks for your answer! I understand that my code was too long and that\
    \ there are better ways to do it, but I wanted to understand why my code wasn't\
    \ working.\n<|/ c |>\n<| c |>\nI added some comments to my answer, hopefully they\
    \ will help you understand why your code was not working.\n<|/ c |>\n<| a dscore=1\
    \ |>\nThe main problem with your code is that you are trying to use an if statement\
    \ to determine whether a number is divisible by 11 or 13. Instead, you should\
    \ use an if statement to determine whether a number is divisible by 11 or 13,\
    \ and then use a second if statement to determine whether that number is divisible\
    \ by 3 or 5.\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2ik44tlj.jl:23\nin expression starting at\
    \ /tmp/tmp2ik44tlj.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0\n    else if n%11==0\n \
    \       then return 1\n    else if n%13==0\n        then return 2\n    else return\
    \ 3\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=fizzbuzz,julia,if-statement |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpedpgl0g8.jl:11\nin expression starting at /tmp/tmpedpgl0g8.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<text>\nExercise 9\nWrite a function that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 3 or\
    \ 5.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t\
    @test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpoixoaoz8.jl:10\nin expression starting at /tmp/tmpoixoaoz8.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0 else return 1\n    else\
    \ return fizz_buzz(n/11)\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp134e8yh8.jl:11\nin expression starting at /tmp/tmp134e8yh8.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else if n==1 \n        1\n    else if n==2 \n\
    \        2\n    else if n%3==0 \n        fizz_buzz(n/3)+1\n    else if n%5==0\
    \ \n        fizz_buzz(n/5)+1\n    else if n%7==0 \n        fizz_buzz(n/7)+1\n\
    \    else \n        fizz_buzz(n/11)+1\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpndye0tv1.jl:12\nin expression starting at\
    \ /tmp/tmpndye0tv1.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     if n % 11 == 1 \n            then return 1\n        else if n % 13 == 1\
    \ \n            then return 2\n        else return 3\n    end\nend\n</code>\n\
    <|/ a tags=fizzbuzz,julia |>\n<| c |>\nThis is not the most efficient solution,\
    \ since it requires two passes over the input (one to count the numbers, one to\
    \ count the digits). Also, `fizz_buzz(78)` returns `3` instead of `2`.\n<|/ c\
    \ |>\n<| c |>\nI agree with you, it is more efficient to count the numbers and\
    \ then count the digits. I edited my answer to reflect this.\n<|/ c |>\n<| a tags=fizzbuzz,julia\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpa3f4ksmg.jl:10\nin expression starting at /tmp/tmpa3f4ksmg.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 11\
    \ or 13 and which are also divisible by 3 or 5.\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps1cztknl.jl:10\nin expression starting at /tmp/tmps1cztknl.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaad7rv4t.jl:10\nin expression starting at /tmp/tmpaad7rv4t.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=fizzbuzz,haskell,functional-programming |>\nThe other answers\
    \ here are great, but I wanted to point out that you can also do this with list\
    \ comprehensions:\n<code>\nfizzbuzz :: Int -> [Int]\nfizzbuzz n = map (\\x ->\
    \ if x `mod` 3 == 0 then \"Fizz\" else if x `mod` 5 == 0 then \"Buzz\" else x)\
    \ [1..n]\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz :: Int\
    \ -> String\nfizzbuzz n = if n==0 then \"FizzBuzz\" else if n==1 then \"Fizz\"\
    \ else if n==2 then \"Buzz\" else if n==3 then \"FizzBuzz\" else if n==4 then\
    \ \"Fizz\" else if n==5 then \"Buzz\" else if n==6 then \"FizzBuzz\" else if n==7\
    \ then \"Fizz\" else if n==8 then \"Buzz\" else if n==9 then \"FizzBuzz\" else\
    \ if n==10 then \"Fizz\" else if n==11 then \"Buzz\" else if n==12 then \"FizzBuzz\"\
    \ else if n==13 then \"Fizz\" else if n==14 then \"Buzz\" else if n==15 then \"\
    FizzBuzz\" else if n==16 then \"Fizz\" else if n==17 then \"Buzz\" else if n==18\
    \ then \"FizzBuzz\" else if n==19 then \"Fizz\" else if n==20 then \"Buzz\" else\
    \ if n==21 then \"FizzBuzz\" else if n==22 then \"Fizz\" else if n==23 then \"\
    Buzz\" else if n==24 then \"FizzBuzz\" else if n==25 then \"Fizz\" else if n==26\
    \ then \"Buzz\" else if n==27 then \"FizzBuzz\" else if n==28 then \"Fizz\" else\
    \ if n==29 then \"Buzz\" else if n==30 then \"FizzBuzz\" else if n==31 then \"\
    Fizz\" else if n==32 then \"Buzz\" \nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1_h3vbsj.jl:10\nin expression starting at /tmp/tmp1_h3vbsj.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        then\
    \ return 1\n    fizz_buzz(n div 11)\n    fizz_buzz(n div 13)\nend\n</code>\n<|/\
    \ a tags=fizzbuzz,julia |>\n<| c |>\nThis doesn't work for `fizz_buzz(100)` because\
    \ `fizz_buzz(100)` returns `1` instead of `0`.\n<|/ c |>\n<| c |>\nThanks for\
    \ pointing that out. I've updated the code accordingly.\n<|/ c |>\n<| a tags=fizzbuzz,julia\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0c8diice.jl:10\nin expression starting at /tmp/tmp0c8diice.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaad7rv4t.jl:10\nin expression starting at /tmp/tmpaad7rv4t.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     then return 1\n    fizz_buzz(n-1)\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>\ndef fizz_buzz(n::Int64)::Int64\n    if n % 11 == 0 or n % 13 ==\
    \ 0 \n        then return 0\n    else \n        then return 1\n    fizz_buzz(n-1)\n\
    </code>\n<|/ a tags=fizzbuzz,haskell |>\n<| c |>\nPlease add some explanation\
    \ to your answer. Code-only answers are discouraged on Stack Overflow.\n<|/ c\
    \ |>\n<| c |>\nThis doesn't work because `fizz_buzz` doesn't return anything.\
    \ Also, `fizz_buzz` doesn't take any arguments. `fizz_buzz` should probably be\
    \ `fizzBuzz`.\n<|/ c |>\n<| c |>\nThis code doesn't work. `fizz_buzz` doesn't\
    \ return anything. Also, `fizz_buzz` doesn't take any arguments. `fizz_buzz` should\
    \ probably be `fizzBuzz`.\n<|/ c |>\n<| a |>\n<code>\nfizzbuzz :: Int -> Int\n\
    fizzbuzz n = if n `mod` 11 == 0 then 0 else if n `mod` 13 == 0 then 0 else if\
    \ n `mod` 17 == 0 then 0 else if n `mod` 19 == 0 then 0 else if n `mod` 23 ==\
    \ 0 then 0 else if n `mod` 29 == 0 then 0 else if n `mod` 31 == 0 then 0 else\
    \ if n `mod` 37 == 0 then 0 else if n `mod` 41 == 0 then 0 else if n `mod` 43\
    \ == 0 then 0 else if n `mod` 47 == 0 then 0 else if n `mod` 53 == 0 then 0 else\
    \ if n `mod` 59 == 0 then 0 else if n `mod` 61 == 0 then 0 else if n `mod` 67\
    \ == 0 then 0 else if n `mod` 71 == 0 then 0 else if n `mod` 73 == 0 then 0 else\
    \ if n `mod` 79 == 0 then 0 else if n `mod` 83 == 0 then 0 else if n `mod` 89\
    \ == 0 then 0 else if n `mod` 97 == 0 then 0 else n\n</code>\n<|/ a dscore=0 tags=fizzbuzz,haskell\
    \ |>\n\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn97r0y3s.jl:10\nin expression starting at /tmp/tmpn97r0y3s.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11)+1\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkxxs5xwt.jl:10\nin expression starting at /tmp/tmpkxxs5xwt.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a tags=fizzbuzz,haskell\
    \ |>\n<| c |>\nI like how you used the pattern matching to avoid the if-then-else\
    \ construct.\n<|/ c |>\n<| c |>\nI like how you used the pattern matching to avoid\
    \ the if-then-else construct.\n<|/ c |>\n<| a |>\nI like how you used the pattern\
    \ matching to avoid the if-then-else construct.\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5cenouh6.jl:10\nin expression starting at /tmp/tmp5cenouh6.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfvtbxyim.jl:10\nin expression starting at /tmp/tmpfvtbxyim.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.0>\n@time fizz_buzz(50)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of times\
    \ the digit 7 appears in integers less than n which are divisible by 11 or 13.\
    \ \nUse a for loop to iterate through all integers less than 100. \nUse a while\
    \ loop to iterate through all integers less than 100. \nUse a recursive function\
    \ to implement the fizz_buzz function. \nUse a while loop to iterate through all\
    \ integers less than 100. \nUse a recursive function to implement the fizz_buzz\
    \ function. \nUse a for loop to iterate through all integers less than 100. \n\
    Use a while loop to iterate through all integers less than 100. \nUse a recursive\
    \ function to implement the fizz_buzz function. \nUse a for loop to iterate through\
    \ all integers less than 100. \nUse a while loop to iterate through all integers\
    \ less than 100. \nUse a recursive function to implement the fizz_buzz function.\
    \ \nUse a for loop to iterate through all integers less than 100. \nUse a while\
    \ loop to iterate through all integers less than 100. \nUse a recursive function\
    \ to implement the fizz_buzz function. \nUse a for loop to iterate through all\
    \ integers less than 100. \nUse a while loop to iterate through all integers less\
    \ than 100. \nUse a recursive function to implement the fizz_buzz function. \n\
    Use a for loop to iterate through all integers less than 100. \nUse a while loop\
    \ to iterate through all integers less than 100. \nUse a recursive function to\
    \ implement the fizz_buzz function. \nUse a for loop to iterate through all integers\
    \ less than 100. \nUse a while loop to iterate through all integers less than\
    \ 100. \nUse a recursive function to implement the fizz_buzz function. \nUse a\
    \ for loop to iterate through all integers less than 100. \nUse a while loop to\
    \ iterate through all integers less than 100. \nUse a recursive function to implement\
    \ the fizz_buzz function. \nUse a for loop to iterate through all integers less\
    \ than 100. \nUse a while loop to iterate through all integers less than 100.\
    \ \nUse a recursive function to implement the fizz_buzz function. \nUse a for\
    \ loop to iterate \nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t\
    @test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnru857oy.jl:10\nin expression starting at /tmp/tmpnru857oy.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     if n % 11 == 1 \n            then return 1\n        else if n % 13 == 1\
    \ \n            then return 2\n        else return 3\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1ismxk1v.jl:10\nin expression starting at /tmp/tmp1ismxk1v.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0 \n\
    \        then return 1\n    else if n%13==0 \n        then return 2\n    else\
    \ return 3\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=julia,fizzbuzz |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpukk1y6pb.jl:10\nin expression starting at /tmp/tmpukk1y6pb.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then 0 else 1\nend\n</code>\n<|/ a tags=fizzbuzz,julia,function\
    \ |>\n<| c |>\nThis doesn't work. `fizz_buzz(50)` returns `1` instead of `0`.\n\
    <|/ c |>\n<| c |>\nI fixed the typo and added a link to the docs. Thanks for pointing\
    \ it out.\n<|/ c |>\n<| a tags=fizzbuzz,julia,function |>\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxjexswlu.jl:10\nin expression starting at /tmp/tmpxjexswlu.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11)+1\n    end\nend\n</cell>\n<code language=julia-1.3>\nfizz_buzz(50)\n\
    </cell>\n<code language=julia-1.3>\nfizz_buzz(78)\n</cell>\n<code language=julia-1.3>\n\
    fizz_buzz(79)\n</cell>\n<code language=julia-1.3>\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfgn_cokk.jl:11\nin expression starting at /tmp/tmpfgn_cokk.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\n</code>\n<|/ a dscore=2 |>\n<| a tags=fizzbuzz,haskell\
    \ |>\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz n = if n `mod` 3 == 0 then \"\
    Fizz\" else if n `mod` 5 == 0 then \"Buzz\" else if n `mod` 7 == 0 then \"FizzBuzz\"\
    \ else show n\n</code>\n<|/ a dscore=2 |>\n<| a tags=fizzbuzz,haskell |>\n<code>\n\
    fizzbuzz :: Int -> String\nfizzbuzz n = if n==0 then \"FizzBuzz\" else if n==1\
    \ then \"Fizz\" else if n==2 then \"Buzz\" else if n==3 then \"Fizz\" else if\
    \ n==4 then \"Buzz\" else if n==5 then \"Fizz\" else if n==6 then \"Buzz\" else\
    \ if n==7 then \"FizzBuzz\" else if n==8 then \"Fizz\" else if n==9 then \"Buzz\"\
    \ else if n==10 then \"Fizz\" else if n==11 then \"Buzz\" else if n==12 then \"\
    Fizz\" else if n==13 then \"Buzz\" else if n==14 then \"Fizz\" else if n==15 then\
    \ \"Buzz\" else if n==16 then \"Fizz\" else if n==17 then \"Buzz\" else if n==18\
    \ then \"Fizz\" else if n==19 then \"Buzz\" else if n==20 then \"Fizz\" else if\
    \ n==21 then \"Buzz\" else if n==22 then \"Fizz\" else if n==23 then \"Buzz\"\
    \ else if n==24 then \"Fizz\" else if n==25 then \"Buzz\" else if n==26 then \"\
    Fizz\" else if n==27 then \"Buzz\" else if n==28 then \"Fizz\" else if n==29 then\
    \ \"Buzz\" else if n==30 then \"Fizz\" else if n==31 then \"Buzz\" else if n==32\
    \ then \"Fizz\" else if n==33 then \"Buzz\" else if n==34 then \nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfg8ddsn5.jl:10\nin expression starting at /tmp/tmpfg8ddsn5.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\nend\n</cell>\n<code language=julia-1.3>\n\
    fizz_buzz(50)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of times the digit 7 appears in integers less than n which are divisible\
    \ by 3 or 5.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n   \
    \ >>> fizz_buzz(79)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl53nerg9.jl:10\nin expression starting at /tmp/tmpl53nerg9.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaad7rv4t.jl:10\nin expression starting at /tmp/tmpaad7rv4t.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n/11)+fizz_buzz(n/13)\n\
    </code>\n<|/ a dscore=1 |>\n<| a tags=fizzbuzz,haskell,recursion |>\n<code>\n\
    fizzbuzz :: Int -> String\nfizzbuzz n = if n==0 then \"FizzBuzz\" else if n==1\
    \ then \"Fizz\" else if n==2 then \"Buzz\" else if n==3 then \"Fizz\" else if\
    \ n==4 then \"Buzz\" else if n==5 then \"FizzBuzz\" else if n==6 then \"Fizz\"\
    \ else if n==7 then \"Buzz\" else if n==8 then \"Fizz\" else if n==9 then \"Buzz\"\
    \ else fizzbuzz (n-1)\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\n\
    fizzbuzz :: Int -> String\nfizzbuzz n = if n==0 then \"FizzBuzz\" else if n==1\
    \ then \"Fizz\" else if n==2 then \"Buzz\" else if n==3 then \"Fizz\" else if\
    \ n==4 then \"Buzz\" else if n==5 then \"FizzBuzz\" else if n==6 then \"Fizz\"\
    \ else if n==7 then \"Buzz\" else if n==8 then \"Fizz\" else if n==9 then \"Buzz\"\
    \ else fizzbuzz (n-1)\n</code>\n<|/ a tags=fizzbuzz,haskell,recursion |>\n<| a\
    \ tags=fizzbuzz,haskell,recursion |>\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz\
    \ n = if n==0 then \"FizzBuzz\" else if n==1 then \"Fizz\" else if n==2 then \"\
    Buzz\" else if n==3 then \"Fizz\" else if n==4 then \"Buzz\" else if n==5 then\
    \ \"FizzBuzz\" else if n==6 then \"Fizz\" else if n==7 then \"Buzz\" else if n==8\
    \ then \"Fizz\" else if n==9 then \"Buzz\" else fizzbuzz (n-1)\n</code>\n<|/ a\
    \ dscore=1 \nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpapzmuc09.jl:10\nin expression starting at /tmp/tmpapzmuc09.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfvtbxyim.jl:10\nin expression starting at /tmp/tmpfvtbxyim.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n\
    <| c |>\nThis code does not work. `fizz_buzz(50)` returns `0` instead of `1`.\n\
    <|/ c |>\n<| c |>\nI fixed the code so it works. I forgot to add `return` before\
    \ `fizz_buzz(n / 11)`.\n<|/ c |>\n<| a dscore=2 |>\nThe other answers here are\
    \ great, but I wanted to add my own solution that I believe is more elegant.\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi_775z9z.jl:10\nin expression starting at /tmp/tmpi_775z9z.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n%11==0 then\
    \ return fizz_buzz(n/11)\n    if n%13==0 then return fizz_buzz(n/13)\n    return\
    \ fizz_buzz(n/11)+fizz_buzz(n/13)\nend\n</cell>\n<code language=julia-1.0>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm67pf75s.jl:10\nin expression starting at /tmp/tmpm67pf75s.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    else\n        if n%11==0\n            1\n    \
    \    else\n            if n%13==0\n                2\n            else\n     \
    \           3\n        end\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13. \nThe function should take an argument\
    \ n and return the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nThe function should return 0 if the argument\
    \ n is less than 0.\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t\
    @test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpukn7icqa.jl:23\nin expression starting at\
    \ /tmp/tmpukn7icqa.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a tags=fizzbuzz,haskell\
    \ |>\n<| c |>\nThis doesn't work. `fizz_buzz` returns `Int64`, but `fizz_buzz`\
    \ itself returns `Int`. `fizz_buzz` should return `Int64`.\n<|/ c |>\n<| c |>\n\
    I fixed the return type to Int64. Thanks for the catch.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer! I appreciate it. I was wondering if you could explain why you\
    \ used `Int64` instead of `Int`? I understand that `Int64` is more precise, but\
    \ why is it more precise? Thanks again!\n<|/ c |>\n<| c |>\nThe `Int` type has\
    \ a finite number of bits. `Int64` has twice as many bits. `Int` has 32 bits.\
    \ `Int64` has 64 bits. `Int` has 32 bits. `Int64` has 64 bits. `Int` has 32 bits.\
    \ `Int64` has 64 bits. `Int` has 32 bits. `Int64` has 64 bits. `Int` has 32 bits.\
    \ `Int64` has 64 bits. `Int` has 32 bits. `Int64` has 64 bits. `Int` has 32 bits.\
    \ `Int64` has 64 bits. `Int` has 32 bits. `Int64` has 64 bits. `Int` has 32 bits.\
    \ `Int64` has 64 bits. `Int` has 32 bits. `Int64` has 64 bits. `Int` has 32 bits.\
    \ `Int64` has 64 bits. `Int` has 32 bits. `Int64` has 64 bits. `Int` has 32 bits.\
    \ `Int64` has 64 bits. `Int` has 32 bits. `Int64` has 64 bits. `Int` has 32 bits.\
    \ `Int64` has 64 bits. `Int` has 32 bits. `Int64` has 64 bits. `Int` has 32 bits.\
    \ `Int64` has 64 bits. `Int` has 32 bits. `Int64` has 64 bits. `Int` has 32 bits.\
    \ `Int64` has 64 bits. `Int` has 32 bits. `Int64` has 64 bits. `Int` has 32 bits.\
    \ `Int64` has 64 bit\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzq8dek3g.jl:10\nin expression starting at /tmp/tmpzq8dek3g.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    else\n        if n%11==0\n            1\n    \
    \    else\n            if n%13==0\n                2\n            else\n     \
    \           3\n        end\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a\
    \ function that returns the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3\n>>> fizz_buzz(100)\n3\n>>> fizz_buzz(101)\n3\n>>> fizz_buzz(102)\n\
    3\n>>> fizz_buzz(103)\n3\n>>> fizz_buzz(104)\n3\n>>> fizz_buzz(105)\n3\n>>> fizz_buzz(106)\n\
    3\n>>> fizz_buzz(107)\n3\n>>> fizz_buzz(108)\n3\n>>> fizz_buzz(109)\n3\n>>> fizz_buzz(110)\n\
    3\n>>> fizz_buzz(111)\n3\n>>> fizz_buzz(112)\n3\n>>> fizz_buzz(113)\n3\n>>> fizz_buzz(114)\n\
    3\n>>> fizz_buzz(115)\n3\n>>> fizz_buzz(116)\n3\n>>> fizz_buzz(117)\n3\n>>> fizz_buzz(118)\n\
    3\n>>> fizz_buzz(119)\n3\n>>> fizz_buzz(120)\n3\n>>> fizz_buzz(121)\n3\n>>> fizz_buzz(122)\n\
    3\n>>> fizz_buzz(123)\n3\n>>> fizz_buzz(124)\n3\n>>> fizz_buzz(125)\n3\n>>> fizz_buzz(126)\n\
    3\n>>> fizz_buzz(127)\n3\n>>> fizz_buzz(128)\n3\n>>> fizz_buzz(129)\n3\n>>> fizz_buzz(130)\n\
    3\n>>> fizz_buzz(131)\n3\n>>> fizz_buzz(132)\n3\n>>> fizz_buzz(133\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp77kmnv9q.jl:23\nin expression starting at\
    \ /tmp/tmp77kmnv9q.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\nend\n</cell>\n<code language=julia-1.3>\n\
    @time fizz_buzz(50)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13. \nWrite a function that returns the number of times the digit 7\
    \ appears in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible by\
    \ 11 or 13. \nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13. \nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13. \nWrite a function that returns the number\
    \ of times the digit 7 appears in integers less than n which are divisible \n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9myj580m.jl:10\nin expression starting at /tmp/tmp9myj580m.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then 0 else fizz_buzz(n-1)\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of times the digit 7 appears\
    \ in integers less than n which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n\
    0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n3\n>>> fizz_buzz(100)\n0\n>>> fizz_buzz(101)\n\
    1\n>>> fizz_buzz(102)\n2\n>>> fizz_buzz(103)\n3\n>>> fizz_buzz(104)\n0\n>>> fizz_buzz(105)\n\
    1\n>>> fizz_buzz(106)\n2\n>>> fizz_buzz(107)\n3\n>>> fizz_buzz(108)\n0\n>>> fizz_buzz(109)\n\
    1\n>>> fizz_buzz(110)\n2\n>>> fizz_buzz(111)\n3\n>>> fizz_buzz(112)\n0\n>>> fizz_buzz(113)\n\
    1\n>>> fizz_buzz(114)\n2\n>>> fizz_buzz(115)\n3\n>>> fizz_buzz(116)\n0\n>>> fizz_buzz(117)\n\
    1\n>>> fizz_buzz(118)\n2\n>>> fizz_buzz(119)\n3\n>>> fizz_buzz(120)\n0\n>>> fizz_buzz(121)\n\
    1\n>>> fizz_buzz(122)\n2\n>>> fizz_buzz(123)\n3\n>>> fizz_buzz(124)\n0\n>>> fizz_buzz(125)\n\
    1\n>>> fizz_buzz(126)\n2\n>>> fizz_buzz(127)\n3\n>>> fizz_buzz(128)\n0\n>>> fizz_buzz(129)\n\
    1\n>>> fizz_buzz(130)\n2\n>>> fizz_buzz(131)\n3\n>>> fizz_buzz(132)\n0\n>>> fizz_buzz(133)\n\
    1\n>>> fizz_buzz(134)\n2\n>>> fizz_bu\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjovkji28.jl:10\nin expression starting at /tmp/tmpjovkji28.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else \n        return 3\nend\n</cell>\n<text>\nExercise 7\nWrite a function\
    \ that returns the number of times the digit 7 appears in integers less than n\
    \ which are divisible by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n\
    2\n>>> fizz_buzz(79)\n3\n>>> fizz_buzz(100)\n0\n>>> fizz_buzz(101)\n1\n>>> fizz_buzz(102)\n\
    2\n>>> fizz_buzz(103)\n3\n>>> fizz_buzz(104)\n0\n>>> fizz_buzz(105)\n1\n>>> fizz_buzz(106)\n\
    2\n>>> fizz_buzz(107)\n3\n>>> fizz_buzz(108)\n0\n>>> fizz_buzz(109)\n1\n>>> fizz_buzz(110)\n\
    2\n>>> fizz_buzz(111)\n3\n>>> fizz_buzz(112)\n0\n>>> fizz_buzz(113)\n1\n>>> fizz_buzz(114)\n\
    2\n>>> fizz_buzz(115)\n3\n>>> fizz_buzz(116)\n0\n>>> fizz_buzz(117)\n1\n>>> fizz_buzz(118)\n\
    2\n>>> fizz_buzz(119)\n3\n>>> fizz_buzz(120)\n0\n>>> fizz_buzz(121)\n1\n>>> fizz_buzz(122)\n\
    2\n>>> fizz_buzz(123)\n3\n>>> fizz_buzz(124)\n0\n>>> fizz_buzz(125)\n1\n>>> fizz_buzz(126)\n\
    2\n>>> fizz_buzz(127)\n3\n>>> fizz_buzz(128)\n0\n>>> fizz_buzz(129)\n1\n>>> fizz_buzz(130)\n\
    2\n>>> fizz_buzz(131)\n3\n>>> fizz_buzz(132)\n0\n>>> fizz_bu\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7vafvid_.jl:10\nin expression starting at /tmp/tmp7vafvid_.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    else\n        if n%11==0\n            1\n    \
    \    else\n            if n%13==0\n                2\n            else\n     \
    \           0\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpclbbaar5.jl:23\nin expression starting at\
    \ /tmp/tmpclbbaar5.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        return\
    \ fizz_buzz(n/11) + fizz_buzz(n/13)\nend\n</cell>\n<code language=julia-1.0>\n\
    @time fizz_buzz(50)\n</cell>\n<code language=julia-1.0>\n@time fizz_buzz(78)\n\
    </cell>\n<code language=julia-1.0>\n@time fizz_buzz(79)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13 and which are divisible by 3 or\
    \ 5.\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2mnqrhl7.jl:10\nin expression starting at /tmp/tmp2mnqrhl7.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fizz_buzz(50)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n\
    3\n</text>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpay5phva3.jl:10\nin expression starting at /tmp/tmpay5phva3.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n/11)+fizz_buzz(n/13)\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 7 or\
    \ 11.\n>>> fizz_buzz(50)\n0\n>>> fizz_buzz(78)\n2\n>>> fizz_buzz(79)\n3\n>>> fizz_buzz(81)\n\
    4\n>>> fizz_buzz(82)\n5\n>>> fizz_buzz(83)\n6\n>>> fizz_buzz(84)\n7\n>>> fizz_buzz(85)\n\
    8\n>>> fizz_buzz(86)\n9\n>>> fizz_buzz(87)\n10\n>>> fizz_buzz(88)\n11\n>>> fizz_buzz(89)\n\
    12\n>>> fizz_buzz(90)\n13\n>>> fizz_buzz(91)\n14\n>>> fizz_buzz(92)\n15\n>>> fizz_buzz(93)\n\
    16\n>>> fizz_buzz(94)\n17\n>>> fizz_buzz(95)\n18\n>>> fizz_buzz(96)\n19\n>>> fizz_buzz(97)\n\
    20\n>>> fizz_buzz(98)\n21\n>>> fizz_buzz(99)\n22\n>>> fizz_buzz(100)\n23\n>>>\
    \ fizz_buzz(101)\n24\n>>> fizz_buzz(102)\n25\n>>> fizz_buzz(103)\n26\n>>> fizz_buzz(104)\n\
    27\n>>> fizz_buzz(105)\n28\n>>> fizz_buzz(106)\n29\n>>> fizz_buzz(107)\n30\n>>>\
    \ fizz_buzz(108)\n31\n>>> fizz_buzz(109)\n32\n>>> fizz_buzz(110)\n33\n>>> fizz_buzz(111)\n\
    34\n>>> fizz_buzz(112)\n35\n>>> fizz_buzz(113)\n36\n>>> fizz_buzz(114)\n37\n>>>\
    \ fizz_buzz\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprxcld3qv.jl:10\nin expression starting at /tmp/tmprxcld3qv.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaad7rv4t.jl:10\nin expression starting at /tmp/tmpaad7rv4t.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw4khbse0.jl:10\nin expression starting at /tmp/tmpw4khbse0.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw4khbse0.jl:10\nin expression starting at /tmp/tmpw4khbse0.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or\
    \ request clarification from an author, leave a comment below their post. - [From\
    \ Review](/review/low-quality-posts/26839424)\n<|/ c |>\n<| c |>\nI believe this\
    \ does answer the question. He asked how to count the number of the number divisible\
    \ by 11 or 13 in a list of numbers. I provided an example in Rust and Python to\
    \ show how this can be done.\n<|/ c |>\n<| c |>\nThis does not provide an answer\
    \ to the question. To critique or request clarification from an author, leave\
    \ a comment below their post. - [From Review](/review/low-quality-posts/26839424)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He asked how to count\
    \ the number of the number divisible by 11 or 13 in a list of numbers. I provided\
    \ an example in Rust and Python to show how this can be done.\n<|/ c |>\n<| c\
    \ |>\nThis does not provide an answer to the question. To critique or request\
    \ clarification from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/26839424)\n\
    <|/ c |>\n<| a tags=rust |>\n<code>\nfn fizz_buzz(number: u64) -> u64 {\n    let\
    \ mut counter = 0;\n    let mut remainder = number % 11;\n    while remainder\
    \ != 0 {\n        if remainder == 13 {\n            counter += 1;\n        }\n\
    \        remainder = number % 11;\n    }\n    counter\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding why and/or how this code answers the question improves its long-term\
    \ value.\n<|/ c |>\n<| c |>\nWhile this code may answer the question, providing\
    \ additional context regarding why and/or how this code answers the question improves\
    \ its long-term value.\n<|/ c |>\n<| a |>\n<code>\nfn fizz_buzz(number: u64) ->\
    \ u64 {\n    let mut counter = 0;\n    let mut remainder = number % 11;\n    while\
    \ remainder != 0 {\n        if remainder == 13 {\n\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7z76g3h9.jl:10\nin expression starting at /tmp/tmp7z76g3h9.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 3\n    if n%3==2 then\
    \ return 3\n    if n%7==0 then return 7\n    if n%7==1 then return 7\n    if n%7==2\
    \ then return 7\n    if n%11==0 then return 11\n    if n%11==1 then return 11\n\
    \    if n%11==2 then return 11\n    if n%13==0 then return 13\n    if n%13==1\
    \ then return 13\n    if n%13==2 then return 13\n    return n\n</code>\n<|/ a\
    \ dscore=1 |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/27646202)\n<|/ c |>\n<| c |>\nThe question\
    \ was \"how do I write this in Haskell?\" The answer is \"you can't\". The question\
    \ is \"how do I write this in Haskell?\" The answer is \"you can't\". The question\
    \ is \"how do I write this in Haskell?\" The answer is \"you can't\". The question\
    \ is \"how do I write this in Haskell?\" The answer is \"you can't\". The question\
    \ is \"how do I write this in Haskell?\" The answer is \"you can't\". The question\
    \ is \"how do I write this in Haskell?\" The answer is \"you can't\". The question\
    \ is \"how do I write this in Haskell?\" The answer is \"you can't\". The question\
    \ is \"how do I write this in Haskell?\" The answer is \"you can't\". The question\
    \ is \"how do I write this in Haskell?\" The answer is \"you can't\". The question\
    \ is \"how do I write this in Haskell?\" The answer is \"you can't\". The question\
    \ is \"how do I write this in Haskell?\" The answer is \"you can't\". The question\
    \ is \"how do I write this in Haskell?\" The answer is \"you can't\". The question\
    \ is \"how do I write this in Haskell?\" The answer is \"you can't\". The question\
    \ is \"how do I write this in Haskell?\" The answer is \"you can't\". The \nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp143mljhi.jl:10\nin expression starting at /tmp/tmp143mljhi.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0 \n\
    \        then return 1\n    else if n%13==0 \n        then return 2\n    else\
    \ return 3\nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n<| a dscore=0 |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxkrxbw0k.jl:10\nin expression starting at /tmp/tmpxkrxbw0k.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0\n        then return 0\n    else return 1\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsjncbm9g.jl:11\nin expression starting at /tmp/tmpsjncbm9g.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13 and are also divisible by 3 or 5.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1bp1nzyl.jl:10\nin expression starting at /tmp/tmp1bp1nzyl.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return fizz_buzz(n / 11) + fizz_buzz(n / 13)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fizz_buzz(50)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of times the digit 7 appears in integers less than n which are divisible\
    \ by 11 or 13 and are multiples of 3 or 5.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphdq20xam.jl:10\nin expression starting at /tmp/tmphdq20xam.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<code language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpquryzxbc.jl:10\nin expression starting at /tmp/tmpquryzxbc.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\n</code>\n<|/ a dscore=0 |>\n<| a tags=fizzbuzz,haskell,fizzbuzz-buzz\
    \ |>\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = if n `mod` 3 == 0 then n else\
    \ if n `mod` 5 == 0 then n else if n `mod` 7 == 0 then n else fizzbuzz (n-1)\n\
    </code>\n<|/ a dscore=0 |>\n<| c |>\nPlease don't post only code as an answer,\
    \ but also provide an explanation of what your code does and how it solves the\
    \ problem of the question. Answers with an explanation are usually more helpful\
    \ and of better quality, and are more likely to attract upvotes.\n<|/ c |>\n<|\
    \ c |>\nThis doesn't work. Try it with `fizzbuzz 3`.\n<|/ c |>\n<| a |>\n<code>\n\
    fizzbuzz :: Int -> Int\nfizzbuzz n = if n==0 then 0 else if n==1 then 1 else if\
    \ n==2 then 2 else if n==3 then 3 else if n==4 then 4 else if n==5 then 5 else\
    \ if n==6 then 6 else if n==7 then 7 else if n==8 then 8 else if n==9 then 9 else\
    \ fizzbuzz (n-1)\n</code>\n<|/ a tags=fizzbuzz,haskell,fizzbuzz-buzz dscore=0\
    \ |>\n<| c |>\nPlease don't post only code as an answer, but also provide an explanation\
    \ of what your code does and how it solves the problem of the question. Answers\
    \ with an explanation are usually more helpful and of better quality, and are\
    \ more likely to attract upvotes.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizzbuzz\
    \ :: Int -> Int\nfizzbuzz n = if n==0 then 0 else if n==1 then 1 else if n==2\
    \ then 2 else if n==3 then 3 else if n==4 then 4 else if n==5 then 5 else if n==6\
    \ then 6 else if n==7 then 7 else if n==8 then 8 else if n==9 then 9 else fi\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp83lov2s8.jl:10\nin expression starting at /tmp/tmp83lov2s8.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0 else if n%11==0 then return 1 else return fizz_buzz(n/11)\n\
    end\n</code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu453y1u7.jl:10\nin expression starting at /tmp/tmpu453y1u7.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0\n    else \n        then\
    \ return 1\n    end\nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n<| a tags=fizzbuzz,julia\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4il_laxl.jl:11\nin expression starting at /tmp/tmp4il_laxl.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        then\
    \ return 1\n    fizz_buzz(n+1)\n</code>\n<|/ a tags=fizzbuzz,haskell |>\n<| c\
    \ |>\nThe `fizz_buzz` function should return `0` if the number `n` is divisible\
    \ by `11` or `13`, not `1`.\n<|/ c |>\n<| c |>\nThanks for pointing that out.\
    \ I fixed it.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz :: Int -> Int\nfizz_buzz\
    \ n = if n==0 then 0 else if n==1 then 1 else fizz_buzz (n-1)\n</code>\n<|/ a\
    \ tags=fizzbuzz,haskell |>\n<| c |>\nThis doesn't work. Try it with `fizz_buzz\
    \ 3`.\n<|/ c |>\n<| c |>\nIt works. I tested it before posting. Try it yourself.\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try it with `fizz_buzz 3`.\n<|/ c |>\n<| c\
    \ |>\nIt works. Try it yourself.\n<|/ c |>\n<| c |>\nIt doesn't work. Try it with\
    \ `fizz_buzz 3`.\n<|/ c |>\n<| a dscore=0 |>\n<code>\nfizz_buzz :: Int -> Int\n\
    fizz_buzz n = if n==0 then 0 else if n==1 then 1 else fizz_buzz (n-1)\n</code>\n\
    <|/ a tags=fizzbuzz,haskell |>\n<| c |>\nThis doesn't work. Try it with `fizz_buzz\
    \ 3`.\n<|/ c |>\n<| c |>\nIt works. Try it yourself.\n<|/ c |>\n<| c |>\nIt doesn't\
    \ work. Try it with `fizz_buzz 3`.\n<|/ c |>\n<| c |>\nIt works. Try it yourself.\n\
    <|/ c |>\n<| c |>\nIt doesn't work. Try it with `fizz_buzz 3`.\n<|/ c |>\n<| a\
    \ dscore=0 |>\n<code>\nfizz_buzz :: Int -> Int\nfizz_buzz n = if n==0 then 0 else\
    \ if n\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp944sglu6.jl:10\nin expression starting at /tmp/tmp944sglu6.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n%11==0 then return 1\n    if n%13==0 then\
    \ return 2\n    return fizz_buzz(n/10)\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"Return the number of times the digit 7 appears in integers less than n which\
    \ are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n\
    \    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdigtj5ws.jl:10\nin expression starting at /tmp/tmpdigtj5ws.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else \n        return 3\nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ fizz_buzz(50)\n</cell>\n<code language=julia-1.0>\n@time fizz_buzz(78)\n</cell>\n\
    <code language=julia-1.0>\n@time fizz_buzz(79)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13. Test your function on small numbers.\
    \ How does it compare to the previous solution?\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptxlq4ab8.jl:10\nin expression starting at /tmp/tmptxlq4ab8.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     return 1 + fizz_buzz(n / 11)\nend\n</cell>\n<code language=julia-1.4>\n\
    @time fizz_buzz(50)\n</cell>\n<code language=julia-1.4>\n@time fizz_buzz(78)\n\
    </cell>\n<code language=julia-1.4>\n@time fizz_buzz(79)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the number of times the digit 7 appears in integers\
    \ less than n which are divisible by 11 or 13. Test it on small numbers. How does\
    \ it compare to the previous solution?\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplgu66utk.jl:10\nin expression starting at /tmp/tmplgu66utk.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 11\
    \ or 13. \nThe function should work for any value of n.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxkat6vqq.jl:10\nin expression starting at /tmp/tmpxkat6vqq.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0\n        0\n    else\n        if n%11==0\n            1\n    \
    \    else\n            if n%13==0\n                2\n            else\n     \
    \           3\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplgz9fm5s.jl:23\nin expression starting at\
    \ /tmp/tmplgz9fm5s.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n<| a tags=fizzbuzz,julia\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdpgocwuh.jl:10\nin expression starting at /tmp/tmpdpgocwuh.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0 else if n==1 then return 1 else return fizz_buzz(n-1)\n\
    \    if n%11==0 then return fizz_buzz(n/11) else return fizz_buzz(n/13)\nend\n\
    </code>\n<|/ a tags=fizzbuzz,julia |>\n<| a tags=fizzbuzz,julia |>\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw1yzuynd.jl:10\nin expression starting at /tmp/tmpw1yzuynd.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a |>\n\
    <| a dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7vs1n7hg.jl:10\nin expression starting at /tmp/tmp7vs1n7hg.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        then\
    \ return 1\n    end\nend\n</cell>\n<code language=julia-1.0>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3f9zysec.jl:10\nin expression starting at /tmp/tmp3f9zysec.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return fizz_buzz(n-1)\n</code>\n\
    <|/ a tags=fizzbuzz,haskell,recursion |>\n<| a dscore=0 |>\n<code>\nfizzbuzz ::\
    \ Int -> String\nfizzbuzz n = if n==0 then \"FizzBuzz\" else if n==1 then \"Fizz\"\
    \ else if n==2 then \"Buzz\" else if n==3 then \"Fizz\" else if n==4 then \"Buzz\"\
    \ else if n==5 then \"FizzBuzz\" else if n==6 then \"Fizz\" else if n==7 then\
    \ \"Buzz\" else if n==8 then \"Fizz\" else if n==9 then \"Buzz\" else if n==10\
    \ then \"FizzBuzz\" else if n==11 then \"Fizz\" else if n==12 then \"Buzz\" else\
    \ if n==13 then \"Fizz\" else if n==14 then \"Buzz\" else if n==15 then \"FizzBuzz\"\
    \ else if n==16 then \"Fizz\" else if n==17 then \"Buzz\" else if n==18 then \"\
    Fizz\" else if n==19 then \"Buzz\" else if n==20 then \"FizzBuzz\" else if n==21\
    \ then \"Fizz\" else if n==22 then \"Buzz\" else if n==23 then \"Fizz\" else if\
    \ n==24 then \"Buzz\" else if n==25 then \"FizzBuzz\" else if n==26 then \"Fizz\"\
    \ else if n==27 then \"Buzz\" else if n==28 then \"Fizz\" else if n==29 then \"\
    Buzz\" else if n==30 then \"FizzBuzz\" else if n==31 then \"Fizz\" else if n==32\
    \ then \"Buzz\" else if n==33 then \"Fizz\" else if n==34 then \"Buzz\" else if\
    \ n==35 then \"FizzBuzz\" else if n==36 then \"Fizz\" else if n==37 then \"Buzz\"\
    \ else if n==38 then \"Fizz\" else if n==39 then \"Buzz\" else if n==40 then \"\
    FizzBuzz\" else if n==41 then \"Fizz\" else if n\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkuih4k7r.jl:10\nin expression starting at /tmp/tmpkuih4k7r.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else\n        if n%11==0 \n            1\n  \
    \      else\n            if n%13==0 \n                2\n            else\n  \
    \              3\n        end\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| a\
    \ dscore=0 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\
    \t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv45y5en8.jl:23\nin expression starting at\
    \ /tmp/tmpv45y5en8.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     then return 1\n    end\nend\n</code>\n<|/ a tags=fizzbuzz,julia,function\
    \ |>\n<| c |>\nThanks for your answer! I appreciate it! I thought about this but\
    \ was unsure how to implement it into my code. Do you know how I would implement\
    \ this into my code? Thanks!\n<|/ c |>\n<| c |>\nI added a code example to my\
    \ answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks so much for your help! I really\
    \ appreciate it!\n<|/ c |>\n<| a dscore=1 |>\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmput5u2fi1.jl:10\nin expression starting at /tmp/tmput5u2fi1.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else \n   \
    \     then return 1\n    fizz_buzz(n+1)\nend\n</code>\n<|/ a |>\n<| a tags=fizzbuzz,julia,recursion\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppjs5u6lh.jl:10\nin expression starting at /tmp/tmppjs5u6lh.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0\n    else if n%11==0 \n\
    \        then return 1\n    else if n%13==0 \n        then return 2\n    else\
    \ return 3\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=fizzbuzz,julia |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjby88s9m.jl:11\nin expression starting at /tmp/tmpjby88s9m.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then return 0\n    if n==1 then return 1\n    if n==2 then return\
    \ 2\n    if n%3==0 then return 3\n    if n%3==1 then return 4\n    if n%3==2 then\
    \ return 5\n    if n%3==3 then return 6\n    if n%3==4 then return 7\n    if n%3==5\
    \ then return 8\n    if n%3==6 then return 9\n    if n%3==7 then return 10\n \
    \   if n%3==8 then return 11\n    if n%3==9 then return 12\n    if n%3==10 then\
    \ return 13\n    if n%3==11 then return 14\n    if n%3==12 then return 15\n  \
    \  if n%3==13 then return 16\n    if n%3==14 then return 17\n    if n%3==15 then\
    \ return 18\n    if n%3==16 then return 19\n    if n%3==17 then return 20\n  \
    \  if n%3==18 then return 21\n    if n%3==19 then return 22\n    if n%3==20 then\
    \ return 23\n    if n%3==21 then return 24\n    if n%3==22 then return 25\n  \
    \  if n%3==23 then return 26\n    if n%3==24 then return 27\n    if n%3==25 then\
    \ return 28\n    if n%3==26 then return 29\n    if n%3==27 then return 30\n  \
    \  if n%3==28 then return 31\n    if n%3==29 then return 32\n    if n%3==30 then\
    \ return 33\n    if n%3==31 then return 34\n    if n%3==32 then return 35\n  \
    \  if n%3==33 then return 36\n    if n%3==34 then return 37\n    if n%3==35 then\
    \ return 38\n    if n%3==36 then return 39\n    if n%3==37 then return 40\n  \
    \  if n%3==38 then return 41\n    if n%3==39 then return 42\n    if n%3==40 then\
    \ return 43\n    if n%3==41 then return 44\n    if n%3==42 then return 45\n  \
    \  if n%3==43 then return 46\n    if n%3==44 then return 47\n    if n%3==45 then\
    \ return 48\n    if n%3==46 then return 49\n    if n%3==47 then return 50\n  \
    \  if n%3==48 then return 51\n    if n%3==49 then return 52\n    if n%3==50 then\
    \ return 53\n    if n%3==51 then return 54\n    if n%3==52 then return 55\nusing\
    \ Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\
    \t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaad7rv4t.jl:10\nin expression starting at /tmp/tmpaad7rv4t.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else return 3\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw4khbse0.jl:10\nin expression starting at /tmp/tmpw4khbse0.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n % 11 == 0 or n % 13 == 0 \n        then return 0\n    else if n %\
    \ 11 == 1 \n        then return 1\n    else if n % 13 == 1 \n        then return\
    \ 2\n    else \n        then return 3\nend\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo61fend_.jl:10\nin expression starting at /tmp/tmpo61fend_.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0\n    else if n%11==0\n \
    \       then return 1\n    else if n%13==0\n        then return 2\n    else return\
    \ 3\nend\n</cell>\n<code language=julia-1.4>\nusing Test\n\n@testset begin\n\n\
    candidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzms_9b3n.jl:11\nin expression starting at /tmp/tmpzms_9b3n.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else return 1\nend\n\
    </code>\n<|/ a dscore=1 |>\n<| a |>\n<code>\nusing Test\n\n@testset begin\n\n\
    candidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) ==\
    \ 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpavcjk7ai.jl:10\nin expression starting at /tmp/tmpavcjk7ai.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0\n \
    \       then return 1\n    else if n%13==0\n        then return 2\n    else return\
    \ 3\nend\n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpejdpz0b6.jl:10\nin expression starting at /tmp/tmpejdpz0b6.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    elseif n==1 \n        1\n    elseif n==2 \n \
    \       2\n    elseif n%3==0 \n        fizz_buzz(n/3)\n    elseif n%3==1 \n  \
    \      fizz_buzz(n/3)+1\n    elseif n%3==2 \n        fizz_buzz(n/3)+2\n    elseif\
    \ n%3%3==0 \n        fizz_buzz(n/3)+3\n    elseif n%3%3==1 \n        fizz_buzz(n/3)+4\n\
    \    elseif n%3%3==2 \n        fizz_buzz(n/3)+5\n    elseif n%3%3%3==0 \n    \
    \    fizz_buzz(n/3)+6\n    elseif n%3%3%3==1 \n        fizz_buzz(n/3)+7\n    elseif\
    \ n%3%3%3==2 \n        fizz_buzz(n/3)+8\n    elseif n%3%3%3%3==0 \n        fizz_buzz(n/3)+9\n\
    \    elseif n%3%3%3%3==1 \n        fizz_buzz(n/3)+10\n    elseif n%3%3%3%3==2\
    \ \n        fizz_buzz(n/3)+11\n    elseif n%3%3%3%3==3 \n        fizz_buzz(n/3)+12\n\
    \    elseif n%3%3%3%3==4 \n        fizz_buzz(n/3)+13\n    elseif n%3%3%3%3==5\
    \ \n        fizz_buzz(n/3)+14\n    elseif n%3%3%3%3==6 \n        fizz_buzz(n/3)+15\n\
    \    elseif n%3%3%3%3==7 \n        fizz_buzz(n/3)+16\n    elseif n%3%3%3%3==8\
    \ \n        fizz_buzz(n/3)+17\n    elseif n%3%3%3%3==9 \n        fizz_buzz(n/3)+18\n\
    \    elseif n%3%3%3%3==10 \n        fizz_buzz(n/3)+19\n    elseif n%3%3%3%3==11\
    \ \n        fizz_buzz(n/3)+20\n    elseif n%3%3%3%3==12 \n        fizz_buzz(n/3)+21\n\
    \    elseif n%3%3%3%3==13 \n        fizz_buzz(n/3)+22\n    else\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmp_c_43w10.jl:60\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_c_43w10.jl:1\n\
    in expression starting at /tmp/tmp_c_43w10.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 || n%13==0 \n        then return 0\n    else if n%11==0\n \
    \       then return 1\n    else if n%13==0\n        then return 2\n    else return\
    \ 3\n</code>\n<|/ a tags=fizzbuzz,haskell |>\n<| a tags=fizzbuzz,haskell |>\n\
    <code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = if n==0 then 0 else if n%11==0 then\
    \ 1 else if n%13==0 then 2 else 3\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n\
    <code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = if n==0 then 0 else if n%11==0 then\
    \ 1 else if n%13==0 then 2 else 3\n</code>\n<|/ a tags=fizzbuzz,haskell |>\n<|\
    \ a dscore=2 |>\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = if n==0 then 0 else\
    \ if n%11==0 then 1 else if n%13==0 then 2 else 3\n</code>\n<|/ a tags=fizzbuzz,haskell\
    \ |>\n<| a |>\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = if n==0 then 0 else\
    \ if n%11==0 then 1 else if n%13==0 then 2 else 3\n</code>\n<|/ a dscore=1 tags=fizzbuzz,haskell\
    \ |>\n<| a tags=fizzbuzz,haskell |>\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz\
    \ n = if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else 3\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz\
    \ n = if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else 3\n</code>\n\
    <|/ a tags=fizzbuzz,haskell |>\n<| a dscore=1 |>\n<code>\nfizzbuzz :: Int -> Int\n\
    fizzbuzz n = if n==0 then 0 else if n%11==0 then 1 else if n%\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqg9em4x6.jl:11\nin expression starting at /tmp/tmpqg9em4x6.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 \n        0\n    else if n==1 \n        1\n    else if n==2 \n\
    \        2\n    else if n%3==0 \n        fizz_buzz(n/3)\n    else if n%5==0 \n\
    \        fizz_buzz(n/5)\n    else if n%7==0 \n        fizz_buzz(n/7)\n    else\
    \ \n        fizz_buzz(n/11)\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7oq76wr7.jl:12\nin expression starting at\
    \ /tmp/tmp7oq76wr7.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0 \n\
    \        then return 1\n    else if n%13==0 \n        then return 2\n    else\
    \ return 3\n</code>\n<|/ a tags=fizzbuzz,haskell |>\n<| c |>\nThanks for the answer!\
    \ I really appreciate it!\n<|/ c |>\n<| c |>\nThis answer doesn't really answer\
    \ the question. The question is about how to implement the fizz buzz algorithm,\
    \ not how to implement a fizzbuzz function.\n<|/ c |>\n<| c |>\nI agree with you.\
    \ I just wanted to give a solution that would work for the OP without giving him\
    \ a complete solution. He can always come back and edit it if he wants to.\n<|/\
    \ c |>\n<| c |>\nI added the fizzbuzz function to the answer. Hope it helps.\n\
    <|/ c |>\n<| c |>\nThanks for the answer! I really appreciate it!\n<|/ c |>\n\
    <| a tags=fizzbuzz,haskell |>\n<code>\nfizzbuzz :: Int -> String\nfizzbuzz n =\
    \ if n `mod` 3 == 0 then \"Fizz\" else if n `mod` 5 == 0 then \"Buzz\" else if\
    \ n `mod` 7 == 0 then \"FizzBuzz\" else if n `mod` 11 == 0 then \"FizzBuzz\" else\
    \ if n `mod` 13 == 0 then \"FizzBuzz\" else if n `mod` 17 == 0 then \"FizzBuzz\"\
    \ else if n `mod` 19 == 0 then \"FizzBuzz\" else if n `mod` 23 == 0 then \"FizzBuzz\"\
    \ else if n `mod` 29 == 0 then \"FizzBuzz\" else if n `mod` 31 == 0 then \"FizzBuzz\"\
    \ else if n `mod` 37 == 0 then \"FizzBuzz\" else if n `mod` 41 == 0 then \"FizzBuzz\"\
    \ else if n `mod` 43 == 0 then \"FizzBuzz\" else if n `mod` 47 == 0 then \"FizzBuzz\"\
    \ else if n `mod` 53 == 0 then \"FizzBuzz\" else if n `mod` 59 == 0 then \"FizzBuzz\"\
    \ else \nusing Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpx_z9cdtj.jl:10\nin expression starting at /tmp/tmpx_z9cdtj.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then 0 else fizz_buzz(n-1)\nend\n</code>\n<|/ a\
    \ tags=fizzbuzz,julia |>\n<| a tags=fizzbuzz,julia |>\n<code>\nusing Test\n\n\
    @testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2s7sy22i.jl:10\nin expression starting at /tmp/tmp2s7sy22i.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else if n%11==0 \n\
    \        then return 1\n    else if n%13==0 \n        then return 2\n    else\
    \ return 3\nend\n</code>\n<|/ a tags=fizzbuzz,julia |>\n<| a dscore=1 |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjoc6ebec.jl:10\nin expression starting at /tmp/tmpjoc6ebec.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 \n        then return 0\n    else \n        then\
    \ return 1\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78)\
    \ == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200)\
    \ == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000) == 639)\n\t\
    @test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgzbcczri.jl:10\nin expression starting at /tmp/tmpgzbcczri.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n%11==0 or n%13==0 then return 0 else return 1\n</code>\n<|/ a |>\n\
    <| c |>\nI didn't know you could do that. Thanks!\n<|/ c |>\n<| c |>\nThis is\
    \ not valid Haskell syntax. `return` is not a function, and `then` is not a keyword.\n\
    <|/ c |>\n<| c |>\nI fixed the syntax errors. Thanks for the heads up.\n<|/ c\
    \ |>\n<| a dscore=2 |>\n<code>\nfizz_buzz :: Int -> Int\nfizz_buzz n = if n==0\
    \ then 0 else if n%11==0 || n%13==0 then 1 else fizz_buzz (n-1)\n</code>\n<|/\
    \ a tags=haskell,fizzbuzz |>\n<| a |>\n<code>\nfizz_buzz :: Int -> Int\nfizz_buzz\
    \ n = if n==0 then 0 else if n%11==0 || n%13==0 then 1 else fizz_buzz (n-1)\n\
    </code>\n<|/ a tags=haskell,fizzbuzz dscore=2 |>\n<| a dscore=2 |>\n<code>\nfizzbuzz\
    \ :: Int -> Int\nfizzbuzz n = if n==0 then 0 else if n%11==0 || n%13==0 then 1\
    \ else fizzbuzz (n-1)\n</code>\n<|/ a tags=haskell,fizzbuzz |>\n<| a tags=haskell,fizzbuzz\
    \ |>\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = if n==0 then 0 else if n%11==0\
    \ || n%13==0 then 1 else fizzbuzz (n-1)\n</code>\n<|/ a dscore=1 |>\n<| a |>\n\
    <code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = if n==0 then 0 else if n%11==0 ||\
    \ n%13==0 then 1 else fizzbuzz (n-1)\n</code>\n<|/ a tags=haskell,fizzbuzz dscore=1\
    \ |>\n<| a dscore=1 |>\n<code>\nfizzbuzz :: Int -> Int\nfizzbuzz n = if n==0 then\
    \ 0 else if n%11==0 || n%13==0 then 1 else fizzbuzz (n-1)\n</code>\n<|/ a tags=\n\
    using Test\n\n@testset begin\n\ncandidate = fizz_buzz;\n\t@test(candidate(50)\
    \ == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79) == 3)\n\t@test(candidate(100)\
    \ == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000) == 192)\n\t@test(candidate(10000)\
    \ == 639)\n\t@test(candidate(100000) == 8026)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp50s7ufmr.jl:10\nin expression starting at /tmp/tmp50s7ufmr.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>>\
    \ fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\nfunction fizz_buzz(n::Int64)::Int64\
    \ \n    if n==0 then 0 else if n%11==0 then 1 else if n%13==0 then 2 else fizz_buzz(n-1)\n\
    end\n</cell>\n<text>\nExercise 5\nWrite a function that returns the number of\
    \ times the digit 7 appears in integers less than n which are divisible by 11\
    \ or 13 and are also divisible by 3.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = fizz_buzz;\n\t@test(candidate(50) == 0)\n\t@test(candidate(78) == 2)\n\t@test(candidate(79)\
    \ == 3)\n\t@test(candidate(100) == 3)\n\t@test(candidate(200) == 6)\n\t@test(candidate(4000)\
    \ == 192)\n\t@test(candidate(10000) == 639)\n\t@test(candidate(100000) == 8026)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"0\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpggjuaalg.jl:10\nin expression starting at /tmp/tmpggjuaalg.jl:10\n"
  stdout: ''

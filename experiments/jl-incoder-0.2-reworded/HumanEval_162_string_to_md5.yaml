name: HumanEval_162_string_to_md5
language: jl
prompt: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
  \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"Hello\
  \ world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction string_to_md5(text::String)::Union{String,\
  \ Nothing} \n"
tests: "using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
  Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
  ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
  )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
completions: ["    if text == \"\"\n        nothing\n    else\n        md5(text)\n\
    \    end\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    Given a vector\
    \ of strings, return their md5 hash equivalent vector\n    If 'text' is an empty\
    \ vector, return nothing.", "    if text == \"\"\n        nothing\n    else\n\
    \        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>", "    if\
    \ text == \"\" \n        return nothing\n    else \n        return md5(text)\n\
    end\n</cell>\n<code language=julia-1.0>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    if text == \"\"\n        Nothing\n    else\n        Digest(text).hexdigest\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    Given a string\
    \ 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string,\
    \ return nothing.", "    if text == \"\"\n        Nothing\n    else\n        md5(text)\n\
    \    end\nend\n</cell>\n<code language=julia-1.4>", "    if text == \"\" \n  \
    \      return nothing \n    else \n        md5 = Digest.new(\"md5\") \n      \
    \  md5.update(text) \n        return md5.digest() \nend\n</cell>\n<code language=julia-1.4>",
  "    if text == \"\" \n        return Nothing\n    else \n        return md5(text)\n\
    end\n</cell>\n<code language=julia-1.5>", "    if text == \"\" \n        then\
    \ return nothing\n    else \n        md5_hash = MD5()\n        md5_hash.update(text)\n\
    \        return md5_hash.digest()\n    end\nend\n</cell>\n<code language=julia-1.4>",
  "    md5 = md5()\n    md5.update(text)\n    return md5.digest()\nend", "    if text\
    \ == \"\" \n        then return Nothing\n    else \n        md5 = md5(text)\n\
    \        return md5\n    end\nend\n</cell>\n<code language=julia-1.5>", "    if\
    \ text == \"\"\n        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if text == \"\"\n        nothing\n    else\n\
    \        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>", "    if\
    \ text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given a string 'text', return its sha1\
    \ hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string as input and\
    \ returns the md5 hash equivalent of the string converted to lowercase. For example,\
    \ the string \"Hello World\" would return \"a94a8fe5ccb19ba61c4c0873d391e987982fbbd3\"\
    .", "    md5 = md5()\n    md5.update(text)\n    return md5.digest()\nend", " \
    \   if text == \"\"\n        Nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if text == \"\"\n        Nothing\n \
    \   else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.", "    if text == \"\"\n    \
    \    Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a vector of strings, return the md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.", "    if text == \"\"\n  \
    \      nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.", "    if text == \"\"\n    \
    \    nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.", "    if text == \"\" \n   \
    \     then return Nothing\n    else \n        md5(text)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    Given a string 'text', return its sha1\
    \ hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    if text == \"\" \n        then return nothing\n    else \n        md5 = Digest.new(\"\
    md5\")\n        md5.update(text)\n        return md5.digest().hex\n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if text == \"\"\n        nothing\n \
    \   else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if text == \"\"\n        Nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<text>\nExercise: Write a function that takes a string and returns the\
    \ md5 hash of that string. Test it on some strings. What happens if you give it\
    \ an empty string?", "    if text == \"\"\n        nothing\n    else\n       \
    \ md5(text)\n    end\nend\n</cell>\n<text>\nExercise\nWrite a function that takes\
    \ a string and returns the md5 hash equivalent of the string. \nWrite a function\
    \ that takes a string and returns the md5 hash equivalent of the string.\nWrite\
    \ a function that takes a string and returns the md5 hash equivalent of the string.",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the md5 hash equivalent of the string in hexadecimal.", "    md5 = Digest.new(\"\
    md5\")\n    md5.update(text)\n    return md5.digest().hex\nend", "    if text\
    \ == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if text == \"\" \n        then return Nothing\n\
    \    else \n        md5_hash = md5(text)\n        return md5_hash\n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if text == \"\"\n        nothing\n \
    \   else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if text == \"\" \n        then return Nothing\n    else \n        digest =\
    \ md5(text) \n        return digest.hexdigest() \nend\n</cell>\n<code language=julia-1.4>",
  "    md5 = digest.MD5()\n    md5.update(text)\n    return md5.digest()\nend", " \
    \   if text == \"\"\n        Nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if text == \"\"\n        Nothing\n \
    \   else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.1>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    md5 = MD5()\n    md5.update(text)\n    return md5.digest()\nend", "    md5\
    \ = Digest.new(\"md5\")\n    md5.update(text)\n    return md5.digest().hex\nend\n\
    </cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.4>\nstring_to_md5(\"\")\n</cell>\n<text>\nExercise\nWrite\
    \ a function that takes a string and returns the md5 hash equivalent of the string\
    \ in hexadecimal format. For example, string_to_hex(\"Hello world\") should return\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\".", "    if text == \"\"\n        nothing\n\
    \    else\n        md5(text)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a string and returns a list of all unique characters in\
    \ that string. For example, the string \"Hello world\" would return [\"H\", \"\
    e\", \"l\", \"l\", \"o\", \" \", \"w\", \"o\", \"r\", \"l\", \"d\"]. Make sure\
    \ to handle non-string inputs gracefully.", "    if text == \"\" \n        return\
    \ Nothing\n    else \n        hash = md5(text)\n        return hash.hexdigest()\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>", "    if text == \"\"\n   \
    \     nothing\n    else\n        md5(text)\n    end\nend\n</code>\n<|/ a tags=julia,md5\
    \ |>\n<| c |>\nI believe that `md5` returns a `String`, not a `String` of length\
    \ `16`. Also, `md5` returns a `String`, not a `String` of length `16`.\n<|/ c\
    \ |>\n<| c |>\nI believe that `md5` returns a `String`, not a `String` of length\
    \ `16`. Also, `md5` returns a `String`, not a `String` of length `16`.\n<|/ c\
    \ |>\n<| c |>\nThe `md5` function returns a `String` of length 16. `md5(\"Hello\
    \ world\")` returns `\"3e25960a79dbc69b674cd4ec67a72c62\"`.\n<|/ c |>\n<| c |>\n\
    Yes, but `md5` returns a `String` of length 16. `md5(\"Hello world\")` returns\
    \ `\"3e25960a79dbc69b674cd4ec67a72c62\"`.\n<|/ c |>\n<| c |>\nYes, but `md5` returns\
    \ a `String` of length 16. `md5(\"Hello world\")` returns `\"3e25960a79dbc69b674cd4ec67a72c62\"\
    `.\n<|/ c |>\n<| a tags=julia,md5 |>\nThe accepted answer does not work for me\
    \ in Julia 1.5.1. The following code works:\n<code>\nusing MD5", "    if text\
    \ == \"\" \n        return nothing\n    else \n        md5hash = MD5()\n     \
    \   md5hash.update(text)\n        return md5hash.hexdigest()\nend", "    if text\
    \ == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n\
    <code language=julia-1.1>", "    if text == \"\" \n        then return Nothing\n\
    \    else\n        md5 = Digest.new(\"md5\")\n        md5.update(text)\n     \
    \   return md5.digest().hex\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.4>\n\"\"\"\n    md5(text::String)", "    if text\
    \ == \"\" \n        then return Nothing\n    else \n        md5 = digest(text,\
    \ \"md5\")\n        return md5\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\nThe accepted answer does not work\
    \ anymore in Julia 1.5.\nThe correct solution is to use md5() from Digests package:\n\
    <code>\nusing Digests\nmd5(\"Hello world\")\n</code>\n<|/ a tags=julia |>\n<|\
    \ a |>\nThe accepted answer does not work anymore in Julia 1.5.\nThe correct solution\
    \ is to use md5() from Digests package:\n<code>\nusing Digests\nmd5(\"Hello world\"\
    )\n</code>\n<|/ a dscore=1 tags=julia |>\n<| a dscore=0 |>\nIn Julia 1.5 you can\
    \ use the md5 function from the Digests package:\n<code>\njulia> using Digests",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if text == \"\"\n        nothing\n \
    \   else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if text == \"\" \n        then return nothing \n    else \n        md5_hash\
    \ = digest.MD5()\n        md5_hash.update(text)\n        return md5_hash.digest()\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=juli", "    if text == \"\"\n        nothing\n    else\n      \
    \  md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given\
    \ a string 'text', return its md5 hash equivalent string.\n    If 'text' is an\
    \ empty string, return nothing.", "    if text == \"\"\n        nothing\n    else\n\
    \        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n\
    \    Given a string 'text', return its md5 hash equivalent string.\n    If 'text'\
    \ is an empty string, return nothing.", "    if text == \"\"\n        nothing\n\
    \    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.", "    if text == \"\"\n    \
    \    nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its sha1 hash equivalent string.\n \
    \   If 'text' is an empty string, return nothing.", "    if text == \"\"\n   \
    \     Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if text == \"\" \n        return Nothing\n    else \n        md5 = Digests.md5(text)\n\
    \        return md5\n    end\nend\n</cell>\n<code language=julia-1.3>", "    if\
    \ text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if text == \"\"\n        nothing\n    else\n\
    \        md5(text)\n    end\nend\n</code>\n<|/ a tags=julia,md5 |>\n<| a dscore=0\
    \ |>\nThe answer by is correct, but I wanted to add some more information to help\
    \ others who are trying to understand this type of problem.\nThe MD5 algorithm\
    \ is defined as:", "    if text == \"\" \n        return Nothing \n    else \n\
    \        digest = digest.MD5()\n        digest.update(text)\n        return digest.hexdigest()\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>", "    md5 = MD5()\n    md5.update(text)\n\
    \    return md5.digest()\nend", "    if text == \"\"\n        nothing\n    else\n\
    \        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.4>", "    if\
    \ text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if text == \"\"\n        nothing\n    else\n\
    \        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string\
    \ and returns the md5 hash equivalent of the string in hexadecimal.", "    md5\
    \ = Digest.new(\"md5\")\n    md5.update(text)\n    return md5.digest().hex()\n\
    end\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"\")\n</cell>\n<text>\nExercise\nWrite\
    \ a function that takes a string and returns the md5 hash of that string as a\
    \ hexadecimal string.", "    if text == \"\"\n        Nothing\n    else\n    \
    \    md5(text)\n    end\nend\n</cell>\n<code language=julia-1.4>", "    md5 =\
    \ MD5()\n    md5.update(text)\n    return md5.digest()\nend", "    if text ==\
    \ \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if text == \"\"\n        nothing\n    else\n\
    \        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>", "    if\
    \ text == \"\"\n        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello\
    \ world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5", "    if text\
    \ == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given a string 'text', return its md5 hash\
    \ equivalent string.\n    If 'text' is an empty string, return nothing.", "  \
    \  if text == \"\"\n        Nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if text == \"\"\n        nothing\n \
    \   else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if text == \"\"\n        Nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a vector of strings 'texts',\
    \ return their md5 hash equivalent vectors.\n    If 'texts' is an empty vector,\
    \ return nothing.", "    if text == \"\" \n        then return Nothing\n    else\
    \ \n        md5(text) \n    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\
    \"\n    Given a string 'text', return its md5 hash equivalent string.\n    If\
    \ 'text' is an empty string, return nothing.", "    if text == \"\"\n        nothing\n\
    \    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.1>",
  "    if text == \"\" \n        then return Nothing\n    else \n        md5(text)\
    \ \n    end\nend\n</cell>\n<code language=julia-1.5>", "    if text == \"\"\n\
    \        Nothing\n    else\n        Digest(text).hexdigest\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"\")\n</cell>\n<text>\nExercise\nWrite a function that takes a\
    \ string and returns the md5 hash equivalent of the string in hexadecimal.", " \
    \   if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </code>\n<|/ a tags=julia,md5 |>\n<| c |>\nI didn't know about this package. Thanks\
    \ for sharing!\n<|/ c |>\n<| a tags=julia,md5 |>\nFor those who are looking for\
    \ a way to compute md5 hash in Julia, here is a simple solution:\n<code>", " \
    \   if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    md5 = md5(text)\n    if md5 == \"\"\n        return Nothing\n    else\n   \
    \     return md5\n    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n \
    \   Given a string 'text', return its md5 hash equivalent string.\n    If 'text'\
    \ is an empty string, return nothing.", "    md5 = MD5()\n    md5.update(text)\n\
    \    return md5.digest()\nend", "    md5 = md5()\n    md5.update(text)\n    return\
    \ md5.digest()\nend", "    if text == \"\"\n        Nothing\n    else\n      \
    \  md5(text)\n    end\nend", "    md5 = md5()\n    md5.update(text)\n    return\
    \ md5.digest()\nend\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello\
    \ world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"\")\n</cell>\n\
    <code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.0>", "    if text == \"\"\n        nothing\n    else\n\
    \        md5(text)\n    end\nend\n</code>\n<|/ a tags=julia,hash |>\n<| c |>\n\
    The `md5` function has been deprecated in favor of the `Digest` module.\n<|/ c\
    \ |>\n<| a tags=julia,hash |>\nIn Julia v0.7 you can use the md5 function from\
    \ the Digest module:\n<code>\njulia> using Digest", "    if text == \"\"\n   \
    \     nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the md5 hash equivalent of the string. \nWrite a function that takes a string\
    \ and returns the md5 hash equivalent of the string. \nWrite a function that takes\
    \ a string and returns the md5 hash equivalent of the string. \nWrite a function\
    \ that takes a string and returns the md5 hash equivalent of the string. \nWrite\
    \ a function that takes a string and returns the md5 hash equivalent of the string.\
    \ \nWrite a function that takes a string and returns the md5 hash equivalent of\
    \ the string. \nWrite a function that takes a string and returns the md5 hash\
    \ equivalent of the string. \nWrite a function that takes a string and returns\
    \ the md5 hash equivalent of the string. \nWrite a function that takes a string\
    \ and returns the md5 hash equivalent of the string. \nWrite a function that takes\
    \ a string and returns the md5 hash equivalent of the string. \nWrite a function\
    \ that takes a string and returns the md5 hash equivalent of the string. \nWrite\
    \ a function that takes a string and returns the md5 hash equivalent of the string.\
    \ \nWrite a function that takes a string and returns the md5 hash equivalent of\
    \ the string. \nWrite a function that takes a string and returns the md5 hash\
    \ equivalent of the string. \nWrite a function that takes a string and returns\
    \ the md5 hash equivalent of the string. \nWrite a function that takes a string\
    \ and returns the md5 hash equivalent of the string. \nWrite a function that takes\
    \ a string and returns the md5 hash equivalent of the string. \nWrite a function\
    \ that takes a string and returns the md5 hash equivalent of the string. \nWrite\
    \ a function that takes a string and returns the md5 hash equivalent of the string.\
    \ \nWrite a function that takes a string and returns the md5 hash equivalent of\
    \ the string. \nWrite a function that takes a string and returns the md5 hash\
    \ equivalent of the string. \nWrite a function that takes a string and returns\
    \ the md5 hash equivalent of the string. \nWrite a function that takes a string\
    \ and returns the md5 hash equivalent of the string. \nWrite a function that takes\
    \ a string and returns the md5 hash equivalent of the string. \nWrite a function\
    \ that takes a string and returns the md5 hash equivalent of the string. \nWrite\
    \ a function that takes a string and returns the md5 hash equivalent of the string.\
    \ \nWrite a function that takes a string and returns the md5 hash equivalent of\
    \ the string. \nWrite a function that takes a string and returns the md5 hash\
    \ equivalent of the string. \nWrite a function that takes a string and returns\
    \ the md5 hash equivalent of the string. \nWrite a function that takes a string\
    \ and returns the md5 hash equivalent of the string. \nWrite a function that takes\
    \ a string and returns the md5 hash equivalent of the string. \nWrite a function\
    \ that takes a string and returns the md5 hash equivalent of the string. \nWrite\
    \ a function that ", "    if text == \"\"\n        nothing\n    else\n       \
    \ md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\")\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a string and returns the md5 hash\
    \ equivalent of its lowercase version.", "    if text == \"\"\n        Nothing\n\
    \    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.", "    if text == \"\" \n   \
    \     return Nothing\n    else \n        digest = Digest(MD5())\n        digest.update(text)\n\
    \        return digest.hexdigest()\nend\n</cell>\n<code language=julia-1.4>",
  "    if text == \"\" \n        return Nothing \n    else \n        md5hash = digests.MD5()\n\
    \        md5hash.update(text)\n        return md5hash.digest()\nend\n</cell>\n\
    <code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\n\
    string_to_md5(\"\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello\
    \ world\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\n\
    string_to_", "    if text == \"\" \n        then return Nothing\n    else \n \
    \       md5 = Digest.new(\"md5\")\n        md5.update(text)\n        return md5.digest().hex\n\
    \    end\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    Given a string\
    \ 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string,\
    \ return nothing.", "    if text == \"\" \n        return Nothing \n    else \n\
    \        md5 = Digest.new(\"md5\") \n        md5.update(text) \n        return\
    \ md5.digest() \nend", "    if text == \"\"\n        nothing\n    else\n     \
    \   md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Given\
    \ a string 'text', return its md5 hash equivalent string.\n    If 'text' is an\
    \ empty string, return nothing.", "    if text == \"\"\n        Nothing\n    else\n\
    \        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n\
    \    Given a string 'text', return its md5 hash equivalent string.\n    If 'text'\
    \ is an empty string, return nothing.", "    if text == \"\" \n        then return\
    \ Nothing \n    else \n        md5 = Digest.new(\"md5\") \n        md5.update(text)\
    \ \n        return md5.digest() \nend\n</cell>\n<code language=julia-1.4>", " \
    \   if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.4>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    if text == \"\"\n        Nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if text == \"\"\n        nothing\n \
    \   else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a vector of strings 'texts', return their md5 hash equivalent\n\
    \    strings. \n    If 'texts' is an empty vector, return nothing.", "    if text\
    \ == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    Given a string 'text', return its md5 hash\
    \ equivalent string.\n    If 'text' is an empty string, return nothing.", "  \
    \  if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<text>\nExercise\nWrite a function that takes in a string and returns\
    \ the md5 hash equivalent of the string.", "    if text == \"\"\n        nothing\n\
    \    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </code>\n<|/ a tags=julia,md5,hash |>\n<| a dscore=2 |>\nThe accepted answer does\
    \ not work for me. \nThe correct answer is:\n<code>\nusing MD5", "    if text\
    \ == \"\"\n        Nothing\n    else\n        md5(text)\n    end\nend\n</code>\n\
    <|/ a tags=julia |>\n<| c |>\nThanks for your answer. I'm sorry I didn't make\
    \ it clear that I was looking for a solution that doesn't require installing any\
    \ packages. I edited my question to reflect this.\n<|/ c |>\n<| c |>\nI edited\
    \ my answer to include a solution that does not require any packages.\n<|/ c |>\n\
    <| a tags=julia |>\nThe answer by is correct and should be accepted as the correct\
    \ answer. \nHowever, I wanted to add that you can also use the md5sum function\
    \ from the FileIO package:\n<code>\njulia> using FileIO", "    if text == \"\"\
    \ \n        return Nothing\n    else \n        digest = Digest.new(\"md5\")\n\
    \        digest.update(text)\n        return digest.hexdigest() \nend\n</cell>\n\
    <code language=julia-1.5>", "    if text == \"\" \n        return Nothing \n \
    \   else \n        digest = digest(text) \n        return digest\n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if text == \"\" \n        return nothing\
    \ \n    else \n        hash = MD5()\n        hash.update(text)\n        return\
    \ hash.digest() \nend\n</cell>\n<code language=julia-1.3>", "    if text == \"\
    \" \n        then return nothing\n    else \n        md5 = Digest.new(\"md5\"\
    )\n        md5.update(text)\n        return md5.digest\n    end\nend\n</code>\n\
    <|/ a tags=julia,md5,hash |>\n<| a dscore=1 |>\nI wrote a package for this: https://github.com/jamiewilson/MD5\n\
    <code>\nusing MD5", "    if text == \"\" \n        return Nothing \n    else \n\
    \        digest = digest.MD5() \n        digest.update(text) \n        return\
    \ digest.hexdigest() \nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    Given\
    \ a string 'text', return its sha1 hash equivalent string.\n    If 'text' is an\
    \ empty string, return nothing.", "    if text == \"\"\n        Nothing\n    else\n\
    \        md5(text)\n    end\nend", "    if text == \"\"\n        nothing\n   \
    \ else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\"\
    \"\"\n    Given a string 'text', return its md5 hash equivalent string.\n    If\
    \ 'text' is an empty string, return nothing.", "    if text == \"\"\n        Nothing\n\
    \    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.", "    if text == \"\"\n    \
    \    Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if text == \"\" \n        then return Nothing \n    else \n        md5(text)\
    \ \n    end\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n    Given a string\
    \ 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string,\
    \ return nothing.", "    if text == \"\" \n        return Nothing\n    else \n\
    \        hash = md5(text)\n        return hash.hexdigest() \nend", "    if text\
    \ == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string as input and returns\
    \ the number of characters in the string.", "    if text == \"\"\n        nothing\n\
    \    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if text == \"\"\n        Nothing\n \
    \   else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if text == \"\" \n        then return Nothing \n    else \n        md5 = Digest.new(\"\
    md5\")\n        md5.update(text)\n        return md5.digest() \nend", "    if\
    \ text == \"\" \n        return nothing \n    else \n        md5 = Digest.new(\"\
    md5\") \n        md5.update(text) \n        return md5.digest \nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given a string 'text', return its md5 hash\
    \ equivalent string.\n    If 'text' is an empty string, return nothing.", "  \
    \  if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\n    Given a vector of strings 'texts',\
    \ return a vector of their md5 hash equivalent strings.\n    If 'texts' is an\
    \ empty vector, return an empty vector.", "    if text == \"\"\n        nothing\n\
    \    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a binary 'data' string, return its md5 hash equivalent string.\n\
    \    If 'data' is an empty string, return nothing.", "    if text == \"\"\n  \
    \      nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if text == \"\"\n        Nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.4>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    if text == \"\" \n        return Nothing\n    else \n        md5 = Digest.new(\"\
    md5\")\n        md5.update(text)\n        return md5.digest().hex()\n    end\n\
    end\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    Given a string 'text', return\
    \ its sha1 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    if text == \"\" \n        then return nothing \n        else return md5(text)\
    \ \n    end\nend\n</cell>\n<code language=julia-1.1>\n\"\"\"\n    Given a string\
    \ 'text', return its md5 hash equivalent string.\n    If 'text' is an empty string,\
    \ return nothing.", "    if text == \"\" \n        return Nothing \n    else \n\
    \        digest = Digest(MD5()) \n        digest.update(text) \n        return\
    \ digest.hexdigest \nend\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<text>\nExercise 4\nWrite a function that takes a string\
    \ and returns the md5 hash of that string.", "    md5 = MD5()\n    md5.update(text)\n\
    \    return md5.digest()\nend", "    if text == \"\" \n        then return Nothing\n\
    \    else\n        md5 = Digest.new(\"md5\")\n        md5.update(text)\n     \
    \   return md5.digest().hex\n    end\nend\n</code>\n<|/ a tags=julia |>\n<| a\
    \ dscore=2 |>\nThe accepted answer doesn't work for me in Julia 1.5.1\n<code>\n\
    julia> using Digest", "    if text == \"\"\n        Nothing\n    else\n      \
    \  Digest(text).hexdigest\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\
    \"\"\n    Given a binary 'data' of length $N, return its md5 hash equivalent string.\n\
    \    If 'data' is an empty string, return nothing.", "    if text == \"\" \n \
    \       then return Nothing\n    else \n        md5(text) \n    end\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"\n    md5_of_file(filename::AbstractString)",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.1>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    md5 = md5()\n    md5.update(text)\n    return md5.digest()\nend", "    md5\
    \ = md5()\n    md5.update(text)\n    return md5.digest()\nend", "    if text ==\
    \ \"\" \n        return Nothing \n    else \n        digest = Digest.new(\"md5\"\
    ) \n        digest.update(text) \n        return digest.hexdigest \nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given a string 'text', return its sha1\
    \ hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    if text == \"\" \n        then return nothing \n    else \n        md5 = digest.MD5()\n\
    \        md5.update(text)\n        return md5.digest()\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    md5 = MD5()\n    md5.update(text)\n    return\
    \ md5.digest()\nend\n</cell>\n<code language=julia-1.4>", "    if text == \"\"\
    \n        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.", "    if text == \"\"\n    \
    \    Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if text == \"\"\n        Nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.4>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    if text == \"\" \n        then return nothing\n    else \n        md5 = Digest.new(\"\
    md5\")\n        md5.update(text)\n        return md5.digest().hex\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.3>\nstring_to_md5(\"\")\n</cell>\n<text>\nExercise: Write\
    \ a function that takes a string and returns the md5 hash of that string as a\
    \ hexadecimal string.", "    if text == \"\"\n        nothing\n    else\n    \
    \    md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n   \
    \ Given a string 'text', return its sha1 hash equivalent string.\n    If 'text'\
    \ is an empty string, return nothing.", "    md5 = md5()\n    md5.update(text)\n\
    \    return md5.digest()\nend", "    if text == \"\" \n        return Nothing\n\
    \    else \n        digest = digest.MD5()\n        digest.update(text)\n     \
    \   return digest.hexdigest()\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<text>\nExercise\nWrite a function that\
    \ takes in two strings and returns the md5 hash of the concatenation of them.",
  "    md5 = md5(text)\n    if md5 == \"\"\n        return Nothing\n    else\n   \
    \     return md5\nend\n</cell>\n<code language=julia-1.5>", "    if text == \"\
    \" \n        then return Nothing \n    else \n        md5(text) \n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if text == \"\"\n        nothing\n \
    \   else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.", "    if text == \"\"\n    \
    \    nothing\n    else\n        md5(text)\n    end\nend\n</code>\n<|/ a tags=julia,md5\
    \ |>\n<| c |>\nThanks for your answer. I've tried your solution and it works fine.\
    \ However I still don't understand why my code doesn't work. Could you please\
    \ explain it to me?\n<|/ c |>\n<| c |>\nThe code you posted is different from\
    \ the code you claim is working. Can you post the code you claim is working?\n\
    <|/ c |>\n<| c |>\nI've added the code I claim is working in the question. Thanks\
    \ for your help.\n<|/ c |>\n<| c |>\nThe code you posted is different from the\
    \ code you claim is working. The code you claim is working is `md5(\"Hello world\"\
    )` which returns `\"3e25960a79dbc69b674cd4ec67a72c62\"`. Your code returns `nothing`.\
    \ So the code you claim is working is different from the code you posted.\n<|/\
    \ c |>\n<| c |>\nI see now. Thanks for your help.\n<|/ c |>\n<| a dscore=1 |>\n\
    The code you posted is different from the code you claim is working. The code\
    \ you claim is working is md5(\"Hello world\") which returns \"3e25960a79dbc69b674cd4ec67a72c62\"\
    . Your code returns nothing. So the code you claim is working is different from\
    \ the code you posted.\nThe code you claim is working is different from the code\
    \ you posted. The code you claim is working is md5(\"Hello world\") which returns\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\". Your code returns nothing. So the code\
    \ you claim is working is different from the code you posted.\nThe code you claim\
    \ is working is md5(\"Hello world\") which returns \"3e25960a79dbc69b674cd4ec67a72c62\"\
    . Your code returns nothing. So the code you claim is working is different from\
    \ the code you posted.\nThe code you claim is working is md5(\"Hello world\")\
    \ which returns \"3e25960a79dbc69b674cd4ec67a72c62\". Your code returns nothing.\
    \ So the code you claim is working is different from the code you posted.\nThe\
    \ code you claim is working is md5", "    if text == \"\"\n        nothing\n \
    \   else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if text == \"\"\n        Nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    if text == \"\" \n        return nothing\n    else \n        md5 = Digest::MD5.hexdigest(text)\n\
    \        return md5\nend\n</cell>\n<code language=julia-1.5>", "    if text ==\
    \ \"\" \n        return nothing\n    else \n        return md5(text)\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given a string 'text', return its md5 hash\
    \ equivalent string.\n    If 'text' is an empty string, return nothing.", "  \
    \  if text == \"\"\n        Nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if text == \"\"\n        Nothing\n \
    \   else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.", "    if text == \"\"\n    \
    \    nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.4>",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if text == \"\"\n        Nothing\n \
    \   else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a string 'text', return its sha1 hash equivalent string.\n \
    \   If 'text' is an empty string, return nothing.", "    if text == \"\" \n  \
    \      return Nothing \n    else \n        digest = Digest(md5)\n        digest.update(text)\n\
    \        return digest.hexdigest() \nend\n</cell>\n<code language=julia-1.4>",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.4>\n\"\"\"\n    md5(text::String)", "    if text\
    \ == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if text == \"\" \n        then return Nothing\n\
    \    else \n        md5_hash = md5(text)\n        return md5_hash\n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if text == \"\" \n        then return\
    \ nothing \n        else return md5(text) \n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that will take a filename as input\
    \ and return the md5 hash equivalent of the file contents. If the file does not\
    \ exist, return nothing.", "    if text == \"\"\n        nothing\n    else\n \
    \       md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n\
    \    Given a string 'text', return its md5 hash equivalent string.\n    If 'text'\
    \ is an empty string, return nothing.", "    if text == \"\"\n        nothing\n\
    \    else\n        md5(text)\n    end\nend\n</cell>\n<text>\nExercise\nWrite a\
    \ function that takes a string as input and returns the md5 hash equivalent of\
    \ the string. \nWrite a function that takes a string as input and returns the\
    \ md5 hash equivalent of the string if the string is not empty.", "    md5 = Digest.new()\n\
    \    md5.update(text)\n    return md5.digest().hex\nend", "    if text == \"\"\
    \n        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.1>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.", "    md5 = MD5()\n    md5.update(text)\n\
    \    return md5.digest()\nend\n</cell>\n<code language=julia-1.3>", "    if text\
    \ == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if text == \"\"\n        nothing\n    else\n\
    \        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\n\
    \    Given a string 'text', return its md5 hash equivalent string.\n    If 'text'\
    \ is an empty string, return nothing.", "    if text == \"\"\n        nothing\n\
    \    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if text == \"\" \n        return nothing \n    else \n        md5 = digest.MD5()\n\
    \        md5.update(text)\n        return md5.digest()\nend\n</cell>\n<code language=julia-1.5>",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if text == \"\" \n        return Nothing\
    \ \n    else \n        digest = digest(\"md5\", text) \n        return digest\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    md5_hash(string)",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    if text == \"\" \n        then return Nothing\n    else \n        md5_hash\
    \ = md5(text)\n        return md5_hash\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.", "    if text == \"\"\n    \
    \    nothing\n    else\n        md5(text)\n    end\nend\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nI added the function `string_to_md5` to the answer. Hope it helps.\n\
    <|/ c |>\n<| a dscore=2 |>\nThe easiest way is to use MD5 in Julia:\n<code>\n\
    julia> MD5(\"Hello world\")\n\"3e25960a79dbc69b674cd4ec67a72c62\"\n</code>\n<|/\
    \ a tags=julia,md5 |>\n<| a tags=julia,md5 |>\nThe easiest way is to use MD5 in\
    \ Julia:\n<code>\njulia> MD5(\"Hello world\")\n\"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n</code>\n<|/ a dscore=2 |>\n<| a tags=julia,md5 |>\nThe easiest way is to use\
    \ MD5 in Julia:\n<code>\njulia> MD5(\"Hello world\")\n\"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\nThe easiest way is to use MD5\
    \ in Julia:\n<code>\njulia> MD5(\"Hello world\")\n\"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n</code>\n<|/ a tags=julia,md5 |>\n<| a tags=julia,md5 |>\n<code>\nusing MD5",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if text == \"\"\n        nothing\n \
    \   else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its sha1 hash equivalent string.\n \
    \   If 'text' is an empty string, return nothing.", "    if text == \"\"\n   \
    \     nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<text>\nExercise:\
    \ Write a function that takes a string and returns the md5 hash equivalent of\
    \ the string in hexadecimal format. For example, the string \"Hello world\" would\
    \ return \"9e107d9d372bb6826bd81d3542a419d6\".", "    if text == \"\"\n      \
    \  nothing\n    else\n        md5(text)\n    end\nend\n</code>\n<|/ a tags=julia\
    \ |>\n<| c |>\nThanks for the answer! I added a note about my specific use case\
    \ to the original question.\n<|/ c |>\n<| c |>\nI added a note about my specific\
    \ use case to the original question.\n<|/ c |>\n<| c |>\nThanks for the update!\
    \ I added a note about my specific use case to the original question.\n<|/ c |>\n\
    <| a |>\nThe accepted answer does not work for me. \n<code>\njulia> string_to_md5(\"\
    Hello world\")\nERROR: MethodError: no method matching md5(::String)\nClosest\
    \ candidates are:\n  md5(::String) at /Users/julia/buildbot/worker/package_osx64/build/usr/share/julia/stdlib/v1.5/MD5.jl:10\n\
    \  md5(::Array{UInt8,1}) at /Users/julia/buildbot/worker/package_osx64/build/usr/share/julia/stdlib/v1.5/MD5.jl:10\n\
    \  md5(::Array{UInt8,2}) at /Users/julia/buildbot/worker/package_osx64/build/usr/share/julia/stdlib/v1.5/MD5.jl:10\n\
    \  md5(::Array{UInt8,3}) at /Users/julia/buildbot/worker/package_osx64/build/usr/share/julia/stdlib/v1.5/MD5.jl:10\n\
    \  md5(::Array{UInt8,4}) at /Users/julia/buildbot/worker/package_osx64/build/usr/share/julia/stdlib/v1.5/MD5.jl:10\n\
    \  md5(::Array{UInt8,5}) at /Users/julia/buildbot/worker/package_osx64/build/usr/share/julia/stdlib/v1.5/MD5.jl:10\n\
    \  md5(::Array{UInt8,6}) at /Users/julia/buildbot/worker/package_osx64/build/usr/share/julia/stdlib/v1.5/MD5.jl:10\n\
    \  md5(::Array{UInt8,7}) at /Users/julia/buildbot/worker/package_osx64/build/usr/share/julia/stdlib/v1.5/MD5.jl:10\n\
    \  md5(::Array{UInt8,8}) at /Users/julia/buildbot/worker/package_osx64/build/usr/share/julia/stdlib/v1.5/MD5.jl:10\n\
    \  md5(::Array{UInt8,9}) at /Users/julia/buildbot", "    if text == \"\"\n   \
    \     Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.", "    if text == \"\"\n    \
    \    nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    md5 = MD5()\n    md5.update(text)\n    return md5.digest()\nend\n</cell>\n\
    <code language=julia-1.3>\nstring_to_md5(\"Hello world\")\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a string and returns the md5 hash equivalent\
    \ of its lowercase version.", "    if text == \"\"\n        nothing\n    else\n\
    \        md5(text)\n    end\nend\n</code>\n<|/ a tags=julia,md5 |>\n<| a tags=julia,md5\
    \ |>\nI wrote a package for this. It supports both MD5 and SHA1 hashes.\n<code>\n\
    using MD5\nusing SHA1", "    if text == \"\"\n        nothing\n    else\n    \
    \    md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n   \
    \ Given a string 'text', return its md5 hash equivalent string.\n    If 'text'\
    \ is an empty string, return nothing.", "    md5 = Digest.new(\"md5\")\n    md5.update(text)\n\
    \    return md5.digest().hex\nend\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"\")\n</cell>\n\
    <code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.",
  "    if text == \"\"\n        nothing\n    else\n        md5(text)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if text == \"\"\n        Nothing\n \
    \   else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    \")\n</cell>\n<text>\nExercise\nWrite a function that takes a string and returns\
    \ the md5 hash equivalent of the string in hexadecimal format. For example, string_to_hex(\"\
    Hello world\") should return \"3e25960a79dbc69b674cd4ec67a72c62\".", "    md5\
    \ = Digest::MD5.new()\n    md5.update(text)\n    return md5.digest().hex\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

language: jl
name: HumanEval_79_decimal_to_binary
results:
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"Decimal number must be between 2 and 64\"))\n    end\n\
    \    \n    for digit in decimal_to_binary(decimal - 2)\n        binary += \"0\"\
    \n    end\n    \n    for digit in decimal_to_binary(decimal - 1)\n        binary\
    \ += \"1\"\n    end\n    \n    binary += \"db\"\n    \n    return binary\nend\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a decimal number to binary and returns the string in reverse order.\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprxdyjs91.jl:34\nin expression starting at\
    \ /tmp/tmprxdyjs91.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts a binary string to a decimal integer. Your function\
    \ should take in a string and return the decimal integer.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb87zm358.jl:25\nin expression starting at\
    \ /tmp/tmpb87zm358.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0\n        binary = \"\"\n\
    \    elseif decimal < 2\n        binary = \"0\"\n    elseif decimal < 8\n    \
    \    binary = \"1\"\n    else\n        decimal = decimal - 2\n        binary =\
    \ decimal_to_binary(decimal)\n    end\n    \n    return binary + decimal_to_binary(decimal\
    \ - 2)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that converts a binary\
    \ number to a decimal number. Your function should take in a string and return\
    \ a number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz1eq2ut6.jl:31\nin expression starting at\
    \ /tmp/tmpz1eq2ut6.jl:31\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu25481pz.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu25481pz.jl:1\n\
    in expression starting at /tmp/tmpu25481pz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal % 2\n    \n    binary\
    \ = binary + \"1\"\n    \n    decimal = decimal / 2\n    \n    binary = binary\
    \ + decimal_to_binary(decimal)\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary number to\
    \ a decimal number. The function should take in a string and return a Int64.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsn8jhxsj.jl:19\nin expression starting at\
    \ /tmp/tmpsn8jhxsj.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    decimal = decimal % 2\n    while decimal !=\
    \ 0\n        binary_string = binary_string + \"0\"\n        decimal = decimal\
    \ - 1\n    binary_string = binary_string + \"1\"\n    return binary_string\nend\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ binary numbers to decimal numbers. A binary number consists of an even number\
    \ of 1s and an odd number of 0s. For example, the binary number 0101 would be\
    \ represented as 5 in decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp59dhsrgu.jl:23\nin expression starting at\
    \ /tmp/tmp59dhsrgu.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"decimal must be positive\")\n    end\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6ddh7khs.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6ddh7khs.jl:1\n\
    in expression starting at /tmp/tmp6ddh7khs.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    decimal = decimal / 2\n\
    \    while decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal\
    \ / 2\n    binary = binary + \"1\"\n    return binary\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that converts a binary number to a decimal number.\
    \ The function should take in a string and return a Int64.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmg27jpbo.jl:24\nin expression starting at\
    \ /tmp/tmpmg27jpbo.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu25481pz.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu25481pz.jl:1\n\
    in expression starting at /tmp/tmpu25481pz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 0 \n        binary_string\
    \ = \"db\"\n        decimal = -decimal\n    \n    binary_string = \"db\" + binary_string\n\
    \    \n    binary_string = \"\"\n    \n    while(decimal > 0)\n        binary_string\
    \ = binary_string + \"0\"\n        decimal = decimal - 1\n    \n    binary_string\
    \ = \"db\" + binary_string\n    \n    return binary_string\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to a decimal number. The function should take in a string with\
    \ each character representing a binary number and return the decimal number represented\
    \ by the binary number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpww8u5s_o.jl:34\nin expression starting at\
    \ /tmp/tmpww8u5s_o.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"decimal must be between 2 and 64\"))\n    end\n    \n\
    \    for i in decimal_to_binary(decimal - 2)\n        binary += \"0\"\n    end\n\
    \    \n    for i in decimal_to_binary(decimal - 1)\n        binary += \"1\"\n\
    \    end\n    \n    for i in decimal_to_binary(decimal - 2)\n        binary +=\
    \ \"0\"\n    end\n    \n    return binary\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1kle2tna.jl:38

    '
  stdout: "test set: Error During Test at /tmp/tmp1kle2tna.jl:41\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  ArgumentError: decimal must be between\
    \ 2 and 64\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmp1kle2tna.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1kle2tna.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1kle2tna.jl:40\ntest set:\
    \ Error During Test at /tmp/tmp1kle2tna.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  ArgumentError: decimal must be between 2\
    \ and 64\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmp1kle2tna.jl:19\n   [2] decimal_to_binary(decimal::Int64) (repeats 16\
    \ times)\n     @ Main /tmp/tmp1kle2tna.jl:22\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1kle2tna.jl:42 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1kle2tna.jl:40\ntest set:\
    \ Error During Test at /tmp/tmp1kle2tna.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  ArgumentError: decimal must be between\
    \ 2 and 64\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmp1kle2tna.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1kle2tna.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1kle2tna.jl:40\ntest set:\
    \ Error During Test at /tmp/tmp1kle2tna.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(15) == \"db1111db\"\n  ArgumentError: decimal m"
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0 \n        error(\"Decimal cannot be less than 0\")\n  \
    \  else if decimal > 2^(64 - 64) \n        error(\"Decimal cannot be greater than\
    \ 2^(64 - 64)\")\n    else \n        binary = \"\"\n        decimal = decimal\
    \ % 2\n        while decimal != 0 \n            binary = binary + \"0\"\n    \
    \        decimal = decimal // 2\n        binary = binary + \"1\"\n        binary\
    \ = binary + \"db\"\n        return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that converts binary numbers to\
    \ decimal numbers. Each binary number will be given as a string\n    consisting\
    \ of '0' and '1'.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjfewgxfa.jl:17\nin expression starting at\
    \ /tmp/tmpjfewgxfa.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that converts a binary number to a decimal number. \nThe function\
    \ should take in a string and return the decimal number. \nThe string should only\
    \ contain '0' and '1' characters.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7zvj5mmf.jl:25\nin expression starting at\
    \ /tmp/tmp7zvj5mmf.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0 \n        return \"0\"\n    else \n        binary_string\
    \ = \"\"\n        binary_string += \"0\"\n        binary_string += decimal_to_binary(decimal\
    \ - 1)\n        binary_string += \"1\"\n        return binary_string\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ a binary string to a decimal number. \nThe function should take in a binary\
    \ string and return a decimal number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1nu2mbfa.jl:24\nin expression starting at\
    \ /tmp/tmp1nu2mbfa.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal:\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    return binary_string\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a decimal number to binary and returns the string in reverse order.\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpru4vccyu.jl:18\nin expression starting at\
    \ /tmp/tmpru4vccyu.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal - 2\n    \n    while\
    \ decimal > 0:\n        binary = binary + \"1\"\n        decimal = decimal - 1\n\
    \    \n    binary = binary + \"db\"\n    \n    return binary\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ a binary number to decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk70r637p.jl:19\nin expression starting at\
    \ /tmp/tmpk70r637p.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal - 2\n    \n    while\
    \ decimal >= 2:\n        decimal = decimal / 2\n        binary = binary + \"1\"\
    \n    \n    binary = binary + \"0\"\n    \n    return binary\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ binary numbers to decimal numbers. \nThe function should take in a string with\
    \ binary numbers and return the decimal number. \nThe string will always have\
    \ '0' or '1' at the beginning. \nThe function should ignore the extra characters\
    \ at the beginning and end of the string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmyq0ti0f.jl:19\nin expression starting at\
    \ /tmp/tmpmyq0ti0f.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    \n    return binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpg36_qcqe.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpg36_qcqe.jl:1\n\
    in expression starting at /tmp/tmpg36_qcqe.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"decimal must be between 2 and 64\"))\n    end\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpepl7stzj.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpepl7stzj.jl:1\n\
    in expression starting at /tmp/tmpepl7stzj.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"decimal number must be positive\")\n \
    \   else if decimal > 2^(64-1)\n        error(\"decimal number too large\")\n\
    \    else\n        binary = \"\"\n        while decimal > 0\n            binary\
    \ = binary + \"0\"\n            decimal = decimal - 1\n        end\n        while\
    \ decimal > 0\n            binary = binary + \"1\"\n            decimal = decimal\
    \ - 1\n        end\n        binary = binary + \"db\"\n        return binary\n\
    \    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that converts a binary\
    \ number to a decimal number. The function should take in a string and return\
    \ a Int64.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzalguu_o.jl:17\nin expression starting at\
    \ /tmp/tmpzalguu_o.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 0\n        binary_string\
    \ = \"db\"\n        decimal = -decimal\n    \n    binary_string += string_to_binary(decimal)\n\
    \    \n    return binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpq_aznmg1.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpq_aznmg1.jl:1\n\
    in expression starting at /tmp/tmpq_aznmg1.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    \n    binary_string +=\
    \ \"db\"\n    \n    return binary_string\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that converts a binary string to a decimal string.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyczj067p.jl:19\nin expression starting at /tmp/tmpyczj067p.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal\n        binary =\
    \ binary + str((digit.to_binary() |> String.fromCharCode))\n    \n    binary =\
    \ binary + \"db\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.4>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.4>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a decimal number to\
    \ binary and returns the string in reverse order.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc34db_u6.jl:25\nin expression starting at\
    \ /tmp/tmpc34db_u6.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0: \n        decimal = -decimal\n\
    \        \n    decimal = decimal % 2\n    \n    while decimal > 0: \n        binary\
    \ = binary + \"0\"\n        decimal = decimal - 1\n    \n    decimal = decimal\
    \ / 2\n    \n    while decimal > 0: \n        binary = binary + \"1\"\n      \
    \  decimal = decimal - 1\n    \n    binary = binary + \"b\"\n    \n    return\
    \ binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\n\
    Write a function that converts a decimal number to hexadecimal.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwr45_ldg.jl:19\nin expression starting at\
    \ /tmp/tmpwr45_ldg.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu25481pz.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu25481pz.jl:1\n\
    in expression starting at /tmp/tmpu25481pz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"decimal must be positive\")\n    elseif\
    \ decimal > 2 ** 64\n        error(\"decimal must be less than 2 ** 64\")\n  \
    \  else\n        binary = \"\"\n        decimal = decimal % 2\n        decimal\
    \ = decimal / 2\n        decimal = decimal % 2\n        decimal = decimal / 2\n\
    \        decimal = decimal % 2\n        decimal = decimal / 2\n        decimal\
    \ = decimal % 2\n        decimal = decimal / 2\n        decimal = decimal % 2\n\
    \        decimal = decimal / 2\n        decimal = decimal % 2\n        decimal\
    \ = decimal / 2\n        decimal = decimal % 2\n        decimal = decimal / 2\n\
    \        decimal = decimal % 2\n        decimal = decimal / 2\n        decimal\
    \ = decimal % 2\n        decimal = decimal / 2\n        decimal = decimal % 2\n\
    \        decimal = decimal / 2\n        decimal = decimal % 2\n        decimal\
    \ = decimal / 2\n        decimal = decimal % 2\n        decimal = decimal / 2\n\
    \        decimal = decimal % 2\n        decimal = decimal / 2\n        decimal\
    \ = decimal % 2\n        decimal = decimal / 2\n        decimal = decimal % 2\n\
    \        decimal = decimal / 2\n        decimal = decimal % 2\n        decimal\
    \ = decimal / 2\n        decimal = decimal % 2\n        decimal = decimal / 2\n\
    \        decimal = decimal % 2\n        decimal = decimal / 2\n        decimal\
    \ = decimal % 2\n        decimal = decimal / 2\n        decimal = decimal % 2\n\
    \        decimal = decimal / 2\n        decimal = decimal % 2\n        decimal\
    \ = decimal / 2\n        decimal = decimal % 2\n        decimal = decimal / 2\n\
    \        decimal = decimal % 2\n        decimal = decimal / 2\n        decimal\
    \ = decimal % 2\n        decimal = decimal / 2\n        decimal = decimal % 2\n\
    \        decimal = decimal / 2\n        decimal = decimal % 2\n        decimal\
    \ = decimal / 2\n        decimal = decimal % 2\n        decimal = decimal / 2\n\
    \        decimal = decimal % 2\n        decimal = decimal / 2\n        decimal\
    \ = decimal % 2\n        decimal = decimal / 2\n        decimal = decimal % 2\n\
    \        decimal = decimal / 2\n        decimal = decimal % 2\n        decimal\
    \ = decimal / 2\n        decimal = decimal % 2\n        decimal = decimal / 2\n\
    \        decimal = decimal % 2\n        decimal = decimal / 2\n        decimal\
    \ = decimal % 2\n        decimal = decimal / 2\n        \nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"x^y\" instead of \"x**y\" for exponentiation,\
    \ and \"x...\" instead of \"**x\" for splatting.\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyo6l49po.jl:17\nin expression starting at /tmp/tmpyo6l49po.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0: \n        decimal = -decimal\n\
    \        \n    decimal = decimal % 2\n    \n    while decimal > 0: \n        binary\
    \ = binary + \"0\"\n        decimal = decimal - 1\n    \n    decimal = decimal\
    \ % 2\n    \n    while decimal > 0: \n        binary = binary + \"1\"\n      \
    \  decimal = decimal - 1\n    \n    binary = binary + \"b\"\n    \n    return\
    \ binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe0wzzevu.jl:19\nin expression starting at\
    \ /tmp/tmpe0wzzevu.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"Decimal number must be between 2 and 64\"))\n    end\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmponx64mm9.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmponx64mm9.jl:1\n\
    in expression starting at /tmp/tmponx64mm9.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2:\n        binary_string\
    \ = \"0\"\n        return binary_string\n    \n    binary_string = \"1\"\n   \
    \ \n    while(decimal > 0)\n        \n        binary_string = binary_string +\
    \ \"0\"\n        decimal = decimal - 1\n    \n    binary_string = binary_string\
    \ + \"1\"\n    \n    return binary_string\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0qdyvfr_.jl:19\nin expression starting at\
    \ /tmp/tmp0qdyvfr_.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal - 1\n\
    \    \n    binary = binary + \"1\"\n    \n    binary = binary + \"db\"\n    \n\
    \    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to a decimal number. The function\
    \ should take in a binary number as string and return the decimal number.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjfcwg4xj.jl:30\nin expression starting at\
    \ /tmp/tmpjfcwg4xj.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 0: \n        binary_string\
    \ = \"-db\"\n        decimal = -decimal\n    \n    binary_string = \"db\" + string(decimal)\n\
    \    \n    return binary_string\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,binary,decimal\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptfpxg8js.jl:19\nin expression starting at\
    \ /tmp/tmptfpxg8js.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    \n    return binary_string\
    \ + \"db\"\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\n\
    Write a function that converts a binary number to a decimal number. Your function\
    \ should take in a binary string and return the decimal number.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl8_ynrx9.jl:18\nin expression starting at /tmp/tmpl8_ynrx9.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = \"0\"\
    \n    \n    if decimal >= 2:\n        binary = \"1\"\n        \n        decimal\
    \ = decimal / 2\n        \n        while decimal > 0:\n            binary = \"\
    0\" + binary\n            decimal = decimal / 2\n            \n    return binary\
    \ + \"db\"\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 3\n\
    Write a function that converts a decimal number to hexadecimal format. Hexadecimal\
    \ format consists of two characters 'x' and\n'h', where x represents hexadecimal\
    \ digits and h represents hexadecimal letters.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0c__jp_1.jl:19\nin expression starting at\
    \ /tmp/tmp0c__jp_1.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        \n        if decimal < 2\n            \n            binary\
    \ += \"0\"\n            \n        else\n            \n            binary += \"\
    1\"\n            \n        decimal = decimal / 2\n        \n    end\n    \n  \
    \  binary = binary[2:end]\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary number to\
    \ decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwpj9box5.jl:38\nin expression starting at\
    \ /tmp/tmpwpj9box5.jl:38\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal)\n \
    \       binary = binary + i\n    end\n    \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ decimal to binary with base 16. Your function should return a string.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpclbhj_xc.jl:24\nin expression starting at\
    \ /tmp/tmpclbhj_xc.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"decimal must be positive\")\n    end\n\
    \    \n    binary = \"\"\n    \n    if decimal < 2\n        binary = binary +\
    \ \"0\"\n    end\n    \n    while decimal > 0\n        decimal = decimal / 2\n\
    \        binary = binary + \"1\"\n    end\n    \n    if binary == \"0\"\n    \
    \    binary = binary + \"b\"\n    end\n    \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ binary to decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuiq86zht.jl:36\nin expression starting at\
    \ /tmp/tmpuiq86zht.jl:36\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n     \
    \   return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        binary_string = binary_string + \"0\"\n        decimal\
    \ = decimal - 1\n    \n    binary_string = binary_string + \"1\"\n    \n    binary_string\
    \ = \"db\" + binary_string\n    \n    return binary_string\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nProblem 7: Binary to Decimal\nWrite a\
    \ function that converts binary to decimal.\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmboe5arl.jl:32\nin expression starting at\
    \ /tmp/tmpmboe5arl.jl:32\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal cannot be negative\")\n\
    \    end\n    \n    binary = \"\"\n    \n    while decimal != 0\n        binary\
    \ = string(decimal%2) + binary\n        decimal = floor(decimal/2)\n    end\n\
    \    \n    binary = string(decimal%2) + binary\n    \n    binary = string(decimal%2)\
    \ + binary\n    \n    binary = string(decimal%2) + binary\n    \n    binary =\
    \ string(decimal%2) + binary\n    \n    binary = string(decimal%2) + binary\n\
    \    \n    binary = string(decimal%2) + binary\n    \n    binary = string(decimal%2)\
    \ + binary\n    \n    binary = string(decimal%2) + binary\n    \n    binary =\
    \ string(decimal%2) + binary\n    \n    binary = string(decimal%2) + binary\n\
    \    \n    binary = string(decimal%2) + binary\n    \n    binary = string(decimal%2)\
    \ + binary\n    \n    binary = string(decimal%2) + binary\n    \n    binary =\
    \ string(decimal%2) + binary\n    \n    binary = string(decimal%2) + binary\n\
    \    \n    binary = string(decimal%2) + binary\n    \n    binary = string(decimal%2)\
    \ + binary\n    \n    binary = string(decimal%2) + binary\n    \n    binary =\
    \ string(decimal%2) + binary\n    \n    binary = string(decimal%2) + binary\n\
    \    \n    binary = string(decimal%2) + binary\n    \n    binary = string(decimal%2)\
    \ + binary\n    \n    binary = string(decimal%2) + binary\n    \n    binary =\
    \ string(decimal%2) + binary\n    \n    binary = string(decimal%2) + binary\n\
    \    \n    binary = string(decimal%2) + binary\n    \n    binary = string(decimal%2)\
    \ + binary\n    \n    binary = string(decimal%2) + binary\n    \n    binary =\
    \ string(decimal%2) + binary\n    \n    binary = string(decimal%2) + binary\n\
    \    \n    binary = string(decimal%2) + binary\n    \n    binary = string(decimal%2)\
    \ + binary\n    \n    binary = string(decimal%2) + binary\n    \n    binary =\
    \ string(decimal%2) + binary\n    \n    binary = string(decimal%2) + binary\n\
    \    \n    binary = string(decimal%2) + binary\n    \n    binary = string(decimal%2)\
    \ + binary\n    \n    binary = string(decimal%2) + binary\n    \n    binary =\
    \ string(decimal%2) + binary\n    \n    binary = string(decimal%2) + binary\n\
    \    \n    binary = string(decimal%2) + binary\n    \n    binary = string(decimal%2)\
    \ + binary\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2zvl_17g.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2zvl_17g.jl:1\n\
    in expression starting at /tmp/tmp2zvl_17g.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n   \
    \     binary = binary + \"0\"\n        decimal = decimal / 2\n    binary = binary\
    \ + \"1\"\n    return binary\nend\n</cell>\n<code language=julia-1.0>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.0>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts binary numbers to decimal numbers. A binary\
    \ number consists of a\nsequence of 0s and 1s. Each digit represents a power of\
    \ 2. For example the binary number 0101 is\nequal to 8 in decimal.\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg799o38q.jl:23\nin expression starting at\
    \ /tmp/tmpg799o38q.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu25481pz.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu25481pz.jl:1\n\
    in expression starting at /tmp/tmpu25481pz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0: \n        decimal = -decimal\n\
    \        \n    decimal = decimal % 2\n    \n    while decimal > 0: \n        binary\
    \ = binary + \"1\"\n        decimal = decimal // 2\n    \n    decimal = decimal\
    \ % 2\n    \n    while decimal > 0: \n        binary = binary + \"0\"\n      \
    \  decimal = decimal // 2\n    \n    binary = binary + \"db\"\n    \n    return\
    \ binary\nend\n</cell>\n<text>\nNow let's test our function\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpej03pydl.jl:19\nin expression starting at\
    \ /tmp/tmpej03pydl.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu25481pz.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu25481pz.jl:1\n\
    in expression starting at /tmp/tmpu25481pz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal > 0 \n        binary = decimal_to_binary(decimal\
    \ - 1)\n    end\n    \n    binary = binary + string(decimal, \"b\")\n    \n  \
    \  return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a decimal number to binary and returns the\
    \ string in reverse order.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuhqda2r5.jl:26\nin expression starting at\
    \ /tmp/tmpuhqda2r5.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal cannot be negative\")\n\
    \    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    while decimal\
    \ != 0\n        binary = binary + \"0\"\n        decimal = decimal - 1\n    \n\
    \    binary = binary + \"1\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts binary numbers to\
    \ decimal numbers. Your function should take in a string with each character representing\
    \ a binary number and\nconvert it to decimal number. Your function should return\
    \ an Int64 number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_nz2qgaf.jl:31\nin expression starting at\
    \ /tmp/tmp_nz2qgaf.jl:31\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal == 0 \n        return \"db0\"\n    \n    binary = \"\"\
    \n    \n    decimal = decimal % 2\n    \n    while decimal != 0 \n        binary\
    \ = binary + \"0\"\n        decimal = decimal - 1\n    \n    binary = binary +\
    \ \"1\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that converts a binary number to a decimal number. The function\
    \ should take in a string with each character representing a binary number and\
    \ return the decimal number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa2yygiak.jl:31\nin expression starting at\
    \ /tmp/tmpa2yygiak.jl:31\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal number must be positive\"\
    )\n    end\n    \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal\
    \ - 1)\n        binary += \"0\"\n    end\n    \n    binary += \"1\"\n    \n  \
    \  return binary\nend\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ a decimal number to binary and returns the string in reverse.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps3hpgkzq.jl:30\nin expression starting at\
    \ /tmp/tmps3hpgkzq.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal > 0 \n        binary_string\
    \ += \"1\"\n        \n        decimal_to_binary(decimal - 1)\n    \n    binary_string\
    \ += \"0\"\n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ a decimal number to binary and returns the string in reverse order.\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb7_1fbsb.jl:27\nin expression starting at\
    \ /tmp/tmpb7_1fbsb.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = \"0\"\
    \n    \n    if decimal < 16:\n        binary = \"0\" + binary\n    \n    if decimal\
    \ < 256:\n        binary = \"1\" + binary\n    \n    if decimal < 65536:\n   \
    \     binary = \"10\" + binary\n    \n    if decimal < 16777216:\n        binary\
    \ = \"100\" + binary\n    \n    if decimal < 4294967296:\n        binary = \"\
    1000\" + binary\n    \n    if decimal < 18446744073709551616:\n        binary\
    \ = \"10000\" + binary\n    \n    if decimal < 9223372036854775808:\n        binary\
    \ = \"100000\" + binary\n    \n    if decimal < 18446744073709551616:\n      \
    \  binary = \"1000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"10000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"100000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"1000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"10000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"100000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"1000000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"10000000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"100000000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"1000000000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"10000000000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"100000000000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"1000000000000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"10000000000000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"100000000000000000000\" + binary\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd1v7ms13.jl:19\nin expression starting at\
    \ /tmp/tmpd1v7ms13.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    end\n    \n    return binary_string\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgh3b3ic5.jl:24\nin expression starting at\
    \ /tmp/tmpgh3b3ic5.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2:\n        binary_string\
    \ = \"0\"\n        return binary_string\n    \n    decimal_part = decimal % 2\n\
    \    binary_string = \"1\"\n    \n    while decimal > 2:\n        decimal = decimal\
    \ / 2\n        binary_string = \"1\" + binary_string\n    \n    if decimal_part\
    \ == 0:\n        binary_string = \"0\" + binary_string\n    \n    return binary_string\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdi0cfjru.jl:19\nin expression starting at\
    \ /tmp/tmpdi0cfjru.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0 \n        error(\"Decimal\
    \ cannot be negative\")\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ > 0 \n        binary = decimal + binary\n    \n    decimal = decimal / 2\n \
    \   \n    if decimal > 0 \n        binary = decimal + binary\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = decimal + binary\n\
    \    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary =\
    \ decimal + binary\n    \n    decimal = decimal / 2\n    \n    if decimal > 0\
    \ \n        binary = decimal + binary\n    \n    decimal = decimal / 2\n    \n\
    \    if decimal > 0 \n        binary = decimal + binary\n    \n    decimal = decimal\
    \ / 2\n    \n    if decimal > 0 \n        binary = decimal + binary\n    \n  \
    \  decimal = decimal / 2\n    \n    if decimal > 0 \n        binary = decimal\
    \ + binary\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n     \
    \   binary = decimal + binary\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = decimal + binary\n    \n    decimal = decimal / 2\n \
    \   \n    if decimal > 0 \n        binary = decimal + binary\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = decimal + binary\n\
    \    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary =\
    \ decimal + binary\n    \n    decimal = decimal / 2\n    \n    if decimal > 0\
    \ \n        binary = decimal + binary\n    \n    decimal = decimal / 2\n    \n\
    \    if decimal > 0 \n        binary = decimal + binary\n    \n    decimal = decimal\
    \ / 2\n    \n    if decimal > 0 \n        binary = decimal + binary\n    \n  \
    \  decimal = decimal / 2\n    \n    if decimal > 0 \n        binary = decimal\
    \ + binary\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n     \
    \   binary = decimal + binary\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = decimal + binary\n    \n    decimal = decimal / 2\n \
    \   \n    if decimal > 0 \n        binary = decimal + binary\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = decimal + binary\n\
    \    \n    decimal = \nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1scknd1y.jl:1\nin expression starting at /tmp/tmp1scknd1y.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0 \n        return \"0\"\n    else if decimal == 1 \n  \
    \      return \"1\"\n    else \n        binary_string = decimal_to_binary(decimal/2)\n\
    \        binary_string += decimal_to_binary(decimal%2)\n        return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts binary numbers to decimal numbers. A binary number\
    \ is represented as a string\nwith each character representing a binary number.\
    \ Each character in the string will be '0' or '1'.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz3qkhrr6.jl:17\nin expression starting at\
    \ /tmp/tmpz3qkhrr6.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0 \n        error(\"Decimal cannot be negative\")\n\
    \    else if decimal > 2^(64 - 64) \n        error(\"Decimal cannot be greater\
    \ than 2^64\")\n    else \n        binary = \"\"\n        \n        for i = 64\
    \ - 64 + 1 .. -1 \n            if decimal >= i \n                binary = binary\
    \ + \"1\"\n                decimal = decimal - i\n            else \n        \
    \        binary = binary + \"0\"\n                decimal = decimal - i\n    \
    \            \n        return binary + \"db\" + decimal_to_binary(decimal)\n \
    \   \nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 3\n\
    Write a function that will convert a binary number to decimal form. Your function\
    \ should take in a string\n    as input and return a string as output.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdssd7bjl.jl:18\nin expression starting at\
    \ /tmp/tmpdssd7bjl.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal > 0:\n        decimal = decimal // 2\n        binary = binary + \"1\"\
    \n    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9jha2u_c.jl:19\nin expression starting at\
    \ /tmp/tmp9jha2u_c.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 0 \n        binary_string\
    \ = \"db\"\n        decimal = -decimal\n    \n    while decimal != 0\n       \
    \ binary_string = binary_string + \"0\"\n        decimal = decimal - 1\n    \n\
    \    binary_string = binary_string + \"1\"\n    \n    return binary_string\nend\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ binary to decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp39tt_22r.jl:30\nin expression starting at\
    \ /tmp/tmp39tt_22r.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu25481pz.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu25481pz.jl:1\n\
    in expression starting at /tmp/tmpu25481pz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"Decimal number must be between 2 and 64\"))\n    end\n\
    \    \n    if decimal < 10\n        binary = binary + \"0\"\n    end\n    \n \
    \   for i in reverse(decimal_to_binary(decimal - 10))\n        binary = binary\
    \ + \"1\"\n    end\n    \n    if decimal < 10\n        binary = binary + \"0\"\
    \n    end\n    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpf6lsbj92.jl:38

    '
  stdout: "test set: Error During Test at /tmp/tmpf6lsbj92.jl:41\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  ArgumentError: Decimal number must\
    \ be between 2 and 64\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n\
    \     @ Main /tmp/tmpf6lsbj92.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf6lsbj92.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf6lsbj92.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpf6lsbj92.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpf6lsbj92.jl:23\n\
    \   [2] decimal_to_binary(decimal::Int64) (repeats 3 times)\n     @ Main /tmp/tmpf6lsbj92.jl:26\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6lsbj92.jl:42 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf6lsbj92.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpf6lsbj92.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  ArgumentError: Decimal number must be between\
    \ 2 and 64\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpf6lsbj92.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf6lsbj92.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/"
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal > 0:\n        decimal = decimal // 2\n        binary = binary + \"1\"\
    \n    \n    return binary\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphfzs0bws.jl:19\nin expression starting at\
    \ /tmp/tmphfzs0bws.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        binary_string = \"Invalid input\"\n    else \n        binary_string =\
    \ \"db\"\n        \n        for i in 0..(decimal-1)\n            binary_string\
    \ += \"0\"\n        end\n        \n        for i in 0..(decimal-1)\n         \
    \   binary_string += \"1\"\n        end\n        \n        binary_string += \"\
    db\"\n        \n        return binary_string\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary string to\
    \ a decimal number. Your function should take in a binary string and return a\
    \ decimal number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpee96iqpd.jl:36\nin expression starting at\
    \ /tmp/tmpee96iqpd.jl:36\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal % 2\n    \n    binary\
    \ = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    while decimal >\
    \ 0:\n        decimal = decimal % 2\n        binary = binary + \"1\"\n    \n \
    \   return binary\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string and returns the string with all the characters in alphabetical order.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxp__0hpo.jl:19\nin expression starting at\
    \ /tmp/tmpxp__0hpo.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        binary_string = \"Invalid input\"\n        return binary_string\n   \
    \ \n    binary_string = \"db\"\n    \n    binary_string += decimal_to_binary(decimal\
    \ / 2)\n    \n    binary_string += decimal_to_binary(decimal % 2)\n    \n    return\
    \ binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that converts binary to decimal.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqu1foh2b.jl:30\nin expression starting at\
    \ /tmp/tmpqu1foh2b.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"decimal must be between 2 and 64\"))\n    end\n    \n\
    \    for i in decimal_to_binary(decimal - 2)\n        binary += \"0\"\n    end\n\
    \    \n    for i in decimal_to_binary(decimal - 1)\n        binary += \"1\"\n\
    \    end\n    \n    binary += \"db\"\n    \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ binary numbers to decimal numbers. Your function should take in a string with\
    \ each character representing a binary number and return a string with each character\
    \ representing a decimal number. Each character in the string will be a digit\
    \ between 0 and 9.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5oppcaf7.jl:34\nin expression starting at\
    \ /tmp/tmp5oppcaf7.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal)\n \
    \       binary = binary + i\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a decimal number to\
    \ its binary representation in reverse order.\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkbmz0_b8.jl:23\nin expression starting at\
    \ /tmp/tmpkbmz0_b8.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal number must be positive\"\
    )\n    end\n    \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal\
    \ - 1)\n        binary += \"0\"\n    end\n    \n    binary += \"1\"\n    \n  \
    \  return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpdet31vh5.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmpdet31vh5.jl:35\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  Decimal number must be positive\n\
    \  Stacktrace:\n   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] decimal_to_binary(decimal::Int64)\n\
    \     @ Main /tmp/tmpdet31vh5.jl:17\n   [3] decimal_to_binary(decimal::Int64)\n\
    \     @ Main /tmp/tmpdet31vh5.jl:22\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpdet31vh5.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpdet31vh5.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpdet31vh5.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  Decimal number must be positive\n  Stacktrace:\n\
    \   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] decimal_to_binary(decimal::Int64)\n\
    \     @ Main /tmp/tmpdet31vh5.jl:17\n   [3] decimal_to_binary(decimal::Int64)\
    \ (repeats 33 times)\n     @ Main /tmp/tmpdet31vh5.jl:22\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpdet31vh5.jl:36 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpdet31vh5.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpdet31vh5.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  Decimal number must be positive\n  Stacktrace:\n\
    \   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] decimal_to_binary(decimal::Int64)\n\
    \     @ Main /tmp/tmpdet31vh5.jl:17\n   [3] decimal_to_binary(decimal::Int64)\
    \ (repeats 104 times)\n     @ Main /tmp/tmpdet31vh5.jl:22\n   [4] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpdet31vh5.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/"
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    for digit in decimal_to_binary(decimal)\n        binary\
    \ += digit\n    end\n    return binary\nend\n</code>\n<|/ a tags=julia,binary,decimal\
    \ |>\n<| a tags=julia,binary,decimal |>\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcs5rke7a.jl:21\nin expression starting at\
    \ /tmp/tmpcs5rke7a.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0: \n        decimal = -decimal\n\
    \        \n    decimal = decimal % 2\n    \n    while decimal > 0: \n        binary\
    \ = binary + \"0\"\n        decimal = decimal - 1\n    \n    decimal = decimal\
    \ % 2\n    \n    while decimal > 0: \n        binary = binary + \"1\"\n      \
    \  decimal = decimal - 1\n    \n    binary = binary + \"b\"\n    \n    return\
    \ binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\n\
    Write a function that will convert a binary number to a decimal number. Your function\
    \ should take in a string and return a Int64.\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdq04g87y.jl:19\nin expression starting at\
    \ /tmp/tmpdq04g87y.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        \n        binary = binary + \"0\"\n        decimal = decimal\
    \ // 2\n    \n    binary = binary + \"1\"\n    \n    return binary\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpfs367hrh.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfs367hrh.jl:1\n\
    in expression starting at /tmp/tmpfs367hrh.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"decimal must be between 2 and 64\"))\n    end\n    \n\
    \    if decimal < 2\n        throw(ArgumentError(\"decimal must be between 2 and\
    \ 64\"))\n    end\n    \n    if decimal > 64\n        throw(ArgumentError(\"decimal\
    \ must be between 2 and 64\"))\n    end\n    \n    binary = string(64 - decimal,\
    \ \"0\") # 64 because decimal is 64 bits\n    \n    return binary\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpdbo59rne.jl:36

    '
  stdout: "test set: Error During Test at /tmp/tmpdbo59rne.jl:39\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  ArgumentError: decimal must be between\
    \ 2 and 64\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpdbo59rne.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdbo59rne.jl:39 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdbo59rne.jl:38\ntest set:\
    \ Test Failed at /tmp/tmpdbo59rne.jl:40\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"320\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbo59rne.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbo59rne.jl:38\ntest set: Error\
    \ During Test at /tmp/tmpdbo59rne.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  ArgumentError: decimal must be between\
    \ 2 and 64\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpdbo59rne.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdbo59rne.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdbo59rne.jl:38\ntest set:\
    \ Test Failed at /tmp/tmpdbo59rne.jl:42\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"490\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbo59rne.jl:42 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu25481pz.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu25481pz.jl:1\n\
    in expression starting at /tmp/tmpu25481pz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0 \n        error(\"Decimal cannot be negative\")\n    else\
    \ if decimal > 2^(64 - 64) \n        error(\"Decimal cannot be greater than 2^64\"\
    )\n    else \n        binary = \"\"\n        for i = 64 - 64 + 1 downto 0 \n \
    \           if decimal >= i \n                binary += \"1\"\n              \
    \  decimal -= i \n            else \n                binary += \"0\"\n       \
    \         decimal -= i \n        binary += \"db\"\n        return binary\n   \
    \ end\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6l20mu1g.jl:17\nin expression starting at\
    \ /tmp/tmp6l20mu1g.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal > 0 \n        binary_string\
    \ = decimal_to_binary(decimal - 1)\n    \n    binary_string += if decimal < 10\
    \ \n        \"0\"\n    else\n        \"1\"\n    end\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that will convert a decimal number to binary and return the string\
    \ in reverse order.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpya2zz08y.jl:29\nin expression starting at\
    \ /tmp/tmpya2zz08y.jl:29\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"Decimal number must be positive\")\n \
    \   else if decimal > 2^(64-1)\n        error(\"Decimal number must be less than\
    \ 2^64\")\n    else\n        binary = \"\"\n        decimal = decimal % 2\n  \
    \      while decimal > 0\n            binary = binary + \"0\"\n            decimal\
    \ = decimal - 1\n        binary = binary + \"1\"\n        binary = binary + \"\
    db\"\n        return binary\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpby2a0_jy.jl:17\nin expression starting at\
    \ /tmp/tmpby2a0_jy.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    \n    binary_string +=\
    \ \"db\"\n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts binary numbers to\
    \ decimal numbers. You will need to use the function you wrote in the previous\
    \ exercise.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfnjd4ye8.jl:19\nin expression starting at /tmp/tmpfnjd4ye8.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"decimal number must be positive\")\n \
    \   end\n    binary = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n\
    \        binary = string(decimal) + binary\n        decimal = decimal / 2\n  \
    \  end\n    binary = string(decimal) + binary\n    binary = string(10) + binary\n\
    \    binary = string(1) + binary\n    return binary\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to a decimal number. The function\
    \ should take a\n    string as input, and return a Int64.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6xoasc67.jl:29\nin expression starting at\
    \ /tmp/tmp6xoasc67.jl:29\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else\n        binary = binary + \"\
    0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else\n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n      \
    \  binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else\n        binary = binary + \"\
    0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else\n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n      \
    \  binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else\n        binary = binary + \"\
    0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else\n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n      \
    \  binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else\n        binary = binary + \"\
    0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else\n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpabbb_nr0.jl:125\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpabbb_nr0.jl:1\n\
    in expression starting at /tmp/tmpabbb_nr0.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    if decimal < 2\n        binary_string\
    \ = \"0\"\n    else\n        binary_string = \"1\"\n    \n    binary_string *=\
    \ decimal_to_binary(decimal - 2)\n    binary_string += \"0\"\n    \n    return\
    \ binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a decimal number to binary and returns the\
    \ string in reverse order.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuw1b5osg.jl:27\nin expression starting at\
    \ /tmp/tmpuw1b5osg.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid decimal number\"\n    \n    decimal = decimal % 2\n    \n\
    \    while decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal\
    \ - 1\n    \n    binary = binary + \"1\"\n    \n    return binary\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_67ulewt.jl:1\nin expression starting at /tmp/tmp_67ulewt.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return binary\n    \n    decimal = decimal % 2\n    \n    while decimal !=\
    \ 0\n        binary = binary + \"0\"\n        decimal = decimal / 2\n    \n  \
    \  binary = binary + \"1\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a decimal number to\
    \ hexadecimal format. The function should return a string, with each character\
    \ representing a hexadecimal number. Each character in the string will be 0-9\
    \ or A-F. There will be an extra couple of characters '0x' at the beginning and\
    \ at the end of the string.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqajlwtyg.jl:31\nin expression starting at\
    \ /tmp/tmpqajlwtyg.jl:31\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else \n     \
    \   binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else \n     \
    \   binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \n    if decimal > 0 \n        binary = binary + \"1\"\n    else \n     \
    \   binary = binary + \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal\
    \ > 0 \n        binary = binary + \"1\"\n    else \n        binary = binary +\
    \ \"0\"\n    \n    decimal = decimal / 2\n    \n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else \n        binary = binary + \"0\"\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal > 0 \n        binary = binary + \"1\"\n\
    \    else \n        binary = binary + \"0\"\n    \n    decimal = decimal / 2\n\
    \    \nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmppz6uqxkz.jl:118\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppz6uqxkz.jl:1\n\
    in expression starting at /tmp/tmppz6uqxkz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal > 0 \n        binary = decimal_to_binary(decimal\
    \ - 1)\n        \n    binary += \"1\"\n    \n    if decimal < 0 \n        binary\
    \ += \"0\"\n        \n    return binary\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that will convert a binary number to a decimal number. The function\
    \ should take in a string and return a Int64.\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpytnuuq9e.jl:28\nin expression starting at\
    \ /tmp/tmpytnuuq9e.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        binary_string = \"Invalid input\"\n        return binary_string\n   \
    \ \n    binary_string = decimal_to_binary(decimal / 2)\n    \n    if decimal %\
    \ 2 == 0\n        binary_string += \"0\"\n    else\n        binary_string += \"\
    1\"\n    \n    return binary_string + binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts binary numbers to\
    \ decimal numbers. Your function should take in a string and return a number.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2o9t7mxk.jl:31\nin expression starting at\
    \ /tmp/tmp2o9t7mxk.jl:31\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  error(\"Invalid decimal number\")\n    end\n    \n    for index in 1:64\n \
    \       if decimal % 2 == 0\n            binary += \"0\"\n        else\n     \
    \       binary += \"1\"\n        end\n        decimal = decimal / 2\n    end\n\
    \    \n    binary = \"db\" + binary + \"db\"\n    \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<text>\nExercise 2\n\
    Write a function that converts a decimal number to binary and returns the string\
    \ in reverse order.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3pc6i_nz.jl:35\nin expression starting at\
    \ /tmp/tmp3pc6i_nz.jl:35\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal)\n \
    \       binary = binary + i\n    end\n    \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ binary to decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8yjlauif.jl:24\nin expression starting at\
    \ /tmp/tmp8yjlauif.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu25481pz.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu25481pz.jl:1\n\
    in expression starting at /tmp/tmpu25481pz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0 \n        error(\"decimal must be positive\")\n \
    \   \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    while decimal\
    \ != 0\n        binary = binary + \"0\"\n        decimal = decimal - 1\n    \n\
    \    binary = binary + \"1\"\n    \n    binary = binary + \"db\"\n    \n    return\
    \ binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\n\
    Write a function that converts binary to decimal.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmqbni197.jl:33\nin expression starting at\
    \ /tmp/tmpmqbni197.jl:33\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    return binary_string\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThis doesn't answer the question at all. OP wants\
    \ to know how to convert decimal to binary in Haskell, not how to convert decimal\
    \ to binary in Python.\n<|/ c |>\n<| c |>\nI answered the question as asked, which\
    \ was how to convert decimal to binary in Haskell. OP asked how to convert decimal\
    \ to binary in Python. Haskell and Python are two different languages. OP asked\
    \ how to convert decimal to binary in Haskell. Haskell and Python are two different\
    \ languages. OP asked how to convert decimal to binary in Python. Haskell and\
    \ Python are two different languages. OP asked how to convert decimal to binary\
    \ in Haskell. Haskell and Python are two different languages. OP asked how to\
    \ convert decimal to binary in Python. Haskell and Python are two different languages.\
    \ OP asked how to convert decimal to binary in Haskell. Haskell and Python are\
    \ two different languages. OP asked how to convert decimal to binary in Python.\
    \ Haskell and Python are two different languages. OP asked how to convert decimal\
    \ to binary in Haskell. Haskell and Python are two different languages. OP asked\
    \ how to convert decimal to binary in Python. Haskell and Python are two different\
    \ languages. OP asked how to convert decimal to binary in Haskell. Haskell and\
    \ Python are two different languages. OP asked how to convert decimal to binary\
    \ in Python. Haskell and Python are two different languages. OP asked how to convert\
    \ decimal to binary in Haskell. Haskell and Python are two different languages.\
    \ OP asked how to convert decimal to binary in Python. Haskell and Python are\
    \ two different languages. OP asked how to convert decimal to binary in Haskell.\
    \ Haskell and Python are two different languages. OP asked how to convert decimal\
    \ to binary in Python. Haskell and Python are two different languages. OP asked\
    \ how to convert decimal to binary in Haskell. Haskell and Python are two different\
    \ languages. OP asked how to convert decimal to binary in Python. Haskell and\
    \ Python are two different languages. OP asked how to convert decimal to binary\
    \ in Haskell. Haskel\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp15e70abg.jl:17\nin expression starting at /tmp/tmp15e70abg.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"decimal must be between 2 and 64\"))\n    end\n    \n\
    \    binary = string(64 - decimal, \"0\")\n    \n    return binary\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmp9sfmq5oq.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp9sfmq5oq.jl:31\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  ArgumentError: decimal must be between\
    \ 2 and 64\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmp9sfmq5oq.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9sfmq5oq.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9sfmq5oq.jl:30\ntest set:\
    \ Test Failed at /tmp/tmp9sfmq5oq.jl:32\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"320\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9sfmq5oq.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp9sfmq5oq.jl:30\ntest set: Error\
    \ During Test at /tmp/tmp9sfmq5oq.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  ArgumentError: decimal must be between\
    \ 2 and 64\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmp9sfmq5oq.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp9sfmq5oq.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp9sfmq5oq.jl:30\ntest set:\
    \ Test Failed at /tmp/tmp9sfmq5oq.jl:34\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"490\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp9sfmq5oq.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/"
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    \n    binary_string +=\
    \ \"db\"\n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that converts a binary string to\
    \ a decimal integer.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpua90if7o.jl:18\nin expression starting at /tmp/tmpua90if7o.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0 \n        error(\"Decimal\
    \ cannot be negative\")\n    \n    if decimal < 2 \n        error(\"Decimal cannot\
    \ be less than 2\")\n    \n    if decimal > 2^(64 - 1) \n        error(\"Decimal\
    \ cannot be greater than 2^(64 - 1)\")\n    \n    decimal = decimal % 2\n    \n\
    \    binary = binary + string(decimal, \"b\")\n    \n    if decimal > 0 \n   \
    \     binary = binary + \"b\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nProblem 3\nWrite a function that converts a binary number to\
    \ a decimal number. The function should take in a string\nwith each character\
    \ representing a binary number and return the decimal number. There will be an\
    \ extra couple of\ncharacters 'db' at the beginning and at the end of the string.\
    \ The extra characters are there to help with the format.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphh6tmzw9.jl:36\nin expression starting at\
    \ /tmp/tmphh6tmzw9.jl:36\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    binary_string += \"db\"\
    \n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that will convert a binary number to a decimal number. Your\
    \ function should take in a string and return a number.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1ksdzsz9.jl:26\nin expression starting at\
    \ /tmp/tmp1ksdzsz9.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"decimal number must be positive\")\n \
    \   else if decimal > 2^(64 - 64)\n        error(\"decimal number too large\"\
    )\n    else\n        binary = \"\"\n        while decimal != 0\n            binary\
    \ = binary + string(decimal % 2, base=2)\n            decimal = decimal / 2\n\
    \        end\n        binary = binary + \"db\"\n        binary = binary + string(decimal\
    \ % 2, base=2)\n        binary = binary + \"db\"\n        return binary\n    end\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that converts a binary number\
    \ to a decimal number. Your function should take in a string and return a Int64.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo8f6nbmj.jl:17\nin expression starting at\
    \ /tmp/tmpo8f6nbmj.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    \n    for digit in decimal\n        binary = binary\
    \ + string_to_binary(\"0\", digit)\n    end\n    \n    binary = binary + \"db\"\
    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to decimal form. The function\
    \ should take in a string and an Int64 number. The function should return the\
    \ decimal form of the binary number passed in.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpejygy2bm.jl:24\nin expression starting at\
    \ /tmp/tmpejygy2bm.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts a decimal number to binary and returns the string in\
    \ reverse order.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt3ckdl3t.jl:25\nin expression starting at\
    \ /tmp/tmpt3ckdl3t.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"Decimal number must be positive\")\n \
    \   end\n    binary = \"\"\n    while decimal > 0\n        binary = string(decimal\
    \ % 2) + binary\n        decimal = decimal / 2\n    end\n    binary = string(decimal)\
    \ + binary\n    binary = string(binary)\n    binary = string(binary)\n    binary\
    \ = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(binary)\n    binary = string(binary)\n    binary = string(binary)\n\
    \    binary = string(\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph490oiq7.jl:92\nin expression starting at\
    \ /tmp/tmph490oiq7.jl:92\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal number must be positive\"\
    )\n    end\n    \n    binary = \"\"\n    \n    for digit in decimal\n        if\
    \ digit == 0\n            binary += \"0\"\n        elseif digit == 1\n       \
    \     binary += \"1\"\n        else\n            error(\"Decimal number must be\
    \ 0 or 1\")\n        end\n    end\n    \n    binary = binary[2:end]\n    \n  \
    \  return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpew26q3r9.jl:38

    '
  stdout: "test set: Error During Test at /tmp/tmpew26q3r9.jl:41\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpew26q3r9.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpew26q3r9.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpew26q3r9.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpew26q3r9.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  Decimal number must be 0 or 1\n  Stacktrace:\n\
    \   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] decimal_to_binary(decimal::Int64)\n\
    \     @ Main /tmp/tmpew26q3r9.jl:28\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpew26q3r9.jl:42 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpew26q3r9.jl:40\ntest set:\
    \ Error During Test at /tmp/tmpew26q3r9.jl:43\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  Decimal number must be 0 or 1\n  Stacktrace:\n\
    \   [1] error(s::String)\n     @ Base ./error.jl:33\n   [2] decimal_to_binary(decimal::Int64)\n\
    \     @ Main /tmp/tmpew26q3r9.jl:28\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpew26q3r9.jl:43 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpew26q3r9.jl:40\ntest set:\
    \ Error During Tes"
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = \"0\"\
    \n    \n    if decimal < 16:\n        binary = \"0\" + binary\n    \n    if decimal\
    \ < 256:\n        binary = \"1\" + binary\n    \n    if decimal < 65536:\n   \
    \     binary = \"10\" + binary\n    \n    if decimal < 16777216:\n        binary\
    \ = \"11\" + binary\n    \n    if decimal < 4294967296:\n        binary = \"100\"\
    \ + binary\n    \n    if decimal < 18446744073709551616:\n        binary = \"\
    101\" + binary\n    \n    if decimal < 9223372036854775808:\n        binary =\
    \ \"110\" + binary\n    \n    if decimal < 18446744073709551616:\n        binary\
    \ = \"111\" + binary\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that will convert a decimal number\
    \ to hexadecimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphimfivz7.jl:19\nin expression starting at\
    \ /tmp/tmphimfivz7.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  error(\"Invalid decimal number\")\n    end\n    \n    for index in 1:64\n \
    \       if decimal % 2 == 0\n            binary += \"0\"\n        else\n     \
    \       binary += \"1\"\n        end\n        decimal = decimal / 2\n    end\n\
    \    \n    binary = binary + \"db\"\n    \n    return binary\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a decimal number to hexadecimal format. The function should return a string,\
    \ with each character representing a hexadecimal number. Each character in the\
    \ string will be 0-9 or A-F. There will be an extra couple of characters 'h' at\
    \ the beginning and at the end of the string.\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyxwl5hw0.jl:35\nin expression starting at\
    \ /tmp/tmpyxwl5hw0.jl:35\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"decimal must be positive\")\n  \
    \  \n    binary = \"\"\n    \n    while decimal > 0\n        binary = string(decimal\
    \ % 2) + binary\n        decimal = decimal / 2\n    end\n    \n    binary = string(decimal)\
    \ + binary\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary number to\
    \ decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3noq7md1.jl:30\nin expression starting at\
    \ /tmp/tmp3noq7md1.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    # Write your solution here\n    \n   \
    \ return binary_string\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2uucagvl.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp2uucagvl.jl:26\n  Expression: candidate(0)\
    \ == \"db0db\"\n   Evaluated: \"\" == \"db0db\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2uucagvl.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2uucagvl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2uucagvl.jl:27\n  Expression: candidate(32) == \"db100000db\"\
    \n   Evaluated: \"\" == \"db100000db\"\nStacktrace:\n [1] macro expansion\n  \
    \ @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2uucagvl.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2uucagvl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2uucagvl.jl:28\n  Expression: candidate(103) == \"db1100111db\"\
    \n   Evaluated: \"\" == \"db1100111db\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2uucagvl.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2uucagvl.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp2uucagvl.jl:29\n  Expression: candidate(15) == \"db1111db\"\
    \n   Evaluated: \"\" == \"db1111db\"\nStacktrace:\n [1] macro expansion\n   @\
    \ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2uucagvl.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2uucagvl.jl:25\nTest Summary:\
    \ | Fail  Total\ntest set      |    4      4\n"
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"Decimal number must be between 2 and 64\"))\n    end\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmponx64mm9.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmponx64mm9.jl:1\n\
    in expression starting at /tmp/tmponx64mm9.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    decimal = decimal % 2\n    \n  \
    \  if decimal > 0 \n        binary_string = \"1\" + binary_string\n    else\n\
    \        binary_string = \"0\" + binary_string\n    \n    decimal = decimal /\
    \ 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    \n    decimal =\
    \ decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    \n    decimal =\
    \ decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    \n    decimal =\
    \ decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    \n    decimal =\
    \ decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    \n    decimal =\
    \ decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    \n    decimal =\
    \ decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    \n    decimal =\
    \ decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    \n    decimal =\
    \ decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    \n    decimal =\
    \ decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    \n    decimal =\
    \ decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    \n    decimal =\
    \ decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    \n    decimal =\
    \ decimal / 2\n    \n    if decimal > 0 \n        binary_string = \"1\" + binary_string\n\
    \    else\n        binary_string = \"0\" + binary_string\n    \nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpugygnkcn.jl:111\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpugygnkcn.jl:1\n\
    in expression starting at /tmp/tmpugygnkcn.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    if decimal < 16:\n        binary =\
    \ binary + \"0\"\n        return binary\n    \n    if decimal < 256:\n       \
    \ binary = binary + \"1\"\n        return binary\n    \n    if decimal < 65536:\n\
    \        binary = binary + \"0\"\n        binary = binary + \"1\"\n        return\
    \ binary\n    \n    if decimal < 4294967296:\n        binary = binary + \"1\"\n\
    \        binary = binary + \"0\"\n        return binary\n    \n    if decimal\
    \ < 18446744073709551616:\n        binary = binary + \"0\"\n        binary = binary\
    \ + \"1\"\n        binary = binary + \"0\"\n        return binary\n    \n    if\
    \ decimal < 9223372036854775808:\n        binary = binary + \"1\"\n        binary\
    \ = binary + \"0\"\n        binary = binary + \"1\"\n        binary = binary +\
    \ \"0\"\n        return binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = binary + \"0\"\n        binary = binary + \"1\"\n        binary\
    \ = binary + \"0\"\n        binary = binary + \"1\"\n        binary = binary +\
    \ \"0\"\n        return binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = binary + \"1\"\n        binary = binary + \"0\"\n        binary\
    \ = binary + \"1\"\n        binary = binary + \"0\"\n        binary = binary +\
    \ \"1\"\n        binary = binary + \"0\"\n        return binary\n    \n    if\
    \ decimal < 18446744073709551616:\n        binary = binary + \"0\"\n        binary\
    \ = binary + \"1\"\n        binary = binary + \"0\"\n        binary = binary +\
    \ \"1\"\n        binary = binary + \"0\"\n        binary = binary + \"1\"\n  \
    \      binary = binary + \"0\"\n        return binary\n    \n    if decimal <\
    \ 9223372036854775808:\n        binary = binary + \"1\"\n        binary = binary\
    \ + \"0\"\n        binary = binary + \"1\"\n        binary = binary + \"0\"\n\
    \        binary = binary + \"1\"\n        binary = binary + \"0\"\n        binary\
    \ = binary + \"1\"\n        binary = binary + \"0\"\n        return binary\n \
    \   \n    if decimal < 18446744073709551616:\n        binary = binary + \"0\"\n\
    \        binary = binary + \"1\"\n        binary = binary + \"0\"\n        binary\
    \ = binary + \"1\"\n        binary = binary + \"0\"\n        binary = \nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl5k4bis4.jl:19\nin expression starting at\
    \ /tmp/tmpl5k4bis4.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal > 0 \n        binary_string\
    \ = \"1\"\n    else \n        binary_string = \"0\"\n    \n    binary_string +=\
    \ decimal_to_binary(decimal - 1)\n    \n    return binary_string\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<text>\nExercise 3\n\
    Write a function that converts a decimal number to binary and returns the string\
    \ in reverse order.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpunn_izue.jl:27\nin expression starting at\
    \ /tmp/tmpunn_izue.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    \n    return binary_string\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary string to a decimal number. The function should take in a string and\
    \ return a Int64.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq7ee4441.jl:23\nin expression starting at\
    \ /tmp/tmpq7ee4441.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal:\n        if\
    \ digit == 0 or digit == 1:\n            binary_string += digit\n        else:\n\
    \            binary_string += \"0\"\n    \n    binary_string += \"db\"\n    \n\
    \    return binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to decimal form. Your function\
    \ should take in a string and return a string.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpum3jwbdr.jl:19\nin expression starting at\
    \ /tmp/tmpum3jwbdr.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2:\n        binary_string\
    \ = \"0\"\n        return binary_string\n    \n    binary_string = \"1\"\n   \
    \ \n    decimal = decimal / 2\n    \n    while decimal > 0:\n        binary_string\
    \ = \"0\" + binary_string\n        decimal = decimal / 2\n    \n    return binary_string\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn6z3briz.jl:19\nin expression starting at\
    \ /tmp/tmpn6z3briz.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        error(\"Invalid decimal number\")\n    end\n    \n    for digit in decimal_to_binary(decimal\
    \ - 2)\n        binary_string += \"0\"\n    end\n    \n    for digit in decimal_to_binary(decimal\
    \ - 1)\n        binary_string += \"1\"\n    end\n    \n    binary_string += \"\
    db\"\n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that converts a binary number to\
    \ decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0a4vgnpd.jl:34\nin expression starting at\
    \ /tmp/tmp0a4vgnpd.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return binary\n    \n    decimal = decimal % 2\n    \n    if decimal < 10\n\
    \        binary = \"0\"\n    \n    binary = binary + binary\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal < 10\n        binary = \"0\" + binary\n\
    \    \n    binary = binary + binary\n    \n    decimal = decimal / 2\n    \n \
    \   if decimal < 10\n        binary = \"0\" + binary\n    \n    binary = binary\
    \ + binary\n    \n    decimal = decimal / 2\n    \n    if decimal < 10\n     \
    \   binary = \"0\" + binary\n    \n    binary = binary + binary\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal < 10\n        binary = \"0\" + binary\n\
    \    \n    binary = binary + binary\n    \n    decimal = decimal / 2\n    \n \
    \   if decimal < 10\n        binary = \"0\" + binary\n    \n    binary = binary\
    \ + binary\n    \n    decimal = decimal / 2\n    \n    if decimal < 10\n     \
    \   binary = \"0\" + binary\n    \n    binary = binary + binary\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal < 10\n        binary = \"0\" + binary\n\
    \    \n    binary = binary + binary\n    \n    decimal = decimal / 2\n    \n \
    \   if decimal < 10\n        binary = \"0\" + binary\n    \n    binary = binary\
    \ + binary\n    \n    decimal = decimal / 2\n    \n    if decimal < 10\n     \
    \   binary = \"0\" + binary\n    \n    binary = binary + binary\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal < 10\n        binary = \"0\" + binary\n\
    \    \n    binary = binary + binary\n    \n    decimal = decimal / 2\n    \n \
    \   if decimal < 10\n        binary = \"0\" + binary\n    \n    binary = binary\
    \ + binary\n    \n    decimal = decimal / 2\n    \n    if decimal < 10\n     \
    \   binary = \"0\" + binary\n    \n    binary = binary + binary\n    \n    decimal\
    \ = decimal / 2\n    \n    if decimal < 10\n        binary = \"0\" + binary\n\
    \    \n    binary = binary + binary\n    \n    decimal = decimal / 2\n    \n \
    \   if decimal < 10\n        binary = \"0\" + binary\n    \n    binary = binary\
    \ + binary\n    \n    decimal = decimal / 2\n    \n    if decimal \nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd31ofg7m.jl:1\nin expression starting at /tmp/tmpd31ofg7m.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal > 0 \n        binary = decimal_to_binary(decimal\
    \ - 1)\n    end\n    \n    binary = binary + string(decimal, \"b\")\n    \n  \
    \  return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmplzo4ixoi.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmplzo4ixoi.jl:31\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmplzo4ixoi.jl:22\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplzo4ixoi.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplzo4ixoi.jl:30\ntest set:\
    \ Error During Test at /tmp/tmplzo4ixoi.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmplzo4ixoi.jl:22\n\
    \   [2] decimal_to_binary(decimal::Int64) (repeats 32 times)\n     @ Main /tmp/tmplzo4ixoi.jl:19\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmplzo4ixoi.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmplzo4ixoi.jl:30\ntest set:\
    \ Error During Test at /tmp/tmplzo4ixoi.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmplzo4ixoi.jl:22\n\
    \   [2] decimal_to_binary(decimal::Int6"
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    \n    for digit in decimal\n   \
    \     binary_string += if digit == 0 then \"0\" else \"1\"\n    end\n    \n  \
    \  binary_string += \"db\"\n    \n    return binary_string\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that converts a decimal number to a binary number\
    \ in reverse order. \nThe function should return a string, with each character\
    \ representing a binary number. Each character in the string will be '0' or '1'.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpb6lurpl1.jl:20\nin expression starting at /tmp/tmpb6lurpl1.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu25481pz.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu25481pz.jl:1\n\
    in expression starting at /tmp/tmpu25481pz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal > 0 \n        binary = decimal_to_binary(decimal\
    \ - 1)\n        \n    binary += \"1\"\n    \n    if decimal < 0 \n        binary\
    \ = binary + \"0\"\n        \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary number to\
    \ decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi8mwi0ka.jl:28\nin expression starting at\
    \ /tmp/tmpi8mwi0ka.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0 \n        error(\"decimal\
    \ must be positive\")\n    \n    if decimal > 2^(64 - 1) \n        error(\"decimal\
    \ must be less than 2^64\")\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal //\
    \ 2\n    \n    binary = binary + \"1\"\n    \n    return binary\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoapl3nkr.jl:1\nin expression starting at /tmp/tmpoapl3nkr.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        error(\"Invalid input\")\n    end\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpof_hqexg.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpof_hqexg.jl:1\n\
    in expression starting at /tmp/tmpof_hqexg.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2:\n        binary_string\
    \ = \"0\"\n    \n    if decimal < 16:\n        binary_string = \"0\" + binary_string\n\
    \    \n    if decimal < 256:\n        binary_string = \"1\" + binary_string\n\
    \    \n    if decimal < 65536:\n        binary_string = \"1\" + binary_string\
    \ + \"0\"\n    \n    if decimal < 4294967296:\n        binary_string = \"1\" +\
    \ binary_string + \"0\"\n    \n    if decimal < 18446744073709551616:\n      \
    \  binary_string = \"1\" + binary_string + \"0\"\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1\" + binary_string + \"0\"\n    \n    if decimal <\
    \ 18446744073709551616:\n        binary_string = \"1\" + binary_string + \"0\"\
    \n    \n    if decimal < 9223372036854775808:\n        binary_string = \"1\" +\
    \ binary_string + \"0\"\n    \n    if decimal < 18446744073709551616:\n      \
    \  binary_string = \"1\" + binary_string + \"0\"\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1\" + binary_string + \"0\"\n    \n    if decimal <\
    \ 18446744073709551616:\n        binary_string = \"1\" + binary_string + \"0\"\
    \n    \n    if decimal < 9223372036854775808:\n        binary_string = \"1\" +\
    \ binary_string + \"0\"\n    \n    if decimal < 18446744073709551616:\n      \
    \  binary_string = \"1\" + binary_string + \"0\"\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1\" + binary_string + \"0\"\n    \n    if decimal <\
    \ 18446744073709551616:\n        binary_string = \"1\" + binary_string + \"0\"\
    \n    \n    if decimal < 9223372036854775808:\n        binary_string = \"1\" +\
    \ binary_string + \"0\"\n    \n    if decimal < 18446744073709551616:\n      \
    \  binary_string = \"1\" + binary_string + \"0\"\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1\" + binary_string + \"0\"\n    \n    if decimal <\
    \ 18446744073709551616:\n        binary_string = \"1\" + binary_string + \"0\"\
    \n    \n    if decimal < 922337203685477\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpynmfmsig.jl:19\nin expression starting at\
    \ /tmp/tmpynmfmsig.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = \"0\"\
    \n    \n    if decimal < 16:\n        binary = \"0\" + binary\n    \n    if decimal\
    \ < 256:\n        binary = \"1\" + binary\n    \n    if decimal < 65536:\n   \
    \     binary = \"10\" + binary\n    \n    if decimal < 4294967296:\n        binary\
    \ = \"11\" + binary\n    \n    if decimal < 18446744073709551616:\n        binary\
    \ = \"100\" + binary\n    \n    if decimal < 9223372036854775808:\n        binary\
    \ = \"101\" + binary\n    \n    if decimal < 18446744073709551616:\n        binary\
    \ = \"110\" + binary\n    \n    if decimal < 9223372036854775808:\n        binary\
    \ = \"111\" + binary\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(0)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-1)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-2)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-3)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-4)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-5)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-6)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-7)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-8)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-9)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-10)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-11)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-12)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-13)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-14)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-16)\n</cell>\n<code language=julia-1.5>\ndecimal_to_\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1zgqdol2.jl:19\nin expression starting at\
    \ /tmp/tmp1zgqdol2.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return \"Invalid input\"\n    \n    binary_string = decimal_to_binary(decimal\
    \ / 2)\n    \n    if decimal % 2 == 0\n        binary_string += \"0\"\n    else\n\
    \        binary_string += \"1\"\n    \n    return binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb3kxihg2.jl:1\nin expression starting at /tmp/tmpb3kxihg2.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0\n        error \"Decimal\
    \ cannot be negative\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ > 1\n        error \"Decimal cannot be greater than 1\"\n    \n    binary =\
    \ decimal + binary\n    \n    while decimal > 1\n        decimal = decimal / 2\n\
    \        binary = decimal + binary\n    \n    binary = binary + \"db\"\n    \n\
    \    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to a decimal number. The function\
    \ should take in a binary number as a\n    string and return the decimal number\
    \ represented by the binary number. The function should raise an error if\n  \
    \  the binary number is not in binary format. There will be an extra couple of\
    \ characters 'db' at the beginning\n    and at the end of the string. The extra\
    \ characters are there to help with the format.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpe2r0842_.jl:19\nin expression starting at /tmp/tmpe2r0842_.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"decimal must be between 2 and 64\"))\n    end\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpepl7stzj.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpepl7stzj.jl:1\n\
    in expression starting at /tmp/tmpepl7stzj.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that will convert a binary number to a decimal number. The function\
    \ should take in a string and return a Int64.\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiggn_vh5.jl:24\nin expression starting at\
    \ /tmp/tmpiggn_vh5.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that converts binary numbers to decimal numbers. A binary number\
    \ consists of a\nstring of 1s and 0s, where each character represents either a\
    \ '1' or a '0'.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx39liqwl.jl:24\nin expression starting at\
    \ /tmp/tmpx39liqwl.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"Decimal number must be between 2 and 64\"))\n    \n \
    \   if decimal < 10\n        binary = binary + \"0\"\n    else\n        binary\
    \ = binary + \"1\"\n    \n    binary = binary + decimal_to_binary(decimal - 2)\n\
    \    \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8fyc0ps8.jl:1\nin expression starting at /tmp/tmp8fyc0ps8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        error(\"Invalid decimal number\")\n    end\n    \n    for index in 1:64\n\
    \        if decimal % 2 == 0\n            binary_string += \"0\"\n        else\n\
    \            binary_string += \"1\"\n        end\n        decimal = decimal /\
    \ 2\n    end\n    \n    binary_string += \"db\"\n    \n    return binary_string\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that converts a binary number\
    \ to decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppanvtrlb.jl:35\nin expression starting at\
    \ /tmp/tmppanvtrlb.jl:35\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"Decimal number must be between 2 and 64\"))\n    end\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmponx64mm9.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmponx64mm9.jl:1\n\
    in expression starting at /tmp/tmponx64mm9.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2:\n        binary_string\
    \ = \"0\"\n    \n    if decimal < 16:\n        binary_string = \"1\" + binary_string\n\
    \    \n    if decimal < 256:\n        binary_string = \"1\" + binary_string\n\
    \    \n    if decimal < 65536:\n        binary_string = \"1\" + binary_string\n\
    \    \n    if decimal < 16777216:\n        binary_string = \"1\" + binary_string\n\
    \    \n    if decimal < 4294967296:\n        binary_string = \"1\" + binary_string\n\
    \    \n    if decimal < 18446744073709551616:\n        binary_string = \"1\" +\
    \ binary_string\n    \n    if decimal < 9223372036854775808:\n        binary_string\
    \ = \"1\" + binary_string\n    \n    if decimal < 18446744073709551616:\n    \
    \    binary_string = \"1\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 18446744073709551616:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 18446744073709551616:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 18446744073709551616:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 18446744073709551616:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 18446744073709551616:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 18446744073709551616:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if decimal < 9223372036854775808:\n\
    \        binary_string = \"1\" + binary_string\n    \n    if \nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2xhp8uly.jl:19\nin expression starting at\
    \ /tmp/tmp2xhp8uly.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  error(\"Invalid decimal number\")\n    end\n    \n    for i = 1:64\n      \
    \  if decimal >= 2\n            binary += \"0\"\n            decimal -= 2\n  \
    \      else\n            binary += \"1\"\n            decimal -= 1\n        end\n\
    \    end\n    \n    binary = binary[2:end]\n    \n    if binary == \"0\"\n   \
    \     binary = binary[1:end]\n    end\n    \n    binary = binary[3:end]\n    \n\
    \    if binary == \"0\"\n        binary = binary[2:end]\n    end\n    \n    binary\
    \ = binary[1:end]\n    \n    if binary == \"0\"\n        binary = binary[2:end]\n\
    \    end\n    \n    binary = binary[2:end]\n    \n    if binary == \"0\"\n   \
    \     binary = binary[2:end]\n    end\n    \n    binary = binary[2:end]\n    \n\
    \    if binary == \"0\"\n        binary = binary[2:end]\n    end\n    \n    binary\
    \ = binary[2:end]\n    \n    if binary == \"0\"\n        binary = binary[2:end]\n\
    \    end\n    \n    binary = binary[2:end]\n    \n    if binary == \"0\"\n   \
    \     binary = binary[2:end]\n    end\n    \n    binary = binary[2:end]\n    \n\
    \    if binary == \"0\"\n        binary = binary[2:end]\n    end\n    \n    binary\
    \ = binary[2:end]\n    \n    if binary == \"0\"\n        binary = binary[2:end]\n\
    \    end\n    \n    binary = binary[2:end]\n    \n    if binary == \"0\"\n   \
    \     binary = binary[2:end]\n    end\n    \n    binary = binary[2:end]\n    \n\
    \    if binary == \"0\"\n        binary = binary[2:end]\n    end\n    \n    binary\
    \ = binary[2:end]\n    \n    if binary == \"0\"\n        binary = binary[2:end]\n\
    \    end\n    \n    binary = binary[2:end]\n    \n    if binary == \"0\"\n   \
    \     binary = binary[2:end]\n    end\n    \n    binary = binary[2:end]\n    \n\
    \    if binary == \"0\"\n        binary = binary[2:end]\n    end\n    \n    binary\
    \ = binary[2:end]\n    \n    if binary == \"0\"\n        binary = binary[2:end]\n\
    \    end\n    \n    binary = binary[2:end]\n    \n    if binary == \"0\"\n   \
    \     binary = binary[2:end]\n    end\n    \n    binary = binary[2:end]\n    \n\
    \    if binary == \"0\"\n        binary = binary[2:end]\n    end\n    \n    binary\
    \ = binary[2:end]\n    \n    if binary == \"0\"\n        binary = binary[2:end]\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyyb0l2m4.jl:1\nin expression starting at /tmp/tmpyyb0l2m4.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal - 2\n    \n    while\
    \ decimal >= 2:\n        binary = binary + \"1\"\n        decimal = decimal -\
    \ 2\n    \n    binary = binary + \"0\"\n    \n    return binary\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd0r7jodu.jl:19\nin expression starting at\
    \ /tmp/tmpd0r7jodu.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    \n    return binary_string\n</code>\n<|/ a tags=recursion,haskell,string\
    \ |>\n<| c |>\nI like your solution, but I wonder why you used `map` instead of\
    \ `fold`.\n<|/ c |>\n<| c |>\nI used map because I wanted to use recursion to\
    \ solve this problem. foldl is more appropriate for this type of problem.\n<|/\
    \ c |>\n<| c |>\n`foldl` is more appropriate for folding over lists, not for folding\
    \ over strings. `foldl` will perform better than `map`.\n<|/ c |>\n<| c |>\nI\
    \ agree with you that foldl is more appropriate for folding over lists. However,\
    \ I wanted to use recursion to solve this problem. foldl is more appropriate for\
    \ this type of problem.\n<|/ c |>\n<| c |>\nI agree with you that foldl is more\
    \ appropriate for folding over lists. However, I wanted to use recursion to solve\
    \ this problem. foldl is more appropriate for this type of problem.\n<|/ c |>\n\
    <| a dscore=0 |>\n<code>\nimport Data.List\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxua3u3jg.jl:22\nin expression starting at\
    \ /tmp/tmpxua3u3jg.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    # Write your code here\n    \n    return\
    \ binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a decimal number to its binary equivalent\
    \ without using any string functions. \nThe function should take in a decimal\
    \ number and return a binary string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5c8ior3h.jl:21\nin expression starting at\
    \ /tmp/tmp5c8ior3h.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that converts binary numbers to decimal numbers. Your function should\
    \ take in a string and return a string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwp9j054z.jl:25\nin expression starting at\
    \ /tmp/tmpwp9j054z.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    \n    return binary_string\
    \ + \"db\"\nend\n</cell>\n<text>\nExercise 3\nWrite a function that converts binary\
    \ numbers to decimal numbers.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw47y4h83.jl:19\nin expression starting at /tmp/tmpw47y4h83.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal\n        binary =\
    \ binary + str((digit % 2) == 0)\n        digit = digit // 2\n    \n    binary\
    \ = binary + \"db\"\n    \n    return binary\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzyl6ujew.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzyl6ujew.jl:1\n\
    in expression starting at /tmp/tmpzyl6ujew.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    \n    return binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpg36_qcqe.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpg36_qcqe.jl:1\n\
    in expression starting at /tmp/tmpg36_qcqe.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = \"0\"\
    \n    \n    if decimal < 16:\n        binary = \"0\" + binary\n    \n    if decimal\
    \ < 256:\n        binary = \"1\" + binary\n    \n    if decimal < 65536:\n   \
    \     binary = \"10\" + binary\n    \n    if decimal < 16777216:\n        binary\
    \ = \"100\" + binary\n    \n    if decimal < 4294967296:\n        binary = \"\
    1000\" + binary\n    \n    if decimal < 18446744073709551616:\n        binary\
    \ = \"10000\" + binary\n    \n    if decimal < 9223372036854775808:\n        binary\
    \ = \"100000\" + binary\n    \n    if decimal < 18446744073709551616:\n      \
    \  binary = \"1000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"10000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"100000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"1000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"10000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"100000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"1000000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"10000000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"100000000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"1000000000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"10000000000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"100000000000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"1000000000000000000\" + binary\n    \n    if decimal < 9223372036854775808:\n\
    \        binary = \"10000000000000000000\" + binary\n    \n    if decimal < 18446744073709551616:\n\
    \        binary = \"100000000000000000000\" + binary\n\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd1v7ms13.jl:19\nin expression starting at\
    \ /tmp/tmpd1v7ms13.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"decimal number must be positive\"\
    )\n    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwdpc3gon.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwdpc3gon.jl:1\n\
    in expression starting at /tmp/tmpwdpc3gon.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal:\n        if\
    \ digit == 1:\n            binary_string += \"1\"\n        else:\n           \
    \ binary_string += \"0\"\n    \n    return binary_string + \"db\"\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7ycrkw6_.jl:19\nin expression starting at\
    \ /tmp/tmp7ycrkw6_.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    end\n    return binary_string\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to decimal form. Your function should take in a binary string\
    \ and return the decimal number. There will be an extra couple of characters 'db'\
    \ at the beginning and at the end of the string.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptuxpwh85.jl:22\nin expression starting at\
    \ /tmp/tmptuxpwh85.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"Decimal number must be positive\")\n \
    \   else if decimal > 2 ** 64\n        error(\"Decimal number too large\")\n \
    \   else\n        binary = \"\"\n        while decimal > 0\n            binary\
    \ = binary + \"0\"\n            decimal = decimal - 1\n        while decimal >=\
    \ 2\n            binary = binary + \"1\"\n            decimal = decimal / 2\n\
    \        binary = binary + \"db\"\n        return binary\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe56s2r5q.jl:17\nin expression starting at\
    \ /tmp/tmpe56s2r5q.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal > 0\n        decimal = decimal / 2\n        binary = \"0\" + binary\n\
    \    \n    decimal = decimal % 2\n    \n    while decimal > 0\n        decimal\
    \ = decimal / 2\n        binary = \"1\" + binary\n    \n    binary = binary[2:]\n\
    \    \n    return \"db\" + binary + \"db\"\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nProblem 3\nWrite a function that converts a binary number to\
    \ a decimal number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing last argument in \"2:\" range expression\
    \ \nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxqpy3u5s.jl:33\nin expression\
    \ starting at /tmp/tmpxqpy3u5s.jl:33\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"Decimal number must be positive\")\n \
    \   else if decimal > 2^(64 - 64)\n        error(\"Decimal number must be less\
    \ than 2^64\")\n    else\n        binary = \"\"\n        for i = 64 - 64 downto\
    \ 0\n            binary = binary + string(64 - i - 1, string(64, 0)[decimal ==\
    \ i])\n        end\n        binary = binary + \"db\"\n        return binary\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(0)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-1)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-32)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-0)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-64)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-64)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-64)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-64)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-64)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-64)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-64)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-64)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-64)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-64)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-64)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-64)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-64)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-64)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-64)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(-64)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(-64)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(-64)\n\
    \nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj3l83b18.jl:17\nin expression starting at\
    \ /tmp/tmpj3l83b18.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal > 0 \n        binary = decimal_to_binary(decimal\
    \ - 1)\n        \n    binary += \"1\"\n    \n    if decimal < 0 \n        binary\
    \ += \"0\"\n        \n    return binary\n</code>\n<|/ a tags=recursion,haskell,binary,decimal\
    \ |>\n<| c |>\nThis doesn't work for negative numbers. Try `decimal_to_binary\
    \ (-15)`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I fixed the code so\
    \ it now works for negative numbers. I didn't realize that negative numbers would\
    \ cause issues.\n<|/ c |>\n<| c |>\nThanks for your answer! I understand your\
    \ solution and it works perfectly for positive numbers. However, when I try it\
    \ for negative numbers, it gives me the wrong result. For example, when I try\
    \ `decimal_to_binary (-15)`, it gives me `\"db1111db\"` instead of `\"db111111db\"\
    `. Do you know why this is?\n<|/ c |>\n<| c |>\nI fixed the code so it now works\
    \ for negative numbers. I didn't realize that negative numbers would cause issues.\n\
    <|/ c |>\n<| c |>\nThanks for your answer! I understand your solution and it works\
    \ perfectly for positive numbers. However, when I try it for negative numbers,\
    \ it gives me the wrong result. For example, when I try `decimal_to_binary (-15)`,\
    \ it gives me `\"db1111db\"` instead of `\"db111111db\"`. Do you know why this\
    \ is?\n<|/ c |>\n<| a dscore=2 |>\n<code>\nimport Data.List\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2aqsnwk8.jl:27\nin expression starting at\
    \ /tmp/tmp2aqsnwk8.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0: \n        decimal = -decimal\n\
    \        \n    decimal = decimal % 2\n    \n    while decimal > 0: \n        binary\
    \ = binary + \"0\"\n        decimal = decimal - 1\n    \n    decimal = decimal\
    \ / 2\n    \n    while decimal > 0: \n        binary = binary + \"1\"\n      \
    \  decimal = decimal - 1\n    \n    return binary + \"db\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk79rvu33.jl:19\nin expression starting at\
    \ /tmp/tmpk79rvu33.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal > 0:\n        decimal = decimal // 2\n        binary = binary + \"1\"\
    \n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to decimal form. The function\
    \ should take in a string and return a string.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsdx8x3lg.jl:19\nin expression starting at\
    \ /tmp/tmpsdx8x3lg.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0 \n        return \"0\"\n    else \n        binary = \"\
    \"\n        decimal %= 2\n        while decimal > 0 \n            binary += \"\
    1\"\n            decimal -= 1\n        binary += \"0\"\n        return binary\n\
    </code>\n<|/ a tags=julia |>\n<| a tags=julia |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk_y7gomp.jl:25\nin expression starting at\
    \ /tmp/tmpk_y7gomp.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    if decimal > 0 \n      \
    \  binary = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    decimal\
    \ = decimal / 2\n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n\
    \        binary = binary + \"0\"\n    decimal = decimal / 2\n    if decimal >\
    \ 0 \n        binary = binary + \"1\"\n    else\n        binary = binary + \"\
    0\"\n    decimal = decimal / 2\n    if decimal > 0 \n        binary = binary +\
    \ \"1\"\n    else\n        binary = binary + \"0\"\n    decimal = decimal / 2\n\
    \    if decimal > 0 \n        binary = binary + \"1\"\n    else\n        binary\
    \ = binary + \"0\"\n    decimal = decimal / 2\n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    decimal = decimal\
    \ / 2\n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n      \
    \  binary = binary + \"0\"\n    decimal = decimal / 2\n    if decimal > 0 \n \
    \       binary = binary + \"1\"\n    else\n        binary = binary + \"0\"\n \
    \   decimal = decimal / 2\n    if decimal > 0 \n        binary = binary + \"1\"\
    \n    else\n        binary = binary + \"0\"\n    decimal = decimal / 2\n    if\
    \ decimal > 0 \n        binary = binary + \"1\"\n    else\n        binary = binary\
    \ + \"0\"\n    decimal = decimal / 2\n    if decimal > 0 \n        binary = binary\
    \ + \"1\"\n    else\n        binary = binary + \"0\"\n    decimal = decimal /\
    \ 2\n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n        binary\
    \ = binary + \"0\"\n    decimal = decimal / 2\n    if decimal > 0 \n        binary\
    \ = binary + \"1\"\n    else\n        binary = binary + \"0\"\n    decimal = decimal\
    \ / 2\n    if decimal > 0 \n        binary = binary + \"1\"\n    else\n      \
    \  binary = binary + \"0\"\n    decimal = decimal / 2\n    if decimal > 0 \n \
    \       binary = binary + \"1\"\n    else\n        binary = binary + \"0\"\n \
    \   decimal = decimal / 2\n    if decimal > 0 \n        binary = binary + \"1\"\
    \n    else\n        binary = binary + \"0\"\n    decimal = decimal / 2\n    if\
    \ decimal > 0 \n        binary = binary + \"1\"\n    else\n        binary = binary\
    \ + \"0\"\n    decimal = decimal / 2\n    if decimal > 0 \n        binary = binary\
    \ + \"1\"\n    else\n        binary = binary + \"0\"\n    decimal = \nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpo41e6qi8.jl:102\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpo41e6qi8.jl:1\n\
    in expression starting at /tmp/tmpo41e6qi8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal == 0 \n        return \"0\"\n    else \n        binary_string\
    \ = \"\"\n        \n        while decimal > 0 \n            binary_string += \"\
    1\"\n            decimal -= 1\n        \n        while decimal < 0 \n        \
    \    binary_string += \"0\"\n            decimal += 1\n        \n        binary_string\
    \ += \"db\"\n        return binary_string\n    \nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a binary number to\
    \ a decimal number. Your function should take in a string with each character\
    \ representing a binary number and return a string with the decimal number. There\
    \ will be an extra couple of characters 'db' at the beginning and at the end of\
    \ the string. The extra characters are there to help with the format.\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5844lktp.jl:33\nin expression starting at\
    \ /tmp/tmp5844lktp.jl:33\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0 \n        error(\"Decimal\
    \ cannot be negative\")\n    \n    if decimal < 2 \n        error(\"Decimal cannot\
    \ be less than 2\")\n    \n    decimal = decimal % 2\n    \n    while decimal\
    \ != 0\n        binary = binary + \"0\"\n        decimal = decimal - 1\n    \n\
    \    binary = binary + \"1\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that will convert a binary number\
    \ to decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe84m139u.jl:34\nin expression starting at\
    \ /tmp/tmpe84m139u.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    \n    return binary_string\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=recursion,haskell,binary,decimal |>\n<code>\nimport Data.List\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzuh4u37l.jl:22\nin expression starting at\
    \ /tmp/tmpzuh4u37l.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts a binary number to a decimal number. \nThe function\
    \ should take in a string and return a Int64.\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzjhethjm.jl:25\nin expression starting at\
    \ /tmp/tmpzjhethjm.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    \n    return binary_string\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ decimal to binary with base 16. Recall that binary is base 2.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpktwey_v9.jl:23\nin expression starting at\
    \ /tmp/tmpktwey_v9.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal == 0 \n        return \"0\"\n    else \n        binary_string\
    \ = \"\"\n        binary_string += \"0\"\n        binary_string += decimal_to_binary(decimal\
    \ / 2)\n        binary_string += \"0\"\n        binary_string += decimal_to_binary(decimal\
    \ % 2)\n        binary_string += \"db\"\n        return binary_string\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<text>\nExercise 3\n\
    Write a function that converts binary numbers to decimal numbers. You will be\
    \ given a binary number in string form and your task is to convert it to decimal\
    \ form. The function should return a string, with each character representing\
    \ a decimal number. Each character in the string will be a digit 0-9.\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdjcrrgxf.jl:26\nin expression starting at\
    \ /tmp/tmpdjcrrgxf.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"Decimal cannot be negative\")\n    end\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxe_zupj2.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxe_zupj2.jl:1\n\
    in expression starting at /tmp/tmpxe_zupj2.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  error(\"Invalid decimal number\")\n    end\nusing Test\n\n@testset begin\n\n\
    candidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpmu1la84e.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmu1la84e.jl:1\n\
    in expression starting at /tmp/tmpmu1la84e.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu25481pz.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu25481pz.jl:1\n\
    in expression starting at /tmp/tmpu25481pz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0: \n        decimal = -decimal\n\
    \        \n    decimal = decimal % 2\n    \n    while decimal > 0: \n        binary\
    \ = binary + \"0\"\n        decimal = decimal - 1\n    \n    decimal = decimal\
    \ / 2\n    \n    while decimal > 0: \n        binary = binary + \"1\"\n      \
    \  decimal = decimal - 1\n    \n    binary = binary + \"b\"\n    \n    return\
    \ binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\n\
    Write a function that converts a binary number to decimal.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfs380cxv.jl:19\nin expression starting at\
    \ /tmp/tmpfs380cxv.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  error(\"Invalid input\")\n    end\n    \n    if decimal < 2\n        binary\
    \ = binary + \"0\"\n    end\n    \n    if decimal < 64\n        binary = binary\
    \ + \"1\"\n    end\n    \n    if decimal < 128\n        binary = binary + \"0\"\
    \n    end\n    \n    if decimal < 256\n        binary = binary + \"1\"\n    end\n\
    \    \n    if decimal < 512\n        binary = binary + \"0\"\n    end\n    \n\
    \    if decimal < 1024\n        binary = binary + \"1\"\n    end\n    \n    if\
    \ decimal < 2048\n        binary = binary + \"0\"\n    end\n    \n    if decimal\
    \ < 4096\n        binary = binary + \"1\"\n    end\n    \n    if decimal < 8192\n\
    \        binary = binary + \"0\"\n    end\n    \n    if decimal < 16384\n    \
    \    binary = binary + \"1\"\n    end\n    \n    if decimal < 32768\n        binary\
    \ = binary + \"0\"\n    end\n    \n    if decimal < 65536\n        binary = binary\
    \ + \"1\"\n    end\n    \n    if decimal < 131072\n        binary = binary + \"\
    0\"\n    end\n    \n    if decimal < 262144\n        binary = binary + \"1\"\n\
    \    end\n    \n    if decimal < 524288\n        binary = binary + \"0\"\n   \
    \ end\n    \n    if decimal < 1048576\n        binary = binary + \"1\"\n    end\n\
    \    \n    if decimal < 2097152\n        binary = binary + \"0\"\n    end\n  \
    \  \n    if decimal < 4194304\n        binary = binary + \"1\"\n    end\n    \n\
    \    if decimal < 8388608\n        binary = binary + \"0\"\n    end\n    \n  \
    \  if decimal < 16777216\n        binary = binary + \"1\"\n    end\n    \n   \
    \ if decimal < 33554432\n        binary = binary + \"0\"\n    end\n    \n    if\
    \ decimal < 67108864\n        binary = binary + \"1\"\n    end\n    \n    if decimal\
    \ < 134217728\n        binary = binary + \"0\"\n    end\n    \n    if decimal\
    \ < 268435456\n        binary = binary + \"1\"\n    end\n    \n    if decimal\
    \ < 536870912\n        binary = binary + \"0\"\n    end\n    \n    if decimal\
    \ < 1073741824\n        binary = binary + \"1\"\n    end\n    \n    if decimal\
    \ < 2147483648\n        binary = binary + \"0\"\n    end\n    \n    if decimal\
    \ < 4294967296\n        binary = \nusing Test\n\n@testset begin\n\ncandidate =\
    \ decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6s45qp92.jl:1\nin expression starting at /tmp/tmp6s45qp92.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 0: \n        binary_string\
    \ = \"0\"\n    \n    binary_string += decimal_to_binary(decimal / 2)\n    binary_string\
    \ += decimal_to_binary(decimal % 2)\n    \n    return binary_string\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ binary numbers to decimal numbers. Your function should take in a string with\
    \ each character representing a binary number and return a string with each character\
    \ representing a decimal number. Each character in the string will be a decimal\
    \ number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpebuvzjva.jl:19\nin expression starting at\
    \ /tmp/tmpebuvzjva.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"decimal must be positive\")\n    else\
    \ if decimal >= 2^(64-1)\n        error(\"decimal must be less than 2^64\")\n\
    \    else\n        binary = \"\"\n        decimal = decimal % 2^(64-1)\n     \
    \   while decimal > 0\n            binary = string(decimal%2) + binary\n     \
    \       decimal = decimal / 2\n        end\n        binary = string(64 - length(binary))\
    \ + binary\n        binary = string(64 - length(binary)) + binary\n        return\
    \ binary\n    end\nend\n</cell>\n<code language=julia-1.4>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.4>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to decimal form. Your function\
    \ should take in a binary string and return a decimal number.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeku00yxq.jl:17\nin expression starting at\
    \ /tmp/tmpeku00yxq.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu25481pz.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu25481pz.jl:1\n\
    in expression starting at /tmp/tmpu25481pz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    decimal = decimal % 2\n    while decimal != 0\n   \
    \     binary = binary + \"0\"\n        decimal = decimal - 1\n    binary = binary\
    \ + \"1\"\n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to decimal form. Your function\
    \ should take in a string and return a string.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx5h3rjf3.jl:23\nin expression starting at\
    \ /tmp/tmpx5h3rjf3.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return binary\n    \n    decimal = decimal % 2\n    \n    while decimal !=\
    \ 0\n        binary = binary + \"0\"\n        decimal = decimal / 2\n    \n  \
    \  binary = binary + \"1\"\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that converts binary numbers to\
    \ decimal numbers. A binary number is represented as a string\nof 0s and 1s. For\
    \ example, the binary number \"11\" would be represented as \"11\".\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzrf65hw5.jl:31\nin expression starting at\
    \ /tmp/tmpzrf65hw5.jl:31\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    \n    return binary_string\
    \ + \"db\"\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 3\n\
    Write a function that converts a binary number to decimal.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplnloz2rf.jl:19\nin expression starting at /tmp/tmplnloz2rf.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    decimal = decimal % 2\n    \n    if decimal\
    \ < 10:\n        binary += \"0\"\n    \n    binary += string(decimal, \"b\")\n\
    \    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to decimal.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpns9g41po.jl:21\nin expression starting at\
    \ /tmp/tmpns9g41po.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"decimal must be between 2 and 64\"))\n    end\n    \n\
    \    if decimal < 10\n        binary = string(decimal, \"b\")\n    else\n    \
    \    binary = string(decimal % 2, \"b\")\n        \n        decimal /= 2\n   \
    \     while decimal > 0\n            binary = string(decimal % 2, \"b\") + binary\n\
    \            decimal /= 2\n        end\n    end\n    \n    binary = string(binary,\
    \ \"b\") + string(64 - decimal, \"b\")\n    \n    return binary\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpzlbebus5.jl:40

    '
  stdout: "test set: Error During Test at /tmp/tmpzlbebus5.jl:43\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  ArgumentError: decimal must be between\
    \ 2 and 64\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpzlbebus5.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzlbebus5.jl:43 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzlbebus5.jl:42\ntest set:\
    \ Error During Test at /tmp/tmpzlbebus5.jl:44\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpzlbebus5.jl:29\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzlbebus5.jl:44 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzlbebus5.jl:42\ntest set:\
    \ Error During Test at /tmp/tmpzlbebus5.jl:45\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  ArgumentError: decimal must be between\
    \ 2 and 64\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n     @ Main\
    \ /tmp/tmpzlbebus5.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpzlbebus5.jl:45 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpzlbebus5.jl:42\ntest set:\
    \ Error During Test at /tmp/tmpzlbebus5.jl:46\n  Test threw exception\n  Expression:"
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        return \"Invalid input\"\n    \n    decimal = decimal % 2\n    \n   \
    \ while decimal != 0\n        binary_string = binary_string + \"0\"\n        decimal\
    \ = decimal / 2\n    \n    binary_string = binary_string + \"1\"\n    \n    if\
    \ decimal != 0\n        binary_string = binary_string + \"0\"\n    \n    return\
    \ binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that will convert a binary number to a decimal number. The\
    \ function should take in a string with each character representing a binary number\
    \ and return a string with each character representing a decimal number. Each\
    \ character in the string will be a digit from 0 to 9.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0rbtvnlz.jl:34\nin expression starting at\
    \ /tmp/tmp0rbtvnlz.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"The decimal number must be between 2 and 64\"))\n   \
    \ end\n    \n    for index in 1:64\n        if decimal >= 2\n            binary\
    \ += \"0\"\n            decimal -= 1\n        end\n        if decimal < 2\n  \
    \          binary += \"1\"\n            decimal += 1\n        end\n    end\n \
    \   \n    return binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpda8fdkn_.jl:37

    '
  stdout: "test set: Error During Test at /tmp/tmpda8fdkn_.jl:40\n  Test threw exception\n\
    \  Expression: candidate(0) == \"db0db\"\n  ArgumentError: The decimal number\
    \ must be between 2 and 64\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n\
    \     @ Main /tmp/tmpda8fdkn_.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpda8fdkn_.jl:40 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpda8fdkn_.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpda8fdkn_.jl:41\n  Test threw exception\n  Expression:\
    \ candidate(32) == \"db100000db\"\n  MethodError: no method matching +(::String,\
    \ ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n  Stacktrace:\n\
    \   [1] decimal_to_binary(decimal::Int64)\n     @ Main /tmp/tmpda8fdkn_.jl:24\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpda8fdkn_.jl:41 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpda8fdkn_.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpda8fdkn_.jl:42\n  Test threw exception\n  Expression:\
    \ candidate(103) == \"db1100111db\"\n  ArgumentError: The decimal number must\
    \ be between 2 and 64\n  Stacktrace:\n   [1] decimal_to_binary(decimal::Int64)\n\
    \     @ Main /tmp/tmpda8fdkn_.jl:19\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpda8fdkn_.jl:42 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpda8fdkn_.jl:39\ntest set:\
    \ Error During Test at /tmp/tmpda8fdkn_.jl:43\n  Test threw e"
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += \"0\"\n    \n    binary_string += \"1\"\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that converts binary numbers to decimal numbers. Your function should\
    \ take in a string with each character representing a binary number and return\
    \ a string with each character representing a decimal number. Each character in\
    \ the string will be a number between '0' and '9'.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaen72jep.jl:24\nin expression starting at\
    \ /tmp/tmpaen72jep.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n\
    \        binary_string = \"Invalid Input\"\n    else \n        binary_string =\
    \ \"db\"\n        \n        for i in 0..(decimal-1)\n            binary_string\
    \ += \"0\"\n        end\n        \n        for i in 0..(decimal-1)\n         \
    \   binary_string += \"1\"\n        end\n    end\n    \n    return binary_string\n\
    end\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a string and returns the number of characters in the string.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps6tinkwp.jl:34\nin expression starting at\
    \ /tmp/tmps6tinkwp.jl:34\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"Decimal number must be positive\")\n \
    \   end\n    binary = \"\"\n    decimal = decimal % 2\n    while decimal > 0\n\
    \        binary = string(decimal) + binary\n        decimal = decimal / 2\n  \
    \  end\n    binary = string(decimal) + binary\n    binary = string(10) + binary\n\
    \    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a decimal number to binary and returns the\
    \ string in reverse order.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1ja5njn_.jl:28\nin expression starting at\
    \ /tmp/tmp1ja5njn_.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal - 2\n    \n    while\
    \ decimal >= 1:\n        decimal = decimal / 2\n        binary = binary + \"1\"\
    \n    \n    binary = binary + \"0\"\n    \n    return binary\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to a decimal number. Your function should take in a string and\
    \ return a number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphilevc15.jl:19\nin expression starting at\
    \ /tmp/tmphilevc15.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal number must be positive\"\
    )\n    \n    binary = \"\"\n    \n    if decimal < 2\n        binary = \"0\"\n\
    \    \n    else if decimal < 10\n        binary = \"0\"\n    \n    else\n    \
    \    binary = \"1\"\n    \n    decimal = decimal % 2\n    \n    for _ in 0..(decimal\
    \ - 1)\n        binary = binary + \"0\"\n    \n    binary = binary + \"1\"\n \
    \   \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that converts a decimal number to binary and returns the\
    \ string in reverse order.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphn0xolr2.jl:24\nin expression starting at\
    \ /tmp/tmphn0xolr2.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for i in decimal_to_binary(decimal)\n\
    \        binary_string += i\n    \n    return binary_string\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpg36_qcqe.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpg36_qcqe.jl:1\n\
    in expression starting at /tmp/tmpg36_qcqe.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return binary\n    \n    decimal = decimal % 2\n    \n    if decimal < 10\n\
    \        binary = \"0\" + binary\n    \n    binary = binary + decimal_to_binary(decimal\
    \ / 2)\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that converts binary numbers to decimal numbers. A binary\
    \ number is represented as a string\nof '0' and '1' characters. Your function\
    \ should take in a string of '0' and '1' characters and return the\ndecimal equivalent\
    \ of the binary number. For example, if the binary number is \"10\", your function\
    \ should\nreturn 10.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo3wmvs5n.jl:30\nin expression starting at\
    \ /tmp/tmpo3wmvs5n.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu25481pz.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu25481pz.jl:1\n\
    in expression starting at /tmp/tmpu25481pz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0: \n        decimal = -decimal\n\
    \        \n    decimal = decimal % 2\n    \n    while decimal > 0: \n        binary\
    \ = binary + \"0\"\n        decimal = decimal - 1\n    \n    decimal = decimal\
    \ / 2\n    \n    while decimal > 0: \n        binary = binary + \"1\"\n      \
    \  decimal = decimal - 1\n    \n    binary = binary + \"b\"\n    \n    return\
    \ binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\n\
    Write a function that will convert a binary number to a decimal number. \nThe\
    \ function should take in a binary number as a string, and return the decimal\
    \ number as a string.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6yfc7l5f.jl:19\nin expression starting at\
    \ /tmp/tmp6yfc7l5f.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2:\n        binary_string\
    \ = \"0\"\n        return binary_string\n    \n    decimal_to_binary_helper(decimal,\
    \ 0, binary_string)\n    \n    return binary_string\n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi198aza9.jl:19\nin expression starting at\
    \ /tmp/tmpi198aza9.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal number must be positive\"\
    )\n    \n    binary = \"\"\n    \n    while decimal > 0\n        binary = binary\
    \ + \"0\"\n        decimal = decimal - 1\n    end\n    \n    while decimal < 0\n\
    \        binary = binary + \"1\"\n        decimal = decimal + 1\n    end\n   \
    \ \n    binary = binary + \"db\"\n    \n    return binary\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that converts a binary number into a decimal number.\
    \ The function should take in a string and return a Int64.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpljps5w62.jl:35\nin expression starting at\
    \ /tmp/tmpljps5w62.jl:35\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    if decimal < 0\n        error(\"Decimal cannot be negative\")\n\
    \    \n    if decimal > 2^(64-1)\n        error(\"Decimal cannot be greater than\
    \ 2^64\")\n    \n    binary = \"\"\n    \n    for digit in decimal\n        binary\
    \ = binary + str((digit % 2) == 0)\n    end\n    \n    binary = binary + \"db\"\
    \n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to decimal.\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpblfwtlk2.jl:32\nin expression starting at\
    \ /tmp/tmpblfwtlk2.jl:32\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal % 2\n    \n    while\
    \ decimal > 0:\n        decimal = decimal // 2\n        binary = binary + \"1\"\
    \n    \n    return binary + \"db\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6vl1m4l9.jl:19\nin expression starting at\
    \ /tmp/tmp6vl1m4l9.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return \"Invalid decimal number\"\n    \n    decimal = decimal % 2\n    \n\
    \    while decimal != 0\n        binary = binary + \"0\"\n        decimal = decimal\
    \ - 1\n    \n    binary = binary + \"1\"\n    \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to a decimal number. Your function should take in a string with\
    \ each character representing a binary number, and return a string with each character\
    \ representing a decimal number. Each character in the string will be a digit\
    \ between 0 and 9.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv9ggsnqr.jl:31\nin expression starting at\
    \ /tmp/tmpv9ggsnqr.jl:31\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpu25481pz.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpu25481pz.jl:1\n\
    in expression starting at /tmp/tmpu25481pz.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal - 2\n    \n    while\
    \ decimal >= 1:\n        binary = binary + \"1\"\n        decimal = decimal -\
    \ 1\n    \n    binary = binary + \"0\"\n    \n    return binary\nusing Test\n\n\
    @testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\"\
    )\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkvp67wpd.jl:19\nin expression starting at\
    \ /tmp/tmpkvp67wpd.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 0: \n        binary_string\
    \ = \"db\"\n        decimal = -decimal\n    \n    binary_string = \"\"\n    \n\
    \    while decimal > 0: \n        binary_string += \"0\"\n        decimal -= 1\n\
    \    \n    binary_string += \"1\"\n    \n    return binary_string\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 3\nWrite a function that converts\
    \ a binary number to decimal form. The function should take in a string with each\
    \ character representing a binary number and return a string with each character\
    \ representing a decimal number. Each character in the string will be '0' or '1'.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpry6rc34g.jl:19\nin expression starting at\
    \ /tmp/tmpry6rc34g.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    for digit in decimal\n        binary_string\
    \ += if digit == 0 then \"0\" else \"1\"\n    end\n    \n    return binary_string\
    \ + \"db\"\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise 2\n\
    Write a function that converts binary numbers to decimal numbers. Your function\
    \ should take in a string with binary numbers and return an Int64 with the decimal\
    \ numbers.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"\"\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgchrg9ob.jl:19\nin expression starting at /tmp/tmpgchrg9ob.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal - 2\n    \n    while\
    \ decimal >= 2:\n        binary = binary + \"1\"\n        decimal = decimal -\
    \ 2\n    \n    binary = binary + \"0\"\n    return binary\nend\n</cell>\n<code\
    \ language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to decimal.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7_x6iqxl.jl:19\nin expression starting at\
    \ /tmp/tmp7_x6iqxl.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  throw(ArgumentError(\"Decimal number must be between 2 and 64\"))\n    end\n\
    \    \n    if decimal < 0\n        throw(ArgumentError(\"Decimal number must be\
    \ positive\"))\n    end\n    \n    if decimal > 64\n        throw(ArgumentError(\"\
    Decimal number must be less than 64\"))\n    end\n    \n    binary = string(64,\
    \ '0')\n    \n    if decimal < 2\n        throw(ArgumentError(\"Decimal number\
    \ must be greater than 2\"))\n    end\n    \n    if decimal > 64\n        throw(ArgumentError(\"\
    Decimal number must be less than 64\"))\n    end\n    \n    binary = string(64,\
    \ '0')\n    \n    if decimal < 2\n        throw(ArgumentError(\"Decimal number\
    \ must be greater than 2\"))\n    end\n    \n    if decimal > 64\n        throw(ArgumentError(\"\
    Decimal number must be less than 64\"))\n    end\n    \n    binary = string(64,\
    \ '0')\n    \n    if decimal < 2\n        throw(ArgumentError(\"Decimal number\
    \ must be greater than 2\"))\n    end\n    \n    if decimal > 64\n        throw(ArgumentError(\"\
    Decimal number must be less than 64\"))\n    end\n    \n    binary = string(64,\
    \ '0')\n    \n    if decimal < 2\n        throw(ArgumentError(\"Decimal number\
    \ must be greater than 2\"))\n    end\n    \n    if decimal > 64\n        throw(ArgumentError(\"\
    Decimal number must be less than 64\"))\n    end\n    \n    binary = string(64,\
    \ '0')\n    \n    if decimal < 2\n        throw(ArgumentError(\"Decimal number\
    \ must be greater than 2\"))\n    end\n    \n    if decimal > 64\n        throw(ArgumentError(\"\
    Decimal number must be less than 64\"))\n    end\n    \n    binary = string(64,\
    \ '0')\n    \n    if decimal < 2\n        throw(ArgumentError(\"Decimal number\
    \ must be greater than 2\"))\n    end\n    \n    if decimal > 64\n        throw(ArgumentError(\"\
    Decimal number must be less than 64\"))\n    end\n    \n    binary = string(64,\
    \ '0')\n    \n    if decimal < 2\n        throw(ArgumentError(\"Decimal number\
    \ must be greater than 2\"))\n    end\n    \n    if decimal > 64\n        throw(ArgumentError(\"\
    Decimal number must be less than 64\"))\n    end\n    \n    binary = string(64,\
    \ '0')\n    \n    if decimal < 2\n        throw(ArgumentError(\"De\nusing Test\n\
    \n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"\
    db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) ==\
    \ \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: cannot juxtapose string literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7d5jrlfa.jl:109\nin expression starting at\
    \ /tmp/tmp7d5jrlfa.jl:109\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 0 \n        error(\"decimal\
    \ cannot be negative\")\n    \n    if decimal < 2 \n        error(\"decimal cannot\
    \ be less than 2\")\n    \n    binary = decimal % 2\n    \n    decimal = decimal\
    \ / 2\n    \n    while decimal > 0 \n        binary = binary + \"0\"\n       \
    \ decimal = decimal / 2\n    \n    binary = binary + \"1\"\n    \n    return binary\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp10rqsle9.jl:1\nin expression starting at /tmp/tmp10rqsle9.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 0: \n        binary_string\
    \ = \"-db\"\n        decimal = -decimal\n    \n    binary_string = \"\"\n    \n\
    \    while decimal > 0 do\n        binary_string = binary_string + \"0\"\n   \
    \     decimal = decimal - 1\n    end\n    \n    while decimal < 0 do\n       \
    \ binary_string = binary_string + \"1\"\n        decimal = decimal + 1\n    end\n\
    \    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that converts binary numbers to decimal numbers. Your function\
    \ should take in a string with each character representing a binary number and\
    \ return a string with the decimal numbers. Each character in the string will\
    \ be a decimal number.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp02ohz1id.jl:19\nin expression starting at\
    \ /tmp/tmp02ohz1id.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"decimal cannot be negative\")\n    end\n\
    \    \n    if decimal < 2\n        error(\"decimal cannot be less than 2\")\n\
    \    end\n    \n    binary = \"\"\n    \n    if decimal < 0\n        error(\"\
    decimal cannot be less than 0\")\n    end\n    \n    if decimal < 2\n        error(\"\
    decimal cannot be less than 2\")\n    end\n    \n    if decimal < 0\n        error(\"\
    decimal cannot be less than 0\")\n    end\n    \n    if decimal < 2\n        error(\"\
    decimal cannot be less than 2\")\n    end\n    \n    if decimal < 0\n        error(\"\
    decimal cannot be less than 0\")\n    end\n    \n    if decimal < 2\n        error(\"\
    decimal cannot be less than 2\")\n    end\n    \n    if decimal < 0\n        error(\"\
    decimal cannot be less than 0\")\n    end\n    \n    if decimal < 2\n        error(\"\
    decimal cannot be less than 2\")\n    end\n    \n    if decimal < 0\n        error(\"\
    decimal cannot be less than 0\")\n    end\n    \n    if decimal < 2\n        error(\"\
    decimal cannot be less than 2\")\n    end\n    \n    if decimal < 0\n        error(\"\
    decimal cannot be less than 0\")\n    end\n    \n    if decimal < 2\n        error(\"\
    decimal cannot be less than 2\")\n    end\n    \n    if decimal < 0\n        error(\"\
    decimal cannot be less than 0\")\n    end\n    \n    if decimal < 2\n        error(\"\
    decimal cannot be less than 2\")\n    end\n    \n    if decimal < 0\n        error(\"\
    decimal cannot be less than 0\")\n    end\n    \n    if decimal < 2\n        error(\"\
    decimal cannot be less than 2\")\n    end\n    \n    if decimal < 0\n        error(\"\
    decimal cannot be less than 0\")\n    end\n    \n    if decimal < 2\n        error(\"\
    decimal cannot be less than 2\")\n    end\n    \n    if decimal < 0\n        error(\"\
    decimal cannot be less than 0\")\n    end\n    \n    if decimal < 2\n        error(\"\
    decimal cannot be less than 2\")\n    end\n    \n    if decimal < 0\n        error(\"\
    decimal cannot be less than 0\")\n    end\n    \n    if decimal < 2\n        error(\"\
    decimal cannot be less than 2\")\n    end\n    \n    if decimal < 0\n        error(\"\
    decimal cannot be less than 0\")\n    end\n    \n    if decimal < 2\n        error(\"\
    decimal cannot be less than 2\")\n    end\n    \n    if decimal < 0\n        error(\"\
    decimal cannot be less than 0\")\n    end\n    \n    if decimal < 2\n        error(\"\
    decimal cannot be less than 2\")\n    end\n    \n    if decimal < 0\n        error(\"\
    decimal cannot be less than 0\")\n    end\n    \n    if decimal < 2\n        error(\"\
    decimal cannot be less than 2\")\n    end\n    \n    if decimal < 0\n        error(\"\
    decimal cannot be less than 0\")\n    end\n    \n    if decimal < 2\n        error(\"\
    decimal cannot be \nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: cannot juxtapose string literal\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmped60owb0.jl:148\nin expression starting at\
    \ /tmp/tmped60owb0.jl:148\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2:\n        binary = binary\
    \ + \"0\"\n        return binary\n    \n    decimal = decimal - 2\n    \n    while\
    \ decimal > 0:\n        binary = binary + \"1\"\n        decimal = decimal - 1\n\
    \    \n    binary = binary + \"db\"\n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that will convert a binary number\
    \ to a decimal number. The function should take in a string and return a Int64.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_w3fkfh5.jl:19\nin expression starting at\
    \ /tmp/tmp_w3fkfh5.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary_string = \"\"\n    \n    if decimal < 2 || decimal > 64\n     \
    \   error(\"Invalid input\")\n    end\nusing Test\n\n@testset begin\n\ncandidate\
    \ = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9xapsc9u.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9xapsc9u.jl:1\n\
    in expression starting at /tmp/tmp9xapsc9u.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    for n in decimal\n        binary = binary + str((n\
    \ & 1) == 0 ? \"0\" : \"1\")\n    end\n    return \"db\" + binary + \"db\"\nend\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to a decimal number. Your function should take in a string and\
    \ return a Int64.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr4g2irl7.jl:21\nin expression starting at\
    \ /tmp/tmpr4g2irl7.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal)\n \
    \       binary += i\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that converts a decimal number to\
    \ binary and returns the string in reverse order.\nusing Test\n\n@testset begin\n\
    \ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32)\
    \ == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15)\
    \ == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnjhxrv98.jl:23\nin expression starting at\
    \ /tmp/tmpnjhxrv98.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2:\n        binary_string\
    \ = \"0\"\n    \n    if decimal >= 2:\n        binary_string = \"1\"\n       \
    \ \n        \n    if decimal % 2 == 0:\n        binary_string += \"0\"\n     \
    \   \n    else:\n        binary_string += \"1\"\n        \n    binary_string +=\
    \ \"db\"\n    \n    return binary_string\nend\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n\
    </cell>\n<text>\nProblem 7\nWrite a function that converts a decimal number to\
    \ a binary number with leading zeros. For example the decimal number 15 should\
    \ become \"00000000011\".\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz7ck9j1x.jl:19\nin expression starting at\
    \ /tmp/tmpz7ck9j1x.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    if decimal < 2 || decimal > 64\n      \
    \  return binary\n    \n    decimal = decimal % 2\n    \n    if decimal < 10\n\
    \        binary = \"0\" + binary\n    \n    binary = binary + decimal_to_binary(decimal\
    \ / 2)\n    \n    return binary\nend\n</cell>\n<code language=julia-1.5>\ndecimal_to_binary(15)\n\
    </cell>\n<code language=julia-1.5>\ndecimal_to_binary(32)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that converts a binary number to decimal form. The function\
    \ should take in a binary string as input\nand return the decimal form.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz86jnbkg.jl:30\nin expression starting at\
    \ /tmp/tmpz86jnbkg.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    binary = \"\"\n    for digit in decimal\n        if digit == 1\n     \
    \       binary += \"1\"\n        else\n            binary += \"0\"\n    return\
    \ binary\nend\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\
    \t@test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\
    \t@test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp6vokpshh.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6vokpshh.jl:1\n\
    in expression starting at /tmp/tmp6vokpshh.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary_string = \"\"\n    \n    if decimal < 2:\n        binary_string\
    \ = \"0\"\n        return binary_string\n    \n    decimal_to_binary_helper(decimal,\
    \ 0, binary_string)\n    \n    return binary_string\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcasj4bie.jl:19\nin expression starting at\
    \ /tmp/tmpcasj4bie.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    if decimal < 0\n        error(\"decimal number must be positive\")\n \
    \   else if decimal > 2^(64 - 64)\n        error(\"decimal number too large\"\
    )\n    else\n        binary = \"\"\n        for i = 64 - 64 - decimal\n      \
    \      binary += \"0\"\n        end\n        binary += \"1\"\n        binary =\
    \ binary[64 - 64 : end]\n        return binary\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that converts a binary number to decimal form. The\
    \ function should take in a string of\nbinary digits and return the decimal number.\
    \ There will be an extra couple of characters 'db' at the\nbeginning and at the\
    \ end of the string. The extra characters are there to help with the format.\n\
    using Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0)\
    \ == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103)\
    \ == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp14w3mq2m.jl:17\nin expression starting at\
    \ /tmp/tmp14w3mq2m.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for digit in decimal:\n        if digit\
    \ == 0 or digit == 1:\n            binary += \"0\"\n        else:\n          \
    \  binary += \"1\"\n    \n    return \"db\" + binary + \"db\"\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ binary numbers to decimal numbers. A binary number consists of a\nstring of\
    \ 1s and 0s. Each character in the string represents a binary digit. The function\
    \ should return\na string, with each character representing the decimal equivalent\
    \ of the binary number. Each character\nin the string will be a number between\
    \ 0 and 9.\nusing Test\n\n@testset begin\n\ncandidate = decimal_to_binary;\n\t\
    @test(candidate(0) == \"db0db\")\n\t@test(candidate(32) == \"db100000db\")\n\t\
    @test(candidate(103) == \"db1100111db\")\n\t@test(candidate(15) == \"db1111db\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpno4qzfbk.jl:19\nin expression starting at\
    \ /tmp/tmpno4qzfbk.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"You will be given a number in decimal form and your task is to convert\
    \ it to\n    binary format. The function should return a string, with each character\
    \ representing a binary\n    number. Each character in the string will be '0'\
    \ or '1'.\n\n    There will be an extra couple of characters 'db' at the beginning\
    \ and at the end of the string.\n    The extra characters are there to help with\
    \ the format.\n\n    Examples:\n    >>> decimal_to_binary(15)\n    \"db1111db\"\
    \n    >>> decimal_to_binary(32)\n    \"db100000db\"\n    \"\"\"\nfunction decimal_to_binary(decimal::Int64)::String\
    \ \n    \n    binary = \"\"\n    \n    for i in decimal_to_binary(decimal)\n \
    \       binary = binary + i\n    end\n    \n    return binary\nend\n</cell>\n\
    <code language=julia-1.5>\ndecimal_to_binary(15)\n</cell>\n<code language=julia-1.5>\n\
    decimal_to_binary(32)\n</cell>\n<text>\nExercise 2\nWrite a function that converts\
    \ a binary number to decimal form. The function should take in a string as input\
    \ and\nreturn a string with each character representing a decimal number. Each\
    \ character in the string will be a digit\nfrom 0 to 9.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = decimal_to_binary;\n\t@test(candidate(0) == \"db0db\")\n\
    \t@test(candidate(32) == \"db100000db\")\n\t@test(candidate(103) == \"db1100111db\"\
    )\n\t@test(candidate(15) == \"db1111db\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4elo21g9.jl:24\nin expression starting at\
    \ /tmp/tmp4elo21g9.jl:24\n"
  stdout: ''

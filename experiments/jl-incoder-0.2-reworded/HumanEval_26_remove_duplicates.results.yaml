language: jl
name: HumanEval_26_remove_duplicates
results:
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    numbers = sort(numbers)\n    numbers = numbers[numbers != numbers[end]]\n\
    \    return numbers\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3v0xawxm.jl:11\nin expression starting at\
    \ /tmp/tmp3v0xawxm.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of integers\
    \ and returns the sum of the squares of the integers in the vector.\n>>> sumsq([1,\
    \ 2, 3, 4])\n25\n>>> sumsq([-1, -2, -3, -4])\n25\n>>> sumsq([-1, -2, -3, -4, -5,\
    \ -6])\n25\n>>> sumsq([-1, -2, -3, -4, -5, -6, -7, -8])\n25\n>>> sumsq([-1, -2,\
    \ -3, -4, -5, -6, -7, -8, -9, -10])\n25\n>>> sumsq([-1, -2, -3, -4, -5, -6, -7,\
    \ -8, -9, -10, -11])\n25\n>>> sumsq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10,\
    \ -11, -12])\n25\n>>> sumsq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12,\
    \ -13])\n25\n>>> sumsq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13,\
    \ -14])\n25\n>>> sumsq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13,\
    \ -14, -15])\n25\n>>> sumsq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12,\
    \ -13, -14, -15, -16])\n25\n>>> sumsq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10,\
    \ -11, -12, -13, -14, -15, -16, -17])\n25\n>>> sumsq([-1, -2, -3, -4, -5, -6,\
    \ -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18])\n25\n>>> sumsq([-1,\
    \ -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18,\
    \ -19])\n25\n>>> sumsq([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13,\
    \ -14, -15, -16, -17, -18, -19, -20])\n25\n>>> sumsq([-1, -2, -3, -4, -5, -\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjj04rk91.jl:22\nin expression starting at\
    \ /tmp/tmpjj04rk91.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != numbers]\n    for\
    \ i in numbers\n        if !seen.add(i)\n            numbers = numbers[numbers\
    \ != i]\n        end\n    end\n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcca_ds_g.jl:16\nin expression starting at\
    \ /tmp/tmpcca_ds_g.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    numbers = sort(numbers)\n    numbers = numbers[numbers != numbers[end]]\n\
    \    return numbers\nend\n</cell>\n<code language=julia-1.4>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5vcrh5sd.jl:11\nin expression starting at\
    \ /tmp/tmp5vcrh5sd.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers !=\
    \ numbers[end]]\n    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp019vdhfo.jl:14\nin expression starting at\
    \ /tmp/tmp019vdhfo.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            i += 1\n        else\n   \
    \         numbers = numbers[i+1:end]\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<text>\nExercise 2: Remove all elements that occur more than once\n\
    Write a function that removes all elements that occur more than once.\nFor example,\
    \ given [1, 1, 2, 3], return [1, 3].\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgf56sefb.jl:22\nin expression starting at\
    \ /tmp/tmpgf56sefb.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != numbers]\n    numbers\
    \ = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n \
    \   numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    number\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_b8k462n.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_b8k462n.jl:1\n\
    in expression starting at /tmp/tmp_b8k462n.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    numbers = sort(numbers)\n    numbers = numbers[numbers != numbers[1]]\n\
    \    return numbers\nend\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThis doesn't work\
    \ if there are duplicates in the input vector. For example, `remove_duplicates([1,2,2,3,4])`\
    \ returns `[1,2,3]`.\n<|/ c |>\n<| c |>\nYes, I noticed that and fixed it. I had\
    \ to change `numbers = sort(numbers)` to `numbers = sort(numbers, by = identity)`\n\
    <|/ c |>\n<| c |>\nI see that now. Thanks for fixing it.\n<|/ c |>\n<| a tags=julia,arrays\
    \ |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw3shp9zt.jl:11\nin expression starting at\
    \ /tmp/tmpw3shp9zt.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = numbers[numbers != numbers[end]]\n    \n    return numbers\n\
    end\n</cell>\n<text>\nExercise 7\nWrite a function that takes a vector of integers\
    \ and returns the sum of the integers in the vector.\nIf the vector is empty,\
    \ return 0.\nIf the vector has one element, return that element.\nIf the vector\
    \ has two or more elements, return the sum of the first and last elements.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5xim_4rw.jl:12\nin expression starting at\
    \ /tmp/tmp5xim_4rw.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers !=\
    \ numbers[end]]\n    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp019vdhfo.jl:14\nin expression starting at\
    \ /tmp/tmp019vdhfo.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers !=\
    \ numbers[end]]\n    \n    return numbers\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector of integers and returns the sum of the integers\
    \ squared. \nFor example, if the input is [1, 2, 3, 4], the output should be $1\
    \ + 4 + 9 + 16 = 25$.\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc793hrcw.jl:14\nin expression starting at\
    \ /tmp/tmpc793hrcw.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers !=\
    \ numbers[end]]\n    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp019vdhfo.jl:14\nin expression starting at\
    \ /tmp/tmp019vdhfo.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            i += 1\n        else\n   \
    \         numbers = numbers[i+1:end]\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpybxdyrvi.jl:22\nin expression starting at\
    \ /tmp/tmpybxdyrvi.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != numbers]\n    numbers\
    \ = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n \
    \   numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    number\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_b8k462n.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_b8k462n.jl:1\n\
    in expression starting at /tmp/tmp_b8k462n.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            i += 1\n        else\n   \
    \         numbers = numbers[i+1:end]\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpybxdyrvi.jl:22\nin expression starting at\
    \ /tmp/tmpybxdyrvi.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp74z5yqtv.jl:21\nin expression starting at\
    \ /tmp/tmp74z5yqtv.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            i += 1\n        else\n   \
    \         numbers = numbers[i+1:end]\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the first element\
    \ of a vector, if it exists. Otherwise, return 0.\nusing Test\n\n@testset begin\n\
    \ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_es5pace.jl:22\nin expression starting at\
    \ /tmp/tmp_es5pace.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    seen = Set{Int64}()\n    \n    for n in numbers\n        if !seen.add(n)\n\
    \            push!(seen, n)\n        end\n    end\n    \n    return seen.to_array()\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns the sum of the squares of the integers. \nThe sum of the squares\
    \ should be the sum of the squares of the integers, not their absolute values.\n\
    The function should raise an error if the vector is empty.\nThe function should\
    \ raise an error if the vector contains negative numbers.\nThe function should\
    \ raise an error if the vector contains non-integer numbers.\nThe function should\
    \ raise an error if the vector contains non-positive numbers.\nThe function should\
    \ raise an error if the vector contains non-negative numbers.\nThe function should\
    \ raise an error if the vector contains non-finite numbers.\nThe function should\
    \ raise an error if the vector contains NaN.\nThe function should raise an error\
    \ if the vector contains infinity.\nThe function should raise an error if the\
    \ vector contains non-finite numbers.\nThe function should raise an error if the\
    \ vector contains non-integer numbers.\nThe function should raise an error if\
    \ the vector contains non-positive numbers.\nThe function should raise an error\
    \ if the vector contains non-negative numbers.\nThe function should raise an error\
    \ if the vector contains non-finite numbers.\nThe function should raise an error\
    \ if the vector contains NaN.\nThe function should raise an error if the vector\
    \ contains infinity.\nThe function should raise an error if the vector contains\
    \ non-finite numbers.\nThe function should raise an error if the vector contains\
    \ non-integer numbers.\nThe function should raise an error if the vector contains\
    \ non-positive numbers.\nThe function should raise an error if the vector contains\
    \ non-negative numbers.\nThe function should raise an error if the vector contains\
    \ non-finite numbers.\nThe function should raise an error if the vector contains\
    \ NaN.\nThe function should raise an error if the vector contains infinity.\n\
    The function should raise an error if the vector contains non-finite numbers.\n\
    The function should raise an error if the vector contains non-integer numbers.\n\
    The function should raise an error if the vector contains non-positive numbers.\n\
    The function should raise an error if the vector contains non-negative numbers.\n\
    The function should raise an error if the vector contains non-finite numbers.\n\
    The function should raise an error if the vector contains NaN.\nThe function should\
    \ raise an error if the vector contains infinity.\nThe function should raise an\
    \ error if the vector contains non-finite numbers.\nThe function should raise\
    \ an error if the vector contains non-integer numbers.\nThe function should raise\
    \ an error if the vector contains non-positive numbers.\nThe function should raise\
    \ an error if the vector contains non-negative numbers.\nThe function should raise\
    \ an error if the vector contains non-finite numbers.\nThe function should raise\
    \ an error if the vector contains NaN.\nThe function should raise an error if\
    \ the vector contains infinity.\n\nusing Test\n\n@testset begin\n\ncandidate =\
    \ remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvjehj2t1.jl:18\nin expression starting at\
    \ /tmp/tmpvjehj2t1.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers !=\
    \ numbers[1]]\n    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphu38h7a0.jl:14\nin expression starting at\
    \ /tmp/tmphu38h7a0.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of integers\
    \ and returns the sum of the integers in the vector.\n>>> sum([1, 2, 3])\n6\n\
    >>> sum([1, 2, 3, 3])\n6\n>>> sum([1, 2, 3, 3, 3])\n6\n>>> sum([1, 2, 3, 3, 3,\
    \ 3])\n6\n>>> sum([1, 2, 3, 3, 3, 3, 3])\n6\n>>> sum([1, 2, 3, 3, 3, 3, 3, 3])\n\
    6\n>>> sum([1, 2, 3, 3, 3, 3, 3, 3, 3])\n6\n>>> sum([1, 2, 3, 3, 3, 3, 3, 3, 3,\
    \ 3])\n6\n>>> sum([1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3])\n6\n>>> sum([1, 2, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3])\n6\n>>> sum([1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])\n\
    6\n>>> sum([1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])\n6\n>>> sum([1, 2, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])\n6\n>>> sum([1, 2, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])\n6\n>>> sum([1, 2, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])\n6\n>>> sum([1, 2, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])\n6\n>>> sum([1, 2, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])\n6\n>>> sum([1, 2, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])\n6\n\
    >>> sum([1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3])\n6\n>>> sum([1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])\n6\n>>> sum([1,\
    \ 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3])\n6\n>>> sum([1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])\n6\n>>> sum([1,\
    \ 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])\n6\n>>> sum([1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3])\n6\n>>> sum([1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])\n6\n>>> sum([1,\
    \ 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3])\n6\n>>> sum([1, 2, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,\
    \ 3, 3, 3, 3, 3, 3])\n6\n>>> \nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxy7rh111.jl:22\nin expression starting at\
    \ /tmp/tmpxy7rh111.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvvwebudg.jl:22\nin expression starting at\
    \ /tmp/tmpvvwebudg.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9vgnxp57.jl:22\nin expression starting at\
    \ /tmp/tmp9vgnxp57.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvvwebudg.jl:22\nin expression starting at\
    \ /tmp/tmpvvwebudg.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvvwebudg.jl:22\nin expression starting at\
    \ /tmp/tmpvvwebudg.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers !=\
    \ numbers[end]]\n    \n    return numbers\nend\n</cell>\n<text>\nExercise 7: Remove\
    \ duplicates from a list of strings\nWrite a function that removes duplicates\
    \ from a vector of strings. Keep the order of the strings unchanged.\nusing Test\n\
    \n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqw8o3l1z.jl:14\nin expression starting at\
    \ /tmp/tmpqw8o3l1z.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[i+1:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp72rifkhd.jl:22\nin expression starting at\
    \ /tmp/tmp72rifkhd.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    seen = Set{Int64}()\n    \n    for n in numbers\n        if !seen.add(n)\n\
    \            yield n\n        end\n    end\nend\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a vector of integers and returns a vector of integers\
    \ where the values are the sum of the input vector's elements.\nFor example, if\
    \ the input vector is [10, 20, 30], the output vector should be [110, 220, 330].\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxd8be1vx.jl:12\nin expression starting at /tmp/tmpxd8be1vx.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvvwebudg.jl:22\nin expression starting at\
    \ /tmp/tmpvvwebudg.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != 0]\n    for i in\
    \ numbers\n        if !seen.add(i)\n            numbers = numbers[numbers != i]\n\
    \        end\n    end\n    return numbers\nend\n</code>\n<|/ a tags=julia |>\n\
    <| c |>\nThis doesn't work if there are repeated elements in the input vector.\
    \ For example, `remove_duplicates([1, 2, 3, 2, 4])` returns `[1, 3, 2, 4]`.\n\
    <|/ c |>\n<| c |>\nYes, I realized that after I posted my answer. I've updated\
    \ my answer to account for that case.\n<|/ c |>\n<| a tags=julia |>\nHere is a\
    \ solution using filter:\n<code>\njulia> function remove_duplicates(numbers)\n\
    \           filter(x -> !haskey(numbers, x), numbers)\n       end\nremove_duplicates\
    \ (generic function with 1 method)\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwfs6r61s.jl:16\nin expression starting at\
    \ /tmp/tmpwfs6r61s.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp74z5yqtv.jl:21\nin expression starting at\
    \ /tmp/tmp74z5yqtv.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers !=\
    \ numbers[end]]\n    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp019vdhfo.jl:14\nin expression starting at\
    \ /tmp/tmp019vdhfo.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = numbers[numbers\
    \ != numbers[end-1]]\n    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphgcdasat.jl:13\nin expression starting at\
    \ /tmp/tmphgcdasat.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes in a list of numbers\
    \ and returns the sum of the numbers. If the list is empty, return 0.\nusing Test\n\
    \n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7j67276j.jl:22\nin expression starting at\
    \ /tmp/tmp7j67276j.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers !=\
    \ numbers[end]]\n    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp019vdhfo.jl:14\nin expression starting at\
    \ /tmp/tmp019vdhfo.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set()\n    numbers = numbers[numbers != numbers]\n    numbers =\
    \ numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n   \
    \ numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[number\nusing\
    \ Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6v_lbqme.jl:1\nin expression starting at /tmp/tmp6v_lbqme.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != numbers]\n    numbers\
    \ = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n \
    \   numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    number\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_b8k462n.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_b8k462n.jl:1\n\
    in expression starting at /tmp/tmp_b8k462n.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    numbers = sort(numbers)\n    numbers = numbers[numbers != numbers[end]]\n\
    \    return numbers\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3v0xawxm.jl:11\nin expression starting at\
    \ /tmp/tmp3v0xawxm.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<text>\nremove_duplicates\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplq0nzy1d.jl:21\nin expression starting at\
    \ /tmp/tmplq0nzy1d.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns a vector of integers where the integers are the squares of those\
    \ in the original vector. For example, if the input vector is [4, 9, 16, 25],\
    \ then the output vector should be [16, 25, 64, 125]. The input vector is assumed\
    \ to be sorted.\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyw2evcjl.jl:21\nin expression starting at\
    \ /tmp/tmpyw2evcjl.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = numbers[numbers != numbers[end]]\n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz7yq478x.jl:11\nin expression starting at\
    \ /tmp/tmpz7yq478x.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    numbers = sort(numbers)\n    numbers = numbers[numbers != numbers[end]]\n\
    \    return numbers\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nThis doesn't\
    \ work for me. `remove_duplicates([1, 2, 3, 2, 4])` returns `[1, 2, 3, 4]`\n<|/\
    \ c |>\n<| c |>\nI tested it and it works for me. Are you sure you copied the\
    \ code correctly? The function should return `[1, 3, 4]`\n<|/ c |>\n<| c |>\n\
    Yes, I copied the code correctly. I just tried it again and it works now. Thanks!\n\
    <|/ c |>\n<| a dscore=2 |>\nI came up with a solution that is more efficient than\
    \ sorting the vector and removing duplicates. It is based on a hash table and\
    \ should be O(n) time complexity and O(1) space complexity.\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu3xci4un.jl:11\nin expression starting at\
    \ /tmp/tmpu3xci4un.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = numbers[numbers != numbers[end]]\n    return numbers\n\
    end\n</cell>\n<code language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjkqon0cj.jl:11\nin expression starting at\
    \ /tmp/tmpjkqon0cj.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != 0]\n    for n in\
    \ numbers\n        if !seen[n]\n            seen[n] = true\n            numbers\
    \ = numbers - n\n        end\n    end\n    return numbers\nend\n</code>\n<|/ a\
    \ tags=julia,arrays |>\n<| a tags=julia,arrays |>\nI believe that this is more\
    \ efficient than using Sets:\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4g8kgz2t.jl:17\nin expression starting at\
    \ /tmp/tmp4g8kgz2t.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = numbers[numbers != numbers[end]]\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4a9uh9vs.jl:12\nin expression starting at\
    \ /tmp/tmp4a9uh9vs.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = filter(x -> !seen.add(x), numbers)\n\
    \    return numbers\nend\n</code>\n<|/ a tags=julia,arrays |>\n<| c |>\nThis does\
    \ not answer the question. OP wants to remove duplicates, not remove all duplicates.\n\
    <|/ c |>\n<| c |>\nI agree with you. My answer was more of a general solution\
    \ to remove duplicates. I edited my answer to make it more clear.\n<|/ c |>\n\
    <| a dscore=2 |>\nThe most efficient way is to use Sets:\n<code>\njulia> a = [1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20]\n\
    20-element Array{Int64,1}:\n 1  1  2  2  3  3  4  4  5  5  6  6  7  7  8  8  9\
    \  9  10  10  11  11  12  12  13  13  14  14  15  15  16  16  17  17  18  18 \
    \ 19  19  20\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvlnms_u7.jl:11\nin expression starting at\
    \ /tmp/tmpvlnms_u7.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphfa85h4l.jl:21\nin expression starting at\
    \ /tmp/tmphfa85h4l.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = numbers[numbers != numbers[end]]\n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz7yq478x.jl:11\nin expression starting at\
    \ /tmp/tmpz7yq478x.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    seen = Set{Int64}()\n    \n    numbers = numbers[numbers != numbers]\n\
    \    \n    for i in numbers\n        if !seen.add(i)\n            numbers = numbers[numbers\
    \ != i]\n        end\n    end\n    \n    return numbers\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that removes all the elements that are less than\
    \ a given number.\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpatnq8l10.jl:20\nin expression starting at\
    \ /tmp/tmpatnq8l10.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != 0]\n    for i in\
    \ numbers\n        if !seen.add(i)\n            numbers = numbers - i\n      \
    \  end\n    end\n    return numbers\nend\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes an array of integers and returns the sum of the squares\
    \ of the integers in the array.\nFor example, given [4, 9, 16, 9, 4, 9, 12], the\
    \ function should return 50.\nWrite a function that takes an array of integers\
    \ and returns the sum of the squares of the integers in the array.\nFor example,\
    \ given [4, 9, 16, 9, 4, 9, 12], the function should return 50.\nWrite a function\
    \ that takes an array of integers and returns the sum of the squares of the integers\
    \ in the array.\nFor example, given [4, 9, 16, 9, 4, 9, 12], the function should\
    \ return 50.\nWrite a function that takes an array of integers and returns the\
    \ sum of the squares of the integers in the array.\nFor example, given [4, 9,\
    \ 16, 9, 4, 9, 12], the function should return 50.\nWrite a function that takes\
    \ an array of integers and returns the sum of the squares of the integers in the\
    \ array.\nFor example, given [4, 9, 16, 9, 4, 9, 12], the function should return\
    \ 50.\nWrite a function that takes an array of integers and returns the sum of\
    \ the squares of the integers in the array.\nFor example, given [4, 9, 16, 9,\
    \ 4, 9, 12], the function should return 50.\nWrite a function that takes an array\
    \ of integers and returns the sum of the squares of the integers in the array.\n\
    For example, given [4, 9, 16, 9, 4, 9, 12], the function should return 50.\nWrite\
    \ a function that takes an array of integers and returns the sum of the squares\
    \ of the integers in the array.\nFor example, given [4, 9, 16, 9, 4, 9, 12], the\
    \ function should return 50.\nWrite a function that takes an array of integers\
    \ and returns the sum of the squares of the integers in the array.\nFor example,\
    \ given [4, 9, 16, 9, 4, 9, 12], the function should return 50.\nWrite a function\
    \ that takes an array of integers and returns the sum of the squares of the integers\
    \ in the array.\nFor example, given [4, 9, 16, 9, 4, 9, 12], the function should\
    \ return 50.\nWrite a function that takes an array of integers and returns the\
    \ sum of the squares of the integers in the array.\nFor example, given [4, 9,\
    \ 16, 9, 4, 9, 12], the function should return 50.\nWrite a function that takes\
    \ an array of integers and returns the sum of the squares of the integers in the\
    \ array.\nFor example, given [4, 9, 16, 9, 4, 9, 12], the function should return\
    \ 50.\nWrite a function that takes an array of integers and returns the sum of\
    \ the squares of the integers in the array.\nFor example, given [4, 9, 16, 9,\
    \ 4, 9, 12], the function should return 50.\nWrite a function that \nusing Test\n\
    \n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprpcyn1sz.jl:16\nin expression starting at\
    \ /tmp/tmprpcyn1sz.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp74z5yqtv.jl:21\nin expression starting at\
    \ /tmp/tmp74z5yqtv.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvvwebudg.jl:22\nin expression starting at\
    \ /tmp/tmpvvwebudg.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of integers\
    \ and returns a vector of integers where the values are the sum of the input vector's\
    \ elements.\nFor example, if the input vector is [1,2,3], the output vector should\
    \ be [3,4,6].\nIf the input vector is [1,2,2,3], the output vector should be [4,5,6].\n\
    If the input vector is [1,2,3], the output vector should be [3,6,9].\nIf the input\
    \ vector is [1,2,2,3], the output vector should be [4,8,12].\nIf the input vector\
    \ is [1,2,3], the output vector should be [3,6,9].\nIf the input vector is [1,2,2,3],\
    \ the output vector should be [4,8,12].\nIf the input vector is [1,2,3], the output\
    \ vector should be [3,6,9].\nIf the input vector is [1,2,2,3], the output vector\
    \ should be [4,8,12].\nIf the input vector is [1,2,3], the output vector should\
    \ be [3,6,9].\nIf the input vector is [1,2,2,3], the output vector should be [4,8,12].\n\
    If the input vector is [1,2,3], the output vector should be [3,6,9].\nIf the input\
    \ vector is [1,2,2,3], the output vector should be [4,8,12].\nIf the input vector\
    \ is [1,2,3], the output vector should be [3,6,9].\nIf the input vector is [1,2,2,3],\
    \ the output vector should be [4,8,12].\nIf the input vector is [1,2,3], the output\
    \ vector should be [3,6,9].\nIf the input vector is [1,2,2,3], the output vector\
    \ should be [4,8,12].\nIf the input vector is [1,2,3], the output vector should\
    \ be [3,6,9].\nIf the input vector is [1,2,2,3], the output vector should be [4,8,12].\n\
    If the input vector is [1,2,3], the output vector should be [3,6,9].\nIf the input\
    \ vector is [1,2,2,3], the output vector should be [4,8,12].\nIf the input vector\
    \ is [1,2,3], the output vector should be [3,6,9].\nIf the input vector is [1,2,2,3],\
    \ the output vector should be [4,8,12].\nIf the input vector is [1,2,3], the output\
    \ vector should be [3,6,9].\nIf the input vector is [1,2,2,3], the output vector\
    \ should be [4,8,12].\nIf the input vector is [1,2,3], \nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp904n2nek.jl:22\nin expression starting at\
    \ /tmp/tmp904n2nek.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = numbers[numbers != numbers[end]]\n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz7yq478x.jl:11\nin expression starting at\
    \ /tmp/tmpz7yq478x.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9vgnxp57.jl:22\nin expression starting at\
    \ /tmp/tmp9vgnxp57.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != 0]\n    for n in\
    \ numbers\n        if !seen[n]\n            seen[n] = true\n            numbers\
    \ = numbers - n\n        end\n    end\n    return numbers\nend\n</code>\n<|/ a\
    \ dscore=2 |>\n<| c |>\nThis code doesn't work. `numbers = numbers[numbers !=\
    \ 0]` will remove all zeros from the vector. `numbers = numbers - n` will remove\
    \ all non-zero numbers from the vector. `numbers = numbers - n` will remove all\
    \ non-zero numbers from the vector. `numbers = numbers - n` will remove all non-zero\
    \ numbers from the vector. `numbers = numbers - n` will remove all non-zero numbers\
    \ from the vector. `numbers = numbers - n` will remove all non-zero numbers from\
    \ the vector. `numbers = numbers - n` will remove all non-zero numbers from the\
    \ vector. `numbers = numbers - n` will remove all non-zero numbers from the vector.\
    \ `numbers = numbers - n` will remove all non-zero numbers from the vector. `numbers\
    \ = numbers - n` will remove all non-zero numbers from the vector. `numbers =\
    \ numbers - n` will remove all non-zero numbers from the vector. `numbers = numbers\
    \ - n` will remove all non-zero numbers from the vector. `numbers = numbers -\
    \ n` will remove all non-zero numbers from the vector. `numbers = numbers - n`\
    \ will remove all non-zero numbers from the vector. `numbers = numbers - n` will\
    \ remove all non-zero numbers from the vector. `numbers = numbers - n` will remove\
    \ all non-zero numbers from the vector. `numbers = numbers - n` will remove all\
    \ non-zero numbers from the vector. `numbers = numbers - n` will remove all non-zero\
    \ numbers from the vector. `numbers = numbers - n` will remove all non-zero numbers\
    \ from the vector. `numbers = numbers - n` will remove all non-zero numbers from\
    \ the vector. `numbers = numbers - n` will remove all non-zero numbers from the\
    \ vector. `numbers = numbers - n` will remove all non-zero numbers from the vector.\
    \ `numbers = numbers - n` will remove all non-zero numbers from the vector. `numbers\
    \ = numbers - n` will remove all non-zero numbers from the vector. `numbers =\
    \ numbers - n` will remove all non-zero numbers from the vector. `numbers = numbers\
    \ - n` will remove all non-zero numbers from the vector. `numbers = numbers -\
    \ n` will remove all non-zero numbers from the vector. `numbers = numbers - n`\
    \ will remove \nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd9c_mb_7.jl:17\nin expression starting at\
    \ /tmp/tmpd9c_mb_7.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    numbers = sort(numbers)\n    numbers = numbers[Set{Int64}((numbers))]\n\
    \    return numbers\nend\n</code>\n<|/ a tags=julia,duplicates,arrays |>\n<| a\
    \ tags=julia,duplicates,arrays |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpli9lom03.jl:11\nin expression starting at\
    \ /tmp/tmpli9lom03.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != numbers]\n    numbers\
    \ = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n \
    \   numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    number\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_b8k462n.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_b8k462n.jl:1\n\
    in expression starting at /tmp/tmp_b8k462n.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != 0]\n    numbers\
    \ = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers =\
    \ numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers\
    \ != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers !=\
    \ 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n\
    \    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n  \
    \  numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers\
    \ = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers =\
    \ numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers\
    \ != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers !=\
    \ 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n\
    \    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n  \
    \  numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers\
    \ = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers =\
    \ numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers\
    \ != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers !=\
    \ 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n\
    \    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n  \
    \  numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers\
    \ = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers =\
    \ numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers\
    \ != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers !=\
    \ 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n\
    \    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n  \
    \  numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers\
    \ = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers =\
    \ numbers[numbers != \nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0pdbmfav.jl:1\nin expression starting at /tmp/tmp0pdbmfav.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    seen = Set{Int64}()\n    \n    for n in numbers\n        if !seen.addn(n)\n\
    \            push!(seen, n)\n        end\n    end\n    \n    return seen.to_array()\n\
    end\n</cell>\n<text>\nExercise: Remove duplicates from a vector of strings\nWrite\
    \ a function that removes duplicates from a vector of strings. \nThe function\
    \ should return a vector of strings.\nThe function should remove duplicates.\n\
    The function should keep order of elements left the same as in the input.\nThe\
    \ function should remove all elements that occur more than once.\nThe function\
    \ should keep order of elements left the same as in the input.\nThe function should\
    \ remove all elements that occur more than once.\nThe function should keep order\
    \ of elements left the same as in the input.\nThe function should remove all elements\
    \ that occur more than once.\nThe function should keep order of elements left\
    \ the same as in the input.\nThe function should remove all elements that occur\
    \ more than once.\nThe function should keep order of elements left the same as\
    \ in the input.\nThe function should remove all elements that occur more than\
    \ once.\nThe function should keep order of elements left the same as in the input.\n\
    The function should remove all elements that occur more than once.\nThe function\
    \ should keep order of elements left the same as in the input.\nThe function should\
    \ remove all elements that occur more than once.\nThe function should keep order\
    \ of elements left the same as in the input.\nThe function should remove all elements\
    \ that occur more than once.\nThe function should keep order of elements left\
    \ the same as in the input.\nThe function should remove all elements that occur\
    \ more than once.\nThe function should keep order of elements left the same as\
    \ in the input.\nThe function should remove all elements that occur more than\
    \ once.\nThe function should keep order of elements left the same as in the input.\n\
    The function should remove all elements that occur more than once.\nThe function\
    \ should keep order of elements left the same as in the input.\nThe function should\
    \ remove all elements that occur more than once.\nThe function should keep order\
    \ of elements left the same as in the input.\nThe function should remove all elements\
    \ that occur more than once.\nThe function should keep order of elements left\
    \ the same as in the input.\nThe function should remove all elements that occur\
    \ more than once.\nThe function should keep order of elements left the same as\
    \ in the input.\nThe function should remove all elements that occur more than\
    \ once.\nThe function should keep order of elements left the same as in the input.\n\
    The function should remove all elements that occur more than once.\nThe function\
    \ should keep order of elements left the same as in the input.\nThe function should\
    \ remove all elements that occur more than once.\nThe function should keep order\
    \ of elements left the same as in the input.\nThe function should remove all \n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsop8sleb.jl:18\nin expression starting at\
    \ /tmp/tmpsop8sleb.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != 0]\n    numbers\
    \ = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers =\
    \ numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers\
    \ != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers !=\
    \ 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n\
    \    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n  \
    \  numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers\
    \ = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers =\
    \ numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers\
    \ != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers !=\
    \ 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n\
    \    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n  \
    \  numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers\
    \ = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers =\
    \ numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers\
    \ != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers !=\
    \ 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n\
    \    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n  \
    \  numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers\
    \ = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers =\
    \ numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers\
    \ != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers !=\
    \ 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n\
    \    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n  \
    \  numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers\
    \ = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers =\
    \ numbers[numbers != \nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0pdbmfav.jl:1\nin expression starting at /tmp/tmp0pdbmfav.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != 0]\n    for n in\
    \ numbers\n        if !seen.contains(n)\n            seen += n\n            numbers\
    \ = numbers[numbers != n]\n        end\n    end\n    return numbers\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that removes all the elements from a vector\
    \ that occur more than once.\nFor example, remove_duplicates([1, 2, 3, 2, 4])\
    \ returns [1, 3, 4].\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzmol985x.jl:17\nin expression starting at\
    \ /tmp/tmpzmol985x.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers !=\
    \ numbers[end]]\n    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp019vdhfo.jl:14\nin expression starting at\
    \ /tmp/tmp019vdhfo.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != numbers]\n    for\
    \ i in numbers\n        if !seen.add(i)\n            numbers = numbers[numbers\
    \ != i]\n        end\n    end\n    return numbers\nend\n</cell>\n<text>\nremove_duplicates\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpogl1_6t7.jl:16\nin expression starting at\
    \ /tmp/tmpogl1_6t7.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    seen = Set{Int64}()\n    \n    for n in numbers\n        if !seen.add(n)\n\
    \            push!(seen, n)\n        end\n    end\n    \n    return seen.to_array()\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmjmr9rtw.jl:18\nin expression starting at\
    \ /tmp/tmpmjmr9rtw.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != numbers]\n    for\
    \ i in numbers\n        if !seen.add(i)\n            numbers = numbers[numbers\
    \ != i]\n        end\n    end\n    return numbers\nend\n</code>\n<|/ a tags=julia\
    \ |>\n<| c |>\nI guess you meant `numbers = numbers[numbers != numbers]` instead\
    \ of `numbers = numbers[numbers != i]`\n<|/ c |>\n<| c |>\nThanks, I fixed the\
    \ typo.\n<|/ c |>\n<| a tags=julia |>\nHere's a solution using sets:\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnslgnx9k.jl:16\nin expression starting at\
    \ /tmp/tmpnslgnx9k.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != 0]\n    for n in\
    \ numbers\n        if !seen[n]\n            seen[n] = true\n            numbers\
    \ = numbers[numbers != n]\n        end\n    end\n    return numbers\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp315dqa4p.jl:17\nin expression starting at\
    \ /tmp/tmp315dqa4p.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != 0]\n    for n in\
    \ numbers\n        if !seen[n]\n            seen[n] = true\n            numbers\
    \ = numbers - n\n        end\n    end\n    return numbers\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprncegkqq.jl:17\nin expression starting at\
    \ /tmp/tmprncegkqq.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != numbers]\n    numbers\
    \ = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n \
    \   numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    number\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_b8k462n.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_b8k462n.jl:1\n\
    in expression starting at /tmp/tmp_b8k462n.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != 0]\n    for n in\
    \ numbers\n        if !seen[n]\n            push!(seen, n)\n        end\n    end\n\
    \    return numbers\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqx1mhfv6.jl:16\nin expression starting at\
    \ /tmp/tmpqx1mhfv6.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != numbers]\n    numbers\
    \ = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n \
    \   numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    number\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_b8k462n.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_b8k462n.jl:1\n\
    in expression starting at /tmp/tmp_b8k462n.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != numbers]\n    for\
    \ i in numbers\n        if !seen.add(i)\n            numbers = numbers[numbers\
    \ != i]\n        end\n    end\n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcca_ds_g.jl:16\nin expression starting at\
    \ /tmp/tmpcca_ds_g.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpccnnsz74.jl:22\nin expression starting at\
    \ /tmp/tmpccnnsz74.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    seen = Set{Int64}()\n    \n    for n in numbers\n        if !seen.add(n)\n\
    \            yield n\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype remove_duplicates([1, 2, 3, 2, 4])\n</cell>\n<text>\nremove_duplicates!\
    \ removes elements from a vector while iterating over it\nThis is useful if you\
    \ want to remove elements from a vector while iterating over it\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"n\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7r68qx55.jl:12\nin expression starting at /tmp/tmp7r68qx55.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    numbers = sort(numbers)\n    numbers = numbers[numbers != numbers[end]]\n\
    \    return numbers\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3v0xawxm.jl:11\nin expression starting at\
    \ /tmp/tmp3v0xawxm.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != 0]\n    for n in\
    \ numbers\n        if !seen[n]\n            seen[n] = true\n            numbers\
    \ = numbers - n\n        end\n    end\n    return numbers\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprncegkqq.jl:17\nin expression starting at\
    \ /tmp/tmprncegkqq.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != numbers]\n    numbers\
    \ = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n \
    \   numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    number\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_b8k462n.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_b8k462n.jl:1\n\
    in expression starting at /tmp/tmp_b8k462n.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes an array of integers\
    \ and returns the sum of the squares of the integers in the array.\nusing Test\n\
    \n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3s5e6zvl.jl:22\nin expression starting at\
    \ /tmp/tmp3s5e6zvl.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    numbers = numbers[Set{Int64}(numbers)]\n    return numbers\nend\n</code>\n\
    <|/ a |>\n<| a |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyw3ueor3.jl:10\nin expression starting at\
    \ /tmp/tmpyw3ueor3.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    seen = Set()\n    \n    for n in numbers\n        if !seen.addn(n)\n\
    \            push!(seen, n)\n        end\n    end\n    \n    return seen.to_a\n\
    end\n</cell>\n<code language=julia-1.5>\n@test remove_duplicates([1, 2, 3, 2,\
    \ 4]) == [1, 3, 4]\n</cell>\n<text>\nExercise: Remove duplicates from a vector\
    \ of strings\nWrite a function that removes duplicates from a vector of strings.\
    \ Keep the order of the strings unchanged.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps92k70cy.jl:18\nin expression starting at\
    \ /tmp/tmps92k70cy.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != 0]\n    numbers\
    \ = numbers[numbers != 0]\n    for i in numbers\n        if !seen.add(i)\n   \
    \         numbers = numbers[numbers != i]\n        end\n    end\n    return numbers\n\
    end\n</code>\n<|/ a tags=julia |>\n<| a tags=julia |>\nThe answer by is great\
    \ but can be improved by using Julia's built-in filter function and by using the\
    \ Julia set data structure instead of an array. \n<code>\njulia> numbers = [1,\
    \ 2, 3, 2, 4]\njulia> filter(x -> x != 0, numbers)\n1-element Array{Int64,1}:\n\
    \ 1\n</code>\n<|/ a dscore=2 |>\n<| a tags=julia |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0qx29bob.jl:17\nin expression starting at\
    \ /tmp/tmp0qx29bob.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    numbers = sort(numbers)\n    numbers = numbers[numbers != numbers[end]]\n\
    \    return numbers\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3v0xawxm.jl:11\nin expression starting at\
    \ /tmp/tmp3v0xawxm.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = numbers[numbers .!= numbers[end]]\n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpttose99r.jl:11\nin expression starting at\
    \ /tmp/tmpttose99r.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvvwebudg.jl:22\nin expression starting at\
    \ /tmp/tmpvvwebudg.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphfa85h4l.jl:21\nin expression starting at\
    \ /tmp/tmphfa85h4l.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    seen = Set{Int64}()\n    \n    for n in numbers\n        if !seen.addn(n)\n\
    \            push!(seen, n)\n        end\n    end\n    \n    return seen.to_list()\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6gyx53vv.jl:18\nin expression starting at\
    \ /tmp/tmp6gyx53vv.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = numbers[numbers != numbers[end]]\n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz7yq478x.jl:11\nin expression starting at\
    \ /tmp/tmpz7yq478x.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    seen = Set{Int64}()\n    \n    for n in numbers\n        if !seen.add(n)\n\
    \            push!(seen, n)\n        end\n    end\n    \n    return collect(seen)\n\
    end\n</cell>\n<code language=julia-1.5>\n@test remove_duplicates([1, 2, 3, 2,\
    \ 4]) == [1, 3, 4]\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ vector of integers and returns a vector of integers where the values are the\
    \ square of those in the original vector. For example, if the input vector is\
    \ [4, 9, 16, 25], then the output vector should be [16, 25, 64, 125]. Make sure\
    \ your function works with negative numbers as well.\nusing Test\n\n@testset begin\n\
    \ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7ltqa2p4.jl:18\nin expression starting at\
    \ /tmp/tmp7ltqa2p4.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != 0]\n    numbers\
    \ = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers =\
    \ numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers\
    \ != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers !=\
    \ 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n\
    \    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n  \
    \  numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers\
    \ = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers =\
    \ numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers\
    \ != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers !=\
    \ 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n\
    \    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n  \
    \  numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers\
    \ = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers =\
    \ numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers\
    \ != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers !=\
    \ 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n\
    \    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n  \
    \  numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers\
    \ = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers =\
    \ numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers\
    \ != 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers !=\
    \ 0]\n    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n\
    \    numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n  \
    \  numbers = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers\
    \ = numbers[numbers != 0]\n    numbers = numbers[numbers != 0]\n    numbers =\
    \ numbers[numbers != \nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0pdbmfav.jl:1\nin expression starting at /tmp/tmp0pdbmfav.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns a vector of integers where the values are the square of those in\
    \ the original vector.\nFor example, if the input vector is [1,2,3], the output\
    \ vector should be [1, 4, 9].\nThe input vector will always be sorted.\nThe output\
    \ vector will always be sorted.\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6df5mekj.jl:21\nin expression starting at\
    \ /tmp/tmp6df5mekj.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = filter(x -> !seen[x], numbers)\n  \
    \  return numbers\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a vector of integers and returns a vector of integers where the integers are\
    \ in descending order.\nFor example, if the input vector is [4, 3, 1, 2, 5] then\
    \ the output vector should be [5, 3, 2, 4, 1].\nHint: Use a for loop to iterate\
    \ over the input vector.\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf4y2fja3.jl:11\nin expression starting at\
    \ /tmp/tmpf4y2fja3.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != numbers]\n    for\
    \ i in numbers\n        if !seen.add(i)\n            numbers = numbers[numbers\
    \ != i]\n        end\n    end\n    return numbers\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8yf512n_.jl:16\nin expression starting at\
    \ /tmp/tmp8yf512n_.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != 0]\n    numbers\
    \ = numbers[numbers != 0]\n    for i in numbers\n        if !seen.add(i)\n   \
    \         numbers = numbers[numbers != i]\n        end\n    end\n    return numbers\n\
    end\n</code>\n<|/ a tags=julia,arrays |>\n<| a tags=julia,arrays |>\nI wanted\
    \ to remove duplicates from a vector and I wanted to preserve the order of the\
    \ elements. I came up with this solution:\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbc7n8uxh.jl:17\nin expression starting at\
    \ /tmp/tmpbc7n8uxh.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    seen = Set{Int64}()\n    \n    for n in numbers\n        if !seen.add(n)\n\
    \            push!(seen, n)\n        end\n    end\n    \n    return collect(seen)\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz23u2xzi.jl:18\nin expression starting at\
    \ /tmp/tmpz23u2xzi.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = numbers[numbers != numbers[end]]\n    numbers = numbers[numbers\
    \ != numbers[end-1]]\n    numbers = numbers[numbers != numbers[end-2]]\n    numbers\
    \ = numbers[numbers != numbers[end-3]]\n    numbers = numbers[numbers != numbers[end-4]]\n\
    \    numbers = numbers[numbers != numbers[end-5]]\n    numbers = numbers[numbers\
    \ != numbers[end-6]]\n    numbers = numbers[numbers != numbers[end-7]]\n    numbers\
    \ = numbers[numbers != numbers[end-8]]\n    numbers = numbers[numbers != numbers[end-9]]\n\
    \    numbers = numbers[numbers != numbers[end-10]]\n    numbers = numbers[numbers\
    \ != numbers[end-11]]\n    numbers = numbers[numbers != numbers[end-12]]\n   \
    \ numbers = numbers[numbers != numbers[end-13]]\n    numbers = numbers[numbers\
    \ != numbers[end-14]]\n    numbers = numbers[numbers != numbers[end-15]]\n   \
    \ numbers = numbers[numbers != numbers[end-16]]\n    numbers = numbers[numbers\
    \ != numbers[end-17]]\n    numbers = numbers[numbers != numbers[end-18]]\n   \
    \ numbers = numbers[numbers != numbers[end-19]]\n    numbers = numbers[numbers\
    \ != numbers[end-20]]\n    numbers = numbers[numbers != numbers[end-21]]\n   \
    \ numbers = numbers[numbers != numbers[end-22]]\n    numbers = numbers[numbers\
    \ != numbers[end-23]]\n    numbers = numbers[numbers != numbers[end-24]]\n   \
    \ numbers = numbers[numbers != numbers[end-25]]\n    numbers = numbers[numbers\
    \ != numbers[end-26]]\n    numbers = numbers[numbers != numbers[end-27]]\n   \
    \ numbers = numbers[numbers != numbers[end-28]]\n    numbers = numbers[numbers\
    \ != numbers[end-29]]\n    numbers = numbers[numbers != numbers[end-30]]\n   \
    \ numbers = numbers[numbers != numbers[end-31]]\n    numbers = numbers[numbers\
    \ != numbers[end-32]]\n    numbers = numbers[numbers != numbers[end-33]]\n   \
    \ numbers = numbers[numbers != numbers[end-34]]\n    numbers = numbers[numbers\
    \ != numbers[end-35]]\n    numbers = numbers[numbers != numbers[end-36]]\n   \
    \ numbers = numbers[numbers != numbers[end-37]]\n    numbers = numbers[numbers\
    \ != numbers[end-38]]\n    \nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptwem1smr.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptwem1smr.jl:1\n\
    in expression starting at /tmp/tmptwem1smr.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<text>\nExercise 2: Remove duplicates from a vector of strings\n\
    Write a function that removes duplicates from a vector of strings. Your function\
    \ should return a vector of strings with the duplicates removed.\nusing Test\n\
    \n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo8o2c0ho.jl:21\nin expression starting at\
    \ /tmp/tmpo8o2c0ho.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers !=\
    \ numbers[end]]\n    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp019vdhfo.jl:14\nin expression starting at\
    \ /tmp/tmp019vdhfo.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != numbers]\n    numbers\
    \ = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n \
    \   numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    numbers = numbers[numbers != numbers]\n\
    \    numbers = numbers[numbers != numbers]\n    number\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_b8k462n.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_b8k462n.jl:1\n\
    in expression starting at /tmp/tmp_b8k462n.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvvwebudg.jl:22\nin expression starting at\
    \ /tmp/tmpvvwebudg.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers !=\
    \ numbers[end]]\n    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp019vdhfo.jl:14\nin expression starting at\
    \ /tmp/tmp019vdhfo.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    numbers = sort(numbers)\n    numbers = numbers[numbers != numbers[end]]\n\
    \    return numbers\nend\n</code>\n<|/ a |>\n<| c |>\nThis doesn't work for me.\
    \ `remove_duplicates([1, 2, 3, 2, 4])` returns `[1, 3, 2, 4]` instead of `[1,\
    \ 3, 4]`.\n<|/ c |>\n<| c |>\nI tested it on Julia 1.5.1 and it works. Maybe you\
    \ have a different version?\n<|/ c |>\n<| c |>\nI tested it on Julia 1.5.1 and\
    \ it works. Maybe you have a different version?\n<|/ c |>\n<| c |>\nI tested it\
    \ on Julia 1.5.1 and it works. Maybe you have a different version?\n<|/ c |>\n\
    <| c |>\nI tested it on Julia 1.5.1 and it works. Maybe you have a different version?\n\
    <|/ c |>\n<| a dscore=3 |>\nI came up with this solution:\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj8v2c6u9.jl:11\nin expression starting at\
    \ /tmp/tmpj8v2c6u9.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != numbers]\n    for\
    \ i in numbers\n        if !seen.add(i)\n            numbers = numbers[numbers\
    \ != i]\n        end\n    end\n    return numbers\nend\n</code>\n<|/ a tags=julia\
    \ |>\n<| c |>\nThis doesn't work if there are repeated elements in the input vector.\
    \ For example, if `numbers = [1, 2, 3, 2]`, then `remove_duplicates(numbers)`\
    \ returns `[1, 1, 2, 2, 3]` instead of `[1, 2, 3]`.\n<|/ c |>\n<| c |>\nYes, I\
    \ noticed that and fixed it. I also added a version that doesn't require a set\
    \ and uses `filter` instead of `map`.\n<|/ c |>\n<| a dscore=3 |>\nA simple solution\
    \ is to use unique:\n<code>\njulia> numbers = [1, 2, 3, 2]\n4-element Array{Int64,1}:\n\
    \ 1\n 2\n 3\n 2\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2cex0x3i.jl:16\nin expression starting at\
    \ /tmp/tmp2cex0x3i.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    numbers = sort(numbers)\n    numbers = numbers[numbers != numbers[end]]\n\
    \    return numbers\nend\n</code>\n<|/ a tags=julia |>\n<| a dscore=1 |>\n<code>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgtxzvwbe.jl:11\nin expression starting at\
    \ /tmp/tmpgtxzvwbe.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the\
    \ numbers in a vector.\nFor example, sum([1, 2, 3]) should return 6.\nHint: use\
    \ the reduce function.\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyw9aqoav.jl:21\nin expression starting at\
    \ /tmp/tmpyw9aqoav.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = filter(x -> !seen[x], numbers)\n  \
    \  return numbers\nend\n</code>\n<|/ a tags=julia,arrays |>\n<| a dscore=2 |>\n\
    The most efficient way is to use Sets:\n<code>\njulia> a = [1,2,2,3,4,4,4,5,6,7,8,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcglljsbl.jl:11\nin expression starting at\
    \ /tmp/tmpcglljsbl.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphfa85h4l.jl:21\nin expression starting at\
    \ /tmp/tmphfa85h4l.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[i+1:length(numbers)]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    numbers\nend\n\
    </cell>\n<text>\nExercise 3: Remove duplicates from a list of strings\nWrite a\
    \ function that removes duplicates from a vector of strings. \nThe function should\
    \ return a new vector of strings that contains only unique strings.\nThe order\
    \ of the strings does not matter.\nFor example, remove_duplicates([\"a\", \"b\"\
    , \"c\", \"a\", \"b\", \"c\"]) should return [\"a\", \"b\", \"c\"].\nusing Test\n\
    \n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpidxujfjp.jl:22\nin expression starting at\
    \ /tmp/tmpidxujfjp.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = numbers[numbers != 0]\n    numbers\
    \ = numbers[numbers != 0]\n    for i in numbers\n        if !seen.add(i)\n   \
    \         numbers = numbers[numbers != i]\n        end\n    end\n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnzf74232.jl:17\nin expression starting at\
    \ /tmp/tmpnzf74232.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers !=\
    \ numbers[end]]\n    \n    return numbers\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector of integers and returns a vector of integers\
    \ where the values are the squares of the original integers. \nFor example, remove_duplicates([1,\
    \ 2, 3, 2, 4]) should return [1, 4, 9, 16, 25].\nusing Test\n\n@testset begin\n\
    \ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvr8mgkxr.jl:14\nin expression starting at\
    \ /tmp/tmpvr8mgkxr.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    numbers = sort(numbers)\n    numbers = numbers[numbers != numbers[end]]\n\
    \    return numbers\nend\n</code>\n<|/ a tags=julia,arrays |>\n<| a |>\nI wrote\
    \ a package for this:\nhttps://github.com/jrockway/UniqueArrays\n<code>\nusing\
    \ UniqueArrays\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq0s3dec8.jl:11\nin expression starting at\
    \ /tmp/tmpq0s3dec8.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    seen = Set{Int64}()\n    numbers = filter(x -> !seen[x], numbers)\n  \
    \  return numbers\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1z6s5nuw.jl:11\nin expression starting at\
    \ /tmp/tmp1z6s5nuw.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    seen = Set{Int64}()\n    \n    for n in numbers\n        if !seen.contains(n)\n\
    \            seen += n\n        else\n            numbers.remove(n)\n        end\n\
    \    end\n    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvy_0qth8.jl:20\nin expression starting at\
    \ /tmp/tmpvy_0qth8.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    seen = Set{Int64}()\n    \n    for n in numbers\n        if !seen.add(n)\n\
    \            push!(seen, n)\n        end\n    end\n    \n    numbers\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr0h_x6qu.jl:18\nin expression starting at\
    \ /tmp/tmpr0h_x6qu.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    while i < length(numbers)\n\
    \        if numbers[i] != numbers[i+1]\n            numbers = numbers[2:end]\n\
    \        else\n            i += 1\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphfa85h4l.jl:21\nin expression starting at\
    \ /tmp/tmphfa85h4l.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    numbers = numbers[numbers !=\
    \ numbers[end]]\n    \n    return numbers\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp019vdhfo.jl:14\nin expression starting at\
    \ /tmp/tmp019vdhfo.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = numbers[numbers != numbers[end]]\n    \n    return numbers\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector of integers\
    \ and returns a vector of integers where the integers are in descending order.\n\
    For example, if the input vector is [4, 2, 6, 1, 3], then the output vector should\
    \ be [4, 2, 6, 3].\nusing Test\n\n@testset begin\n\ncandidate = remove_duplicates;\n\
    \t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1,\
    \ 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7dzdztdq.jl:12\nin expression starting at\
    \ /tmp/tmp7dzdztdq.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = remove_duplicates;\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t\
    @test(candidate([1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpsx7btjsl.jl:6\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsx7btjsl.jl:1\n\
    in expression starting at /tmp/tmpsx7btjsl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" From a vector of integers, remove all elements that occur more\
    \ than once.\n    Keep order of elements left the same as in the input.\n    >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n    [1, 3, 4]\n    \"\"\"\nfunction remove_duplicates(numbers::Vector{Int64})::Vector{Int64}\
    \ \n    \n    numbers = sort(numbers)\n    \n    i = 0\n    \n    while i < length(numbers)\n\
    \        if numbers[i] == numbers[i+1]\n            i += 1\n        else\n   \
    \         numbers = numbers[i+1:end]\n        end\n    end\n    \n    return numbers\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = remove_duplicates;\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, 2, 3, 4]) == [1, 2, 3, 4])\n\t@test(candidate([1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpybxdyrvi.jl:22\nin expression starting at\
    \ /tmp/tmpybxdyrvi.jl:22\n"
  stdout: ''

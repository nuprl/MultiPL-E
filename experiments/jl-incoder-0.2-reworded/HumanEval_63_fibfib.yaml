name: HumanEval_63_fibfib
language: jl
prompt: "\"\"\"The FibFib number sequence is a sequence similar to the Fibbonacci\
  \ sequnece that's defined as follows:\n    fibfib(0) == 0\n    fibfib(1) == 0\n\
  \    fibfib(2) == 1\n    fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
  \    Please write a function to efficiently compute the n-th element of the fibfib\
  \ number sequence.\n    >>> fibfib(1)\n    0\n    >>> fibfib(5)\n    4\n    >>>\
  \ fibfib(8)\n    24\n    \"\"\"\nfunction fibfib(n::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = fibfib;\n\t@test(candidate(2)\
  \ == 1)\n\t@test(candidate(1) == 0)\n\t@test(candidate(5) == 4)\n\t@test(candidate(8)\
  \ == 24)\n\t@test(candidate(10) == 81)\n\t@test(candidate(12) == 274)\n\t@test(candidate(14)\
  \ == 927)\nend\n"
completions: ["    if n == 0 \n        0\n    else if n == 1 \n        0\n    else\
    \ if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=2 |>\nI wrote a Julia\
    \ package for Fibonacci numbers. It is available on GitHub here: https://github.com/jrwlad/Fibonacci.jl\n\
    <code>\nusing Fibonacci", "    if n == 0\n        0\n    elseif n == 1\n     \
    \   0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=julia,fibonacci |>\n<| a dscore=1 |>\n<code>", "    if n == 0\n   \
    \     0\n    else if n == 1\n        0\n    else if n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$\\begin{align}\nf(n) &= n \\cdot 1 \\\nf(n)\
    \ &= n \\cdot 2 \\\nf(n) &= n \\cdot 3 \\\nf(n) &= n \\cdot 4 \\\nf(n) &= n \\\
    cdot 5 \\\n\\vdots \\\nf(n) &= n \\cdot n\n\\end{align}$$\nWrite a function that\
    \ computes the factorial of a given number using recursion.\nThe factorial of\
    \ a number $n$ is defined as:\n$$\\begin{align}\nf(n) &= n \\cdot 1 \\\nf(n) &=\
    \ n \\cdot 2 \\\nf(n) &= n \\cdot 3 \\\nf(n) &= n \\cdot 4 \\\nf(n) &= n \\cdot\
    \ 5 \\\n\\vdots \\\nf(n) &= n \\cdot n\n\\end{align}$$\nWrite a function that\
    \ computes the factorial of a given number using recursion.\nThe factorial of\
    \ a number $n$ is defined as:\n$$\\begin{align}\nf(n) &= n \\cdot 1 \\\nf(n) &=\
    \ n \\cdot 2 \\\nf(n) &= n \\cdot 3 \\\nf(n) &= n \\cdot 4 \\\nf(n) &= n \\cdot\
    \ 5 \\\n\\vdots \\\nf(n) &= n \\cdot n\n\\end{align}$$\nWrite a function that\
    \ computes the factorial of a given number using recursion.\nThe factorial of\
    \ a number $n$ is defined as:\n$$\\begin{align}\nf(n) &= n \\cdot 1 \\\nf(n) &=\
    \ n \\cdot 2 \\\nf(n) &= n \\cdot 3 \\\nf(n) &= n \\cdot 4 \\\nf(n) &= n \\cdot\
    \ 5 \\\n\\vdots \\\nf(n) &= n \\cdot n\n\\end{align}$$\nWrite a function that\
    \ computes the factorial of a given number using recursion.\nThe factorial of\
    \ a number $n$", "    if n == 0\n        0\n    elseif n == 1\n        0\n   \
    \ else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>", "    if n == 0\n        0\n    elseif n == 1\n\
    \        0\n    elseif n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis doesn't answer\
    \ the question. OP wants to know how to write this in Julia.\n<|/ c |>\n<| c |>\n\
    I added the Julia code to the answer. Hope it helps.\n<|/ c |>\n<| c |>\nThanks\
    \ for your answer. I'm sorry I didn't make it clear enough. I want to know how\
    \ to write this in Julia. I'm new to Julia so I'm still trying to figure out how\
    \ to write this in Julia.\n<|/ c |>\n<| c |>\nI added the Julia code to the answer.\
    \ Hope it helps.\n<|/ c |>\n<| c |>\nThanks for your answer. I'm sorry I didn't\
    \ make it clear enough. I want to know how to write this in Julia. I'm new to\
    \ Julia so I'm still trying to figure out how to write this in Julia.\n<|/ c |>\n\
    <| a tags=julia,fibonacci,recursion |>\n<code>", "    if n == 0 \n        0\n\
    \    else if n == 1 \n        0\n    else if n == 2 \n        1\n    else \n \
    \       fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 3\nWrite a function that computes the factorial\
    \ of a given number. \nThe factorial of a number is defined as the product of\
    \ all the numbers from 1 to that number. \nFor example, 5! = 5 x 4 x 3 x 2 x 1\
    \ = 120\nWrite a function that computes the factorial of a given number using\
    \ recursion. \nThe factorial of a number is defined as the product of all the\
    \ numbers from 1 to that number. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120\n\
    Write a function that computes the factorial of a given number using iteration.\
    \ \nThe factorial of a number is defined as the product of all the numbers from\
    \ 1 to that number. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120\nWrite a function\
    \ that computes the factorial of a given number using iteration. \nThe factorial\
    \ of a number is defined as the product of all the numbers from 1 to that number.\
    \ \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120\nWrite a function that computes\
    \ the factorial of a given number using iteration. \nThe factorial of a number\
    \ is defined as the product of all the numbers from 1 to that number. \nFor example,\
    \ 5! = 5 x 4 x 3 x 2 x 1 = 120\nWrite a function that computes the factorial of\
    \ a given number using iteration. \nThe factorial of a number is defined as the\
    \ product of all the numbers from 1 to that number. \nFor example, 5! = 5 x 4\
    \ x 3 x 2 x 1 = 120\nWrite a function that computes the factorial of a given number\
    \ using iteration. \nThe factorial of a number is defined as the product of all\
    \ the numbers from 1 to that number. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120\n\
    Write a function that computes the factorial of a given number using iteration.\
    \ \nThe factorial of a number is defined as the product of all the numbers from\
    \ 1 to that number. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120\nWrite a function\
    \ that computes the factorial of a given number using iteration. \nThe factorial\
    \ of a number is defined as the product of all the numbers from 1 to that number.\
    \ \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120\nWrite a function that computes\
    \ the factorial of a given number using iteration. \nThe factorial ", "    if\
    \ n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n  \
    \      1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.0>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise: Write a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0 \n        0\n    else if n == 1 \n\
    \        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nI guess\
    \ you meant `fibfib(n-1) + fibfib(n-2) + fibfib(n-3)` instead of `fibfib(n-2)\
    \ + fibfib(n-3) + fibfib(n-4)`\n<|/ c |>\n<| c |>\nYes, thank you for catching\
    \ that. I've fixed it.\n<|/ c |>\n<| a tags=julia,fibonacci |>\n<code>", "   \
    \ if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n  \
    \      1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci |>\nThe Fibonacci sequence\
    \ is defined as:\n<code>\nF(0) = 0\nF(1) = 1\nF(n) = F(n - 1) + F(n - 2)\n</code>\n\
    The Julia code below implements the above definition in Julia:\n<code>", "   \
    \ if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n  \
    \      1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=julia |>\n<| c |>\nThis does not provide an answer to the question.\
    \ To critique or request clarification from an author, leave a comment below their\
    \ post. - [From Review](/review/low-quality-posts/28805347)\n<|/ c |>\n<| c |>\n\
    I believe this does answer the question. He asked how to implement the Fibonacci\
    \ sequence in Julia. He also asked how to implement the Fibonacci sequence in\
    \ Julia. He also asked how to implement the Fibonacci sequence in Julia. He also\
    \ asked how to implement the Fibonacci sequence in Julia. He also asked how to\
    \ implement the Fibonacci sequence in Julia. He also asked how to implement the\
    \ Fibonacci sequence in Julia. He also asked how to implement the Fibonacci sequence\
    \ in Julia. He also asked how to implement the Fibonacci sequence in Julia. He\
    \ also asked how to implement the Fibonacci sequence in Julia. He also asked how\
    \ to implement the Fibonacci sequence in Julia. He also asked how to implement\
    \ the Fibonacci sequence in Julia. He also asked how to implement the Fibonacci\
    \ sequence in Julia. He also asked how to implement the Fibonacci sequence in\
    \ Julia. He also asked how to implement the Fibonacci sequence in Julia. He also\
    \ asked how to implement the Fibonacci sequence in Julia. He also asked how to\
    \ implement the Fibonacci sequence in Julia. He also asked how to implement the\
    \ Fibonacci sequence in Julia. He also asked how to implement the Fibonacci sequence\
    \ in Julia. He also asked how to implement the Fibonacci sequence in Julia. He\
    \ also asked how to implement the Fibonacci sequence in Julia. He also asked how\
    \ to implement the Fibonacci sequence in Julia. He also asked how to implement\
    \ the Fi", "    if n == 0 then 0 else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise:\
    \ Write a function that computes the n-th Fibonacci number using a recursive function.",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=julia,fibonacci |>\n<code>", "    if n == 0 \n  \
    \      0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n   \
    \ else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nProblem 3\nWrite\
    \ a function to compute the factorial of a given number. \nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1 \\\
    times 0 $$\nFor example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\n\
    Write a function to compute the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1\
    \ \\times 0 $$\nFor example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 =\
    \ 120\nWrite a function to compute the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ....\
    \ 1 \\times 0 $$\nFor example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1\
    \ = 120\nWrite a function to compute the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ....\
    \ 1 \\times 0 $$\nFor example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1\
    \ = 120\nWrite a function to compute the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ....\
    \ 1 \\times 0 $$\nFor example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1\
    \ = 120\nWrite a function to compute the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ....\
    \ 1 \\times 0 $$\nFor example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1\
    \ = 120\nWrite a function to compute the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:", "    if n == 0 \n        0\n    else if n ==\
    \ 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the factorial\
    \ of a given number. For example, factorial(4) == 24. Make sure you use the factorial\
    \ function defined above.", "    if n == 0 \n        0\n    else if n == 1 \n\
    \        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThis is\
    \ not the correct answer. `fibfib(1)` returns `0`, not `1`.\n<|/ c |>\n<| c |>\n\
    The correct answer is `fibfib(1)` returns `1`\n<|/ c |>\n<| c |>\nThe correct\
    \ answer is `fibfib(1)` returns `1`\n<|/ c |>\n<| c |>\nThe correct answer is\
    \ `fibfib(1)` returns `1`\n<|/ c |>\n<| a |>\n<code>", "    if n == 0\n      \
    \  0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=julia,fibonacci,performance |>\n<| c |>\nThe `fibfib` function doesn't\
    \ work as intended. `fibfib(0)` returns `0`, but `fibfib(1)` returns `1`. Also,\
    \ the `fibfib` function doesn't work for `n < 0`.\n<|/ c |>\n<| c |>\nI fixed\
    \ the fibfib function and added a link to the original post. Thanks for pointing\
    \ that out.\n<|/ c |>\n<| c |>\nThe `fibfib` function still doesn't work as intended.\
    \ `fibfib(0)` returns `0`, but `fibfib(1)` returns `1`. Also, the `fibfib` function\
    \ doesn't work for `n < 0`.\n<|/ c |>\n<| c |>\nThanks for pointing that out.\
    \ I fixed the fibfib function and added a link to the original post. Thanks for\
    \ pointing that out.\n<|/ c |>\n<| c |>\nThe `fibfib` function still doesn't work\
    \ as intended. `fibfib(0)` returns `0`, but `fibfib(1)` returns `1`. Also, the\
    \ `fibfib` function doesn't work for `n < 0`.\n<|/ c |>\n<| a dscore=2 |>\nThe\
    \ accepted answer doesn't work for negative numbers. Here's a version that does:\n\
    <code>", "    if n == 0 || n == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)",
  "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n   \
    \     1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=fibonacci,julia,recursion |>\n<| a dscore=1 |>\n<code>", "    if n\
    \ == 0 || n == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)", "    if n == 0\n\
    \        0\n    elseif n == 1\n        0\n    elseif n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<text>\nExercise: Write a function that computes the n-th\
    \ element of the Fibonacci sequence using recursion.", "    if n == 0\n      \
    \  0\n    else if n == 1\n        0\n    else if n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nProblem\
    \ 3\nWrite a function that takes a number as an argument and returns the factorial\
    \ of that number.\nFor example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120\nHint:\
    \ use recursion.", "    if n == 0\n        0\n    else if n == 1\n        0\n\
    \    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n</cell>\n<code\
    \ language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(8)\n\
    </cell>\n<text>\nProblem 7\nWrite a function that computes the factorial of a\
    \ given number. For example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120.", "    if\
    \ n == 0\n        0\n    elseif n == 1\n        0\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0\
    \ |>\n<code>", "    if n == 0\n        0\n    else if n == 1\n        0\n    else\
    \ if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThis is not the Fibonacci\
    \ sequence. `fibfib(1)` returns `0`, not `1`.\n<|/ c |>\n<| c |>\nThanks, I fixed\
    \ the typo.\n<|/ c |>\n<| a tags=julia,fibonacci |>\nThe Fibonacci sequence is\
    \ defined as:", "    if n == 0 || n == 1\n        return 0\n    else\n       \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the n-th element\
    \ of the Fibonacci sequence using recursion.", "    if n == 0\n        0\n   \
    \ else if n == 1\n        0\n    else if n == 2\n        1\n    else\n       \
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that computes the factorial of a number.\nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    Write a function that computes the factorial of a number.\nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    Write a function that computes the factorial of a number.\nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    Write a function that computes the factorial of a number.\nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    Write a function that computes the factorial of a number.\nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    Write a function that computes the factorial of a number.\nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    Write a function that computes the factorial of a number.\nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    Write a function that computes the factorial of a number.\nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    Write a function that computes the factorial of a number.\nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    Write a function that computes the factorial of a number.\nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    Write a function that computes the factorial of a number.\nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    Write a function that computes the factorial of a number.\nThe factorial of a\
    \ number $", "    if n == 0\n        0\n    elseif n == 1\n        0\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(5)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(8)\n</cell>\n<text>\nExercise: Write a\
    \ function to compute the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n\
    \        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThanks for your answer. I'm new\
    \ to Julia and I didn't know that you can write functions in Julia like that.\
    \ I'll try this out and see if it works.\n<|/ c |>\n<| c |>\nThis works great.\
    \ Thank you. I'm still not sure why my code didn't work, but this works perfectly.\n\
    <|/ c |>\n<| c |>\nThe reason your code didn't work is that your function `fibfib`\
    \ was defined as a function within a function, which is not allowed. Functions\
    \ defined within functions must be defined at the top level. Also, `fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)` can be written as `fibfib(n-1) + fibfib(n-2)`.\n\
    <|/ c |>\n<| c |>\nThanks for your explanation. I'm still new to Julia and I didn't\
    \ know that you can define functions within functions. I'll try this out and see\
    \ if it works.\n<|/ c |>\n<| a tags=julia,fibonacci |>\nThe function fibfib(n)\
    \ should be defined outside of the function fibfib(n::Int64)::Int64. \n<code>",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise: Write\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n   \
    \     1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=julia,fibonacci |>\n<| a dscore=2 |>\n<code>", "    if n == 0 then\
    \ return 0\n    if n == 1 then return 1\n    if n == 2 then return 1\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(1)\n</cell>\n<text>\nProblem\
    \ 3\nWrite a function to compute the factorial of a number.\n>>> factorial(5)\n\
    120\n>>> factorial(10)\n3628800\n>>> factorial(100)\n1.8446744e+19\n>>> factorial(1000)\n\
    6.2044680e+20\n>>> factorial(10000)\n1.8446744e+20\n>>> factorial(100000)\n6.2044680e+20\n\
    >>> factorial(1000000)\n1.8446744e+20\n>>> factorial(10000000)\n6.2044680e+20\n\
    >>> factorial(100000000)\n1.8446744e+20\n>>> factorial(1000000000)\n6.2044680e+20\n\
    >>> factorial(10000000000)\n1.8446744e+20\n>>> factorial(100000000000)\n6.2044680e+20\n\
    >>> factorial(1000000000000)\n1.8446744e+20\n>>> factorial(1000000000000)\n6.2044680e+20\n\
    >>> factorial(10000000000000)\n6.2044680e+20\n>>> factorial(10000000000000)\n\
    6.2044680e+20\n>>> factorial(1000000000000000)\n6.2044680e+20\n>>> factorial(1000000000000000)\n\
    6.2044680e+20\n>>> factorial(10000000000000000)\n6.2044680e+20\n>>> factorial(10000000000000000)\n\
    6.2044680e+20\n>>> factorial(100000000000000000)\n6.2044680e+20\n>>> factorial(100000000000000000)\n\
    6.2044680e+20\n>>> factorial(1000000000000000000)\n6.2044680e+20\n>>> factorial(1000000000000000000)\n\
    6.2044680e+20\n>>> factorial(10000000000000000000)\n6.2044680e+20\n>>> factorial(10000000000000000000)\n\
    6.2044680e+20\n>>> factorial(100000000000000000000)\n6.2044680e+20\n>>> factorial(100000000000000000000)\n\
    6.2044680e+20\n>>> factorial(1000000000000000000000)\n6.2044680e+20\n>>> factorial(1000000000000000000000)\n\
    6.2044680e+20\n>>> factorial(10000000000000000000000)\n6.2044680e+20\n>>> factorial(",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that computes the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times\
    \ n-2 \\times .... 1 \\times 0 \\times 1 \\times 2 \\times 3 \\times 4 \\times\
    \ 5 \\times 6 \\times 7 \\times 8 \\times 9 \\times 10 \\times 11 \\times 12 \\\
    times 13 \\times 14 \\times 15 \\times 16 \\times 17 \\times 18 \\times 19 \\\
    times 20 \\times 21 \\times 22 \\times 23 \\times 24 \\times 25 \\times 26 \\\
    times 27 \\times 28 \\times 29 \\times 30 \\times 31 \\times 32 \\times 33 \\\
    times 34 \\times 35 \\times 36 \\times 37 \\times 38 \\times 39 \\times 40 \\\
    times 41 \\times 42 \\times 43 \\times 44 \\times 45 \\times 46 \\times 47 \\\
    times 48 \\times 49 \\times 50 \\times 51 \\times 52 \\times 53 \\times 54 \\\
    times 55 \\times 56 \\times 57 \\times 58 \\times 59 \\times 60 \\times 61 \\\
    times 62 \\times 63 \\times 64 \\times 65 \\times 66 \\times 67 \\times 68 \\\
    times 69 \\times 70 \\times 71 \\times 72 \\times 73 \\times 74 \\times 75 \\\
    times 76 \\times 77 \\times 78 \\times 79 \\times 80 \\times 81 \\times 82 \\\
    times 83 \\times 84 \\times 85 \\times 86 \\times 87 \\times 88 \\times 89 \\\
    times 90 \\times 91 \\times 92 \\times 93 \\times 94 \\times 95 \\times 96 \\\
    times 97 \\times 98 \\times 99 \\times 100 \\times 101 \\times 102 \\times 103\
    \ \\times 104 \\times 105 \\times 106 \\times 107 \\times 108 \\times 109 \\times\
    \ 110 \\times 111 \\times 112 \\times 113 \\times 114 \\times 115 \\times 116\
    \ \\times 117 \\times 118 \\times 119 \\times 120 \\times 121 \\times 122 \\times\
    \ 123 \\times 12", "    if n == 0\n        0\n    else if n == 1\n        0\n\
    \    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend\n</cell>\n<code language=julia-1.3>\nfibfib(1)\n</cell>\n<code\
    \ language=julia-1.3>\nfibfib(5)\n</cell>\n<code language=julia-1.3>\nfibfib(8)\n\
    </cell>\n<code language=julia-1.3>\nfibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.3>\nfibfib(0)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.3>\nfibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.3>\nfibfib(0)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.3>\nfibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.3>\nfibfib(0)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.3>\nfibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.3>\nfibfib(0)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.3>\nfibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.3>\nfibfib(0)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.3>\nfibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.3>\nfibfib(0)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.3>\nfibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(3)\n</cell>\n<code language=julia-1.3>\nfibfib(0)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.3>\nfibfib(2)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(3)\n</cell", "    if n == 0\n        0\n    elseif n == 1\n        0\n\
    \    elseif n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</code>\n<|/ a tags=fibonacci,julia,recursion |>\n<| a dscore=2 |>\nThe Fibonacci\
    \ sequence is defined as\n<code>\nF(0) = 0\nF(1) = 1\nF(n) = F(n-1) + F(n-2)\n\
    </code>\nThe Julia implementation is as follows:\n<code>", "    if n == 0\n  \
    \      0\n    elseif n == 1\n        0\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n</cell>\n\
    <code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(8)\n\
    </cell>\n<text>\nProblem 7\nWrite a function to compute the factorial of a given\
    \ number. \nFor example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120\nHint: use the\
    \ factorial function defined above. \nThis function should take in a single number\
    \ as an argument and return the factorial of that number.", "    if n == 0 \n\
    \        0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n \
    \   else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/\
    \ a dscore=0 |>\n<| a tags=julia,fibonacci |>\nThe Julia code below is based on\
    \ the recursive formula for Fibonacci numbers:\n<code>", "    if n == 0 \n   \
    \     0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n    else\
    \ \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.3>\n\
    @time fibfib(1)\n</cell>\n<code language=julia-1.3>\n@time fibfib(5)\n</cell>\n\
    <code language=julia-1.3>\n@time fibfib(8)\n</cell>\n<text>\nExercise: Write a\
    \ function that computes the n-th Fibonacci number in the Fibonacci sequence.\
    \ Test it on small numbers, like fibfib(1). How long does it take to compute?",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0 || n == 1\n        return 0\n   \
    \ else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <text>\nProblem 3\nWrite a function that returns the factorial of a given number.\
    \ \nFor instance, factorial(5) = fib(5) = 5 x 4 x 3 x 2 x 1 = 120\nHint: use recursion.",
  "    if n == 0\n        0\n    elseif n == 1\n        0\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<text>\nExercise: Write a function to compute the n-th element\
    \ of the Fibonacci sequence using recursion.", "    if n == 0 || n == 1 \n   \
    \     then 0\n    else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(1)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times\
    \ n-1 \\times n-2 \\times ...$$\nFor example, 5! = 5 \\times 4 \\times 3 \\times\
    \ 2 \\times 1 = 120.\nWrite a function that computes the factorial of a given\
    \ number using recursion.\nThe factorial of a number $n$ is defined as:\n$$n!\
    \ = n \\times n-1 \\times n-2 \\times ...$$\nFor example, 5! = 5 \\times 4 \\\
    times 3 \\times 2 \\times 1 = 120.\nWrite a function that computes the factorial\
    \ of a given number using iteration.\nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nFor example, 5! = 5 \\\
    times 4 \\times 3 \\times 2 \\times 1 = 120.\nWrite a function that computes the\
    \ factorial of a given number using iteration.\nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nFor example,\
    \ 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120.\nWrite a function that\
    \ computes the factorial of a given number using iteration.\nThe factorial of\
    \ a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    For example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120.\nWrite a function\
    \ that computes the factorial of a given number using iteration.\nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    For example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120.\nWrite a function\
    \ that computes the factorial of a given number using iteration.\nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    For example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120.\nWrite a function\
    \ that computes the factorial of a given number using iteration.\nThe factorial\
    \ of a number $n$ is defined as:\n$$n", "    if n == 0 || n == 1\n        return\
    \ 0\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=julia,fibonacci |>\n<| a dscore=1 |>\n<code>", "    if n == 0\n   \
    \     0\n    elseif n == 1\n        0\n    elseif n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia\
    \ |>\n<| c |>\nThanks for the answer! I actually tried this before posting my\
    \ question, but I kept getting a stack overflow error. I think it might be because\
    \ I used the function fibfib(n) recursively, which I didn't realize was possible.\
    \ I'll try it again and see if I can get it to work.\n<|/ c |>\n<| c |>\nYeah,\
    \ I figured it out. Thanks again!\n<|/ c |>\n<| a dscore=0 |>\nThe answer by is\
    \ correct, but I thought I'd add some explanation as to why it works.\nThe function\
    \ fibfib(n) calls itself recursively, but this doesn't mean that fibfib(n) calls\
    \ itself recursively. The function fibfib(n) calls itself recursively, but this\
    \ doesn't mean that fibfib(n) calls itself recursively. The function fibfib(n)\
    \ calls itself recursively, but this doesn't mean that fibfib(n) calls itself\
    \ recursively. The function fibfib(n) calls itself recursively, but this doesn't\
    \ mean that fibfib(n) calls itself recursively. The function fibfib(n) calls itself\
    \ recursively, but this doesn't mean that fibfib(n) calls itself recursively.\
    \ The function fibfib(n) calls itself recursively, but this doesn't mean that\
    \ fibfib(n) calls itself recursively. The function fibfib(n) calls itself recursively,\
    \ but this doesn't mean that fibfib(n) calls itself recursively. The function\
    \ fibfib(n) calls itself recursively, but this doesn't mean that fibfib(n) calls\
    \ itself recursively. The function fibfib(n) calls itself recursively, but this\
    \ doesn't mean that fibfib(n) calls itself recursively. The function fibfib(n)\
    \ calls itself recursively, but this doesn't mean that fibfib(n) calls itself\
    \ recursively. The function fibfib(n) calls itself recursively, but this doesn't\
    \ mean that fibfib(n) calls itself recursively. The function fibfib(n) calls itself\
    \ recursively, but this doesn't mean that fibfib(n) calls itself recursively.\
    \ The function fibfib(n) calls itself recursively, but this doesn't mean that\
    \ fibfib(n) calls itself recursively. The function fibfib(n) calls itself recursively,\
    \ but this doesn't mean ", "    if n == 0 then 0 else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=julia,fibonacci |>\n\
    I wrote a Julia package for Fibonacci numbers. It is called Fibonacci.jl. \n<code>\n\
    using Fibonacci", "    if n == 0\n        0\n    else if n == 1\n        0\n \
    \   else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that computes the factorial\
    \ of a number.\n    >>> factorial(5)\n    120\n    >>> factorial(10)\n    3628800\n\
    \    >>> factorial(100)\n    15511210043330985984000000\n    >>> factorial(1000)\n\
    \    3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196442881097566593344612847564823378678316527120190914564856692346034861045432664821339360726024914127372458700660631558817488152092096282925409171536436789259036001133053054882046652138414695194151160943305727036575959195309218611738193261179310511854807446237996274956735188575272489122793818301194912983367336244065664308602139494639522473719070217986094370277053921717629317675238467481846766940513200056812714526356082778577134275778960917363717872146844090122495343014654958537105079227968925892354201995611212902196086403441815981362977477130996051870721134999999837297804995105973173281609631859502445945534690830264252230825334468503526193118817101000313783875288658753320838142061717766914730359825349042875546873115956286388235",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci |>\nThe recursive solution\
    \ is very elegant, but Julia has some nice syntactic sugar for recursive functions.\
    \ You can write this as:\n<code>", "    if n == 0\n        0\n    else\n     \
    \   fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0 |>\n\
    <| a tags=julia,recursion,fibonacci |>\n<code>", "    if n == 0\n        0\n \
    \   else if n == 1\n        0\n    else if n == 2\n        1\n    else\n     \
    \   fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(5)\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(8)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that computes the factorial of a given number. For example, factorial(5)\
    \ == 5 * 4 * 3 * 2 * 1.\nWrite a function that computes the Fibonacci number for\
    \ a given number. For example, fibonacci(3) == 1, 1, 2.\nWrite a function that\
    \ computes the n-th Fibonacci number for a given number. For example, fibonacci(5)\
    \ == 0, 1, 1, 2, 3, 5.\nWrite a function that computes the n-th Fibonacci number\
    \ for a given number. For example, fibonacci(5) == 0, 1, 1, 2, 3, 5.\nWrite a\
    \ function that computes the n-th Fibonacci number for a given number. For example,\
    \ fibonacci(5) == 0, 1, 1, 2, 3, 5.\nWrite a function that computes the n-th Fibonacci\
    \ number for a given number. For example, fibonacci(5) == 0, 1, 1, 2, 3, 5.\n\
    Write a function that computes the n-th Fibonacci number for a given number. For\
    \ example, fibonacci(5) == 0, 1, 1, 2, 3, 5.\nWrite a function that computes the\
    \ n-th Fibonacci number for a given number. For example, fibonacci(5) == 0, 1,\
    \ 1, 2, 3, 5.\nWrite a function that computes the n-th Fibonacci number for a\
    \ given number. For example, fibonacci(5) == 0, 1, 1, 2, 3, 5.\nWrite a function\
    \ that computes the n-th Fibonacci number for a given number. For example, fibonacci(5)\
    \ == 0, 1, 1, 2, 3, 5.\nWrite a function that computes the n-th Fibonacci number\
    \ for a given number. For example, fibonacci(5) == 0, 1, 1, 2, 3, 5.\nWrite a\
    \ function that computes the n-th Fibonacci number for a given number. For example,\
    \ fibonacci(5) == 0, 1, 1, 2, 3, 5.\nWrite a function that computes the n-th Fibonacci\
    \ number for a given number. For example, fibonacci(5) == 0, 1, 1, 2, 3, 5.\n\
    Write a function that computes the n-th Fibonacci number for a given number. For\
    \ example, fibonacci(5) == 0, 1, 1, 2, 3, 5.\nWrite a function that computes the\
    \ n-th Fibonacci number for a given number. For example, fibonacci(5) == ", " \
    \   if n == 0\n        0\n    elseif n == 1\n        0\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<code language=julia-1.5>",
  "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n\
    \        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as the product of all the numbers from 1 to $n$,\
    \ inclusive.\nFor example, the factorial of $n$ is $n!$, where $n$ is any positive\
    \ integer.\nWrite a function that computes the factorial of a given number using\
    \ recursion.\nFor example, the factorial of $n$ is $n!$, where $n$ is any positive\
    \ integer.\nWrite a function that computes the factorial of a given number using\
    \ iteration.\nFor example, the factorial of $n$ is $n!$, where $n$ is any positive\
    \ integer.\nWrite a function that computes the factorial of a given number using\
    \ iteration.\nFor example, the factorial of $n$ is $n!$, where $n$ is any positive\
    \ integer.\nWrite a function that computes the factorial of a given number using\
    \ iteration.\nFor example, the factorial of $n$ is $n!$, where $n$ is any positive\
    \ integer.\nWrite a function that computes the factorial of a given number using\
    \ iteration.\nFor example, the factorial of $n$ is $n!$, where $n$ is any positive\
    \ integer.\nWrite a function that computes the factorial of a given number using\
    \ iteration.\nFor example, the factorial of $n$ is $n!$, where $n$ is any positive\
    \ integer.\nWrite a function that computes the factorial of a given number using\
    \ iteration.\nFor example, the factorial of $n$ is $n!$, where $n$ is any positive\
    \ integer.\nWrite a function that computes the factorial of a given number using\
    \ iteration.\nFor example, the factorial of $n$ is $n!$, where $n$ is any positive\
    \ integer.\nWrite a function that computes the factorial of a given number using\
    \ iteration.\nFor example, the factorial of $n$ is $n!$, where $n$ is any positive\
    \ integer.\nWrite a function that computes the factorial of a given number using\
    \ iteration.\nFor example, the factorial of $n$ is $n!$, ", "    if n == 0\n \
    \       0\n    elseif n == 1\n        0\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThe question was about\
    \ how to implement the Fibonacci sequence in Julia, not how to implement the Fibonacci\
    \ sequence in Julia.\n<|/ c |>\n<| a tags=julia |>\n<code>", "    if n == 0\n\
    \        0\n    else if n == 1\n        0\n    else if n == 2\n        1\n   \
    \ else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a |>\n<code>", "    if n == 0\n        0\n    elseif n == 1\n       \
    \ 0\n    elseif n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    </code>\n<|/ a tags=julia |>\n<| a tags=julia |>\nI came up with a solution using\
    \ recursion:\n<code>", "    if n == 0 \n        0\n    else if n == 1 \n     \
    \   0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0 |>\n<| a |>\n<code>", "    if n\
    \ == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n       \
    \ 1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function to compute the factorial of a given number. \nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1 \\\
    times 0 \\times 1 \\times 2 \\times 3 \\times 4 \\times 5 \\times 6 \\times 7\
    \ \\times 8 \\times 9 \\times 10 \\times 11 \\times 12 \\times 13 \\times 14 \\\
    times 15 \\times 16 \\times 17 \\times 18 \\times 19 \\times 20 \\times 21 \\\
    times 22 \\times 23 \\times 24 \\times 25 \\times 26 \\times 27 \\times 28 \\\
    times 29 \\times 30 \\times 31 \\times 32 \\times 33 \\times 34 \\times 35 \\\
    times 36 \\times 37 \\times 38 \\times 39 \\times 40 \\times 41 \\times 42 \\\
    times 43 \\times 44 \\times 45 \\times 46 \\times 47 \\times 48 \\times 49 \\\
    times 50 \\times 51 \\times 52 \\times 53 \\times 54 \\times 55 \\times 56 \\\
    times 57 \\times 58 \\times 59 \\times 60 \\times 61 \\times 62 \\times 63 \\\
    times 64 \\times 65 \\times 66 \\times 67 \\times 68 \\times 69 \\times 70 \\\
    times 71 \\times 72 \\times 73 \\times 74 \\times 75 \\times 76 \\times 77 \\\
    times 78 \\times 79 \\times 80 \\times 81 \\times 82 \\times 83 \\times 84 \\\
    times 85 \\times 86 \\times 87 \\times 88 \\times 89 \\times 90 \\times 91 \\\
    times 92 \\times 93 \\times 94 \\times 95 \\times 96 \\times 97 \\times 98 \\\
    times 99 \\times 100 \\times 101 \\times 102 \\times 103 \\times 104 \\times 105\
    \ \\times 106 \\times 107 \\times 108 \\times 109 \\times 110 \\times 111 \\times\
    \ 112 \\", "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else\
    \ if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise: Write a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0\n        0\n    else if n == 1\n\
    \        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(1)\n</cell>\n\
    <code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\nfibfib(8)\n\
    </cell>\n<text>\nExercise 3\nWrite a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.", "    if n == 0\n        0\n    else if\
    \ n == 1\n        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<|\
    \ c |>\nThis answer would be better if you explained what you did and why.\n<|/\
    \ c |>\n<| c |>\nI added some explanation.\n<|/ c |>\n<| a tags=julia,fibonacci\
    \ |>\n<code>", "    if n == 0\n        0\n    elseif n == 1\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a |>\n<| a\
    \ dscore=0 |>\nThe Fibonacci sequence is defined as:\n<code>\nF(0) = 0\nF(1) =\
    \ 1\nF(n) = F(n-1) + F(n-2)\n</code>\nThe first two terms are 0 and 1, the third\
    \ term is F(1) + F(2), and the fourth term is F(1) + F(2) + F(3).\nThe Fibonacci\
    \ sequence is defined by the following recurrence relation:\n<code>\nF(n) = F(n-1)\
    \ + F(n-2)\n</code>\nThe first two terms are 0 and 1, the third term is 1 + 1,\
    \ and the fourth term is 1 + 1 + 1.\nThe Fibonacci sequence is defined by the\
    \ following recurrence relation:\n<code>\nF(n) = F(n-1) + F(n-2)\n</code>\nThe\
    \ first two terms are 0 and 1, the third term is 1 + 1, and the fourth term is\
    \ 1 + 1 + 1.\nThe Fibonacci sequence is defined by the following recurrence relation:\n\
    <code>\nF(n) = F(n-1) + F(n-2)\n</code>\nThe first two terms are 0 and 1, the\
    \ third term is 1 + 1, and the fourth term is 1 + 1 + 1.\nThe Fibonacci sequence\
    \ is defined by the following recurrence relation:\n<code>\nF(n) = F(n-1) + F(n-2)\n\
    </code>\nThe first two terms are 0 and 1, the third term is 1 + 1, and the fourth\
    \ term is 1 + 1 + 1.\nThe Fibonacci sequence is defined by the following recurrence\
    \ relation:\n<code>\nF(n) = F(n-1) + F(n-2)\n</code>\nThe first two terms are\
    \ 0 and 1, the third term is 1 + 1, and the fourth term is 1 + 1 + 1.\nThe Fibonacci\
    \ sequence is defined by the following recurrence relation:\n<code>\nF(n) = F(n-1)\
    \ + F(n-2)\n</code>\nThe first two terms are 0 and 1, the third term is 1 + 1,\
    \ and the fourth term is 1 + 1 + 1.\nThe Fibonacci sequence is defined by the\
    \ following recurrence relation:\n<code>\nF(n) = F(n-1) + F(n-2)\n</code>\nThe\
    \ first two terms are 0 and 1, the third term is 1 + 1, and the fourth term is\
    \ 1 + 1 + 1.\nThe Fibonacci sequence is defined by the ", "    if n == 0\n   \
    \     0\n    else if n == 1\n        0\n    else if n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nProblem\
    \ 4\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ....\
    \ 1 \\times 1$$\nWrite a function that computes the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times\
    \ n-2 \\times .... 1 \\times 1$$\nWrite a function that computes the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n\
    \ \\times n-1 \\times n-2 \\times .... 1 \\times 1$$\nWrite a function that computes\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1 \\times 1$$\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1 \\times 1$$\n\
    Write a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ....\
    \ 1 \\times 1$$\nWrite a function that computes the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times\
    \ n-2 \\times .... 1 \\times 1$$\nWrite a function that computes the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n\
    \ \\times n-1 \\times n-2 \\times .... 1 \\times 1$$\nWrite a function that computes\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1 \\times 1$$\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n \\times n-1 \\", "    if n == 0 then 0 else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ to compute the n-th element of the Fibonacci sequence using recursion.", " \
    \   if n == 0\n        0\n    elseif n == 1\n        0\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.3>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.3>\nfibfib(5)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the n-th element\
    \ of the Fibonacci sequence using recursion.", "    if n == 0\n        0\n   \
    \ else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that computes the factorial of a given number. \n\
    The factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2\
    \ \\times ... \\times 1$$\nWrite a function that computes the factorial of a given\
    \ number using recursion.\nThe factorial of a number $n$ is defined as:\n$$n!\
    \ = n \\times n-1 \\times n-2 \\times ... \\times 1$$\nWrite a function that computes\
    \ the factorial of a given number using recursion.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ... \\times 1$$\n\
    Write a function that computes the factorial of a given number using recursion.\n\
    The factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2\
    \ \\times ... \\times 1$$\nWrite a function that computes the factorial of a given\
    \ number using recursion.\nThe factorial of a number $n$ is defined as:\n$$n!\
    \ = n \\times n-1 \\times n-2 \\times ... \\times 1$$\nWrite a function that computes\
    \ the factorial of a given number using recursion.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ... \\times 1$$\n\
    Write a function that computes the factorial of a given number using recursion.\n\
    The factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2\
    \ \\times ... \\times 1$$\nWrite a function that computes the factorial of a given\
    \ number using recursion.\nThe factorial of a number $n$ is defined as:\n$$n!\
    \ = n \\times n-1 \\times n-2 \\times ... \\times 1$$\nWrite a function that computes\
    \ the factorial of a given number using recursion.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ... \\times 1$$\n\
    Write a function that computes the factorial of a given number using recursion.\n\
    The factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2\
    \ \\times ... \\times 1$$\nWrite a function that computes the factori", "    if\
    \ n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n  \
    \      1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.4>\nfibfib(1)\n</cell>\n<code language=julia-1.4>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.4>\nfibfib(8)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=julia,fibonacci |>\n<| c |>\nThis doesn't answer the question of how\
    \ to compute fibfib(n) efficiently. Also, this doesn't answer the question of\
    \ how to compute fibfib(n) efficiently in Julia.\n<|/ c |>\n<| c |>\nThe question\
    \ was how to compute fibfib(n) efficiently, and I provided a solution for that.\
    \ Your answer doesn't answer the question of how to compute fibfib(n) efficiently\
    \ in Julia. Also, I provided a solution for how to compute fibfib(n) efficiently\
    \ in Julia.\n<|/ c |>\n<| c |>\nThe question was how to compute fibfib(n) efficiently,\
    \ and I provided a solution for that. Your answer doesn't answer the question\
    \ of how to compute fibfib(n) efficiently in Julia. Also, I provided a solution\
    \ for how to compute fibfib(n) efficiently in Julia.\n<|/ c |>\n<| c |>\nThe question\
    \ was how to compute fibfib(n) efficiently, and I provided a solution for that.\
    \ Your answer doesn't answer the question of how to compute fibfib(n) efficiently\
    \ in Julia. Also, I provided a solution for how to compute fibfib(n) efficiently\
    \ in Julia.\n<|/ c |>\n<| c |>\nThe question was how to compute fibfib(n) efficiently,\
    \ and I provided a solution for that. Your answer doesn't answer the question\
    \ of how to compute fibfib(n) efficiently in Julia. Also, I provided a solution\
    \ for how to compute fibfib(n) efficiently in Julia.\n<|/ c |>\n<| a tags=julia,fibonacci\
    \ |>\nThe recursive solution is very inefficient. Here is a much faster solution:\n\
    <code>", "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else\
    \ if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci |>\n<code>",
  "    if n == 0 || n == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times\
    \ n-1 \\times n-2 \\times ...$$\nWrite a function that computes the factorial\
    \ of a given number using recursion.\nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nWrite a function that computes\
    \ the factorial of a given number using recursion and a while loop.\nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    Write a function that computes the factorial of a given number using recursion\
    \ and a while loop.\nThe factorial of a number $n$ is defined as:\n$$n! = n \\\
    times n-1 \\times n-2 \\times ...$$\nWrite a function that computes the factorial\
    \ of a given number using recursion and a while loop.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nWrite a\
    \ function that computes the factorial of a given number using recursion and a\
    \ while loop.\nThe factorial of a number $n$ is defined as:\n$$n! = n \\times\
    \ n-1 \\times n-2 \\times ...$$\nWrite a function that computes the factorial\
    \ of a given number using recursion and a while loop.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nWrite a\
    \ function that computes the factorial of a given number using recursion and a\
    \ while loop.\nThe factorial of a number $n$ is defined as:\n$$n! = n \\times\
    \ n-1 \\times n-2 \\times ...$$\nWrite a function that computes the factorial\
    \ of a given number using recursion and a while loop.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nWrite a\
    \ function that computes the factorial of a given number using recursion and a\
    \ while loop.\nThe factorial of a number $n$ is defined as:\n$$n! = n ", "   \
    \ if n == 0\n        0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2 |>\n<code>", "    if n == 0 \n\
    \        0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n \
    \   else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n   \
    \     1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n\
    \        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </code>\n<|/ a tags=fibonacci,julia,recursion |>\n<| c |>\nThis doesn't answer\
    \ the question. OP wants to know how to do this with recursion.\n<|/ c |>\n<|\
    \ c |>\nI believe this does answer the question. OP wants to know how to do this\
    \ with recursion. He has already written the recursive function `fibfib`.\n<|/\
    \ c |>\n<| c |>\nYes, but he wants to know how to do this with recursion. He has\
    \ already written the recursive function `fibfib`.\n<|/ c |>\n<| c |>\nThe question\
    \ was how to do this with recursion. He has already written the recursive function\
    \ `fibfib`.\n<|/ c |>\n<| c |>\nThe question was how to do this with recursion.\
    \ He has already written the recursive function `fibfib`.\n<|/ c |>\n<| a dscore=2\
    \ |>\n<code>", "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif\
    \ n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=2 |>\nThe Julia standard\
    \ library has a function fib(n) which returns the nth Fibonacci number. \n<code>\n\
    julia> fib(10)\n55\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThis does\
    \ not answer the question. The question asks for an efficient implementation of\
    \ a Fibonacci sequence in Julia. Your answer does not do that.\n<|/ c |>\n<| c\
    \ |>\nThe question asks for an efficient implementation of a Fibonacci sequence\
    \ in Julia. Your answer does not do that. Julia has a built-in function fib(n)\
    \ which returns the nth Fibonacci number. Julia has a built-in function fibfib(n)\
    \ which returns the nth Fibonacci number. Julia has a built-in function fibfib(n)\
    \ which returns the nth Fibonacci number. Julia has a built-in function fibfib(n)\
    \ which returns the nth Fibonacci number. Julia has a built-in function fibfib(n)\
    \ which returns the nth Fibonacci number. Julia has a built-in function fibfib(n)\
    \ which returns the nth Fibonacci number. Julia has a built-in function fibfib(n)\
    \ which returns the nth Fibonacci number. Julia has a built-in function fibfib(n)\
    \ which returns the nth Fibonacci number. Julia has a built-in function fibfib(n)\
    \ which returns the nth Fibonacci number. Julia has a built-in function fibfib(n)\
    \ which returns the nth Fibonacci number. Julia has a built-in function fibfib(n)\
    \ which returns the nth Fibonacci number. Julia has a built-in function fibfib(n)\
    \ which returns the nth Fibonacci number. Julia has a built-in function fibfib(n)\
    \ which returns the nth Fibonacci number. Julia has a built-in function fibfib(n)\
    \ which returns the nth Fibonacci number. Julia has a built-in function fibfib(n)\
    \ which returns the nth Fibonacci number. Julia has a built-in function fibfib(n)\
    \ which returns the nth Fibonacci number. Julia has a built-in function fibfib(n)\
    \ which ", "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif\
    \ n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fib", "    if n == 0 \n        0\n    else if n == 1 \n   \
    \     0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n@time fibfib(1)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(8)\n</cell>\n<text>\nExercise: Write a function that computes the\
    \ n-th Fibonacci number using recursion.", "    if n == 0 || n == 1\n        return\
    \ 0\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<text>\nExercise\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=julia,fibonacci |>\n<| c |>\nThanks for your answer! I did try this\
    \ but I was getting a stack overflow error so I thought maybe there was a better\
    \ way. I'll try your method and see if it works.\n<|/ c |>\n<| c |>\nI did try\
    \ your method and it works. I did have to change it a little bit though. Instead\
    \ of using fibfib(n-1) + fibfib(n-2) + fibfib(n-3) I used fibfib(n-1) + fibfib(n-2)\
    \ and it worked. Thanks!\n<|/ c |>\n<| c |>\nOh yeah, I forgot to add that in.\
    \ Thanks for pointing that out!\n<|/ c |>\n<| c |>\nI added a recursive version\
    \ as well. Hope it helps!\n<|/ c |>\n<| a |>\n<code>", "    if n == 0\n      \
    \  0\n    else if n == 1\n        0\n    else if n == 2\n        1\n    else \n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<text>\nProblem 3\nWrite a function to compute the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as the product\
    \ of all the numbers from 1 to $n$, excluding $n$.\nFor example, the factorial\
    \ of $n$ is $n!$, where $n$ is any positive integer.\nThe factorial of 0 is 1.\n\
    For example, the factorial of $n$ is $n!$, where $n$ is any positive integer.\n\
    The factorial of 0 is 1.\nFor example, the factorial of $n$ is $n!$, where $n$\
    \ is any positive integer.\nThe factorial of 0 is 1.\nFor example, the factorial\
    \ of $n$ is $n!$, where $n$ is any positive integer.\nThe factorial of 0 is 1.\n\
    For example, the factorial of $n$ is $n!$, where $n$ is any positive integer.\n\
    The factorial of 0 is 1.\nFor example, the factorial of $n$ is $n!$, where $n$\
    \ is any positive integer.\nThe factorial of 0 is 1.\nFor example, the factorial\
    \ of $n$ is $n!$, where $n$ is any positive integer.\nThe factorial of 0 is 1.\n\
    For example, the factorial of $n$ is $n!$, where $n$ is any positive integer.\n\
    The factorial of 0 is 1.\nFor example, the factorial of $n$ is $n!$, where $n$\
    \ is any positive integer.\nThe factorial of 0 is 1.\nFor example, the factorial\
    \ of $n$ is $n!$, where $n$ is any positive integer.\nThe factorial of 0 is 1.\n\
    For example, the factorial of $n$ is $n!$, where $n$ is any positive integer.\n\
    The factorial of 0 is 1.\nFor example, the factorial of $n$ is $n!$, where $n$\
    \ is any positive integer.\nThe factorial of 0 is 1.\nFor example, the ", "  \
    \  if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(8)\n</cell>\n<text>\nExercise: Write a function\
    \ to compute the n-th element of the Fibonacci sequence using memoization.", " \
    \   if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2\
    \ \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function to compute the n-th element of the Fibonacci sequence using\
    \ recursion.", "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif\
    \ n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise: Write a function to compute the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0\n        0\n    else if n == 1\n\
    \        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n@time fibfib(1)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(8)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the\
    \ n-th element of the Fibonacci sequence using recursion.", "    if n == 0\n \
    \       0\n    else if n == 1\n        0\n    else if n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=julia,fibonacci |>\n<code>", "    if n == 0\n        0\n    else\
    \ if n == 1\n        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise: Write a function\
    \ that computes the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function to compute the factorial of a given number. \nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    For example, $5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120$", "    if\
    \ n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n  \
    \      1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise\nWrite a function that computes the n-th Fibonacci number using\
    \ recursion.", "    if n == 0\n        0\n    elseif n == 1\n        0\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis does not provide an answer to the question. Once you have\
    \ sufficient [reputation](https://stackoverflow.com/help/whats-reputation) you\
    \ will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\
    \ - [From Review](/review/low-quality-posts/26866523)\n<|/ c |>\n<| c |>\nThis\
    \ does not provide an answer to the question. Once you have sufficient [reputation](https://stackoverflow.com/help/whats-reputation)\
    \ you will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. Once you have\
    \ sufficient [reputation](https://stackoverflow.com/help/whats-reputation) you\
    \ will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. Once you have\
    \ sufficient [reputation](https://stackoverflow.com/help/whats-reputation) you\
    \ will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require clarification from the asker](https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead).\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. Once you have\
    \ sufficient [reputation](https://stackoverflow.com/help/whats-reputation) you\
    \ will be able to [comment on any post](https://stackoverflow.com/help/privileges/comment);\
    \ instead, [provide answers that don't require cl", "    if n == 0 \n        0\n\
    \    else if n == 1 \n        0\n    else if n == 2 \n        1\n    else \n \
    \       fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci\
    \ |>\n<| c |>\nThe `fibfib` function does not work as intended. Try `fibfib(0)`\
    \ for example. Also `fibfib(n::Int64)` should be `fibfib(n)`.\n<|/ c |>\n<| c\
    \ |>\nThanks for pointing that out. I fixed the function and added a link to the\
    \ original question that discusses the Fibonacci sequence in Julia.\n<|/ c |>\n\
    <| c |>\nThanks for your answer. Could you please explain why you used `fibfib(n::Int64)`\
    \ instead of `fibfib(n)`? I thought `fibfib(n)` would work just fine.\n<|/ c |>\n\
    <| c |>\n`fibfib(n)` would work, but `fibfib(n::Int64)` would not work. `fibfib(n)`\
    \ would work because `fibfib(n)` would return a `Int64` whereas `fibfib(n::Int64)`\
    \ would return a `Int`. `fibfib(n::Int64)` would also work if you had `fibfib(n::Int)`\
    \ instead of `fibfib(n::Int64)`.\n<|/ c |>\n<| c |>\nThanks for your explanation!\
    \ I understand now.\n<|/ c |>\n<| a dscore=3 |>\nThe other answers are great,\
    \ but I wanted to add my own solution as it took me a while to figure out. \n\
    <code>", "    if n == 0\n        0\n    else if n == 1\n        0\n    else if\
    \ n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function to compute the factorial of\
    \ a given number. For example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120.", "   \
    \ if n == 0 then 0 else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(1)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that computes the factorial of a\
    \ number. For example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120.", "    if n ==\
    \ 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n        1\n\
    \    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.1>\nfibfib(1)\n</cell>\n<code language=julia-1.1>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.1>\nfibfib(8)\n</cell>\n<text>\nExercise\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a |>\n<| c |>\nThis doesn't answer the question. OP wants to know how to compute\
    \ Fibonacci numbers, not Fibonacci numbers. Also, your function doesn't even work\
    \ for the first few numbers, it returns `0` for them.\n<|/ c |>\n<| c |>\nThe\
    \ question was how to compute Fibonacci numbers. I provided a solution that does\
    \ exactly that. OP asked how to compute Fibonacci numbers, not Fibonacci numbers.\
    \ I provided a solution that does exactly that. OP asked how to compute Fibonacci\
    \ numbers, not Fibonacci numbers. I provided a solution that does exactly that.\
    \ OP asked how to compute Fibonacci numbers, not Fibonacci numbers. I provided\
    \ a solution that does exactly that. OP asked how to compute Fibonacci numbers,\
    \ not Fibonacci numbers. I provided a solution that does exactly that. OP asked\
    \ how to compute Fibonacci numbers, not Fibonacci numbers. I provided a solution\
    \ that does exactly that. OP asked how to compute Fibonacci numbers, not Fibonacci\
    \ numbers. I provided a solution that does exactly that. OP asked how to compute\
    \ Fibonacci numbers, not Fibonacci numbers. I provided a solution that does exactly\
    \ that. OP asked how to compute Fibonacci numbers, not Fibonacci numbers. I provided\
    \ a solution that does exactly that. OP asked how to compute Fibonacci numbers,\
    \ not Fibonacci numbers. I provided a solution that does exactly that. OP asked\
    \ how to compute Fibonacci numbers, not Fibonacci numbers. I provided a solution\
    \ that does exactly that. OP asked how to compute Fibonacci numbers, not Fibonacci\
    \ numbers. I provided a solution that does exactly that. OP asked how to compute\
    \ Fibonacci numbers, not Fibonacci numbers. I provided a solution that does exactly\
    \ that. OP asked how to compute Fibonacci numbers, not Fibonacci ", "    if n\
    \ == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n       \
    \ 1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a\
    \ function that computes the factorial of a given number. \nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that\
    \ computes the factorial of a given number. \nThe factorial of a number $n$ is\
    \ defined as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes the\
    \ factorial of a given number. \nThe factorial of a number $n$ is defined as:\n\
    $$n! = n  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n\
    \  (n-1)  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial of\
    \ a given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)\
    \  (n-2)  ...  2  1  $$\nWrite a function that computes the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-2)\
    \  ...  2  1  $$\nWrite a function that computes the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n  (n-1)  (n-", "   \
    \ if n == 0\n        0\n    elseif n == 1\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=2 |>\n<| a dscore=2\
    \ |>\n<code>", "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif\
    \ n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise 3\nWrite a function to compute the n-th Fibonacci number in the\
    \ Fibonacci sequence using recursion.\nHint: use fibfib(n-1) + fibfib(n-2) + fibfib(n-3).",
  "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n\
    \        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<text>\nExercise\n\
    Write a function that computes the n-th element of the Fibonacci sequence using\
    \ recursion.", "    if n == 0\n        0\n    elseif n == 1\n        0\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci\
    \ |>\n<| c |>\nThis code does not work. `fibfib(1)` returns `0` instead of `1`.\n\
    <|/ c |>\n<| c |>\nThe code works fine for me. Are you sure you copied the code\
    \ correctly? The `fibfib(1)` returns `1` as expected.\n<|/ c |>\n<| c |>\nYes,\
    \ I copied it correctly. `fibfib(1)` returns `1` as expected.\n<|/ c |>\n<| c\
    \ |>\nI tested it again and it works fine. Are you sure you copied the code correctly?\n\
    <|/ c |>\n<| c |>\nYes, I copied it correctly. `fibfib(1)` returns `1` as expected.\n\
    <|/ c |>\n<| a dscore=2 |>\n<code>", "    if n == 0 then 0 else fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that computes the factorial of a number. For example, factorial(5) = 5 x 4 x\
    \ 3 x 2 x 1 = 120.", "    if n == 0\n        0\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(n::Int64) = (fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3))\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfib", "    if n == 0 || n == 1\n        return 0\n    else\n\
    \        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>", "    if n == 0\n        0\n    else if n == 1\n\
    \        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n@time fibfib(1)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(8)\n</cell>\n<text>\nExercise\nWrite a function that computes the\
    \ n-th element of the Fibonacci sequence using recursion.", "    if n == 0\n \
    \       0\n    else if n == 1\n        0\n    else if n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a tags=julia,fibonacci |>\n<code>", "    if n == 0\n        0\n    else\
    \ if n == 1\n        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<|\
    \ a tags=julia,fibonacci |>\n<code>", "    if n == 0 \n        0\n    else if\
    \ n == 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.4>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.4>\nfibfib(5)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.4>", "    if n == 0\n        0\n  \
    \  else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a\
    \ dscore=2 |>\n<| a dscore=2 |>\nThe Fibonacci sequence is defined as:\n<code>\n\
    0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597\n</code>\n\
    The first two terms are 0 and 1, and the last term is 1 + 2 + 3 + 5 + 8 + 13 +\
    \ 21 + 34 + 55 + 89 + 144 + 233 + 377 + 610 + 987 + 1597.\nThe first two terms\
    \ are the Fibonacci numbers:\n<code>\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89,\
    \ 144, 233, 377, 610, 987, 1597\n</code>\nThe last term is the sum of the two\
    \ previous terms:\n<code>\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233,\
    \ 377, 610, 987, 1597\n</code>\nThe first two terms are the Fibonacci numbers:\n\
    <code>\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597\n\
    </code>\nThe last term is the sum of the two previous terms:\n<code>\n0, 1, 1,\
    \ 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597\n</code>\nThe\
    \ first two terms are the Fibonacci numbers:\n<code>\n0, 1, 1, 2, 3, 5, 8, 13,\
    \ 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597\n</code>\nThe last term is the\
    \ sum of the two previous terms:\n<code>\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55,\
    \ 89, 144, 233, 377, 610, 987, 1597\n</code>\nThe first two terms are the Fibonacci\
    \ numbers:\n<code>\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610,\
    \ 987, 1597\n</code>\nThe last term is the sum of the two previous terms:\n<code>\n\
    0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597\n</code>\n\
    The first two terms are the Fibonacci numbers:\n<code>\n0, 1, 1, 2, 3, 5, 8, 13,\
    \ 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597\n</code>\nThe last term is the\
    \ sum of the two previous terms:\n<code>\n0, 1, 1, 2, 3, 5, 8, 13, ", "    if\
    \ n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n     \
    \   1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0\n        0\n    elseif n == 1\n \
    \       0\n    elseif n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.3>\nfibfib(1)\n</cell>\n\
    <code language=julia-1.3>\nfibfib(5)\n</cell>\n<code language=julia-1.3>\nfibfib(8)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times\
    \ n-1 \\times n-2 \\times ...$$\nFor example, $5! = 5 \\times 4 \\times 3 \\times\
    \ 2 \\times 1 = 120$", "    if n == 0\n        0\n    elseif n == 1\n        0\n\
    \    elseif n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<text>\nExercise 9\nWrite a function to compute the factorial of\
    \ a number. \nFor example, factorial(5) = fib(5) = 5 x 4 x 3 x 2 x 1 = 120\nHint:\
    \ use the factorial function defined above.", "    if n == 0\n        0\n    else\
    \ if n == 1\n        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<|\
    \ c |>\nThis doesn't work for me. `fibfib(1)` returns `1` instead of `0`.\n<|/\
    \ c |>\n<| c |>\nI tested it and it works for me. Are you sure you copied the\
    \ code correctly? I used Julia 0.6.2\n<|/ c |>\n<| c |>\nI copied it exactly as\
    \ you did. I'm using Julia 0.6.2\n<|/ c |>\n<| c |>\nI tested it on 0.6.2 too.\
    \ Are you sure you copied the code correctly? I used Julia 0.6.2\n<|/ c |>\n<|\
    \ c |>\nI copied it exactly as you did. I'm using Julia 0.6.2\n<|/ c |>\n<| a\
    \ tags=julia,fibonacci |>\nThe accepted answer does not work for me. Here is a\
    \ working version:\n<code>", "    if n == 0\n        0\n    elseif n == 1\n  \
    \      0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0 then 0 else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise: Write\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise: Write a function that computes the n-th Fibonacci number using\
    \ the recursive formula.", "    if n == 0\n        0\n    else if n == 1\n   \
    \     0\n    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n@time fibfib(1)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the\
    \ n-th element of the Fibonacci sequence using recursion.", "    if n == 0\n \
    \       0\n    else if n == 1\n        0\n    else if n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci\
    \ |>\n<| c |>\nThis doesn't work. `fibfib(1)` returns `0`, not `1`.\n<|/ c |>\n\
    <| c |>\nI fixed the code above. Thanks for pointing that out.\n<|/ c |>\n<| a\
    \ tags=julia,fibonacci |>\n<code>", "    if n == 0\n        0\n    else\n    \
    \    fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a |>\n<| c |>\n\
    This answer doesn't really answer the question. You're just repeating what the\
    \ OP already knows.\n<|/ c |>\n<| c |>\nThe OP asked for help with the recursive\
    \ solution. He also asked for help with the iterative solution. He also asked\
    \ for help with how to implement the iterative solution. He also asked for help\
    \ with how to implement the recursive solution. He also asked for help with how\
    \ to implement the iterative solution. He also asked for help with how to implement\
    \ the recursive solution. He also asked for help with how to implement the iterative\
    \ solution. He also asked for help with how to implement the recursive solution.\
    \ He also asked for help with how to implement the iterative solution. He also\
    \ asked for help with how to implement the recursive solution. He also asked for\
    \ help with how to implement the iterative solution. He also asked for help with\
    \ how to implement the recursive solution. He also asked for help with how to\
    \ implement the iterative solution. He also asked for help with how to implement\
    \ the recursive solution. He also asked for help with how to implement the iterative\
    \ solution. He also asked for help with how to implement the recursive solution.\
    \ He also asked for help with how to implement the iterative solution. He also\
    \ asked for help with how to implement the recursive solution. He also asked for\
    \ help with how to implement the iterative solution. He also asked for help with\
    \ how to implement the recursive solution. He also asked for help with how to\
    \ implement the iterative solution. He also asked for help with how to implement\
    \ the recursive solution. He also asked for help with how to implement the iterative\
    \ solution. He also asked for help with how to implement the recursive solution.\
    \ He also asked for help with how to implement the iterative solution. He also\
    \ asked for help with how to implement the recursive solution. He also asked for\
    \ help with how to implement the iterative solution. He also asked for help with\
    \ how to implement the recursive solution. He also asked for help with how to\
    \ implement the iterative solution. He also asked for help with how to implement\
    \ the recursive solution. He also asked for help with how to implement the iterative\
    \ solution. ", "    if n == 0 then return 0\n    if n == 1 then return 1\n   \
    \ if n == 2 then return 1\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + ", "    if n == 0 \n        0\n    else if n\
    \ == 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise 10\nWrite a function\
    \ that computes the n-th Fibonacci number using the recursive definition of the\
    \ Fibonacci sequence.\nThe Fibonacci sequence is defined as follows:\nfibfib(0)\
    \ == 0\nfibfib(1) == 0\nfibfib(2) == 1\nfibfib(n) == fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\nPlease write a function to efficiently compute the n-th element\
    \ of the fibfib number sequence.\n>>> fibfib(1)\n0\n>>> fibfib(5)\n4\n>>> fibfib(8)\n\
    24\n</text>\n<cell>\n\"\"\"\nThe Fibonacci number sequence is a sequence similar\
    \ to the Fibbonacci sequnece that's defined as follows:\nfibfib(0) == 0\nfibfib(1)\
    \ == 0\nfibfib(2) == 1\nfibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n>>> fibfib(1)\n0\n>>> fibfib(5)\n4\n>>> fibfib(8)\n24\n\"\"\
    \"", "    if n == 0 || n == 1 \n        0\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>", " \
    \   if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n\
    \        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.4>\n@time fibfib(1)\n@time fibfib(5)\n@time fibfib(8)\n\
    </cell>\n<text>\nExercise: Write a function to compute the n-th element of the\
    \ Fibonacci sequence using recursion.", "    if n == 0\n        0\n    elseif\
    \ n == 1\n        0\n    elseif n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<|\
    \ c |>\nThis doesn't work for me. `fibfib(1)` returns `0`, not `1`.\n<|/ c |>\n\
    <| c |>\nI tested it and it works. I used Julia version 0.6.2\n<|/ c |>\n<| c\
    \ |>\nI tested it again and it works. I used Julia version 0.6.2\n<|/ c |>\n<|\
    \ c |>\nI tested it again and it works. I used Julia version 0.6.2\n<|/ c |>\n\
    <| c |>\nI tested it again and it works. I used Julia version 0.6.2\n<|/ c |>\n\
    <| a dscore=3 |>\n<code>", "    if n == 0\n        0\n    elseif n == 1\n    \
    \    0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(n::Int64)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2", "    if n == 0 then 0 else fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n</cell>\n\
    <code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(8)\n\
    </cell>\n<text>\nExercise: Write a function to compute the n-th element of the\
    \ Fibonacci number sequence using recursion.", "    if n == 0 \n        0\n  \
    \  else if n == 1 \n        0\n    else if n == 2 \n        1\n    else \n   \
    \     fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the factorial\
    \ of a number. \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times\
    \ n-1 \\times n-2 \\times ...$$\nFor example, 5! = 5 \\times 4 \\times 3 \\times\
    \ 2 \\times 1 = 120.\nWrite a function to compute the factorial of a number using\
    \ recursion. \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times\
    \ n-1 \\times n-2 \\times ...$$\nFor example, 5! = 5 \\times 4 \\times 3 \\times\
    \ 2 \\times 1 = 120.\nWrite a function to compute the factorial of a number using\
    \ iteration. \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times\
    \ n-1 \\times n-2 \\times ...$$\nFor example, 5! = 5 \\times 4 \\times 3 \\times\
    \ 2 \\times 1 = 120.\nWrite a function to compute the factorial of a number using\
    \ recursion and iteration. \nThe factorial of a number $n$ is defined as:\n$$n!\
    \ = n \\times n-1 \\times n-2 \\times ...$$\nFor example, 5! = 5 \\times 4 \\\
    times 3 \\times 2 \\times 1 = 120.\nWrite a function to compute the factorial\
    \ of a number using recursion and iteration. \nThe factorial of a number $n$ is\
    \ defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nFor example, 5!\
    \ = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120.\nWrite a function to compute\
    \ the factorial of a number using recursion and iteration. \nThe factorial of\
    \ a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    For example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120.\nWrite a function\
    \ to compute the factorial of a number using recursion and iteration. \nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 ", "    if n == 0 || n\
    \ == 1 \n        return 0 \n    else \n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n</cell>\n\
    <code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(8)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as:\n$$\\begin{equation}\n\
    n! = n \\times n-1 \\times n-2 \\times ... \\times 2 \\times 1\n\\end{equation}$$\n\
    Write a function that computes the factorial of a given number using recursion.\n\
    The factorial of a number $n$ is defined as:\n$$\\begin{equation}\nn! = n \\times\
    \ n-1 \\times n-2 \\times ... \\times 2 \\times 1\n\\end{equation}$$\nWrite a\
    \ function that computes the factorial of a given number using recursion.\nThe\
    \ factorial of a number $n$ is defined as:\n$$\\begin{equation}\nn! = n \\times\
    \ n-1 \\times n-2 \\times ... \\times 2 \\times 1\n\\end{equation}$$\nWrite a\
    \ function that computes the factorial of a given number using recursion.\nThe\
    \ factorial of a number $n$ is defined as:\n$$\\begin{equation}\nn! = n \\times\
    \ n-1 \\times n-2 \\times ... \\times 2 \\times 1\n\\end{equation}$$\nWrite a\
    \ function that computes the factorial of a given number using recursion.\nThe\
    \ factorial of a number $n$ is defined as:\n$$\\begin{equation}\nn! = n \\times\
    \ n-1 \\times n-2 \\times ... \\times 2 \\times 1\n\\end{equation}$$\nWrite a\
    \ function that computes the factorial of a given number using recursion.\nThe\
    \ factorial of a number $n$ is defined as:\n$$\\begin{equation}\nn! = n \\times\
    \ n-1 \\times n-2 \\times ... \\times 2 \\times 1\n\\end{equation}$$\nWrite a\
    \ function that computes the factorial of a given number using recursion.\nThe\
    \ factorial of a number $n$ is defined as:\n$$\\begin{equation}\nn! = n \\times\
    \ n-1 \\times n-2 \\times ... \\times 2 \\times 1\n\\end{equation}$$\nWrite a\
    \ function that computes the factorial of a given ", "    if n == 0\n        0\n\
    \    else if n == 1\n        0\n    else if n == 2\n        1\n    else\n    \
    \    fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise:\
    \ Write a function that computes the n-th element of the Fibonacci sequence using\
    \ recursion.", "    if n == 0\n        0\n    elseif n == 1\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis does not provide an answer to the question. To critique or\
    \ request clarification from an author, leave a comment below their post. - [From\
    \ Review](/review/low-quality-posts/27815154)\n<|/ c |>\n<| c |>\nI thought it\
    \ does. I added the code I used to test it.\n<|/ c |>\n<| c |>\nI added the code\
    \ I used to test it.\n<|/ c |>\n<| c |>\nThe code you added is incorrect. `fibfib`\
    \ does not take an `Int64` argument. `fibfib(1)` will give `0`, not `1`.\n<|/\
    \ c |>\n<| c |>\nI added the code I used to test it.\n<|/ c |>\n<| a tags=fibonacci,julia,performance\
    \ |>\n<code>", "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif\
    \ n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function to compute the nth element of the Fibonacci sequence using\
    \ recursion.", "    if n == 0\n        0\n    else if n == 1\n        0\n    else\
    \ if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.0>\n@time fibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.0>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise 3\nWrite a function to compute the n-th element of the Fibonacci\
    \ sequence using memoization.\nThe Fibonacci sequence is defined as follows:\n\
    $$Fn = F{n-1} + F_{n-2}$$\nwhere $F_0 = 0$ and $F_1 = 1$.\nWrite a function to\
    \ efficiently compute the n-th element of the Fibonacci number sequence using\
    \ memoization.\nThe Fibonacci number sequence is defined as follows:\n$$Fn = F{n-1}\
    \ + F_{n-2} + F_{n-3}$$\nwhere $F_0 = 0$ and $F_1 = 1$.\nPlease write a function\
    \ to efficiently compute the n-th element of the Fibonacci number sequence.\n\
    The Fibonacci number sequence is defined as follows:\n$$Fn = F{n-1} + F_{n-2}\
    \ + F_{n-3}$$\nwhere $F_0 = 0$ and $F_1 = 1$.\nPlease write a function to efficiently\
    \ compute the n-th element of the Fibonacci number sequence.\nThe Fibonacci number\
    \ sequence is defined as follows:\n$$Fn = F{n-1} + F_{n-2} + F_{n-3}$$\nwhere\
    \ $F_0 = 0$ and $F_1 = 1$.\nPlease write a function to efficiently compute the\
    \ n-th element of the Fibonacci number sequence.\nThe Fibonacci number sequence\
    \ is defined as follows:\n$$Fn = F{n-1} + F_{n-2} + F_{n-3}$$\nwhere $F_0 = 0$\
    \ and $F_1 = 1$.\nPlease write a function to efficiently compute the n-th element\
    \ of the Fibonacci number sequence.\nThe Fibonacci number sequence is defined\
    \ as follows:\n$$Fn = F{n-1} + F_{n-2} + F_{n-3}$$\nwhere $F_0 = 0$ and $F_1 =\
    \ 1$.\nPlease write a function to efficiently compute the n-th element of the\
    \ Fibonacci number sequence.\nThe Fi", "    if n == 0\n        0\n    else if\
    \ n == 1\n        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(8)\n</cell>\n<text>\nExercise\nWrite a function\
    \ that computes the n-th Fibonacci number using recursion.", "    if n == 0\n\
    \        0\n    elseif n == 1\n        0\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2", "    if n == 0\
    \ \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n\
    \    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/\
    \ a tags=julia,fibonacci |>\n<| a tags=julia,fibonacci |>\n<code>", "    if n\
    \ == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n    \
    \    1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise 2\nWrite a function to compute the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n  n-1  n-2  ...  1 \
    \ $$\nWrite a function to efficiently compute the factorial of a given number.\n\
    The factorial of a number $n$ is defined as:\n$$n! = n  n-1  n-2  ...  1  $$\n\
    Please write a function to efficiently compute the factorial of a given number.\n\
    Hint: Use a recursive function.\nHint: Use a while loop.\nHint: Use a for loop.\n\
    Hint: Use a while loop and a recursive function.\nHint: Use a while loop and a\
    \ for loop.\nHint: Use a while loop and a recursive function.\nHint: Use a while\
    \ loop and a for loop.\nHint: Use a while loop and a recursive function.\nHint:\
    \ Use a while loop and a for loop.\nHint: Use a while loop and a recursive function.\n\
    Hint: Use a while loop and a for loop.\nHint: Use a while loop and a recursive\
    \ function.\nHint: Use a while loop and a for loop.\nHint: Use a while loop and\
    \ a recursive function.\nHint: Use a while loop and a for loop.\nHint: Use a while\
    \ loop and a recursive function.\nHint: Use a while loop and a for loop.\nHint:\
    \ Use a while loop and a recursive function.\nHint: Use a while loop and a for\
    \ loop.\nHint: Use a while loop and a recursive function.\nHint: Use a while loop\
    \ and a for loop.\nHint: Use a while loop and a recursive function.\nHint: Use\
    \ a while loop and a for loop.\nHint: Use a while loop and a recursive function.\n\
    Hint: Use a while loop and a for loop.\nHint: Use a while loop and a recursive\
    \ function.\nHint: Use a while loop and a for loop.\nHint: Use a while loop and\
    \ a recursive function.\nHint: Use a while loop and a for loop.\nHint: Use a while\
    \ loop and ", "    if n == 0 \n        0\n    else if n == 1 \n        0\n   \
    \ else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<text>\nExercise: Write a function that computes the n-th element\
    \ of the Fibonacci sequence using recursion.", "    if n == 0\n        0\n   \
    \ else if n == 1\n        0\n    else if n == 2\n        1\n    else\n       \
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<code language=julia-1.5>", "    if n == 0 \n        0\n \
    \   else if n == 1 \n        0\n    else if n == 2 \n        1\n    else \n  \
    \      fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n\
    @time fibfib(1)\n</cell>\n<code language=julia-1.0>\n@time fibfib(5)\n</cell>\n\
    <code language=julia-1.0>\n@time fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function to compute the nth element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n   \
    \     1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise: Write\
    \ a function that computes the n-th Fibonacci number using recursion.", "    if\
    \ n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n  \
    \      1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=fibonacci,julia,recursion |>\n<| a tags=fibonacci,julia,recursion |>\n\
    <code>", "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else\
    \ if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that computes the n-th Fibonacci\
    \ number using recursion.", "    if n == 0\n        0\n    else if n == 1\n  \
    \      0\n    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nfibfib(n)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n</code>\n<|/ a tags=julia,fibonacci\
    \ |>\n<| a dscore=1 |>\n<code>", "    if n == 0\n        0\n    elseif n == 1\n\
    \        0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=julia,fibonacci |>\n<| a dscore=2 |>\n<code>", "    if n == 0 then\
    \ 0 else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(1)\n</cell>\n<text>\n\
    Problem 3\nWrite a function to compute the factorial of a number.\nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ....\
    \ \\times 2 \\times 1$$\nFor example, 5! = 5 \\times 4 \\times 3 \\times 2 \\\
    times 1 = 120\nWrite a function to compute the factorial of a number using recursion.\n\
    The factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2\
    \ \\times .... \\times 2 \\times 1$$\nFor example, 5! = 5 \\times 4 \\times 3\
    \ \\times 2 \\times 1 = 120\nWrite a function to compute the factorial of a number\
    \ using iteration.\nThe factorial of a number $n$ is defined as:\n$$n! = n \\\
    times n-1 \\times n-2 \\times .... \\times 2 \\times 1$$\nFor example, 5! = 5\
    \ \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function to compute the\
    \ factorial of a number using iteration.\nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n \\times n-1 \\times n-2 \\times .... \\times 2 \\times 1$$\nFor\
    \ example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function\
    \ to compute the factorial of a number using iteration.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... \\times 2\
    \ \\times 1$$\nFor example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\n\
    Write a function to compute the factorial of a number using iteration.\nThe factorial\
    \ of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ....\
    \ \\times 2 \\times 1$$\nFor example, 5! = 5 \\times 4 \\times 3 \\times 2 \\\
    times 1 = 120\nWrite a function to compute the factorial of a number using iteration.\n\
    The factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2\
    \ \\times .... \\times 2 \\times 1$$\nFor example, 5! = 5 \\times 4 \\times 3\
    \ \\times 2 \\times 1 = 120\nWrite a function to compute the factorial of a number ",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise: Write a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0 || n == 1\n        return 0\n   \
    \ else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise\nWrite\
    \ a function that computes the n-th Fibonacci number using recursion.", "    if\
    \ n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n  \
    \      1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=julia,fibonacci |>\n<| c |>\nThe `fibfib` function above is incorrect\
    \ for large `n`. The correct implementation is `fibfib(n) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)`.\n<|/ c |>\n<| a dscore=2 |>\nThe Fibonacci sequence is defined\
    \ as:", "    if n == 0\n        0\n    elseif n == 1\n        0\n    else\n  \
    \      fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function to compute the n-th element\
    \ of the Fibonacci sequence using recursion.", "    if n == 0 || n == 1 \n   \
    \     then 0\n    else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(1)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that computes the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times\
    \ n-1 \\times n-2 \\times ...$$\nWrite a function that computes the factorial\
    \ of a given number using recursion.\nThe factorial of a number $n$ is defined\
    \ as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nWrite a function that computes\
    \ the factorial of a given number using recursion.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nWrite a\
    \ function that computes the factorial of a given number using recursion.\nThe\
    \ factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\\
    times ...$$\nWrite a function that computes the factorial of a given number using\
    \ recursion.\nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1\
    \ \\times n-2 \\times ...$$\nWrite a function that computes the factorial of a\
    \ given number using recursion.\nThe factorial of a number $n$ is defined as:\n\
    $$n! = n \\times n-1 \\times n-2 \\times ...$$\nWrite a function that computes\
    \ the factorial of a given number using recursion.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\nWrite a\
    \ function that computes the factorial of a given number using recursion.\nThe\
    \ factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\\
    times ...$$\nWrite a function that computes the factorial of a given number using\
    \ recursion.\nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1\
    \ \\times n-2 \\times ...$$\nWrite a function that computes the factorial of a\
    \ given number using recursion.\nThe factorial of a number $n$ is defined as:\n\
    $$n! = n \\times n-1 \\times n-2 \\times ...$$\nWrite a function that computes\
    \ the factorial of a given number using recursion.\nThe factorial of a number\
    \ $n$ is defined as:\n$$n! = ", "    if n == 0 \n        0\n    else if n == 1\
    \ \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<text>\nProblem 7\nWrite a function to compute the factorial\
    \ of a given number. \nFor example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120", " \
    \   if n == 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n  \
    \      1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise: Write a function that computes the n-th Fibonacci number using\
    \ the recursive definition of fibfib. Compare your function with the built-in\
    \ fibfib function.", "    if n == 0\n        0\n    elseif n == 1\n        0\n\
    \    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(n::Int64)\
    \ = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2", "    if n == 0\n        0\n    else if n == 1\n \
    \       0\n    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThis is\
    \ not the Fibonacci sequence. Fibonacci numbers are the numbers in the sequence\
    \ that have no repeated terms. In particular, fib(5) = 5 because fib(4) + fib(3)\
    \ = fib(5).\n<|/ c |>\n<| c |>\nThis is not the Fibonacci sequence. Fibonacci\
    \ numbers are the numbers in the sequence that have no repeated terms. In particular,\
    \ fib(5) = 5 because fib(4) + fib(3) = fib(5).\n<|/ c |>\n<| c |>\nThis is not\
    \ the Fibonacci sequence. Fibonacci numbers are the numbers in the sequence that\
    \ have no repeated terms. In particular, fib(5) = 5 because fib(4) + fib(3) =\
    \ fib(5).\n<|/ c |>\n<| c |>\nThis is not the Fibonacci sequence. Fibonacci numbers\
    \ are the numbers in the sequence that have no repeated terms. In particular,\
    \ fib(5) = 5 because fib(4) + fib(3) = fib(5).\n<|/ c |>\n<| c |>\nThis is not\
    \ the Fibonacci sequence. Fibonacci numbers are the numbers in the sequence that\
    \ have no repeated terms. In particular, fib(5) = 5 because fib(4) + fib(3) =\
    \ fib(5).\n<|/ c |>\n<| a dscore=5 |>\n<code>", "    if n == 0 || n == 1\n   \
    \     return 0\n    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.4>\nfibfib(1)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.4>\nfibfib(8)\n</cell>\n<text>\nExercise\n\
    Write a function that computes the n-th element of the Fibonacci sequence using\
    \ recursion.", "    if n == 0\n        0\n    else if n == 1\n        0\n    else\
    \ if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</code>\n<|/ a tags=julia |>\n<| a tags=julia |>\nThe Fibonacci sequence\
    \ is defined as:\n<code>\nF(0) = 0\nF(1) = 1\nF(n) = F(n-1) + F(n-2)\n</code>\n\
    In Julia, this can be written as:\n<code>", "    if n == 0\n        0\n    else\
    \ if n == 1\n        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThe question\
    \ was about a recursive solution, not iterative.\n<|/ c |>\n<| c |>\nI didn't\
    \ realize that until I saw the other answers. I thought the question was about\
    \ a recursive solution. My bad.\n<|/ c |>\n<| a tags=julia,recursion |>\n<code>",
  "    if n == 0 || n == 1 \n        return 0 \n    else \n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(8)\n</cell>\n<text>\nExercise: Write a function\
    \ to compute the n-th element of the Fibonacci sequence using recursion.", " \
    \   if n == 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n  \
    \      1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.3>\nfibfib(1)\n</cell>\n<code language=julia-1.3>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.3>\nfibfib(8)\n</cell>\n<code language=julia-1.3>",
  "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n\
    \        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time fibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    @time fibfib(5)\n</cell>\n<code language=julia-1.5>\n@time fibfib(8)\n</cell>\n\
    <text>\nExercise\nWrite a function that computes the n-th element of the Fibonacci\
    \ sequence using recursion.", "    if n == 0\n        0\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise\nWrite a function\
    \ that computes the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    elseif n == 1\n        0\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n@time\
    \ fibfib(1)\n</cell>\n<code language=julia-1.0>\n@time fibfib(5)\n</cell>\n<code\
    \ language=julia-1.0>\n@time fibfib(8)\n</cell>\n<text>\nExercise\nWrite a function\
    \ to compute the n-th Fibonacci number using recursion.", "    if n == 0\n   \
    \     0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n    end\n\
    end\n</cell>\n<code language=julia-1.3>\nfibfib(1)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.3>\nfibfib(8)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$\nn! = n \\times n-1 \\times n-2 \\times ...\n\
    $$\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$\nn! = n \\times n-1 \\times n-2 \\times ...\n\
    $$\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$\nn! = n \\times n-1 \\times n-2 \\times ...\n\
    $$\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$\nn! = n \\times n-1 \\times n-2 \\times ...\n\
    $$\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$\nn! = n \\times n-1 \\times n-2 \\times ...\n\
    $$\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$\nn! = n \\times n-1 \\times n-2 \\times ...\n\
    $$\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$\nn! = n \\times n-1 \\times n-2 \\times ...\n\
    $$\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$\nn! = n \\times n-1 \\times n-2 \\times ...\n\
    $$\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$\nn! = n \\times n-1 \\times n-2 \\times ...\n\
    $$\nWrite a function that computes the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$\nn! = n \\times ", "    if n == 0\n     \
    \   0\n    else if n == 1\n        0\n    else if n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't answer the question. OP asked how to implement the\
    \ Fibonacci sequence in Julia, not how to compute it.\n<|/ c |>\n<| c |>\nThe\
    \ question was how to implement the Fibonacci sequence in Julia. My answer does\
    \ exactly that. OP asked how to implement the Fibonacci sequence in Julia, not\
    \ how to compute it.\n<|/ c |>\n<| c |>\nThe question was how to implement the\
    \ Fibonacci sequence in Julia, not how to compute it. The OP asked how to implement\
    \ the Fibonacci sequence in Julia, not how to compute it.\n<|/ c |>\n<| c |>\n\
    The question was how to implement the Fibonacci sequence in Julia, not how to\
    \ compute it. The OP asked how to implement the Fibonacci sequence in Julia, not\
    \ how to compute it.\n<|/ c |>\n<| c |>\nThe question was how to implement the\
    \ Fibonacci sequence in Julia, not how to compute it. The OP asked how to implement\
    \ the Fibonacci sequence in Julia, not how to compute it.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>", "    if n == 0\n        0\n    else if n == 1\n        0\n    else\
    \ if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<text>\nExercise\n\
    Write a function to compute the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a tags=julia,fibonacci,recursion |>\n<| c |>\nThe `fibfib` function can be\
    \ simplified to: `fibfib(n) = n < 2 ? n : fibfib(n-1) + fibfib(n-2)`\n<|/ c |>\n\
    <| c |>\nThanks, I didn't know that Julia had a ternary operator. I've edited\
    \ my answer to include your suggestion.\n<|/ c |>\n<| a dscore=2 |>\nThe recursive\
    \ solution is very nice, but I wanted to show a non-recursive solution that is\
    \ also quite efficient:\n<code>", "    if n == 0 then return 0\n    if n == 1\
    \ then return 1\n    if n == 2 then return 1\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    fibfib(n::Int64) = fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) =\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nfibfib(n::Int64) = fibfib(n-1) + ", "    if n == 0 \n       \
    \ 0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n    else\
    \ \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the n-th\
    \ Fibonacci number using the recursive formula fibfib(n) = fibfib(n-1) + fibfib(n-2).",
  "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif n == 2\n   \
    \     1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<text>\nProblem 3\nWrite\
    \ a function to compute the factorial of a given number. \nFor example, factorial(5)\
    \ = 5 * 4 * 3 * 2 * 1 = 120\nHint: use recursion.", "    if n == 0\n        0\n\
    \    elseif n == 1\n        0\n    elseif n == 2\n        1\n    else\n      \
    \  fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nProblem 3\n\
    Write a function that computes the factorial of a number.\nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1 \\\
    times 0 \\times 1 \\times 2 \\times 3 \\times ...$$\nFor example, 5! = 5 \\times\
    \ 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function that computes the factorial\
    \ of a number using recursion.\nThe factorial of a number $n$ is defined as:\n\
    $$n! = n \\times n-1 \\times n-2 \\times .... 1 \\times 0 \\times 1 \\times 2\
    \ \\times 3 \\times ...$$\nFor example, 5! = 5 \\times 4 \\times 3 \\times 2 \\\
    times 1 = 120\nWrite a function that computes the factorial of a number using\
    \ recursion.\nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1\
    \ \\times n-2 \\times .... 1 \\times 0 \\times 1 \\times 2 \\times 3 \\times ...$$\n\
    For example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function\
    \ that computes the factorial of a number using recursion.\nThe factorial of a\
    \ number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times .... 1 \\\
    times 0 \\times 1 \\times 2 \\times 3 \\times ...$$\nFor example, 5! = 5 \\times\
    \ 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function that computes the factorial\
    \ of a number using recursion.\nThe factorial of a number $n$ is defined as:\n\
    $$n! = n \\times n-1 \\times n-2 \\times .... 1 \\times 0 \\times 1 \\times 2\
    \ \\times 3 \\times ...$$\nFor example, 5! = 5 \\times 4 \\times 3 \\times 2 \\\
    times 1 = 120\nWrite a function that computes the factorial of a number using\
    \ recursion.\nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1\
    \ \\times n-2 \\times .... 1 \\times 0 \\times 1 \\times 2 \\times 3 \\times ...$$\n\
    For example, 5! = 5 \\times ", "    if n == 0\n        0\n    else if n == 1\n\
    \        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a |>\n<| a |>\nThe Fibonacci sequence is defined\
    \ as:\n<code>\nF(0) = 0\nF(1) = 1\nF(n) = F(n-1) + F(n-2)\n</code>\nThe first\
    \ two terms are 0 and 1, and the last term is F(n-1)+F(n-2).\nThe first two terms\
    \ are 0 and 1, and the last term is F(n-1)+F(n-2).\nThe first two terms are 0\
    \ and 1, and the last term is F(n-1)+F(n-2).\nThe first two terms are 0 and 1,\
    \ and the last term is F(n-1)+F(n-2).\nThe first two terms are 0 and 1, and the\
    \ last term is F(n-1)+F(n-2).\nThe first two terms are 0 and 1, and the last term\
    \ is F(n-1)+F(n-2).\nThe first two terms are 0 and 1, and the last term is F(n-1)+F(n-2).\n\
    The first two terms are 0 and 1, and the last term is F(n-1)+F(n-2).\nThe first\
    \ two terms are 0 and 1, and the last term is F(n-1)+F(n-2).\nThe first two terms\
    \ are 0 and 1, and the last term is F(n-1)+F(n-2).\nThe first two terms are 0\
    \ and 1, and the last term is F(n-1)+F(n-2).\nThe first two terms are 0 and 1,\
    \ and the last term is F(n-1)+F(n-2).\nThe first two terms are 0 and 1, and the\
    \ last term is F(n-1)+F(n-2).\nThe first two terms are 0 and 1, and the last term\
    \ is F(n-1)+F(n-2).\nThe first two terms are 0 and 1, and the last term is F(n-1)+F(n-2).\n\
    The first two terms are 0 and 1, and the last term is F(n-1)+F(n-2).\nThe first\
    \ two terms are 0 and 1, and the last term is F(n-1)+F(n-2).\nThe first two terms\
    \ are 0 and 1, and the last term is F(n-1)+F(n-2).\nThe first two terms are 0\
    \ and 1, and the last term is F(n-1)+F(n-2).\nThe first two terms are 0 and 1,\
    \ and the last term is F(n-1)+F(n-2).\nThe first two terms are 0 and 1, and the\
    \ last term is F(n-1)+F(n-2).\nThe ", "    if n == 0\n        0\n    elseif n\
    \ == 1\n        0\n    elseif n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.3>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.3>\nfibfib(5)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the n-th element\
    \ of the Fibonacci sequence using recursion.", "    if n == 0 \n        0\n  \
    \  else if n == 1 \n        0\n    else if n == 2 \n        1\n    else \n   \
    \     fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=2 |>\n\
    <| c |>\nThis doesn't answer the question. OP wants to know how to use recursion\
    \ to compute Fibonacci numbers. Your answer doesn't do that.\n<|/ c |>\n<| c |>\n\
    The question was \"Please write a function to efficiently compute the n-th element\
    \ of the fibfib number sequence.\"\n<|/ c |>\n<| c |>\nThe question was \"Please\
    \ write a function to efficiently compute the n-th element of the fibfib number\
    \ sequence.\"\n<|/ c |>\n<| c |>\nThe question was \"Please write a function to\
    \ efficiently compute the n-th element of the fibfib number sequence.\"\n<|/ c\
    \ |>\n<| c |>\nThe question was \"Please write a function to efficiently compute\
    \ the n-th element of the fibfib number sequence.\"\n<|/ c |>\n<| a tags=fibonacci,julia,recursion\
    \ |>\n<code>", "    if n == 0\n        0\n    else if n == 1\n        0\n    else\
    \ if n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThe `fibfib` function doesn't\
    \ work as intended. `fibfib(0)` returns `0`, but `fibfib(1)` returns `1`. `fibfib(2)`\
    \ returns `1`, but `fibfib(3)` returns `3`. `fibfib(4)` returns `3`, but `fibfib(5)`\
    \ returns `5`. `fibfib(6)` returns `5`, but `fibfib(7)` returns `8`. `fibfib(8)`\
    \ returns `8`, but `fibfib(9)` returns `13`. `fibfib(10)` returns `13`, but `fibfib(11)`\
    \ returns `21`. `fibfib(12)` returns `21`, but `fibfib(13)` returns `34`. `fibfib(14)`\
    \ returns `34`, but `fibfib(15)` returns `55`. `fibfib(16)` returns `55`, but\
    \ `fibfib(17)` returns `89`. `fibfib(18)` returns `89`, but `fibfib(19)` returns\
    \ `144`. `fibfib(20)` returns `144`, but `fibfib(21)` returns `233`. `fibfib(22)`\
    \ returns `233`, but `fibfib(23)` returns `377`. `fibfib(24)` returns `377`, but\
    \ `fibfib(25)` returns `610`. `fibfib(26)` returns `610`, but `fibfib(27)` returns\
    \ `987`. `fibfib(28)` returns `987`, but `fibfib(29)` returns `1597`. `fibfib(30)`\
    \ returns `1597`, but `fibfib(31)` returns `2584`. `fibfib(32)` returns `2584`,\
    \ but `fibfib(33)` returns `4181`. `fibfib(34)` returns `4181`, but `fibfib(35)`\
    \ returns `6765`. `fibfib(36)` returns `6765`, but `fibfib(37)` returns `10946`.\
    \ `fibfib(38)` returns `10946`, but `", "    if n == 0\n        0\n    elseif\
    \ n == 1\n        0\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise:\
    \ Write a function to compute the n-th element of the Fibonacci sequence using\
    \ recursion.", "    if n == 0\n        0\n    elseif n == 1\n        0\n    elseif\
    \ n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    end\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a dscore=2 |>\n<code>", "    if\
    \ n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n  \
    \      1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <text>\nProblem 3\nWrite a function to compute the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$n! = n \\times n-1 \\times\
    \ n-2 \\times .... 1 \\times 1 \\times 0$$\nFor example, $5! = 5 \\times 4 \\\
    times 3 \\times 2 \\times 1 = 120$", "    if n == 0 \n        0\n    else if n\
    \ == 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<text>\nProblem 3\nWrite a function to compute the sum of\
    \ the squares of the first n positive integers. \nFor example, \n    square_sum(3)\
    \ = 1 + 4 + 9 + 16 + 25 = 25\n    square_sum(10) = 1 + 4 + 9 + 16 + 25 + 36 +\
    \ 49 + 64 + 81 + 100 = 2520\nHint: use the sum function.", "    if n == 0 || n\
    \ == 1 \n        then 0\n    else fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function to compute the nth element of the\
    \ Fibonacci sequence using recursion.", "    if n == 0\n        0\n    else if\
    \ n == 1\n        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that computes the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as:\n$$\\begin{align}\nn! = n \\times \\times \\times \\times \\\
    times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times ", "    if n == 0 \n\
    \        0\n    else if n == 1 \n        0\n    else if n == 2 \n        1\n \
    \   else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0\n        0\n    elseif n == 1\n        0\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia |>\n<| a dscore=2\
    \ |>\nThe Fibonacci sequence is defined as\n<code>\nfib(n) = fib(n-1) + fib(n-2)\n\
    </code>\nThe first two terms are 0 and 1, the third term is 1 + 2, and so on.\
    \ \nThe Fibonacci sequence is defined as the sum of two Fibonacci numbers, each\
    \ starting with 0 and 1. \nThe first two terms are 0 and 1, the third term is\
    \ 1 + 2, and so on. \nThe Fibonacci sequence is defined as the sum of two Fibonacci\
    \ numbers, each starting with 0 and 1. \nThe first two terms are 0 and 1, the\
    \ third term is 1 + 2, and so on. \nThe Fibonacci sequence is defined as the sum\
    \ of two Fibonacci numbers, each starting with 0 and 1. \nThe first two terms\
    \ are 0 and 1, the third term is 1 + 2, and so on. \nThe Fibonacci sequence is\
    \ defined as the sum of two Fibonacci numbers, each starting with 0 and 1. \n\
    The first two terms are 0 and 1, the third term is 1 + 2, and so on. \nThe Fibonacci\
    \ sequence is defined as the sum of two Fibonacci numbers, each starting with\
    \ 0 and 1. \nThe first two terms are 0 and 1, the third term is 1 + 2, and so\
    \ on. \nThe Fibonacci sequence is defined as the sum of two Fibonacci numbers,\
    \ each starting with 0 and 1. \nThe first two terms are 0 and 1, the third term\
    \ is 1 + 2, and so on. \nThe Fibonacci sequence is defined as the sum of two Fibonacci\
    \ numbers, each starting with 0 and 1. \nThe first two terms are 0 and 1, the\
    \ third term is 1 + 2, and so on. \nThe Fibonacci sequence is defined as the sum\
    \ of two Fibonacci numbers, each starting with 0 and 1. \nThe first two terms\
    \ are 0 and 1, the third term is 1 + 2, and so on. \nThe Fibonacci sequence is\
    \ defined as the sum of two Fibonacci numbers, each starting with 0 and 1. \n\
    The first two terms are 0 and 1, the third term is 1 + 2, and so on. \nThe Fibonacci\
    \ sequence is defined as the sum of two Fibonacci numbers, each starting with\
    \ 0 and 1. \nThe ", "    if n == 0\n        0\n    else\n        fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci |>\n<| a\
    \ |>\n<code>", "    if n == 0 \n        0\n    else if n == 1 \n        0\n  \
    \  else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3)\nend\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease don't post only\
    \ code as an answer, but also provide an explanation of what your code does and\
    \ how it solves the problem of the question. Answers with an explanation are usually\
    \ more helpful and of better quality, and are more likely to attract upvotes.\n\
    <|/ c |>\n<| c |>\nI added some explanation to the answer. Hope it helps.\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>", "    if n == 0 || n == 1\n        return 0\n\
    \    else\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThe `fibfib` function can be written more efficiently\
    \ by using a `while` loop and `return` instead of recursion.\n<|/ c |>\n<| c |>\n\
    I agree, though I wanted to keep it simple for OP to understand.\n<|/ c |>\n<|\
    \ c |>\nI agree with you that `fibfib` can be written more efficiently by using\
    \ a `while` loop and `return` instead of recursion. But the OP asked for a recursive\
    \ solution and I wanted to show him how it can be done with recursion.\n<|/ c\
    \ |>\n<| c |>\nI agree with you that `fibfib` can be written more efficiently\
    \ by using a `while` loop and `return` instead of recursion. But the OP asked\
    \ for a recursive solution and I wanted to show him how it can be done with recursion.\n\
    <|/ c |>\n<| c |>\nI agree with you that `fibfib` can be written more efficiently\
    \ by using a `while` loop and `return` instead of recursion. But the OP asked\
    \ for a recursive solution and I wanted to show him how it can be done with recursion.\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>", "    if n == 0 || n == 1 \n        0\n  \
    \  else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code\
    \ language=julia-1.0>\nfibfib(1)\n</cell>\n<code language=julia-1.0>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(8)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that computes the factorial of a given number. For example, factorial(5)\
    \ = 5 * 4 * 3 * 2 * 1 = 120", "    if n == 0\n        0\n    elseif n == 1\n \
    \       0\n    elseif n == 2\n        1\n    else\n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia,fibonacci,performance |>\n<| c\
    \ |>\nI believe that `fibfib(n-1) + fibfib(n-2) + fibfib(n-3)` can be replaced\
    \ by `fibfib(n-2) + fibfib(n-3)`.\n<|/ c |>\n<| c |>\nYes, you are right. I was\
    \ thinking about this and I thought that `fibfib(n-1) + fibfib(n-2) + fibfib(n-3)`\
    \ was the correct answer. Thanks for pointing out.\n<|/ c |>\n<| a |>\nThe Julia\
    \ code below is based on this answer:\n<code>", "    if n == 0\n        0\n  \
    \  elseif n == 1\n        0\n    elseif n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ fibfib(1)\n</cell>\n<code language=julia-1.5>\n@time fibfib(5)\n</cell>\n<code\
    \ language=julia-1.5>\n@time fibfib(8)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ to compute the n-th element of the Fibonacci sequence using recursion.", " \
    \   if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n\
    \        1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that computes the n-th Fibonacci number using\
    \ the recursive formula fibfib(n) = fibfib(n-1) + fibfib(n-2).", "    if n ==\
    \ 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n        1\n\
    \    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<text>\n\
    Problem 7\nWrite a function that computes the factorial of a given number. For\
    \ example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120.", "    if n == 0 then 0 else\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n</cell>\n<code language=julia-1.3>\n@time fibfib(1)\n\
    </cell>\n<code language=julia-1.3>\n@time fibfib(5)\n</cell>\n<code language=julia-1.3>\n\
    @time fibfib(8)\n</cell>\n<text>\nExercise 3\nWrite a function to compute the\
    \ factorial of a given number. \nThe factorial of a number $n$ is defined as:\n\
    $$\nn! = n \\times n-1 \\times n-2 \\times ...\n$$\nFor example, 5! = 5 \\times\
    \ 4 \\times 3 \\times 2 \\times 1 = 120\nWrite a function to compute the factorial\
    \ of a given number. \nThe factorial of a number $n$ is defined as:\n$$\nn! =\
    \ n \\times n-1 \\times n-2 \\times ...\n$$\nFor example, 5! = 5 \\times 4 \\\
    times 3 \\times 2 \\times 1 = 120\nWrite a function to compute the factorial of\
    \ a given number. \nThe factorial of a number $n$ is defined as:\n$$\nn! = n \\\
    times n-1 \\times n-2 \\times ...\n$$\nFor example, 5! = 5 \\times 4 \\times 3\
    \ \\times 2 \\times 1 = 120\nWrite a function to compute the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as:\n$$\nn! = n \\times n-1\
    \ \\times n-2 \\times ...\n$$\nFor example, 5! = 5 \\times 4 \\times 3 \\times\
    \ 2 \\times 1 = 120\nWrite a function to compute the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\n$$\nn! = n \\times n-1 \\times\
    \ n-2 \\times ...\n$$\nFor example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times\
    \ 1 = 120\nWrite a function to compute the factorial of a given number. \nThe\
    \ factorial of a number $n$ is defined as:\n$$\nn! = n \\times n-1 \\times n-2\
    \ \\times ...\n$$\nFor example, 5! = 5 \\times 4 \\times 3 \\times 2 \\times 1\
    \ = 120\nWrite a function to compute the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\n$$\nn! = n \\times n-1 \\", "    if n == 0\n\
    \        0\n    else if n == 1\n        0\n    else if n == 2\n        1\n   \
    \ else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a tags=julia\
    \ |>\n<| c |>\nThis doesn't seem to work. `fibfib(1)` returns `0` instead of `1`.\n\
    <|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing it out. Now it works.\n\
    <|/ c |>\n<| a dscore=1 |>\nThe other answers here are correct, but I thought\
    \ I'd add an alternative that doesn't require recursion.\n<code>\nfibfib(n) =\
    \ n==0 ? 0 : n==1 ? 1 : fibfib(n-1) + fibfib(n-2)\n</code>\n<|/ a tags=julia |>\n\
    <| c |>\nThis doesn't seem to work. `fibfib(1)` returns `0` instead of `1`.\n\
    <|/ c |>\n<| c |>\nI fixed the bug. Thanks for pointing it out. Now it works.\n\
    <|/ c |>\n<| a tags=julia |>\n<code>", "    if n == 0 \n        0\n    else if\
    \ n == 1 \n        0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the n-th\
    \ element of the Fibonacci sequence using recursion.", "    if n == 0\n      \
    \  0\n    else if n == 1\n        0\n    else if n == 2\n        1\n    else\n\
    \        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.3>\n\
    fibfib(1)\n</cell>\n<code language=julia-1.3>\nfibfib(5)\n</cell>\n<code language=julia-1.3>\n\
    fibfib(8)\n</cell>\n<text>\nExercise 2\nWrite a function that computes the factorial\
    \ of a given number. \nFor example, factorial(5) == 120. \nHint: use recursion.",
  "    if n == 0\n        0\n    else if n == 1\n        0\n    else if n == 2\n \
    \       1\n    else\n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise\nWrite\
    \ a function that computes the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\n$$n! = n \\times n-1 \\times n-2 \\times ...$$\n\
    Write a function that computes the factorial of a given number using recursion.\n\
    Write a function that computes the factorial of a given number using iteration.\
    \ \nWrite a function that computes the factorial of a given number using recursion\
    \ and iteration. \nWrite a function that computes the factorial of a given number\
    \ using recursion and iteration.", "    if n == 0\n        0\n    elseif n ==\
    \ 1\n        0\n    elseif n == 2\n        1\n    else\n        fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\n\
    fibfib(8)\n</cell>\n<text>\nExercise\nWrite a function that computes the n-th\
    \ Fibonacci number using recursion.", "    if n == 0\n        0\n    else if n\
    \ == 1\n        0\n    else if n == 2\n        1\n    else\n        fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.4>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.4>\nfibfib(5)\n</cell>\n<code language=julia-1.4>\n\
    fibfib(8)\n</cell>\n<text>\nExercise: Write a function that computes the n-th\
    \ element of the Fibonacci sequence using recursion.", "    if n == 0\n      \
    \  0\n    elseif n == 1\n        0\n    elseif n == 2\n        1\n    else\n \
    \       fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</code>\n<|/ a dscore=1\
    \ |>\n<| a tags=julia,fibonacci |>\nThe Julia language has some nice built-in\
    \ functions for doing this sort of thing. Here's a solution that uses them:\n\
    <code>", "    if n == 0 then return 0\n    if n == 1 then return 1\n    if n ==\
    \ 2 then return 1\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n\
    <code language=julia-1.5>\nfibfib(1)\n</cell>\n<code language=julia-1.5>\nfibfib(5)\n\
    </cell>\n<code language=julia-1.5>\nfibfib(8)\n</cell>\n<text>\nExercise: Write\
    \ a function to compute the n-th element of the Fibonacci sequence using recursion.",
  "    if n == 0 \n        0\n    else if n == 1 \n        0\n    else if n == 2 \n\
    \        1\n    else \n        fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\nend\n\
    </code>\n<|/ a tags=julia,fibonacci |>\n<| c |>\nThis code doesn't work. `fibfib(1)`\
    \ returns `0` instead of `1`.\n<|/ c |>\n<| c |>\nIt does work. `fibfib(1)` returns\
    \ `0` instead of `1`. `fibfib(2)` returns `1` instead of `2`. `fibfib(3)` returns\
    \ `2` instead of `3`. `fibfib(4)` returns `3` instead of `5`. `fibfib(5)` returns\
    \ `5` instead of `8`. `fibfib(6)` returns `8` instead of `13`. `fibfib(7)` returns\
    \ `13` instead of `21`. `fibfib(8)` returns `21` instead of `34`. `fibfib(9)`\
    \ returns `34` instead of `55`. `fibfib(10)` returns `55` instead of `89`. `fibfib(11)`\
    \ returns `89` instead of `144`. `fibfib(12)` returns `144` instead of `233`.\
    \ `fibfib(13)` returns `233` instead of `377`. `fibfib(14)` returns `377` instead\
    \ of `610`. `fibfib(15)` returns `610` instead of `987`.\n<|/ c |>\n<| c |>\n\
    Yes, it does work. `fibfib(1)` returns `0` instead of `1`. `fibfib(2)` returns\
    \ `1` instead of `2`. `fibfib(3)` returns `2` instead of `3`. `fibfib(4)` returns\
    \ `3` instead of `5`. `fibfib(5)` returns `5` instead of `8`. `fibfib(6)` returns\
    \ `8` instead of `13`. `fibfib(7)` returns `13` instead of `21`. `fibfib(8)` returns\
    \ `21` instead of `34`. `fibfib(9)` returns `34` instead of `55`. `fibfib(10)`\
    \ returns `55` instead of `89`. `fibfib(11)` returns `89` instead of `144`. `fibfib(12)`\
    \ returns `144` instead of `233`. `fibfib(13)` returns `233` instead of `377`.\
    \ `fibfib(14)` returns `", "    if n == 0 \n        0\n    else if n == 1 \n \
    \       0\n    else if n == 2 \n        1\n    else \n        fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.5>\nfibfib(1)\n</cell>\n\
    <code language=julia-1.5>\nfibfib(5)\n</cell>\n<code language=julia-1.5>\nfibfib(8)\n\
    </cell>\n<text>\nExercise\nWrite a function that computes the n-th element of\
    \ the Fibonacci sequence using recursion.", "    if n == 0 then 0 else fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\nfibfib(n::Int64) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n</cell>\n<code language=julia-1.4>\n@time fibfib(1)\n</cell>\n\
    <code language=julia-1.4>\n@time fibfib(5)\n</cell>\n<code language=julia-1.4>\n\
    @time fibfib(8)\n</cell>\n<text>\nExercise: Write a function to compute the n-th\
    \ element of the Fibonacci sequence using recursion.", "    if n == 0 then return\
    \ 0\n    if n == 1 then return 1\n    if n == 2 then return 1\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\nend\n</cell>\n<code language=julia-1.0>\nfibfib(1)\n\
    </cell>\n<code language=julia-1.0>\nfibfib(5)\n</cell>\n<code language=julia-1.0>\n\
    fibfib(8)\n</cell>\n<text>\nProblem 7\nWrite a function to compute the factorial\
    \ of a given number. \nFor example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

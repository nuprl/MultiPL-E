name: HumanEval_24_largest_divisor
language: jl
prompt: "\"\"\" For a given number n, find the largest number that divides n evenly,\
  \ smaller than n\n    >>> largest_divisor(15)\n    5\n    \"\"\"\nfunction largest_divisor(n::Int64)::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = largest_divisor;\n\t@test(candidate(3)\
  \ == 1)\n\t@test(candidate(7) == 1)\n\t@test(candidate(10) == 5)\n\t@test(candidate(100)\
  \ == 50)\n\t@test(candidate(49) == 7)\nend\n"
completions: ["    if n==1 then return 1\n    else if n%2==0 then return n//2\n  \
    \  else return largest_divisor(n//2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the first n positive integers greater than or equal to n. For example, first_n_positive(10)\
    \ should return [10, 11, 12, 13, 14, 15].", "    if n % 2 == 0 \n        then\
    \ largest_divisor(n / 2)\n        else largest_divisor(3 * n + 1) \n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of divisors of n that are\
    \ less than or equal to n.", "    if n==1 \n        return 1 \n    else \n   \
    \     largest_divisor(n-1)\n        if n % 2 == 0 \n            largest_divisor(n/2)\
    \ \n        else \n            largest_divisor(n/2) \n        end\n    end\nend\n\
    </cell>\n<code language=julia-1.4>\n@time largest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of divisors of n that are\
    \ less than or equal to n.", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.0>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of divisors of n\
    \ that are less than or equal to n.", "    if n==1 then return 1\n    else if\
    \ n%2==0 then return n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code\
    \ language=julia-1.0>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of divisors of n that are less than or equal\
    \ to n.", "    if n==1 \n        1\n    else\n        largest_divisor(n-1)\n \
    \   end\nend\n</cell>\n<code language=julia-1.5>\n@time largest_divisor(15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the first n prime numbers.\
    \ \nHint: Use a for loop and a prime number test.", "    if n==1 \n        return\
    \ 1 \n    else \n        return largest_divisor(n-1) + 1 \nend \n</cell>\n<code\
    \ language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of divisors of n that are less than or equal\
    \ to n.", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n \
    \       if n%2==0\n            largest_divisor(n/2)\n        else\n          \
    \  largest_divisor(n/2) \n        end\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of a given number. For example, for the number 15, there\
    \ are two divisors: 5 and 3.", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n\
    \        if n%2==0\n            largest_divisor(n/2)\n        end\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of divisors\
    \ of a given number. For example, for the number 12, the number of divisors is\
    \ 3.", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n    end\n\
    end\n</cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of divisors of n that are\
    \ less than or equal to n.", "    if n==1 \n        1\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of divisors of n\
    \ that are less than or equal to n.", "    if n==1 \n        1\n    else\n   \
    \     largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that finds\
    \ the smallest number that divides n evenly, larger than n\nHint: use largest_divisor",
  "    if n % 2 == 0 \n        then largest_divisor(n / 2)\n        else largest_divisor(3\
    \ * n + 1) \n    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as $n! = n * (n - 1)\
    \ * (n - 2) * ... * 1$. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a\
    \ function that returns the factorial of a given number $n$. \nThe factorial of\
    \ a number $n$ is defined as $n! = n * (n - 1) * (n - 2) * ... * 1$. \nFor example,\
    \ 5! = 5 x 4 x 3 x 2 x 1 = 120. \nHint: Use a while loop to solve this problem.\
    \ \nHint: Use a for loop to solve this problem. \nHint: Use a recursive function\
    \ to solve this problem. \nHint: Use a while loop to solve this problem. \nHint:\
    \ Use a for loop to solve this problem. \nHint: Use a recursive function to solve\
    \ this problem. \nHint: Use a while loop to solve this problem. \nHint: Use a\
    \ for loop to solve this problem. \nHint: Use a recursive function to solve this\
    \ problem. \nHint: Use a while loop to solve this problem. \nHint: Use a for loop\
    \ to solve this problem. \nHint: Use a recursive function to solve this problem.\
    \ \nHint: Use a while loop to solve this problem. \nHint: Use a for loop to solve\
    \ this problem. \nHint: Use a recursive function to solve this problem. \nHint:\
    \ Use a while loop to solve this problem. \nHint: Use a for loop to solve this\
    \ problem. \nHint: Use a recursive function to solve this problem. \nHint: Use\
    \ a while loop to solve this problem. \nHint: Use a for loop to solve this problem.\
    \ \nHint: Use a recursive function to solve this problem. \nHint: Use a while\
    \ loop to solve this problem. \nHint: Use a for loop to solve this problem. \n\
    Hint: Use a recursive function to solve this problem. \nHint: Use a while loop\
    \ to solve this problem. \nHint: Use a for loop to solve this problem. \nHint:\
    \ Use a recursive function to solve this problem. \nHint: Use a while loop to\
    \ solve this problem. \nHint: Use a for loop to solve this problem. \nHint: Use\
    \ a recursive function to solve this problem. \nHint", "    if n==0 then return\
    \ 0\n    else if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_divisor(100)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of divisors of n\
    \ that are less than or equal to n.", "    if n==1 \n        return 1 \n    else\
    \ \n        return largest_divisor(n-1) + 1 \nend \n</cell>\n<code language=julia-1.3>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that finds\
    \ the smallest number that divides n evenly, larger than n\n    >>> smallest_divisor(15)\n\
    \    3\n    \"\"\"", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of divisors of a\
    \ given number n. For example, for n = 15, there are 4 divisors: 1, 2, 3, and\
    \ 5.", "    if n==0 then return 0\n    else if n%2==0 then return n\n    else\
    \ return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that computes the factorial of a\
    \ given number. For example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120", "    if\
    \ n==0 \n        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\n@time largest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that returns the smallest number that divides n evenly,\
    \ smaller than n.", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that returns the\
    \ smallest number that divides n evenly, smaller than n.", "    if n % 2 == 0\
    \ \n        then largest_divisor(n / 2)\n        else largest_divisor(3 * n +\
    \ 1)\n    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of divisors\
    \ of a given number. For example, for the number 12, there are two divisors: 2\
    \ and 3. The function should return the number of divisors.", "    if n==0 then\
    \ return 0\n    else if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of divisors of n that are\
    \ less than or equal to n.", "    if n==1 then return n\n    else if n%2==0 then\
    \ return largest_divisor(n/2)\n    else return largest_divisor(n/2) + 1\nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of divisors of a given number n.\
    \ For example, for n = 10, the function should return 3.", "    if n==1 \n   \
    \     1\n    else \n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 7: Write\
    \ a function that returns the smallest number that divides n evenly, larger than\
    \ n\n    >>> smallest_divisor(15)\n    3\n    \"\"\"", "    if n % 2 == 0\n  \
    \      then largest_divisor(n / 2)\n        else largest_divisor(3 * n + 1) \n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n@time largest_divisor(15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of divisors\
    \ of n that are less than or equal to n.", "    if n==0 then return 0\n    else\
    \ if n%2==0 then return n\n    else return largest_divisor(n/2)\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\n\
    Write a function that finds the largest prime factor of a given number. For example,\
    \ for the number 12, you should return 2. For this problem, you should use the\
    \ sieve of Eratosthenes. A prime number is a natural number greater than 1 that\
    \ has no positive divisors other than 1 and itself.", "    if n==0\n        0\n\
    \    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that returns the largest number that divides n evenly, smaller\
    \ than n.", "    if n==1 \n        return 1 \n    else if n%2==0 \n        return\
    \ largest_divisor(n/2) \n    else \n        return largest_divisor(n/2) + 1 \n\
    end \n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of divisors of n that are\
    \ less than or equal to n.", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype largest_divisor(15)\n\
    </cell>\n<text>\nExercise 5\nWrite a function that returns the factorial of a\
    \ given number", "    if n == 1 \n        return 1 \n    else if n % 2 == 0 \n\
    \        return largest_divisor(n/2) \n    else \n        return largest_divisor(3*n+1)\
    \ + 1 \nend\n</cell>\n<code language=julia-1.0>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of divisors of n\
    \ that are less than or equal to n.", "    if n==0\n        0\n    else\n    \
    \    largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the number of divisors of a given number n. \nFor example, for n = 15,\
    \ the function should return 3.", "    if n==0 then return 0\n    if n==1 then\
    \ return 1\n    if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.4>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of divisors of n that are\
    \ less than or equal to n.", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the smallest number that divides\
    \ n evenly, smaller than n.", "    if n==0 then return 0\n    else if n%2==0 then\
    \ return n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(100)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the factorial of a given number. For example, factorial(5) = 5 * 4 *\
    \ 3 * 2 * 1 = 120", "    if n==0 then return 0\n    if n==1 then return 1\n  \
    \  if n%2==0 then return n\n    else return largest_divisor(n/2)\nend\n</cell>\n\
    <code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the smallest number that divides n evenly, smaller\
    \ than n\nHint: use largest_divisor(n) function", "    if n==1 \n        return\
    \ 1 \n    else \n        largest_divisor(n-1) + largest_divisor(n-2) \nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the factorial of a given number. \nFor example,\
    \ factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==1 \n        return\
    \ 1 \n    else \n        largest_divisor(n-1)\n        if n%2==0 \n          \
    \  largest_divisor(n/2)\n        else \n            largest_divisor(n/2)+1\n \
    \       end\n    end\nend\n</cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the factorial of a\
    \ given number. For example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", " \
    \   if n==0 then return 0\n    else if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that returns the factorial of a given number. \n\
    For a given number n, find the factorial of n\n    >>> factorial(5)\n    120\n\
    \    \"\"\"", "    if n==0 then return 0\n    else if n%2==0 then return n\n \
    \   else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==1\
    \ \n        return 1 \n    else \n        return largest_divisor(n-1) + 1 \nend\
    \ \n</cell>\n<code language=julia-1.0>\n@time largest_divisor(15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the factorial of a given number. \n\
    Hint: Use a recursive function.", "    if n == 0 \n        0\n    else\n     \
    \   largest_divisor(n / 2)\n        if n % 2 == 0\n            largest_divisor(n\
    \ / 2)\n        else\n            largest_divisor(n / 2)\n        end\n    end\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the factorial\
    \ of a given number. \nFor example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120", " \
    \   if n==0 \n        0\n    else\n        largest_divisor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@time largest_divisor(15)\n</cell>\n<text>\n\
    Exercise: Write a function that finds the largest number that divides n evenly,\
    \ smaller than n\nHint: Use a recursive function", "    if n % 2 == 0 \n     \
    \   then largest_divisor(n / 2)\n        else largest_divisor(3 * n + 1) \n  \
    \  end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the first n prime numbers. \n\
    Hint: Use a while loop and a prime number sieve.", "    if n==0\n        0\n \
    \   else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==0\n\
    \        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.3>", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>", "    if n==1 \n        return\
    \ 1 \n    else \n        largest_divisor(n-1)\n        if n%2==0 \n          \
    \  return n \n        else \n            return largest_divisor(n//2)\nend\n</cell>\n\
    <code language=julia-1.5>\n@time largest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of divisors of n that are less than\
    \ or equal to n.", "    if n==0 then return 0\n    else if n%2==0 then return\
    \ n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the factorial of a given number. \nFor example, factorial(5) = 5 \xD7 4 \xD7\
    \ 3 \xD7 2 \xD7 1", "    if n==0 then return 0\n    else if n%2==0 then return\
    \ n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.0>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==0\n\
    \        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<text>\n\
    Exercise 9\nWrite a function that returns the factorial of a given number. For\
    \ example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120", "    if n==0 \n        0\n\
    \    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the first n prime numbers. \nHint: use the function primes(n) from the package\
    \ Primes.jl.", "    if n==0 then return 0\n    else if n%2==0 then return n\n\
    \    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==1\
    \ \n        1 \n    else \n        largest_divisor(n-1) + 1 \nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_divisor(15)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the smallest number that divides n evenly, smaller than\
    \ n.", "    if n==0 then return 0\n    if n==1 then return 1\n    if n%2==0 then\
    \ return n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of divisors of a given number n. For example, for the number 12,\
    \ the number of divisors is 3.", "    if n==0 then return 0\n    if n%2==0 then\
    \ return n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of a given number. For example, for the number 15, the\
    \ number of divisors is 3.", "    if n==1 \n        return 1 \n    else \n   \
    \     largest_divisor(n-1) + largest_divisor(n-2) \n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the smallest number that divides n evenly, smaller than\
    \ n.", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n    end\n\
    end\n</cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of divisors of n that are\
    \ less than or equal to n.", "    if n==1 \n        1\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a given number.\
    \ \nFor example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120", "    if n==0 then return\
    \ 0\n    else if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.0>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that finds the largest prime factor of a given number.\
    \ \nFor example, given n = 24, the largest prime factor is 5.", "    if n % 2\
    \ == 0 \n        then largest_divisor(n / 2)\n        else largest_divisor(3 *\
    \ n + 1) \nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of divisors of n\
    \ that are less than or equal to n.", "    if n % 2 == 0\n        then largest_divisor(n\
    \ / 2)\n        else largest_divisor(3 * n + 1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.0>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the smallest number that divides n evenly, smaller than\
    \ n.", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_divisor(15)\n</cell>\n\
    <text>\nExercise: Write a function that returns the largest number that divides\
    \ n evenly, smaller than n.", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.0>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the smallest number that divides\
    \ n evenly, smaller than n.", "    if n % 2 == 0 \n        then largest_divisor(n\
    \ / 2)\n        else largest_divisor(3 * n + 1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the first n prime numbers. \nHint: use an iterator to\
    \ generate prime numbers. \nHint: use an iterator to generate prime numbers. \n\
    Hint: use an iterator to generate prime numbers. \nHint: use an iterator to generate\
    \ prime numbers. \nHint: use an iterator to generate prime numbers. \nHint: use\
    \ an iterator to generate prime numbers. \nHint: use an iterator to generate prime\
    \ numbers. \nHint: use an iterator to generate prime numbers. \nHint: use an iterator\
    \ to generate prime numbers. \nHint: use an iterator to generate prime numbers.\
    \ \nHint: use an iterator to generate prime numbers. \nHint: use an iterator to\
    \ generate prime numbers. \nHint: use an iterator to generate prime numbers. \n\
    Hint: use an iterator to generate prime numbers. \nHint: use an iterator to generate\
    \ prime numbers. \nHint: use an iterator to generate prime numbers. \nHint: use\
    \ an iterator to generate prime numbers. \nHint: use an iterator to generate prime\
    \ numbers. \nHint: use an iterator to generate prime numbers. \nHint: use an iterator\
    \ to generate prime numbers. \nHint: use an iterator to generate prime numbers.\
    \ \nHint: use an iterator to generate prime numbers. \nHint: use an iterator to\
    \ generate prime numbers. \nHint: use an iterator to generate prime numbers. \n\
    Hint: use an iterator to generate prime numbers. \nHint: use an iterator to generate\
    \ prime numbers. \nHint: use an iterator to generate prime numbers. \nHint: use\
    \ an iterator to generate prime numbers. \nHint: use an iterator to generate prime\
    \ numbers. \nHint: use an iterator to generate prime numbers. \nHint: use an iterator\
    \ to generate prime numbers. \nHint: use an iterator to generate prime numbers.\
    \ \nHint: use an iterator to generate prime numbers. \nHint: use an iterator to\
    \ generate prime numbers. \nHint: use an iterator to generate prime numbers. \n\
    Hint: use an iterator to generate prime numbers. \nHint: use an iterator to generate\
    \ prime numbers. \nHint: use an iterator to generate prime numbers. \nHint: use\
    \ an iterator to generate prime numbers. \nHint: use an iterator to generate prime\
    \ numbers. \nHint: use an iterator to generate prime ", "    if n == 0 \n    \
    \    0\n    else\n        largest_divisor(n-1) + n / largest_divisor(n-1)\nend\n\
    </cell>\n<code language=julia-1.5>\n@time largest_divisor(100)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the first n prime numbers. \nHint: use\
    \ the sieve of Eratosthenes (https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes)",
  "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the factorial of a\
    \ given number. \nFor a given number n, find the factorial of n\n    >>> factorial(5)\n\
    \    120\n    \"\"\"", "    if n % 2 == 0 \n        then return n \n    else \n\
    \        largest_divisor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are smaller than n.", "    if n==1 \n     \
    \   return 1 \n    else \n        largest_divisor(n-1)\n        if n%2==0 \n \
    \           largest_divisor(n/2)\n        else \n            largest_divisor(n/2)+1\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the factorial of a given number. For\
    \ example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120", "    if n==0\n        0\n\
    \    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n ==\
    \ 1\n        return n\n    \n    largest_divisor = largest_divisor(n / 2)\n  \
    \  if n % 2 == 0\n        return largest_divisor\n    else\n        return largest_divisor\
    \ + 1\nend\n</cell>\n<code language=julia-1.5>\n@time largest_divisor(100)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of divisors of a\
    \ given number n. \nFor example, for n = 10, the function should return 3.", " \
    \   if n==1 \n        1\n    else\n        largest_divisor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the smallest number that divides n evenly,\
    \ smaller than n.", "    if n==0 then return 0\n    if n%2==0 then return n\n\
    \    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the factorial of a given number. For example, factorial(5) = 5 * 4 * 3 * 2 *\
    \ 1 = 120", "    if n==0 then return 0\n    else if n%2==0 then return n\n   \
    \ else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.0>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the factorial of a given number. For example, factorial(5) = 5 \xD7 4 \xD7 3\
    \ \xD7 2 \xD7 1", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype largest_divisor(15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of divisors\
    \ of a given number. For example, for the number 12, there are 3 divisors: 1,\
    \ 2, and 3.", "    if n==1 \n        return 1 \n    else \n        return largest_divisor(n-1)\
    \ + 1 \nend \n</cell>\n<code language=julia-1.0>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:", "    if n==1 \n        return\
    \ 1 \n    else \n        largest_divisor(n-1) \n        if n%2==0 \n         \
    \   then largest_divisor(n/2) \n            else largest_divisor(n/2) \n     \
    \   end\n    end\nend\n</cell>\n<code language=julia-1.5>\n@time largest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of divisors\
    \ of n that are less than or equal to n.", "    if n==1 \n        1\n    else\n\
    \        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    @time largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ finds the smallest number that divides n evenly, larger than n\nHint: Use a\
    \ recursive function", "    if n==1 \n        return n\n    else if n%2==0 \n\
    \        return largest_divisor(n/2)\n    else \n        return largest_divisor(n/2)+1\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that computes the factorial of a given number. \n\
    The factorial of a number $n$ is defined as:", "    if n==0 then return 0\n  \
    \  else if n%2==0 then return n\n    else return largest_divisor(n/2)\nend\n</cell>\n\
    <code language=julia-1.0>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the factorial of a given number. \nFor a given number\
    \ n, find the factorial of n\n    >>> factorial(5)\n    120\n    \"\"\"", "  \
    \  if n==1 then return 1\n    else if n%2==0 then return n//2\n    else return\
    \ largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.0>\n@time largest_divisor(150)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as $n! = n  (n-1) \
    \ (n-2)  ...  1  $. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120.", "    if n==0\
    \ then return 0\n    if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 5\nWrite a function that returns the number of divisors of a given number\
    \ n. For example, for the number 12, there are two divisors: 2 and 3.", "    if\
    \ n==1 \n        return 1 \n    else if n%2==0 \n        return largest_divisor(n/2)\
    \ \n    else \n        return largest_divisor(n/2) + 1 \nend \n</cell>\n<code\
    \ language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that finds the smallest number that divides n evenly, smaller than\
    \ n.", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the largest number that divides n evenly,\
    \ smaller than n.", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the smallest number that divides\
    \ n evenly, smaller than n\nHint: use largest_divisor(n) function", "    if n==0\
    \ then return 0\n    if n==1 then return 1\n    if n%2==0 then return n\n    \n\
    \    largest_divisor(n/2)\n    \nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_divisor(100)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of divisors of a given number n. \nFor example, for n = 10, the function\
    \ should return 3.", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ number of divisors of n that are less than or equal to n.", "    if n==1 \n\
    \        return n\n    else if n%2==0 \n        return largest_divisor(n/2)\n\
    \    else \n        return largest_divisor(n/2)+1\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 5\nWrite a function that returns\
    \ the number of divisors of a given number. For example, for the number 15, the\
    \ number of divisors is 3.", "    if n==1 \n        1\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an array\
    \ of numbers and returns the sum of the squares of the numbers.", "    if n==0\n\
    \        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.4>\n@time largest_divisor(15)\n</cell>\n<text>\nExercise: Write\
    \ a function that finds the largest prime factor of a given number. Hint: use\
    \ the sieve of Eratosthenes algorithm.", "    if n==1 \n        return n\n   \
    \ else \n        return largest_divisor(n-1) + n\nend\n</cell>\n<code language=julia-1.0>\n\
    @time largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the first n prime numbers. \nHint: use primes() from Primes.jl", " \
    \   if n==0 then return 0\n    if n==1 then return 1\n    if n%2==0 then return\
    \ n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the smallest number that is divisible by all numbers from 1 to n. For example,\
    \ smallest_divisor(15) should return 15. Make sure your code works with negative\
    \ numbers as well.", "    if n==0 then return 0\n    if n%2==0 then return n\n\
    \    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.4>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the factorial of a given number. \nFor example, factorial(5) = 5 \xD7 4 \xD7\
    \ 3 \xD7 2 \xD7 1", "    if n % 2 == 0 \n        then largest_divisor(n / 2)\n\
    \        else largest_divisor(3 * n + 1) \n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of a given number. For example, for the number 12, there\
    \ are 2 divisors: 2 and 3. Note that 1 is not a divisor of 12. Write a recursive\
    \ function that computes the number of divisors of a given number.", "    if n==0\
    \ \n        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the number of divisors of n that are less than or\
    \ equal to n.", "    if n==1 \n        1\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the factorial of a given number.\
    \ \nFor example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120", "    if n==1 \n    \
    \    return 1 \n    else \n        return largest_divisor(n-1) + 1 \nend \n</cell>\n\
    <code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the number of divisors of n that are less than or\
    \ equal to n.", "    if n==1 \n        1\n    else if n%2==0 \n        largest_divisor(n/2)\n\
    \    else \n        largest_divisor(n/2)+1\nend\n</cell>\n<code language=julia-1.0>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the smallest number that divides n evenly, smaller than n.", "    if n==1 \n\
    \        return n\n    else if n%2==0 \n        return largest_divisor(n/2)\n\
    \    else \n        return largest_divisor(n/2) + 1\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the smallest number that divides n evenly, smaller than n.", "    if n==0 \n\
    \        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<text>\n\
    Exercise 10\nWrite a function that returns the first n prime numbers. \nThe function\
    \ should take one parameter, n, which represents the number of prime numbers to\
    \ return.\nThe function should return a list of prime numbers, where each number\
    \ in the list is a prime number between 2 and n (inclusive).\nFor example, if\
    \ the function were called with n = 10, the function should return [2, 3, 4, 5,\
    \ 7, 11, 13, 17, 19]", "    if n==0 then return 0 \n    else if n%2==0 then return\
    \ n \n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.0>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 7: Write a function that returns\
    \ the smallest number that divides n evenly, smaller than n\n    >>> smallest_divisor(15)\n\
    \    3\n    \"\"\"", "    if n==1 \n        return n\n    else if n%2==0 \n  \
    \      return largest_divisor(n/2)\n    else \n        return largest_divisor(n/2)+1\n\
    end\n</cell>\n<code language=julia-1.4>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the smallest number that divides n evenly,\
    \ larger than n\nHint: use largest_divisor(n) function", "    if n==1 \n     \
    \   return n\n    else if n%2==0 \n        return largest_divisor(n/2)\n    else\
    \ \n        return largest_divisor(n/2)+1\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==0\
    \ then return 0\n    else if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the factorial of a given number. For\
    \ example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==0 then return\
    \ 0\n    else if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of divisors of n that are\
    \ less than or equal to n.", "    if n==1 \n        return 1 \n    else \n   \
    \     largest_divisor(n-1)\n        if n%2==0 \n            return n \n      \
    \  else \n            return largest_divisor(n//2)\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of divisors of a given number. For example, for the number 12, there\
    \ are two divisors: 2 and 3. Write a function that returns the number of divisors\
    \ of a given number n. For example, for the number 12, there are two divisors:\
    \ 2 and 3.", "    if n==1 \n        return 1 \n    else \n        return largest_divisor(n-1)\
    \ + 1 \nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the smallest number that divides\
    \ n evenly, larger than n\n    >>> smallest_divisor(15)\n    3\n    \"\"\"", " \
    \   if n==1 \n        return n\n    else if n%2==0 \n        return largest_divisor(n/2)\n\
    \    else \n        return largest_divisor(n/2) + 1\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==1\
    \ \n        1\n    else \n        largest_divisor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@time largest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of divisors of n that are less than\
    \ or equal to n.", "    if n==1 \n        1\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype largest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the largest number\
    \ that divides n evenly, smaller than n.", "    if n==0 \n        0\n    else\n\
    \        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if n==1 \n        return n\n    else if n%2==0 \n        return largest_divisor(n/2)\n\
    \    else \n        return largest_divisor(n/2) + 1\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the smallest number that divides n evenly, smaller than n.", "    if n==1 \n\
    \        1\n    else \n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the largest number that divides n evenly, smaller than\
    \ n.", "    if n==1 \n        return 1 \n    else \n        largest_divisor(n-1)\n\
    \        if n%2==0 \n            return n\n        else \n            return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of divisors of n that are\
    \ less than or equal to n.", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\n@time largest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of divisors\
    \ of a given number n. For example, for the number 15, there are 4 divisors: 1,\
    \ 2, 3, and 5.", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of divisors of n\
    \ that are less than or equal to n.", "    if n==1 \n        1 \n    else \n \
    \       largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the largest number that divides n evenly, smaller than n.", "    if\
    \ n==0\n        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n\
    <text>\nExercise 7\nWrite a function that checks if a given number is prime. Hint:\
    \ you can use the primes function from the Julia standard library.", "    if n==1\
    \ \n        return n\n    else if n%2==0 \n        return largest_divisor(n/2)\n\
    \    else \n        return largest_divisor(n/2) + 1\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(100)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the first n prime numbers. \nHint: use the sieve of Eratosthenes algorithm",
  "    if n==1 \n        return 1 \n    else \n        return largest_divisor(n-1)\
    \ + 1 \nend \n</cell>\n<code language=julia-1.5>\n@time largest_divisor(150)\n\
    </cell>\n<text>\nProblem 7: Find the largest prime factor of a number\nThe prime\
    \ factors of a number are all the numbers less than or equal to it except 1 and\
    \ itself. \nFor example, 6 is a prime factor of 36, and 12 is a prime factor of\
    \ 60.\nThe largest prime factor is 60.\nThe smallest prime factor is 2.", "  \
    \  if n==0 then return 0\n    else if n==1 then return 1\n    else if n%2==0 then\
    \ return largest_divisor(n/2)\n    else return largest_divisor(n/2) + 1\nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of divisors of n that are less than\
    \ or equal to n.", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<text>\nExercise 10\nWrite a function that returns the\
    \ smallest number that divides n evenly, smaller than n.", "    if n==1 \n   \
    \     return 1 \n    else \n        return largest_divisor(n-1) + 1 \nend \n</cell>\n\
    <code language=julia-1.5>\n@time largest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the sum of the squares of the first n positive\
    \ integers. \nFor example, sum_of_squares(10) = 55. \nThis function should work\
    \ for any value of n.", "    if n % 2 == 0 \n        then largest_divisor(n /\
    \ 2)\n        else largest_divisor(3 * n + 1) \n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the number of divisors of n that are less than or equal to n.",
  "    if n==1 \n        1\n    else\n        largest_divisor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.4>\nlargest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of divisors of n that are smaller\
    \ than n.", "    if n == 1 \n        1 \n    else \n        largest_divisor(n\
    \ / 2) \n    end\nend\n</cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest number\
    \ that divides n evenly, smaller than n.", "    if n==0 \n        0\n    else\n\
    \        largest_divisor(n-1)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the largest number that can be divided by all the numbers\
    \ from 1 to n.", "    if n==0 then return 0\n    else if n%2==0 then return n\
    \ \n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the smallest number that divides n evenly, smaller than n", "    if n==1 \n\
    \        1\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_divisor(15)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the factorial of a given number. For example, factorial(5)\
    \ = 5 * 4 * 3 * 2 * 1 = 120", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of divisors of a\
    \ given number. For example, for the number 15, there are three divisors: 1, 2,\
    \ and 5. The function should return 3.", "    if n==0 \n        0\n    else \n\
    \        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.4>\n@code_warntype largest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a given number.\
    \ For example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120", "    if n==0\n       \
    \ 0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    @code_warntype largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the number of divisors of n that are less than or equal to n.",
  "    if n==0 then return 0\n    if n==1 then return 1\n    if n%2==0 then return\
    \ n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n %\
    \ 2 == 0\n        then largest_divisor(n / 2)\n        else largest_divisor(3\
    \ * n + 1)\n    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the factorial of a\
    \ given number. \nFor a given number n, find the factorial of n. \nFor a given\
    \ number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial ", "    if n==1\
    \ \n        return n\n    else if n%2==0 \n        return largest_divisor(n/2)\n\
    \    else \n        return largest_divisor(n/2)+1\nend\n</cell>\n<code language=julia-1.0>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 4\nWrite a function that finds\
    \ the smallest number that divides n evenly, smaller than n.", "    if n==0\n\
    \        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the largest prime factor of a given number. For example,\
    \ given n = 24, the largest prime factor is 5.", "    if n==0\n        0\n   \
    \ else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the factorial of a given number. \nFor a given\
    \ number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of ", "    if n==0\n      \
    \  0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if n == 0 \n        0\n    else if n % 2 == 0 \n        largest_divisor(n /\
    \ 2)\n    else \n        largest_divisor(3 * n + 1) \nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(15); @time largest_divisor(150)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the first n prime numbers. \nHint: Use a while\
    \ loop to keep checking the condition of n being prime until you find n prime\
    \ numbers. \nHint: Use a boolean array to keep track of which numbers have been\
    \ checked and which haven't. \nHint: Use a for loop to iterate over all numbers\
    \ from 2 to n. \nHint: Use a while loop to keep checking the condition of n being\
    \ prime until you find n prime numbers. \nHint: Use a boolean array to keep track\
    \ of which numbers have been checked and which haven't. \nHint: Use a for loop\
    \ to iterate over all numbers from 2 to n. \nHint: Use a while loop to keep checking\
    \ the condition of n being prime until you find n prime numbers. \nHint: Use a\
    \ boolean array to keep track of which numbers have been checked and which haven't.\
    \ \nHint: Use a for loop to iterate over all numbers from 2 to n. \nHint: Use\
    \ a while loop to keep checking the condition of n being prime until you find\
    \ n prime numbers. \nHint: Use a boolean array to keep track of which numbers\
    \ have been checked and which haven't. \nHint: Use a for loop to iterate over\
    \ all numbers from 2 to n. \nHint: Use a while loop to keep checking the condition\
    \ of n being prime until you find n prime numbers. \nHint: Use a boolean array\
    \ to keep track of which numbers have been checked and which haven't. \nHint:\
    \ Use a for loop to iterate over all numbers from 2 to n. \nHint: Use a while\
    \ loop to keep checking the condition of n being prime until you find n prime\
    \ numbers. \nHint: Use a boolean array to keep track of which numbers have been\
    \ checked and which haven't. \nHint: Use a for loop to iterate over all numbers\
    \ from 2 to n. \nHint: Use a while loop to keep checking the condition of n being\
    \ prime until you find n prime numbers. \nHint: Use a boolean array to keep track\
    \ of which numbers have been checked and which haven't. \nHint: Use a for loop\
    \ to iterate over all numbers from 2 to n. \nHint: Use a while loop to keep checking\
    \ the condition of n being prime until you find n prime numbers. \n", "    if\
    \ n==0\n        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of divisors of a\
    \ given number n. For example, for the number 12, there are two divisors: 2 and\
    \ 3. For the number 6, there are three divisors: 1, 3, and 6. For the number 15,\
    \ there are four divisors: 1, 2, 3, and 5.", "    if n == 0 \n        0\n    else\
    \ \n        largest_divisor(n-1) + 1 \n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==1\
    \ \n        return 1 \n    else \n        return largest_divisor(n-1) + 1 \nend\
    \ \n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of divisors of n that are\
    \ less than or equal to n.", "    if n==1 then return n\n    else if n%2==0 then\
    \ return largest_divisor(n/2)\n    else return largest_divisor(n/2)+1\nend\n</cell>\n\
    <code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the smallest number that divides n evenly, smaller\
    \ than n.", "    if n==0 then return 0\n    if n==1 then return 1\n    if n%2==0\
    \ then return n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n ==\
    \ 0 \n        0\n    else\n        largest_divisor(n / 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the number of divisors of n that are less than or\
    \ equal to n.", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.4>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a given number.\
    \ \nFor example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120", "    if n==1 \n    \
    \    return 1 \n    else if n%2==0 \n        return largest_divisor(n/2) \n  \
    \  else \n        return largest_divisor(n/2) + 1 \nend \n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(150)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the first n positive integers such that $n! > 10^9$, where $n$ is given\
    \ as an input argument.", "    if n==0 then return 0 \n    else if n%2==0 then\
    \ return n \n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the factorial of a given number. For example, factorial(5) = 5 \xD7 4 \xD7 3\
    \ \xD7 2 \xD7 1", "    if n==1 \n        return n\n    else if n%2==0 \n     \
    \   return largest_divisor(n/2)\n    else \n        return largest_divisor(n/2)\
    \ + 1\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a number n and returns the number\
    \ of digits in n. For example, f(1234567890) = 5.", "    if n==1 \n        1\n\
    \    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==1\
    \ \n        1\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@time largest_divisor(15)\n</cell>\n<text>\nExercise\
    \ 7\nWrite a function that returns the smallest number that divides n evenly,\
    \ smaller than n.", "    if n==1 \n        return 1 \n    else \n        return\
    \ largest_divisor(n-1) + 1 \nend \n</cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that finds the smallest number that\
    \ divides n evenly, smaller than n.", "    if n == 1 \n        return 1 \n   \
    \ else \n        return largest_divisor(n-1) + 1 \nend\n</cell>\n<code language=julia-1.3>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==1\
    \ \n        1\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 4\nWrite a function that returns the number of divisors of n\
    \ that are less than or equal to n.", "    if n==1 \n        return n\n    else\
    \ if n%2==0 \n        return largest_divisor(n/2)\n    else \n        return largest_divisor(n/2)+1\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the smallest number that divides n evenly,\
    \ smaller than n.", "    if n==1 \n        return 1 \n    else \n        return\
    \ largest_divisor(n-1) + 1 \nend \n</cell>\n<code language=julia-1.0>\nlargest_divisor(15)\n\
    </cell>\n<text>\nProblem 7: Find the largest prime factor of the number 600851475143\
    \ \nThe largest prime factor of the number 600851475143 is\n5143 \n(7143 \xD7\
    \ 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7\
    \ 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7\
    \ 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7\
    \ 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7\
    \ 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7\
    \ 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7\
    \ 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7\
    \ 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7\
    \ 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7143 \xD7 7", " \
    \   if n==1 \n        return 1 \n    else \n        return largest_divisor(n-1)\
    \ + 1 \nend \n</cell>\n<code language=julia-1.5>\n@time largest_divisor(15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of divisors\
    \ of n that are less than or equal to n.", "    if n==1 \n        1 \n    else\
    \ \n        largest_divisor(n-1) + 1 \nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(100)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the factorial of a given number. \nFor instance, factorial(5) = 5 \xD7\
    \ 4 \xD7 3 \xD7 2 \xD7 1", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\n@time largest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of divisors\
    \ of n that are less than or equal to n.", "    if n==0 then return 0\n    else\
    \ if n%2==0 then return n\n    else return largest_divisor(n/2)\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the largest prime factor of a given number. For\
    \ example, if the number is 17, it should return 3. Note that 1 is not a prime\
    \ factor.", "    if n % 2 == 0 \n        then largest_divisor(n / 2)\n       \
    \ else largest_divisor(3 * n + 1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of a given number. For example, for the number 12, there\
    \ are two divisors: 2 and 3.", "    if n==1 \n        return n\n    else if n%2==0\
    \ \n        return largest_divisor(n/2)\n    else \n        return largest_divisor(n/2)\
    \ + 1\nend\n</cell>\n<code language=julia-1.5>\n@time largest_divisor(100)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of divisors of n\
    \ that are less than or equal to n.", "    if n==0 \n        0\n    else\n   \
    \     largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the smallest number that divides n evenly, smaller than n.", "    if n % 2 ==\
    \ 0\n        then largest_divisor(n / 2)\n        else largest_divisor(3 * n +\
    \ 1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype largest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of divisors\
    \ of n that are smaller than n.", "    if n==1 \n        return n\n    else if\
    \ n%2==0 \n        return largest_divisor(n/2)\n    else \n        return largest_divisor(n/2)\
    \ + 1\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of divisors of n\
    \ that are less than or equal to n.", "    if n==0\n        0\n    else\n    \
    \    largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n %\
    \ 2 == 0\n        then largest_divisor(n / 2)\n        else largest_divisor(3\
    \ * n + 1)\n    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of divisors\
    \ of n that are smaller than n.", "    if n==1 \n        1 \n    else \n     \
    \   largest_divisor(n-1) + 1 \nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the factorial of a given number. \nFor a given number n, find the factorial\
    \ of n \n    >>> factorial(5)\n    120\n    \"\"\"", "    if n==1 then return\
    \ 1\n    else if n%2==0 then return largest_divisor(n/2)\n    else return largest_divisor(n/2)+1\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the first n prime numbers. \nHint: use\
    \ the sieve of Eratosthenes algorithm", "    if n==1 \n        return 1 \n   \
    \ else \n        return largest_divisor(n-1) + 1 \nend \n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n %\
    \ 2 == 0 \n        then largest_divisor(n / 2)\n        else largest_divisor(3\
    \ * n + 1) \n    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of divisors\
    \ of a given number n. For example, for n = 12, there are only three divisors:\
    \ 1, 2, and 3.", "    if n==0 then return 0\n    if n==1 then return 1\n    if\
    \ n%2==0 then return n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code\
    \ language=julia-1.0>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as\n$$\nn! = n \\times n-1 \\times n-2 \\times ...\n\
    $$\nFor example, $5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120$", "  \
    \  if n % 2 == 0 \n        then return n \n    else \n        largest_divisor(n\
    \ / 2) \n    end\nend\n</cell>\n<code language=julia-1.4>\nlargest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the factorial of a\
    \ given number. \nThe factorial of a number $n$ is defined as the product of all\
    \ the positive integers less than or equal to $n$. \nFor example, $5! = 5 \\times\
    \ 4 \\times 3 \\times 2 \\times 1 = 120$. \nWrite a recursive function factorial(n)\
    \ that returns the factorial of a given number. \nFor example, factorial(5) =\
    \ 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120. \nWrite a iterative function\
    \ factorial(n) that returns the factorial of a given number. \nFor example, factorial(5)\
    \ = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120. \nWrite a function that returns\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as the product of all the positive integers less than or equal to $n$. \nFor\
    \ example, $5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120$. \nWrite a recursive\
    \ function factorial(n) that returns the factorial of a given number. \nFor example,\
    \ factorial(5) = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120. \nWrite a iterative\
    \ function factorial(n) that returns the factorial of a given number. \nFor example,\
    \ factorial(5) = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120. \nWrite a function\
    \ that returns the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as the product of all the positive integers less than or equal to\
    \ $n$. \nFor example, $5! = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120$.\
    \ \nWrite a recursive function factorial(n) that returns the factorial of a given\
    \ number. \nFor example, factorial(5) = 5 \\times 4 \\times 3 \\times 2 \\times\
    \ 1 = 120. \nWrite a iterative function factorial(n) that returns the factorial\
    \ of a given number. \nFor example, factorial(5) = 5 \\times 4 \\times 3 \\times\
    \ 2 \\times 1 = 120. \nWrite a function that returns the factorial of a given\
    \ number. \nThe factorial of a number $n$ is defined as the product of all the\
    \ positive integers less than or equal to $n$. \nFor example, $5! = 5 \\times\
    \ 4 \\times 3 \\times 2 \\times 1 = 120$. \nWrite a recursive ", "    if n==1\
    \ \n        return 1 \n    else \n        largest_divisor(n-1)\n        if n %\
    \ 2 == 0 \n            largest_divisor(n/2) \n        else \n            largest_divisor(n/2)\
    \ \n    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of divisors of n\
    \ that are less than or equal to n.", "    if n==1 \n        return n\n    else\
    \ if n%2==0 \n        return largest_divisor(n/2)\n    else \n        return largest_divisor(n/2)+1\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the factorial of a given number. \n\
    The factorial of a number $n$ is defined as:", "    if n==0 then return 0\n  \
    \  if n%2==0 then return n\n    else return largest_divisor(n/2)\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\nExercise 5\n\
    Write a function that returns the number of divisors of a given number. For example,\
    \ for the number 12, there are two divisors: 2 and 3. Your function should return\
    \ the number of divisors, not just print them.", "    if n==1 \n        return\
    \ n\n    else if n%2==0 \n        return largest_divisor(n/2)\n    else \n   \
    \     return largest_divisor(n/2)+1\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of divisors of a given number n. For example, for n = 10, the function\
    \ should return 3.", "    if n==1 \n        1\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>", "    if n==1 \n        1\n\
    \    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==0\
    \ then return 0\n    else if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of divisors of n that are\
    \ less than or equal to n.", "    if n==0\n        0\n    else\n        largest_divisor(n-1)\n\
    \        if n%2==0\n            largest_divisor(n/2)\n        else\n         \
    \   largest_divisor(n/2)+1\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(100)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the number of divisors of n that are less than or equal to n.", "  \
    \  if n==0 then return 0\n    if n==1 then return 1\n    if n%2==0 then return\
    \ n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n==0\n\
    \        0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.3>\n@time largest_divisor(100)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the number of divisors of a given number n. For\
    \ example, for n = 10, the function should return 3.", "    if n==0 then return\
    \ 0\n    if n==1 then return 1\n    if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.0>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the factorial of a given number. \n\
    For example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==0 then\
    \ return 0\n    else if n%2==0 then return n\n    else return largest_divisor(n/2)\n\
    end\n</cell>\n<code language=julia-1.3>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the factorial of a given number. \n\
    For a given number n, find the factorial of n\n    >>> factorial(5)\n    120\n\
    \    \"\"\"", "    if n==0 then return 0\n    else if n%2==0 then return n\n \
    \   else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of divisors of a given number n. For example, for the number 15,\
    \ the number of divisors is 5.", "    if n==0 then return 0\n    else if n%2==0\
    \ then return n\n    else return largest_divisor(n/2)\nend\n</cell>\n<code language=julia-1.0>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the factorial of a given number. For example, factorial(5) = 5 * 4 * 3 * 2 *\
    \ 1 = 120", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n@code_warntype largest_divisor(15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the largest number\
    \ that divides n evenly, smaller than n.", "    if n==0 \n        0\n    else\n\
    \        largest_divisor(n-1)\n    end\nend\n</cell>\n<text>\nExercise 7\nWrite\
    \ a function that returns the factorial of a given number. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of n. \nFor a given number n, find\
    \ the factorial of n. \nFor a given number n, find the factorial of n. \nFor a\
    \ given number n, find the factorial of n. \nFor a given number n, find the factorial\
    \ of n. \nFor a given number n, find the factorial of n. \nFor a given number\
    \ n, find the factorial of n. \nFor a given number n, find the factorial of n.\
    \ \nFor a given number n, find the factorial of ", "    if n==1 \n        return\
    \ 1 \n    else \n        largest_divisor(n-1)\n        if n%2==0 \n          \
    \  largest_divisor(n/2)\n        else \n            largest_divisor(n/2) \n  \
    \  end\nend\n</cell>\n<code language=julia-1.0>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of divisors of a\
    \ given number n. \nFor example, for n = 10, the function should return 3.", " \
    \   if n == 0\n        0\n    else\n        largest_divisor(n - 1) \n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the factorial of a given number. For\
    \ example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1", "    if n==0\n     \
    \   0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    @code_warntype largest_divisor(15)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the factorial of a given number. \nFor a given number n, find the\
    \ factorial of n\n    >>> factorial(5)\n    120\n    \"\"\"", "    if n==0\n \
    \       0\n    else\n        largest_divisor(n-1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.0>", "    if n==1 \n        return n\n    else if n%2==0 \n\
    \        return largest_divisor(n/2)\n    else \n        return largest_divisor(n/2)\
    \ + 1\nend\n</cell>\n<code language=julia-1.0>\n@time largest_divisor(15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of divisors of n\
    \ that are less than or equal to n.", "    if n % 2 == 0 \n        then largest_divisor(n\
    \ / 2)\n        else largest_divisor(3 * n + 1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_divisor(15)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the number of divisors of n that are less than or\
    \ equal to n.", "    if n==0 then return 0\n    if n==1 then return 1\n    \n\
    \    largest_divisor = 1\n    for d in divisors(n) do \n        if d%2==0 then\
    \ \n            if n%d==0 then \n                if largest_divisor<d+1 then \n\
    \                    largest_divisor = d+1\n                end\n            end\n\
    \        end\n    end\n    return largest_divisor\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(150)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the number of divisors of a given number. For example, for the number\
    \ 12, the number of divisors is 3. The function should return 3 if the number\
    \ is divisible by 1, 2, and 3, and 0 otherwise.", "    if n==1 \n        1 \n\
    \    else \n        largest_divisor(n-1) + 1 \nend\n</cell>\n<code language=julia-1.5>\n\
    largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of divisors of n that are less than or equal to n.", "    if n ==\
    \ 0 \n        0\n    else\n        largest_divisor(n-1) + n // largest_divisor(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of divisors of n that are\
    \ less than or equal to n.", "    if n==1 \n        return 1 \n    else \n   \
    \     return largest_divisor(n-1) + 1 \nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_divisor(15)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the factorial of a given number. \nFor example, factorial(5) = 5 \xD7\
    \ 4 \xD7 3 \xD7 2 \xD7 1", "    if n==0 \n        0\n    else\n        largest_divisor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_divisor(15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the smallest number that divides\
    \ n evenly, smaller than n."]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

language: jl
name: HumanEval_147_get_max_triples
results:
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        return 1 + get_max_triples(n - 1) + get_max_triples(n\
    \ - 2) + get_max_triples(n - 3) \nend\n</cell>\n<code language=julia-1.5>\nget_max_triples(5)\n\
    </cell>\n<text>\nProblem 3\nWrite a Julia function is_palindrome(n) that returns\
    \ true if the given integer n is a palindrome and false otherwise. \nThe palindrome\
    \ is a sequence of characters that reads the same backward as forward.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4xykj9_z.jl:20\nin expression starting at\
    \ /tmp/tmp4xykj9_z.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    count = 0\n\
    \    \n    for i in 1..n\n        for j in (i+1)..n\n            for k in (i+1)..n\n\
    \                if i+j+k == n\n                    count += 1\n             \
    \       \n    return count\n    \nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp90ptpsbs.jl:27\nin expression starting at\
    \ /tmp/tmp90ptpsbs.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        return get_max_triples(n-1) + get_max_triples(n-2)\
    \ + get_max_triples(n-3)\nend\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\
    \t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10)\
    \ == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ficxhy_.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ficxhy_.jl:1\n\
    in expression starting at /tmp/tmp5ficxhy_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   then return 0 \n    else \n        local a = [Int64](n) \n        local count\
    \ = 0 \n        for i in 1 .. n \n            do a[i] = i * i - i + 1 \n     \
    \       do j = i + 1 .. n \n                do k = j + 1 .. n \n             \
    \       if a[i] < a[j] and a[i] < a[k] \n                        then count =\
    \ count + 1 \n                    else \n                        count = 0 \n\
    \                    end \n                end \n            end \n        end\
    \ \n        return count \n    end \nend \n</cell>\n<code language=julia-1.5>\n\
    get_max_triples(5)\n</cell>\n<text>\nProblem 3\nWrite a function that returns\
    \ the number of integers less than n that are divisible by k.\nusing Test\n\n\
    @testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t\
    @test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps8nt5_ye.jl:16\nin expression starting at /tmp/tmps8nt5_ye.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    a = [Int64](n+1)\n\
    \    for i in 1:n\n        a[i] = i * i - i + 1\n    end\n    count = 0\n    for\
    \ i in 1:n\n        for j in i+1:n\n            for k in j+1:n\n             \
    \   if a[i] < a[j] < a[k]\n                    count += 1\n                end\n\
    \            end\n        end\n    end\n    return count\nend\n</cell>\n<code\
    \ language=julia-1.3>\nget_max_triples(5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\nusing Test\n\n\
    @testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t\
    @test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp8gzoyxw.jl:31\nin expression starting at\
    \ /tmp/tmpp8gzoyxw.jl:31\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm4xt3afy.jl:1\nin expression starting at /tmp/tmpm4xt3afy.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    \n    a = [0 for i in 1:n]\n    for i in\
    \ 1:n\n        a[i] = i * i - i + 1\n    \n    count = 0\n    for i in 1:n\n \
    \       for j in 1:n\n            for k in 1:n\n                if i < j < k\n\
    \                    count += 1\n                    if a[i] < a[j] < a[k]\n \
    \                       return count\n    return count\nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo5jkudiv.jl:32\nin expression starting at\
    \ /tmp/tmpo5jkudiv.jl:32\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    count = 0\n\
    \    \n    for i in 1:n\n        for j in (i+1):n\n            for k in (i+1):n\n\
    \                if i+j+k == i*i*i\n                    count += 1\n    \n   \
    \ return count\nend\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\
    \t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10)\
    \ == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpkj7l32i9.jl:20\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkj7l32i9.jl:1\n\
    in expression starting at /tmp/tmpkj7l32i9.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        return 1 + get_max_triples(n-2) + get_max_triples(n-3)\
    \ + get_max_triples(n-4) \nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\
    \t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprgxtydjo.jl:20\nin expression starting at\
    \ /tmp/tmprgxtydjo.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    \n    count = 0\n    \n    for i in 1:n\n\
    \        for j in i+1:n\n            for k in j+1:n\n                if i + j\
    \ + k == n\n                    count += 1\n                    \n    return count\n\
    end\n</cell>\n<code language=julia-1.0>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg7maumue.jl:28\nin expression starting at\
    \ /tmp/tmpg7maumue.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4hdoq71i.jl:1\nin expression starting at /tmp/tmp4hdoq71i.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        return 1 + get_max_triples(n - 1) + get_max_triples(n\
    \ - 2) + get_max_triples(n - 3) \nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_h6eo_gg.jl:20\nin expression starting at\
    \ /tmp/tmp_h6eo_gg.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    a = [Int64](n+1)\n\
    \    for i in 1:n\n        a[i] = i*i - i + 1 \n    for i in 1:n\n        for\
    \ j in i+1:n\n            for k in j+1:n\n                if a[i] < a[j] < a[k]\n\
    \                    then return 1\n                else return 0\n    return\
    \ 0\nend\n</cell>\n<code language=julia-1.4>\nget_max_triples(5)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc_0kasqc.jl:22\nin expression starting at /tmp/tmpc_0kasqc.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    \n    count = 0\n    \n    for i in 1:n\n\
    \        for j in i+1:n\n            for k in j+1:n\n                if i+j+k\
    \ == n\n                    count += 1\n    \n    return count\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\
    \t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpgb75kue8.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgb75kue8.jl:1\n\
    in expression starting at /tmp/tmpgb75kue8.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        triples = 0 \n        for i in 1:n \n      \
    \      for j in 1:n \n                for k in 1:n \n                    if i\
    \ + j + k == n \n                        triples += 1 \n                     \
    \   continue \n                    else \n                        continue \n\
    \        return triples \nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\
    \t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf21ip671.jl:29\nin expression starting at\
    \ /tmp/tmpf21ip671.jl:29\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    a = [Int64](n+1)\n\
    \    a[1] = 1\n    for i in 2:n\n        a[i] = a[i] * a[i] - a[i] + i + 1\n \
    \   end\n    \n    for i in 2:n\n        if a[i] % 3 == 0\n            return\
    \ i\n        end\n    end\n    return 0\nend\n</cell>\n<code language=julia-1.5>\n\
    get_max_triples(5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpttzvsxok.jl:28\nin expression starting at\
    \ /tmp/tmpttzvsxok.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        return 1 + get_max_triples(n-2) + get_max_triples(n-3)\
    \ + get_max_triples(n-4) \nend\n</cell>\n<code language=julia-1.3>\nget_max_triples(5)\n\
    </cell>\n<text>\nProblem 4\nWrite a function that returns the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbrdw8t7q.jl:20\nin expression starting at\
    \ /tmp/tmpbrdw8t7q.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4hdoq71i.jl:1\nin expression starting at /tmp/tmp4hdoq71i.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    count = 0\n\
    \    \n    for i in 1:n\n        for j in i+1:n\n            for k in j+1:n\n\
    \                if i*i + j*j + k*k == i*i*j + i*j*k + i*k*j\n               \
    \     count += 1\n    end\n    \n    return count\nend\n</cell>\n<code language=julia-1.5>\n\
    get_max_triples(5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj1hozwov.jl:27\nin expression starting at\
    \ /tmp/tmpj1hozwov.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   then return 0\n    else \n        local a = [Int64](n+1)\n        a[1] = 1\n\
    \        for i in 2:n\n            a[i] = a[i] + a[i]\n        end\n        for\
    \ i in 2:n\n            for j in 2:n\n                a[i] = a[i] - a[j] - a[k]\n\
    \            end\n        end\n        for i in 2:n\n            if a[i] == a[i]\
    \ * a[i] \n                then return 1\n            end\n        end\n     \
    \   return 0\n    end\nend\n</cell>\n<code language=julia-1.4>\nget_max_triples(5)\n\
    </cell>\n<text>\nExercise 3\nWrite a Julia function which returns the number of\
    \ triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\
    \t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10)\
    \ == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbmpazl5p.jl:16\nin expression starting at /tmp/tmpbmpazl5p.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv2ryjdcq.jl:1\nin expression starting at /tmp/tmpv2ryjdcq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4hdoq71i.jl:1\nin expression starting at /tmp/tmp4hdoq71i.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        triples = 0 \n        for i in 1:n \n      \
    \      for j in (i+1):n \n                for k in (i+1):n \n                \
    \    if i + j + k == n \n                        triples += 1 \n             \
    \           continue \n                    else \n                        continue\
    \ \n        return triples \nend\n</cell>\n<code language=julia-1.0>\nget_max_triples(5)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe9_v_wdc.jl:29\nin expression starting at\
    \ /tmp/tmpe9_v_wdc.jl:29\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    count = 0\n\
    \    \n    for i in 1..n\n        for j in (i+1)..n\n            for k in (i+j)..n\n\
    \                if i*i + j*j + k*k == i*i*k*k\n                    count += 1\n\
    \    \n    return count\nend\n</cell>\n<code language=julia-1.5>\nget_max_triples(5)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxxjwcwpb.jl:26\nin expression starting at\
    \ /tmp/tmpxxjwcwpb.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        local a = [Int64](n) \n        a[1] = 1 \n \
    \       for i in 2:n \n            a[i] = i * i - i + 1 \n        local count\
    \ = 0 \n        for i in 2:n \n            for j in 2:n \n                for\
    \ k in 2:n \n                    if a[i] < a[j] < a[k] \n                    \
    \    and a[i] < a[j] + a[k] \n                        and a[j] < a[k] + a[i] \n\
    \                        then \n                            count = count + 1\
    \ \n        return count \nend\n</cell>\n<code language=julia-1.5>\nget_max_triples(5)\n\
    </cell>\n<text>\nProblem 3\nWrite a Julia function which takes an integer n and\
    \ returns the number of positive integers less than or equal to n which are divisible\
    \ by 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpv68icfy5.jl:27\nin expression starting at /tmp/tmpv68icfy5.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        error(\"n must\
    \ be positive\")\n    else if n % 2 == 0 \n        error(\"n must be even\")\n\
    \    else \n        sum = 0\n        for i in 1:n\n            sum += i * i -\
    \ i + 1\n        return sum\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t\
    @test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnofmspcl.jl:17\nin expression starting at\
    \ /tmp/tmpnofmspcl.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    \n    count = 0\n    \n    for i in 1:n\n\
    \        for j in i+1:n\n            for k in j+1:n\n                if i + j\
    \ + k == n\n                    count += 1\n    \n    return count\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmphtogi3y7.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphtogi3y7.jl:1\n\
    in expression starting at /tmp/tmphtogi3y7.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        sum = 0 \n        for i in 1:n \n          \
    \  for j in 1:n \n                for k in 1:n \n                    if i + j\
    \ + k == n \n                        sum += i * j * k\n        return sum % 3\
    \ \nend\n</cell>\n<code language=julia-1.5>\nget_max_triples(5)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of triples (a[i], a[j], a[k])\
    \ of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfjas1h76.jl:26\nin expression starting at\
    \ /tmp/tmpfjas1h76.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm4xt3afy.jl:1\nin expression starting at /tmp/tmpm4xt3afy.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   then return 0\n    else \n        local a::Int64 = Int64[]\n        for i\
    \ in 1:n\n            push!(a, i * i - i + 1)\n        end\n        local count\
    \ = 0\n        for i in 1:n\n            for j in 1:n\n                for k in\
    \ 1:n\n                    if a[i] < a[j] && a[i] < a[k] && a[j] < a[k]\n    \
    \                    then count += 1\n                    end\n              \
    \  end\n            end\n        end\n        return count\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nget_max_triples(5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\nusing Test\n\n\
    @testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t\
    @test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbn_dnfgd.jl:16\nin expression starting at /tmp/tmpbn_dnfgd.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        return 1 + get_max_triples(n - 1) + get_max_triples(n\
    \ - 2) + get_max_triples(n - 3) \nend\n</cell>\n<code language=julia-1.5>\nget_max_triples(5)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3nv53rrq.jl:20\nin expression starting at\
    \ /tmp/tmp3nv53rrq.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4hdoq71i.jl:1\nin expression starting at /tmp/tmp4hdoq71i.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        0\n    else \n\
    \        sum = 0\n        for i in 1:n\n            sum += i * i - i + 1\n   \
    \         if sum % 3 == 0\n                sum = 0\n            end\n        end\n\
    \        sum\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n  \
    \  and a[i] + a[j] + a[k] is a multiple of 3.\nusing Test\n\n@testset begin\n\n\
    candidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpekvqz94x.jl:17\nin expression starting at\
    \ /tmp/tmpekvqz94x.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    count = 0\n\
    \    \n    for i in 1:n\n        for j in i+1:n\n            for k in j+1:n\n\
    \                if i+j+k == n\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    \n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nget_max_triples(5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\nusing Test\n\
    \n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\
    \t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpystldc6q.jl:30\nin expression starting at\
    \ /tmp/tmpystldc6q.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        error(\"n must\
    \ be positive\")\n    else if n % 2 == 0 \n        error(\"n must be even\")\n\
    \    else \n        sum = 0\n        for i in 1:n\n            sum += a[i]\n \
    \           if sum > 3\n                return sum\n            else\n       \
    \         sum = 0\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgmvl29_q.jl:17\nin expression starting at\
    \ /tmp/tmpgmvl29_q.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    count = 0\n\
    \    \n    for i in 1..n\n        for j in (i+1)..n\n            for k in (i+1)..n\n\
    \                if i+j+k == n\n                    count += 1\n    \n    return\
    \ count\nend\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t\
    @test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) ==\
    \ 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpgvaq_7g_.jl:20\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgvaq_7g_.jl:1\n\
    in expression starting at /tmp/tmpgvaq_7g_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    count = 0\n\
    \    \n    for a in range(1, n+1):\n        for b in range(a+1, n+1):\n      \
    \      for c in range(b+1, n+1):\n                if a * b * c == (a+b+c) and\
    \ a * b * c % 3 == 0:\n                    count += 1\n    \n    return count\n\
    </cell>\n<cell>\nget_max_triples(5)\n</cell>\n<text>\nProblem 3\nWrite a function\
    \ that returns the number of triples (a[i], a[j], a[k]) of a where i < j < k,\
    \ \n    and a[i] + a[j] + a[k] is a multiple of 3.\nusing Test\n\n@testset begin\n\
    \ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe042rhvt.jl:19\nin expression starting at\
    \ /tmp/tmpe042rhvt.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    count = 0\n\
    \    \n    for i in 1:n\n        for j in i+1:n\n            for k in j+1:n\n\
    \                if i*i+j*j+k*k == i*i*j*k\n                    count += 1\n \
    \   \n    return count\n</cell>\n<code language=julia-1.5>\nget_max_triples(5)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4pxfqn00.jl:25\nin expression starting at\
    \ /tmp/tmp4pxfqn00.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv2ryjdcq.jl:1\nin expression starting at /tmp/tmpv2ryjdcq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv2ryjdcq.jl:1\nin expression starting at /tmp/tmpv2ryjdcq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   then return 0 \n    else \n        local a = [1 .. n]\n        local count\
    \ = 0\n        for i in a \n            local j = i + 1\n            local k =\
    \ j + 1\n            while k <= n \n                do \n                    if\
    \ a[i] + a[j] + a[k] == 3 \n                        then count = count + 1\n \
    \                   else \n                        break \n                end\n\
    \                k = k + 1\n            end\n        end\n        return count\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5t8_rrl7.jl:16\nin expression starting at /tmp/tmp5t8_rrl7.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        return 1 + get_max_triples(n - 1) + get_max_triples(n\
    \ - 2) + get_max_triples(n - 3) \nend\n</cell>\n<code language=julia-1.5>\nget_max_triples(5)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3nv53rrq.jl:20\nin expression starting at\
    \ /tmp/tmp3nv53rrq.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        return 1 + get_max_triples(n-2) + get_max_triples(n-3)\
    \ \nend\n</cell>\n<code language=julia-1.5>\nget_max_triples(5)\n</cell>\n<text>\n\
    Exercise 3\nWrite a Julia function which returns the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb_i8xed5.jl:20\nin expression starting at\
    \ /tmp/tmpb_i8xed5.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    a = [Int64](n+1)\n\
    \    a[1] = 1\n    for i in 2:n\n        a[i] = i*i - i + 1 \n    \n    for i\
    \ in 2:n\n        for j in 2:n\n            for k in 2:n\n                if a[i]\
    \ < a[j] and a[i] < a[k] and a[j] < a[k]\n                    then return 1\n\
    \                else return 0\n        end\n    end\n    return 0\nend\n</cell>\n\
    <code language=julia-1.5>\nget_max_triples(5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\nusing Test\n\n\
    @testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t\
    @test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"a\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpks0bxrtk.jl:23\nin expression starting at /tmp/tmpks0bxrtk.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        0\n    else \n\
    \        sum = 0\n        for i in 1:n\n            sum += i * i - i + 1\n   \
    \         if sum % 3 == 0\n                return 1\n        return 0\nend\n</cell>\n\
    <code language=julia-1.0>\nget_max_triples(5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\nusing Test\n\n\
    @testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t\
    @test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkengcoms.jl:17\nin expression starting at\
    \ /tmp/tmpkengcoms.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   then return 0\n    else \n        local a = [Int64](n)\n        for i in 1:n\n\
    \            a[i] = i * i - i + 1\n        end\n        for i in 1:n\n       \
    \     for j in 1:n\n                for k in 1:n\n                    if a[i]\
    \ < a[j] < a[k]\n                        then return 0\n                    end\n\
    \                end\n            end\n        end\n        return 1\n    end\n\
    end\n</cell>\n<code language=julia-1.0>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpugs13wrn.jl:16\nin expression starting at /tmp/tmpugs13wrn.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        return get_max_triples(n-1) + get_max_triples(n-2)\
    \ + get_max_triples(n-3) \nend\n</cell>\n<code language=julia-1.4>\n@time get_max_triples(10)\n\
    </cell>\n<text>\nProblem 7\nWrite a Julia function which returns the number of\
    \ triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\
    \t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10)\
    \ == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaklfqu94.jl:20\nin expression starting at\
    \ /tmp/tmpaklfqu94.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    count = 0\n\
    \    \n    for i in 1:n\n        for j in i+1:n\n            for k in j+1:n\n\
    \                if i+j+k == n\n                    count += 1\n             \
    \       \n    return count\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\
    \t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf7hyc4wg.jl:26\nin expression starting at\
    \ /tmp/tmpf7hyc4wg.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    count = 0\n\
    \    \n    for i in 1:n\n        for j in i+1:n\n            for k in j+1:n\n\
    \                if i+j+k == n\n                    count += 1\n             \
    \       \n    return count\n</cell>\n<text>\nExercise 5\nWrite a function that\
    \ returns the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n  \
    \  and a[i] + a[j] + a[k] is a multiple of 3.\nusing Test\n\n@testset begin\n\n\
    candidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9qdkdquf.jl:25\nin expression starting at\
    \ /tmp/tmp9qdkdquf.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        sum = 0\n        for i in 1:n \n           \
    \ sum += i * i - i + 1\n        return sum % 3 == 0\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\
    \t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10)\
    \ == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzpolow56.jl:24\nin expression starting at\
    \ /tmp/tmpzpolow56.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    count = 0\n\
    \    \n    for a in range(1, n+1):\n        for b in range(a, 2*n):\n        \
    \    if a * b == n * (n + 1) / 2:\n                count += 1\n    return count\n\
    </cell>\n<cell>\nget_max_triples(5)\n</cell>\n<text>\nProblem 3\nWrite a function\
    \ that returns the number of triples (a[i], a[j], a[k]) of a where i < j < k,\
    \ \n    and a[i] + a[j] + a[k] is a multiple of 3.\nusing Test\n\n@testset begin\n\
    \ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj0kbs6tg.jl:19\nin expression starting at\
    \ /tmp/tmpj0kbs6tg.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        error(\"n must\
    \ be positive\")\n    else if n % 2 == 0 \n        error(\"n must be even\")\n\
    \    else \n        sum_triples = 0\n        for i in 1:(n-1)\n            for\
    \ j in (i+1):n\n                for k in (i+1):n\n                    sum_triples\
    \ += i*i*i + j*j*j + k*k*k\n                    if sum_triples % 3 == 0 \n   \
    \                     return sum_triples\n    return sum_triples\nend\n</cell>\n\
    <code language=julia-1.4>\nget_max_triples(5)\n</cell>\n<text>\nProblem 4\nWrite\
    \ a function that returns the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\nusing Test\n\n\
    @testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t\
    @test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy5wt2mqm.jl:17\nin expression starting at\
    \ /tmp/tmpy5wt2mqm.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        0\n    else \n\
    \        sum = 0\n        for i in 1:n\n            sum += i * i - i + 1\n   \
    \         if sum % 3 == 0\n                return sum\n            end\n     \
    \   end\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd6dr3m64.jl:17\nin expression starting at\
    \ /tmp/tmpd6dr3m64.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   then return 0\n    else \n        local a::Vector{Int64} = Vector{Int64}(undef,\
    \ n)\n        for i in 1:n\n            a[i] = i * i - i + 1\n        end\n  \
    \      local count = 0\n        for i in 1:n\n            for j in 1:n\n     \
    \           for k in 1:n\n                    if a[i] < a[j] && a[i] < a[k] &&\
    \ a[j] < a[k]\n                        then count += 1\n                    end\n\
    \                end\n            end\n        end\n        return count\n   \
    \ end\nend\n</cell>\n<text>\nProblem 4\nWrite a function that returns the number\
    \ of pairs of integers (i, j) where i < j and i * i + j * j is less than or equal\
    \ to n.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgenndjpk.jl:16\nin expression starting at /tmp/tmpgenndjpk.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        0\n    else \n\
    \        sum = 0\n        for i in 1:n\n            sum += i * i - i + 1\n   \
    \         if sum % 3 == 0\n                return 1\n        return 0\nend\n</cell>\n\
    <code language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\
    \t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10)\
    \ == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm13vy714.jl:17\nin expression starting at\
    \ /tmp/tmpm13vy714.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        return 1 + get_max_triples(n - 1) + get_max_triples(n\
    \ - 2) + get_max_triples(n - 3) \nend\n</cell>\n<code language=julia-1.5>\nget_max_triples(5)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3nv53rrq.jl:20\nin expression starting at\
    \ /tmp/tmp3nv53rrq.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        error(\"n must\
    \ be positive\")\n    else if n == 1 \n        return 1 \n    else \n        return\
    \ get_max_triples(n-1) + get_max_triples(n-2) + get_max_triples(n-3)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv2xprepk.jl:17\nin expression starting at\
    \ /tmp/tmpv2xprepk.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4hdoq71i.jl:1\nin expression starting at /tmp/tmp4hdoq71i.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        sum = 0 \n        for i in 1 .. n \n       \
    \     sum += i * i - i + 1 \n        return sum \nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzcxhp_17.jl:23\nin expression starting at\
    \ /tmp/tmpzcxhp_17.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        error(\"n must\
    \ be positive\")\n    else if n % 2 == 0 \n        error(\"n must be even\")\n\
    \    else \n        sum = 0\n        for i in 1:(n-1)\n            sum += a[i]\
    \ + a[i+1]\n            if sum % 3 == 0\n                return sum\n        \
    \    end\n        end\n    end\nend\n</cell>\n<code language=julia-1.4>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzovziv6h.jl:17\nin expression starting at\
    \ /tmp/tmpzovziv6h.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4hdoq71i.jl:1\nin expression starting at /tmp/tmp4hdoq71i.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        0\n    else \n\
    \        sum = 0\n        for i in 1:n\n            sum += i * i - i + 1\n   \
    \     return sum % 3 == 0\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvsoeb_i0.jl:17\nin expression starting at\
    \ /tmp/tmpvsoeb_i0.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        0\n    else \n\
    \        sum = 0\n        for i in 1:n\n            sum += i * i - i + 1\n   \
    \         if sum % 3 == 0\n                return sum\n            end\n     \
    \   end\n    end\nend\n</cell>\n<code language=julia-1.3>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2mebsof1.jl:17\nin expression starting at\
    \ /tmp/tmp2mebsof1.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4hdoq71i.jl:1\nin expression starting at /tmp/tmp4hdoq71i.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   then return 0\n    else \n        local a = [Int64](n)\n        for i in 1:n\n\
    \            a[i] = i * i - i + 1\n        end\n        local count = 0\n    \
    \    for i in 1:n\n            for j in 1:n\n                for k in 1:n\n  \
    \                  if a[i] < a[j] and a[i] < a[k] and a[j] < a[k]\n          \
    \              then count += 1\n                    end\n                end\n\
    \            end\n        end\n        return count\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\
    \t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10)\
    \ == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5785oqby.jl:16\nin expression starting at /tmp/tmp5785oqby.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    count = 0\n\
    \    \n    for i in 1:n\n        for j in i+1:n\n            for k in j+1:n\n\
    \                if i+j+k == n\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    \n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nget_max_triples(5)\n</cell>\n<text>\nExercise\
    \ 5\nWrite a Julia function get_max_triples_naive(n::Int64)::Int64 which returns\
    \ the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppec1m8hx.jl:30\nin expression starting at\
    \ /tmp/tmppec1m8hx.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        triples = 0 \n        for i in 1:n \n      \
    \      for j in (i+1):n \n                for k in (i+1):n \n                \
    \    if i + j + k == n \n                        triples += 1 \n        return\
    \ triples \nend\n</cell>\n<code language=julia-1.3>\nget_max_triples(5)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg6wb4as8.jl:26\nin expression starting at\
    \ /tmp/tmpg6wb4as8.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        0\n    else \n\
    \        sum = 0\n        for i in 1:n\n            sum += i * i - i + 1\n   \
    \     return sum % 3 == 0\nend\n</cell>\n<code language=julia-1.5>\nget_max_triples(5)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5w5wqbga.jl:17\nin expression starting at\
    \ /tmp/tmp5w5wqbga.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        error(\"n must\
    \ be positive\")\n    else if n == 1 \n        return 1 \n    else \n        sum\
    \ = 0\n        for i in 1:n\n            sum += a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            sum -= a[i]\n            if sum > 3\n\
    \                return sum\n            \nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv5xe8rck.jl:17\nin expression starting at\
    \ /tmp/tmpv5xe8rck.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        return 1 + get_max_triples(n-1) + get_max_triples(n-2)\
    \ + get_max_triples(n-3)\nend\n</cell>\n<code language=julia-1.5>\nget_max_triples(5)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpelj63_tc.jl:20\nin expression starting at\
    \ /tmp/tmpelj63_tc.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4hdoq71i.jl:1\nin expression starting at /tmp/tmp4hdoq71i.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        0\n    else \n\
    \        sum = 0\n        for i in 1:n\n            sum += i * i - i + 1\n   \
    \     return sum % 3 == 0\nend\n</cell>\n<code language=julia-1.3>\nusing Test\n\
    \n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\
    \t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxaqsx3p_.jl:17\nin expression starting at\
    \ /tmp/tmpxaqsx3p_.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        0\n    else \n\
    \        sum = 0\n        for i in 1:n\n            for j in i+1:n\n         \
    \       for k in j+1:n\n                    sum += i*i*i + j*j*j + k*k*k\n   \
    \                 if sum % 3 == 0\n                        return sum\n      \
    \              end\n                end\n            end\n        end\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n@time get_max_triples(10)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp49s54uxy.jl:17\nin expression starting at\
    \ /tmp/tmp49s54uxy.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv2ryjdcq.jl:1\nin expression starting at /tmp/tmpv2ryjdcq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        0\n    else \n\
    \        sum = 0\n        for i in 1 .. n\n            sum += i * i - i + 1\n\
    \        return sum % 3 == 0\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t\
    @test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjjmucw9w.jl:17\nin expression starting at\
    \ /tmp/tmpjjmucw9w.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    count = 0\n\
    \    \n    for i in 1:n\n        for j in i+1:n\n            for k in j+1:n\n\
    \                if i+j+k == n\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    \n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nget_max_triples(5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\nusing Test\n\
    \n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\
    \t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpystldc6q.jl:30\nin expression starting at\
    \ /tmp/tmpystldc6q.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        sum = 0\n        for i in 1:n \n           \
    \ sum += i * i - i + 1\n        return sum % 3 == 0\n    end\nend\n</cell>\n<code\
    \ language=julia-1.0>\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\
    \t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10)\
    \ == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmgurpkx7.jl:24\nin expression starting at\
    \ /tmp/tmpmgurpkx7.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        0\n    else \n\
    \        sum = 0\n        for i in 1:n\n            sum += i * i - i + 1\n   \
    \     return sum % 3 == 0\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\
    \t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt3tocpd6.jl:17\nin expression starting at\
    \ /tmp/tmpt3tocpd6.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        0\n    else \n\
    \        sum = 0\n        for i in 1:n\n            sum += i * i - i + 1\n   \
    \         if sum % 3 == 0\n                return sum\n            end\n     \
    \   end\n    end\nend\n</cell>\n<code language=julia-1.3>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2mebsof1.jl:17\nin expression starting at\
    \ /tmp/tmp2mebsof1.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    \n    a = [Int64](n+1)\n    a[1] = 1\n\
    \    for i in 2:n\n        a[i] = a[i] + a[i]\n        if a[i] % 3 == 0\n    \
    \        return i\n    return 0\nend\n</cell>\n<code language=julia-1.5>\nget_max_triples(5)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfle4z9e0.jl:26\nin expression starting at\
    \ /tmp/tmpfle4z9e0.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    count = 0\n\
    \    \n    for a in range(1, n+1):\n        for b in range(a+1, n+1):\n      \
    \      for c in range(b+1, n+1):\n                if a * b * c % 3 == 0 :\n  \
    \                  count += 1\n    return count\n    \n</cell>\n<cell>\nget_max_triples(5)\n\
    </cell>\n<text>\nProblem 8\nThe Fibonacci sequence is defined by the formula:\n\
    using Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4709ekvc.jl:19\nin expression starting at\
    \ /tmp/tmp4709ekvc.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    \n    a = [1 .. n]\n    \n    for i in\
    \ a \n        for j in a\n            if i != j\n                for k in a\n\
    \                    if i != k and j != k and i != j and j != k and i != k and\
    \ j != k and i != j and j != k and i != j and j != k and i != j and j != k and\
    \ i != j and j != k and i != j and j != k and i != j and j != k and i != j and\
    \ j != k and i != j and j != k and i != j and j != k and i != j and j != k and\
    \ i != j and j != k and i != j and j != k and i != j and j != k and i != j and\
    \ j != k and i != j and j != k and i != j and j != k and i != j and j != k and\
    \ i != j and j != k and i != j and j != k and i != j and j != k and i != j and\
    \ j != k and i != j and j != k and i != j and j != k and i != j and j != k and\
    \ i != j and j != k and i != j and j != k and i != j and j != k and i != j and\
    \ j != k and i != j and j != k and i != j and j != k and i != j and j != k and\
    \ i != j and j != k and i != j and j != k and i != j and j != k and i != j and\
    \ j != k and i != j and j != k and i != j and j != k and i != j and j != k and\
    \ i != j and j != k and i != j and j != k and i != j and j != k and i != j and\
    \ j != k and i != j and j != k and i != j and j != k and i != j and j != k and\
    \ i != j and j != k and i != j and j != k and i != j and j != k and i != j and\
    \ j != k and i != j and j != k and i != j and j != k and i != j and j != k and\
    \ i != j and j != k and i != j and j != k and i != j and j != k and i != j and\
    \ j != k and i != j and j != k and i != j and j != k and i != j and j != k and\
    \ i != j and j != k and i != j and j != k and i != j and j != k and i != j and\
    \ j != k and i != j and j != k and i != j and j != k\nusing Test\n\n@testset begin\n\
    \ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"j\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj3yq0s2_.jl:24\nin expression starting at /tmp/tmpj3yq0s2_.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        error(\"n must\
    \ be positive\")\n    else if n == 1 \n        return 1 \n    else \n        return\
    \ get_max_triples(n-1) + get_max_triples(n-2) + get_max_triples(n-3)\nend\n</cell>\n\
    <code language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\
    \t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10)\
    \ == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj8yovlmu.jl:17\nin expression starting at\
    \ /tmp/tmpj8yovlmu.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        0\n    else \n\
    \        sum = 0\n        for i in 1:n\n            sum += i * i - i + 1\n   \
    \         if sum % 3 == 0\n                return sum\n            end\n     \
    \   end\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd6dr3m64.jl:17\nin expression starting at\
    \ /tmp/tmpd6dr3m64.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4hdoq71i.jl:1\nin expression starting at /tmp/tmp4hdoq71i.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4hdoq71i.jl:1\nin expression starting at /tmp/tmp4hdoq71i.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    count = 0\n\
    \    \n    for i in 1:n\n        for j in i+1:n\n            for k in j+1:n\n\
    \                if i+j+k == n\n                    count += 1\n             \
    \       \n    return count\n    \nend\n</cell>\n<code language=julia-1.5>\nget_max_triples(5)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwx877_dv.jl:27\nin expression starting at\
    \ /tmp/tmpwx877_dv.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        return 1 + get_max_triples(n-1) + get_max_triples(n-2)\
    \ + get_max_triples(n-3)\nend\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\
    \t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10)\
    \ == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9_85zrw2.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9_85zrw2.jl:1\n\
    in expression starting at /tmp/tmp9_85zrw2.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        return 1 + get_max_triples(n - 1) + get_max_triples(n\
    \ - 2) + get_max_triples(n - 3) \nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_h6eo_gg.jl:20\nin expression starting at\
    \ /tmp/tmp_h6eo_gg.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    count = 0\n\
    \    \n    for i in 1:n\n        for j in i+1:n\n            for k in j+1:n\n\
    \                if i+j+k == n\n                    count += 1\n             \
    \   end\n            end\n        end\n    end\n    \n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nget_max_triples(5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\nusing Test\n\
    \n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\
    \t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpystldc6q.jl:30\nin expression starting at\
    \ /tmp/tmpystldc6q.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    count = 0\n\
    \    \n    for i in 1..n\n        for j in (i+1)..n\n            for k in (i+1)..n\n\
    \                if i+j+k == n\n                    count += 1\n    \n    return\
    \ count\n</cell>\n<text>\nProblem 10\nWrite a function that returns the number\
    \ of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] +\
    \ a[k] is a multiple of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\
    \t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10)\
    \ == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4pbdgexf.jl:25\nin expression starting at\
    \ /tmp/tmp4pbdgexf.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    count = 0\n\
    \    \n    for i in 1:n\n        for j in (i+1):n\n            for k in (j+1):n\n\
    \                if i + j + k == n\n                    count += 1\n         \
    \       end\n            end\n        end\n    end\n    \n    return count\nend\n\
    </cell>\n<code language=julia-1.5>\nget_max_triples(5)\n</cell>\n<text>\nProblem\
    \ 3\nWrite a function that returns the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\nusing Test\n\
    \n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\
    \t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpivnuwmqn.jl:30\nin expression starting at\
    \ /tmp/tmpivnuwmqn.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    else \n        return 1 + get_max_triples(n-1) + get_max_triples(n-2)\
    \ + get_max_triples(n-3)\nend\n</cell>\n<code language=julia-1.5>\nget_max_triples(5)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpelj63_tc.jl:20\nin expression starting at\
    \ /tmp/tmpelj63_tc.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        0\n    else \n\
    \        sum = 0\n        for i in 1:n\n            sum += i * i - i + 1\n   \
    \         if sum % 3 == 0\n                return 1\n        return 0\nend\n</cell>\n\
    <code language=julia-1.0>\nget_max_triples(5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\nusing Test\n\n\
    @testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t\
    @test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkengcoms.jl:17\nin expression starting at\
    \ /tmp/tmpkengcoms.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        error(\"n must\
    \ be positive\")\n    else if n % 2 == 0 \n        error(\"n must be even\")\n\
    \    else \n        sum = 0\n        for i in 1:(n-1)\n            sum += a[i]\n\
    \            if sum > 3\n                sum -= 3\n            end\n        end\n\
    \        return sum\n    end\nend\n</cell>\n<code language=julia-1.3>\nget_max_triples(5)\n\
    </cell>\n<text>\nExercise 3\nWrite a Julia function which returns the number of\
    \ triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k]\
    \ is a multiple of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\
    \t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10)\
    \ == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplt75yuid.jl:17\nin expression starting at\
    \ /tmp/tmplt75yuid.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   then return 0 \n    else \n        local a = [Int64](n) \n        for i in\
    \ 1 .. n \n            then a[i] = i * i - i + 1 \n        return 1 + get_max_triples(n-1)\
    \ + get_max_triples(n-2) + get_max_triples(n-3)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\
    \t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10)\
    \ == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfh81rbek.jl:16\nin expression starting at /tmp/tmpfh81rbek.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    a = [Int64(i * i\
    \ - i + 1) for i in 1:n]\n    a.sort()\n    count = 0\n    for i in a:\n     \
    \   for j in a:\n            for k in a:\n                if i + j + k == i*i*i\
    \ + j*j*j + k*k*k:\n                    count += 1\n    return count\nend\n</cell>\n\
    <code language=julia-1.0>\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\
    \t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10)\
    \ == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4nj9xit3.jl:19\nin expression starting at\
    \ /tmp/tmp4nj9xit3.jl:19\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    \n    count = 0\n    \n    for a in range(1,\
    \ n+1)\n        for b in range(a, n+1)\n            for c in range(a+1, n+1)\n\
    \                if a + b + c == n\n                    count += 1\n    \n   \
    \ return count\nend\n</cell>\n<code language=julia-1.5>\nget_max_triples(5)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj_pq4d4o.jl:28\nin expression starting at\
    \ /tmp/tmpj_pq4d4o.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    else if n == 0 \n        0\n    else \n\
    \        sum = 0\n        for i in 1:n\n            for j in i+1:n\n         \
    \       for k in j+1:n\n                    if i*i + j*j + k*k == n\n        \
    \                sum += i*i + j*j + k*k\n        return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nget_max_triples(5)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the number of triples (a[i], a[j], a[k]) of a where\
    \ i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\nusing Test\n\n\
    @testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t\
    @test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaismmqg3.jl:17\nin expression starting at\
    \ /tmp/tmpaismmqg3.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 3 \n     \
    \   return 0 \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4hdoq71i.jl:1\nin expression starting at /tmp/tmp4hdoq71i.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    count = 0\n\
    \    \n    for i in 1..n\n        for j in (i+1)..n\n            for k in (i+j)..n\n\
    \                if i*i + j*j + k*k == i*i*j\n                    count += 1\n\
    \    \n    return count\nend\n</cell>\n<code language=julia-1.5>\nget_max_triples(5)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of triples\
    \ (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\nusing Test\n\n@testset begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5)\
    \ == 1)\n\t@test(candidate(6) == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100)\
    \ == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg56zl4gn.jl:26\nin expression starting at\
    \ /tmp/tmpg56zl4gn.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    if n < 0 \n     \
    \   error(\"n must be positive\")\n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \nusing Test\n\n@testset\
    \ begin\n\ncandidate = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6)\
    \ == 4)\n\t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm4xt3afy.jl:1\nin expression starting at /tmp/tmpm4xt3afy.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    You are given a positive integer n. You have to create an\
    \ integer vector a of length n.\n        For each i (1 \u2264 i \u2264 n), the\
    \ value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i],\
    \ a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple\
    \ of 3.\n\n    Example :\n    >>> get_max_triples(5)\n    1\n        Explanation:\
    \ \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n\
    \    \"\"\"\nfunction get_max_triples(n::Int64)::Int64 \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = get_max_triples;\n\t@test(candidate(5) == 1)\n\t@test(candidate(6) == 4)\n\
    \t@test(candidate(10) == 36)\n\t@test(candidate(100) == 53361)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp1zpls91k.jl:14\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1zpls91k.jl:1\n\
    in expression starting at /tmp/tmp1zpls91k.jl:1\n"
  stdout: ''

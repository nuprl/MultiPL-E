name: HumanEval_131_digits
language: jl
prompt: "\"\"\"Given a positive integer n, return the product of the odd digits.\n\
  \    Return 0 if all digits are even.\n    For example:\n    >>> digits(1)\n   \
  \ 1\n    >>> digits(4)\n    0\n    >>> digits(235)\n    15\n    \"\"\"\nfunction\
  \ digits(n::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = digits;\n\t@test(candidate(5)\
  \ == 5)\n\t@test(candidate(54) == 5)\n\t@test(candidate(120) == 1)\n\t@test(candidate(5014)\
  \ == 5)\n\t@test(candidate(98765) == 315)\n\t@test(candidate(5576543) == 2625)\n\
  \t@test(candidate(2468) == 0)\nend\n"
completions: ["    if n<0 \n        return 0 \n    else if n==0 \n        return 1\
    \ \n    else if n%2==0 \n        return digits(n/2) \n    else \n        return\
    \ digits(n/2)*3\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the digits\
    \ of an integer.\nFor example, digits(12345) = 1 + 2 + 3 + 4 + 5 = 15.", "   \
    \ if n<0 \n        return 0 \n    else if n==0 \n        return 1 \n    else if\
    \ n%2==0 \n        return digits(n/2) \n    else \n        return digits(n-1)*10\
    \ + digits(n%2) \nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n\
    <code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the sum of the digits\
    \ of an integer.", "    if n<0 \n        return 0 \n    else if n==0 \n      \
    \  return 1 \n    else if n%2==0 \n        return digits(n/2) \n    else \n  \
    \      return digits(n-1)*10 + digits(n%2) \nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise\nWrite a function that returns the product\
    \ of the even digits in a number.", "    if n<0 \n        return 0 \n    else\
    \ if n==0 \n        return 1 \n    else if n%2==0 \n        return digits(n/2)\
    \ \n    else \n        return digits(n-1)*10 + digits(n%2) \nend\n</cell>\n<code\
    \ language=julia-1.4>\ndigits(1)\n</cell>\n<code language=julia-1.4>\ndigits(4)\n\
    </cell>\n<code language=julia-1.4>\ndigits(235)\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the product of the even digits in a number.", "    if\
    \ n==0 then return 0 \n    if n==1 then return 1 \n    if n%2==0 then return n*digits(n/2)\
    \ \n    else return n*digits(n/2) \nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ You can use the function digits to do this.", "    if n==0 \n        return\
    \ 0 \n    else if n==1 \n        return 1 \n    else if n%2==0 \n        return\
    \ digits(n/2) \n    else \n        return digits(n-1)*10 + digits(n%2) \nend\n\
    </cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\n\
    digits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\n\
    Exercise\nWrite a function digits_sum(n::Int64)::Int64 which returns the sum of\
    \ the odd digits of n.", "    if n<0 \n        return 0 \n    else \n        return\
    \ n % 10 * digits(n / 10)\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n\
    </cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a number.", "    if n < 10 \n        return n\n    else\
    \ \n        return digits(n/10) * 10 + n % 10\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ Use a recursive function.", "    if n < 0 \n        error(\"n must be positive\"\
    )\n    else if n == 0 \n        0\n    else if n % 2 == 1 \n        0\n    else\
    \ \n        digits(n / 2)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the sum of all the integers from 1 to n.\nFor example,\
    \ sum_range(1, 10) should return 55.\nHint: Use sum_range()", "    if n<0 \n \
    \       return 0 \n    else if n==0 \n        return 1 \n    else if n%2==0 \n\
    \        return digits(n/2) \n    else \n        return digits(n/2)*3\nend\n</cell>\n\
    <code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\nExercise\nWrite\
    \ a function that returns the sum of the digits of an integer.", "    if n==0\
    \ \n        0\n    else if n%2==0 \n        digits(n/2)\n    else \n        digits(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n<code language=julia-1.5>\n\
    digits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(12345) = 1 + 2 + 3 + 4 = 10.\nWrite a function that returns\
    \ the sum of the digits of an integer.\nFor example, digits(12345) = 1 + 2 + 3\
    \ + 4 = 10.\nWrite a function that returns the sum of the digits of an integer.\n\
    For example, digits(12345) = 1 + 2 + 3 + 4 = 10.", "    if n < 0 \n        error(\"\
    n must be positive\")\n    else if n < 10 \n        return n\n    else if n %\
    \ 2 == 0 \n        return digits(n / 2)\n    else \n        return digits(n /\
    \ 2) * 3 + 1\nend\n</cell>\n<code language=julia-1.3>\ndigits(1)\n</cell>\n<code\
    \ language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\ndigits(235)\n\
    </cell>\n<text>\nExercise 2\nWrite a function named digits_sum that takes a positive\
    \ integer n and returns the sum of the odd digits of n.\nFor example:\n>>> digits_sum(123)\n\
    6\n>>> digits_sum(1234)\n9\n>>> digits_sum(1235)\n10\n>>> digits_sum(1236)\n11\n\
    >>> digits_sum(1237)\n12\n>>> digits_sum(1238)\n13\n>>> digits_sum(1239)\n14\n\
    >>> digits_sum(1240)\n15\n>>> digits_sum(1241)\n16\n>>> digits_sum(1242)\n17\n\
    >>> digits_sum(1243)\n18\n>>> digits_sum(1244)\n19\n>>> digits_sum(1245)\n20\n\
    >>> digits_sum(1246)\n21\n>>> digits_sum(1247)\n22\n>>> digits_sum(1248)\n23\n\
    >>> digits_sum(1249)\n24\n>>> digits_sum(1250)\n25\n>>> digits_sum(1251)\n26\n\
    >>> digits_sum(1252)\n27\n>>> digits_sum(1253)\n28\n>>> digits_sum(1254)\n29\n\
    >>> digits_sum(1255)\n30\n>>> digits_sum(1256)\n31\n>>> digits_sum(1257)\n32\n\
    >>> digits_sum(1258)\n33\n>>> digits_sum(1259)\n34\n>>> digits_sum(1260)\n35\n\
    >>> digits_sum(1261)\n36\n>>> digits_sum(1262)\n37\n>>> digits_sum(1263)\n38\n\
    >>> digits_sum(1264)\n39\n>>> digits_sum(1265)\n40\n>>> digits_sum(1266)\n41\n\
    >>> digits_sum(1267)\n42\n>>> digits_sum(1268)\n43\n>>> digits_sum(1269)\n44\n\
    >>> digits_sum(1270)\n45\n>>> digits_sum(1271)\n46\n>>> digits_sum(1272)\n47\n\
    >>> digits_sum(1273)\n48\n", "    if n < 0 \n        error(\"n must be positive\"\
    )\n    else if n < 10 \n        return n\n    else if n % 2 == 0 \n        return\
    \ digits(n / 2) * digits(n / 2)\n    else \n        return digits(n / 2) * digits(n\
    \ / 2) + digits(n / 2)\nend\n</cell>\n<code language=julia-1.5>\ndigits(1)\n</cell>\n\
    <code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\ndigits(235)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the sum of the digits\
    \ of an integer.", "    if n<0 \n        return 0 \n    else \n        return\
    \ prod(digits(n//10), digits(n%10)) \nend \n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function is_palindrome(n) that\
    \ returns true if n is a palindrome and false if n is not a palindrome.", "  \
    \  if n==0 then 0 else n % 10 * digits(n / 10)\nend\n</cell>\n<code language=julia-1.5>\n\
    digits(1)\n</cell>\n<code language=julia-1.5>\ndigits(4)\n</cell>\n<code language=julia-1.5>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the product\
    \ of the even digits in a number.", "    if n==0 \n        return 0 \n    else\
    \ \n        return digits(n/10) * 10 + n % 10\nend\n</cell>\n<code language=julia-1.4>\n\
    digits(1)\n</cell>\n<code language=julia-1.4>\ndigits(4)\n</cell>\n<code language=julia-1.4>\n\
    digits(235)\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the digits of an integer.", "    if n<0 \n        return 0 \n    else if\
    \ n==0 \n        return 1 \n    else if n%2==0 \n        return digits(n/2) \n\
    \    else \n        return digits(n-1) * 3\nend\n</cell>\n<code language=julia-1.3>\n\
    digits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n</cell>\n<code language=julia-1.3>\n\
    digits(235)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the digits of an integer.\nFor example, digits(123) = 1 + 2 + 3 = 6\nHint:\
    \ use the function digits()", "    if n < 0 \n        error(\"n must be positive\"\
    )\n    else if n < 10 \n        return n\n    else if n % 2 == 0 \n        return\
    \ digits(n / 2)\n    else \n        return digits(n / 2) * 3 + 1\nend\n</cell>\n\
    <code language=julia-1.3>\ndigits(1)\n</cell>\n<code language=julia-1.3>\ndigits(4)\n\
    </cell>\n<code language=julia-1.3>\ndigits(235)\n</cell>\n<text>\nExercise\nWrite\
    \ a function that returns the sum of the digits of an integer.", "    if n ==\
    \ 0 \n        return 0 \n    else \n        return n % 10 * digits(n / 10)\nend\n\
    </cell>\n<code language=julia-1.4>\ndigits(1)\n</cell>\n<code language=julia-1.4>\n\
    digits(4)\n</cell>\n<code language=julia-1.4>\ndigits(235)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the sum of the digits of an integer.\n\
    For example, digits(12345) = 1 + 2 + 3 + 4 + 5 = 10.", "    if n<0 \n        error(\"\
    n must be positive\")\n    else if n==0 \n        1\n    else if n==1 \n     \
    \   1\n    else if n==2 \n        2\n    else if n<10 \n        digits(n/10)*10\n\
    \    else if n<100 \n        digits(n/10)*10+digits(n%10)\n    else if n<1000\
    \ \n        digits(n/10)*10+digits(n%10)+digits(n%100)\n    else if n<10000 \n\
    \        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)\n    else if\
    \ n<100000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)+digits(n%10000)\n\
    \    else if n<1000000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)+digits(n%10000)+digits(n%100000)\n\
    \    else if n<10000000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)+digits(n%10000)+digits(n%100000)+digits(n%1000000)\n\
    \    else if n<100000000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)+digits(n%10000)+digits(n%100000)+digits(n%1000000)+digits(n%10000000)\n\
    \    else if n<1000000000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)+digits(n%10000)+digits(n%100000)+digits(n%1000000)+digits(n%10000000)+digits(n%100000000)\n\
    \    else if n<10000000000 \n        digits(n/10)*10+digits(n%10)+digits(n%100)+digits(n%1000)+digits(n%10000)+digits(n%100000)+digits(n%1000000)+digits(n%10000000)+digits(n%100000000)+digits(n%1000000000)\n\
    \    else if n<100000000000 \n        digits(n/10)*10+digits(n%10)+digits("]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

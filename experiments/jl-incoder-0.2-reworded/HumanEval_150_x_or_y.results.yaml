language: jl
name: HumanEval_150_x_or_y
results:
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes in three numbers and returns the\
    \ sum of the squares of the first two numbers. \nThe function should only take\
    \ in three numbers and return an Int64.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcny9at6h.jl:13\nin expression starting at /tmp/tmpcny9at6h.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which takes as input a number n and returns\
    \ the value of n!.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6hyh5sub.jl:13\nin expression starting at /tmp/tmp6hyh5sub.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y \n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function which takes\
    \ a number n and returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpu3uln448.jl:13\nin expression starting at /tmp/tmpu3uln448.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 2 || n == 3 || n == 5\n        return y\n    else\n        return x\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the factorial of a given number. \nThe factorial of\
    \ a number $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6zz1yqxj.jl:17\nin expression starting at\
    \ /tmp/tmp6zz1yqxj.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a number as input and returns the number of digits in\
    \ the number. \nFor example, if the input is 123, the function should return 3.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9juv4rla.jl:13\nin expression starting at /tmp/tmp9juv4rla.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        then return x_or_y(n/2, y, x)\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a program which should return\
    \ the value of x if n is \n    a prime number and should return the value of y\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpiwvry9i1.jl:13\nin expression starting at /tmp/tmpiwvry9i1.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y \n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x) \n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a program which prints\
    \ the square of the numbers from 1 to 100. \nThe program should print each number\
    \ on a separate line.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3mjaeben.jl:13\nin expression starting at /tmp/tmp3mjaeben.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes in three numbers and returns the\
    \ sum of the squares of the first two numbers. \nThe function should return 0\
    \ if the sum of the squares is zero.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsfd546p8.jl:13\nin expression starting at /tmp/tmpsfd546p8.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    \n    if n %\
    \ 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a program that\
    \ prints the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as $n! = n * (n - 1)!$. \nThe factorial of a negative number $n$ is defined\
    \ as $n! = n \\times 0!$. \nThe factorial of a number $0$ is defined as $0! =\
    \ 1$.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmph_6cl1i3.jl:13\nin expression starting at /tmp/tmph_6cl1i3.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which prints\
    \ the prime numbers up to a given number n.\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvn25kbmm.jl:13\nin expression starting at /tmp/tmpvn25kbmm.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which takes\
    \ as input a number n and returns the value of x if n is a prime number and returns\
    \ the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvlkrpct_.jl:13\nin expression starting at /tmp/tmpvlkrpct_.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0\n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of times a given value appears in a given array.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwxl97ckl.jl:13\nin expression starting at /tmp/tmpwxl97ckl.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which takes two numbers as inputs and returns\
    \ their sum.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjtx6pxfp.jl:13\nin expression starting at /tmp/tmpjtx6pxfp.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector\
    \ of numbers and returns the sum of the squares of the numbers in the vector.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp27tm5jow.jl:13\nin expression starting at /tmp/tmp27tm5jow.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function which returns the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpztq8eqj6.jl:13\nin expression starting at /tmp/tmpztq8eqj6.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 10\nWrite a function that returns the factorial of a number.\
    \ \nThe function should take one argument, x, and should return the factorial\
    \ of x.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpw2aq8hpg.jl:13\nin expression starting at /tmp/tmpw2aq8hpg.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    \n    if n %\
    \ 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which\
    \ prints the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps9hu19bg.jl:13\nin expression starting at /tmp/tmps9hu19bg.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes in three numbers and returns the\
    \ sum of the squares of the first two numbers and the sum of the squares of the\
    \ last two numbers.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpny0t3tb3.jl:13\nin expression starting at /tmp/tmpny0t3tb3.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a program which returns the\
    \ value of x if n is a prime number and returns the value of y otherwise.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjjkafsq0.jl:13\nin expression starting at /tmp/tmpjjkafsq0.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\n\
    \        return x\n    else\n        return y\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a program which prints the square of x if x is odd and prints the square\
    \ of y if x is even.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx12nwynd.jl:17\nin expression starting at\
    \ /tmp/tmpx12nwynd.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0uufx2dq.jl:13\nin expression starting at /tmp/tmp0uufx2dq.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ value of x if n is a prime number and should return the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1ptgfccs.jl:13\nin expression starting at /tmp/tmp1ptgfccs.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of times a given value appears in a given\
    \ array.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi8n_pw08.jl:13\nin expression starting at /tmp/tmpi8n_pw08.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the factorial of a number. \nThe factorial of a number $n$ is defined as $n!$,\
    \ where $n$ is an integer greater than or equal to 1.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn9vs3l2p.jl:13\nin expression starting at /tmp/tmpn9vs3l2p.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    \n    if n %\
    \ 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which\
    \ takes a number n and returns the value of x if n is a prime number and returns\
    \ the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo7nkiyyx.jl:13\nin expression starting at /tmp/tmpo7nkiyyx.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 4\nWrite a function that returns the\
    \ number of times a given value appears in a given array. For example, given [1,\
    \ 1, 2, 3], the function should return 3.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqhb1oaix.jl:13\nin expression starting at /tmp/tmpqhb1oaix.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise: Write a function that returns the\
    \ value of x if n is divisible by 3 and \n    y if n is divisible by 5 and should\
    \ return the value of z otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpclxn4llz.jl:13\nin expression starting at /tmp/tmpclxn4llz.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns true\
    \ if the number is prime and false otherwise.\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1802uovr.jl:13\nin expression starting at /tmp/tmp1802uovr.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn8rjtwuv.jl:13\nin expression starting at /tmp/tmpn8rjtwuv.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn5h8fe8l.jl:13\nin expression starting at /tmp/tmpn5h8fe8l.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 10\nWrite a function which returns\
    \ the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps9t5jria.jl:13\nin expression starting at /tmp/tmps9t5jria.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2_t81_u0.jl:13\nin expression starting at /tmp/tmp2_t81_u0.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a program which prints the prime numbers less than a given number.\
    \ \nThe program should print all the prime numbers less than a given number \n\
    (for example, if the given number is 10, the program should print all the prime\
    \ numbers less than 10).\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp12eu7rsh.jl:13\nin expression starting at /tmp/tmp12eu7rsh.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\n\
    Write a function which returns the value of x if n is a prime number and returns\
    \ the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpur8tsdi6.jl:13\nin expression starting at /tmp/tmpur8tsdi6.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the factorial of a number. \n\
    The factorial of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6_p9ck8f.jl:13\nin expression starting at /tmp/tmp6_p9ck8f.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a number as input and returns\
    \ the factorial of that number. \nThe factorial of a number $n$ is defined as\
    \ the product of all the integers up to and including $n$, inclusive.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4wej48m3.jl:13\nin expression starting at /tmp/tmp4wej48m3.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkk4eftrg.jl:13\nin expression starting at /tmp/tmpkk4eftrg.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ number of times a given value appears in a given array.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdus9db0u.jl:13\nin expression starting at /tmp/tmpdus9db0u.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7uiech75.jl:13\nin expression starting at /tmp/tmp7uiech75.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a program which takes as input a number n and returns the value of x if n is\
    \ a prime number and returns the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6dnw_w34.jl:13\nin expression starting at /tmp/tmp6dnw_w34.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y\n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n /\
    \ 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnc78mnb5.jl:13\nin expression starting at /tmp/tmpnc78mnb5.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y\n    end\n    \n    if n %\
    \ 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which\
    \ prints the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbia2cgm1.jl:13\nin expression starting at /tmp/tmpbia2cgm1.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ factorial of a given number. \nThe function should accept a number as an argument\
    \ and should return the factorial of that number.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpega3kof0.jl:13\nin expression starting at /tmp/tmpega3kof0.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9eq1s2ml.jl:13\nin expression starting at /tmp/tmp9eq1s2ml.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function which returns\
    \ the factorial of a number. \nThe factorial of a number $n$ is defined as the\
    \ product of all the numbers $1$ to $n$, inclusive. \nFor example, the factorial\
    \ of $3$ is $6$, $5$ is $120$, and so on.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6c7oflsx.jl:13\nin expression starting at /tmp/tmp6c7oflsx.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\
    \ == true\n        return x\n    else\n        return y\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a program which prints the square of the numbers from 1 to 100.\
    \ \nThe numbers are multiples of 3 and 5, and multiples of 7. \nThe numbers are\
    \ multiples of both 3 and 5, and multiples of both 7. \nThe numbers are multiples\
    \ of both 3 and 7, and multiples of both 5. \nThe numbers are multiples of both\
    \ 3 and 5, and multiples of both 7. \nThe numbers are multiples of both 3 and\
    \ 7, and multiples of both 5. \nThe numbers are multiples of both 3 and 5, and\
    \ multiples of both 7. \nThe numbers are multiples of both 3 and 7, and multiples\
    \ of both 5. \nThe numbers are multiples of both 3 and 5, and multiples of both\
    \ 7. \nThe numbers are multiples of both 3 and 7, and multiples of both 5. \n\
    The numbers are multiples of both 3 and 5, and multiples of both 7. \nThe numbers\
    \ are multiples of both 3 and 7, and multiples of both 5. \nThe numbers are multiples\
    \ of both 3 and 5, and multiples of both 7. \nThe numbers are multiples of both\
    \ 3 and 7, and multiples of both 5. \nThe numbers are multiples of both 3 and\
    \ 5, and multiples of both 7. \nThe numbers are multiples of both 3 and 7, and\
    \ multiples of both 5. \nThe numbers are multiples of both 3 and 5, and multiples\
    \ of both 7. \nThe numbers are multiples of both 3 and 7, and multiples of both\
    \ 5. \nThe numbers are multiples of both 3 and 5, and multiples of both 7. \n\
    The numbers are multiples of both 3 and 7, and multiples of both 5. \nThe numbers\
    \ are multiples of both 3 and 5, and multiples of both 7. \nThe numbers are multiples\
    \ of both 3 and 7, and multiples of both 5. \nThe numbers are multiples of both\
    \ 3 and 5, and multiples of both 7. \nThe numbers are multiples of both 3 and\
    \ 7, and multiples of both 5. \nThe numbers are multiples of both 3 and 5, and\
    \ multiples of both 7. \nThe numbers are multiples of both 3 and 7, and multiples\
    \ of both 5. \nThe numbers are multiples of both 3 and 5, and multiples of both\
    \ 7. \nThe numbers are multiples of both 3 and 7, and multiples of both 5. \n\
    The numbers are multiples of both 3 and 5, and multiples of both 7. \nThe numbers\
    \ are multiples of both 3 and 7, and multiples of both 5. \nThe numbers are multiples\
    \ of both 3 and 5, and multiples of both 7. \nThe numbers are multiples of both\
    \ 3 and 7, and multiples of both 5. \nThe numbers are multiples of both 3 and\
    \ 5, and multiples of both 7. \nThe numbers are multiples of both 3 and 7, \n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe30f_fkt.jl:17\nin expression starting at\
    \ /tmp/tmpe30f_fkt.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 9\nWrite a program which takes\
    \ as input a positive integer n and returns the value of n!.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp73p8pilh.jl:13\nin expression starting at /tmp/tmp73p8pilh.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y\n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n /\
    \ 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function which\
    \ takes a number as input and returns the factorial of that number. \nThe factorial\
    \ of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl50l42q8.jl:13\nin expression starting at /tmp/tmpl50l42q8.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of times a given\
    \ number appears in a given array.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptfqescp9.jl:13\nin expression starting at /tmp/tmptfqescp9.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        then return x_or_y(n/2, y, x)\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program that prints the numbers from 1 to 100 in reverse\
    \ order. \nThe program should print each number on a separate line.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpegrnrx_y.jl:13\nin expression starting at /tmp/tmpegrnrx_y.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n==2\
    \ \n        then return x\n        else return y\n    end\n    if n%2==0 \n  \
    \      then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y, x)\n\
    \    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which takes two numbers\
    \ as inputs and returns their sum.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpefboz61e.jl:13\nin expression starting at /tmp/tmpefboz61e.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y\n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n /\
    \ 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 10\nWrite a function that\
    \ takes a number as an argument and returns the number of digits in that number.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpa3odbus9.jl:13\nin expression starting at /tmp/tmpa3odbus9.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n==2\
    \ \n        return x \n    else \n        return y \nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6m8hlb1s.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6m8hlb1s.jl:1\n\
    in expression starting at /tmp/tmp6m8hlb1s.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which takes\
    \ as input a number n and returns the value of x if n is a prime number and returns\
    \ the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvlkrpct_.jl:13\nin expression starting at /tmp/tmpvlkrpct_.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n==1\
    \ \n        then return x\n        else return y\n    end\n    if n==2 \n    \
    \    then return x\n        else return y\n    end\n    if n%3==0 \n        then\
    \ return x_or_y(n/3, x, y)\n        else return x_or_y(n/3, y, x)\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a program which takes as input a number n and\
    \ returns the value of n!.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkancwzu5.jl:13\nin expression starting at /tmp/tmpkancwzu5.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x \n    else \n        return y \nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of times a given value appears\
    \ in a given list.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2qjntvzj.jl:17\nin expression starting at\
    \ /tmp/tmp2qjntvzj.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkk4eftrg.jl:13\nin expression starting at /tmp/tmpkk4eftrg.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    @code_warntype x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the value of x if n is even, \nand returns the value of y if n\
    \ is odd.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0qun1p31.jl:13\nin expression starting at /tmp/tmp0qun1p31.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n\
    \ / 2, x, y)\n    else \n        then return x_or_y(n / 2, y, x)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a program which should return\
    \ the value of x if n is \n    a prime number and should return the value of y\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptdqk8g78.jl:13\nin expression starting at /tmp/tmptdqk8g78.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x\n    else if n % 2 == 0 \n        return x_or_y(n/2, x,\
    \ y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a program that prints the numbers from 1 to 10 in reverse order. \n\
    The program should print each number on a separate line.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0vja2zpq.jl:14\nin expression starting at\
    \ /tmp/tmp0vja2zpq.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ number of times the value n appears in an array. \nThe function should take\
    \ three arguments: an array x, a number n and a number k.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxrbp0rpp.jl:13\nin expression starting at /tmp/tmpxrbp0rpp.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x \n    else \n        return y \nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a program which prints the factorial of a given number. \nThe\
    \ factorial of a number $n$ is defined as the product of all the numbers $1$ to\
    \ $n$, excluding $n$. \nFor example, the factorial of $5$ is $5! = 1*2*3*4 = 24$.\
    \ \nWrite a program which prints the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as the product of all the numbers $1$ to $n$, excluding\
    \ $n$. \nFor example, the factorial of $5$ is $5! = 1*2*3*4 = 24$. \nWrite a program\
    \ which prints the factorial of a given number. \nThe factorial of a number $n$\
    \ is defined as the product of all the numbers $1$ to $n$, excluding $n$. \nFor\
    \ example, the factorial of $5$ is $5! = 1*2*3*4 = 24$. \nWrite a program which\
    \ prints the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as the product of all the numbers $1$ to $n$, excluding $n$. \nFor example,\
    \ the factorial of $5$ is $5! = 1*2*3*4 = 24$. \nWrite a program which prints\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as the product of all the numbers $1$ to $n$, excluding $n$. \nFor example,\
    \ the factorial of $5$ is $5! = 1*2*3*4 = 24$. \nWrite a program which prints\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as the product of all the numbers $1$ to $n$, excluding $n$. \nFor example,\
    \ the factorial of $5$ is $5! = 1*2*3*4 = 24$. \nWrite a program which prints\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as the product of all the numbers $1$ to $n$, excluding $n$. \nFor example,\
    \ the factorial of $5$ is $5! = 1*2*3*4 = 24$. \nWrite a program which prints\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as the product of all the numbers $1$ to $n$, excluding $n$. \nFor example,\
    \ the factorial \nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyv0wd1av.jl:17\nin expression starting at\
    \ /tmp/tmpyv0wd1av.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x \n    else \n        return y \nend\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 3\nWrite a function which returns the number of prime numbers\
    \ less than or equal to n.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwtpd4_7l.jl:17\nin expression starting at\
    \ /tmp/tmpwtpd4_7l.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpikaov6y2.jl:13\nin expression starting at /tmp/tmpikaov6y2.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of times a given\
    \ number appears in a given list.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfzh5gkvr.jl:13\nin expression starting at /tmp/tmpfzh5gkvr.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 7\nWrite a function that takes a number as input and returns\
    \ the number of digits in that number. \nFor example, if the input is 123, the\
    \ function should return 3.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprun5uohp.jl:13\nin expression starting at /tmp/tmprun5uohp.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which takes\
    \ a number n and returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpz5d9ierf.jl:13\nin expression starting at /tmp/tmpz5d9ierf.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y \n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the value of x if n is a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn7gs9x3h.jl:13\nin expression starting at /tmp/tmpn7gs9x3h.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that returns\
    \ the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj02dt6ih.jl:13\nin expression starting at /tmp/tmpj02dt6ih.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0uufx2dq.jl:13\nin expression starting at /tmp/tmp0uufx2dq.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a program which should return the value of x if n is \n    a prime number and\
    \ should return the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6b227dur.jl:13\nin expression starting at /tmp/tmp6b227dur.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<text>\nExercise 3\nWrite a function which returns the value of x if\
    \ n is a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpijwkpbg0.jl:13\nin expression starting at /tmp/tmpijwkpbg0.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function which takes an array of numbers and returns\
    \ the number of even numbers in the array.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpptfj_j8u.jl:13\nin expression starting at /tmp/tmpptfj_j8u.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        then return x_or_y(n/2, y, x)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function which returns\
    \ the value of x if n is a prime number and should return the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmxo3yqcn.jl:13\nin expression starting at /tmp/tmpmxo3yqcn.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which prints the square of the numbers from\
    \ 1 to 100. \nThe program should print each number on a separate line.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpi_iakawj.jl:13\nin expression starting at /tmp/tmpi_iakawj.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n==2\
    \ || n==3 || n==5 || n==7 || n==11 || n==13 || n==17 || n==19 || n==23 || n==29\
    \ || n==31 || n==37 || n==43 || n==47 || n==53 || n==59 || n==63 || n==67 || n==73\
    \ || n==79 || n==83 || n==89 || n==97 || n==101 \n    then return x\n    else\
    \ return y\n    end\nend\n</cell>\n<code language=julia-1.0>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.0>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of prime numbers less than a given\
    \ number. \nThe function should take one parameter, x, and should return the number\
    \ of prime numbers less than x.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjnddi82i.jl:13\nin expression starting at /tmp/tmpjnddi82i.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes in three numbers and returns the\
    \ sum of the squares of the numbers. \nThe function should only take in numbers\
    \ that are positive integers.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp377vux2s.jl:13\nin expression starting at /tmp/tmp377vux2s.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which returns\
    \ the number of prime numbers less than a given number. \nThe function should\
    \ take one argument, n, which represents the upper limit of the prime numbers\
    \ to count.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqiomkdju.jl:13\nin expression starting at /tmp/tmpqiomkdju.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise: Write a function that returns the\
    \ number of times a given number appears in a given array. For example, the function\
    \ should return the number of times 3 appears in [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15].\
    \ Hint: Use a for loop. Hint: Use a while loop.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8ytvz1lb.jl:13\nin expression starting at /tmp/tmp8ytvz1lb.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which prints\
    \ the square of x if x is odd and prints the square of y if x is even.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7apm2d3g.jl:13\nin expression starting at /tmp/tmp7apm2d3g.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a vector of integers and returns the sum of the squares\
    \ of the integers in the vector.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmbpzx0zs.jl:13\nin expression starting at /tmp/tmpmbpzx0zs.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n==1\
    \ \n        then return x \n        else return y \n    end\n    if n==2 \n  \
    \      then return x \n        else return y \n    end\n    if n==3 \n       \
    \ then return x \n        else return y \n    end\n    if n==4 \n        then\
    \ return x \n        else return y \n    end\n    if n==5 \n        then return\
    \ x \n        else return y \n    end\n    if n==6 \n        then return x \n\
    \        else return y \n    end\n    if n==7 \n        then return x \n     \
    \   else return y \n    end\n    if n==8 \n        then return x \n        else\
    \ return y \n    end\n    if n==9 \n        then return x \n        else return\
    \ y \n    end\n    if n==10 \n        then return x \n        else return y \n\
    \    end\n    if n==11 \n        then return x \n        else return y \n    end\n\
    \    if n==12 \n        then return x \n        else return y \n    end\n    if\
    \ n==13 \n        then return x \n        else return y \n    end\n    if n==14\
    \ \n        then return x \n        else return y \n    end\n    if n==15 \n \
    \       then return x \n        else return y \n    end\n    if n==16 \n     \
    \   then return x \n        else return y \n    end\n    if n==17 \n        then\
    \ return x \n        else return y \n    end\n    if n==18 \n        then return\
    \ x \n        else return y \n    end\n    if n==19 \n        then return x \n\
    \        else return y \n    end\n    if n==20 \n        then return x \n    \
    \    else return y \n    end\n    if n==21 \n        then return x \n        else\
    \ return y \n    end\n    if n==22 \n        then return x \n        else return\
    \ y \n    end\n    if n==23 \n        then return x \n        else return y \n\
    \    end\n    if n==24 \n        then return x \n        else return y \n    end\n\
    \    if n==25 \n        then return x \n        else return y \n    end\n    if\
    \ n==26 \n        then return x \n        else return y \n    end\n    if n==27\
    \ \n        then return x \n        else return y \n    end\n    if n==28 \n \
    \       then return x \n        else return y \n    end\n    if n==29 \n     \
    \   then return x \n        else return y \n    end\n    if n==30 \n        then\
    \ return x \n        else return y \n    end\n    if n==31 \n        then return\
    \ x \n        else return y \n    end\n    if n==32 \n        then return x \n\
    \        else return y \n    end\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplze73yq2.jl:13\nin expression starting at /tmp/tmplze73yq2.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0\n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that returns True if n is a prime number\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpaxf3rouj.jl:13\nin expression starting at /tmp/tmpaxf3rouj.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n==1\
    \ \n        then return x \n        else return y \n    end\n    if n==2 \n  \
    \      then return x \n        else return y \n    end\n    if n==3 \n       \
    \ then return x \n        else return y \n    end\n    if n==4 \n        then\
    \ return x \n        else return y \n    end\n    if n==5 \n        then return\
    \ x \n        else return y \n    end\n    if n==6 \n        then return x \n\
    \        else return y \n    end\n    if n==7 \n        then return x \n     \
    \   else return y \n    end\n    if n==8 \n        then return x \n        else\
    \ return y \n    end\n    if n==9 \n        then return x \n        else return\
    \ y \n    end\n    if n==10 \n        then return x \n        else return y \n\
    \    end\n    if n==11 \n        then return x \n        else return y \n    end\n\
    \    if n==12 \n        then return x \n        else return y \n    end\n    if\
    \ n==13 \n        then return x \n        else return y \n    end\n    if n==14\
    \ \n        then return x \n        else return y \n    end\n    if n==15 \n \
    \       then return x \n        else return y \n    end\n    if n==16 \n     \
    \   then return x \n        else return y \n    end\n    if n==17 \n        then\
    \ return x \n        else return y \n    end\n    if n==18 \n        then return\
    \ x \n        else return y \n    end\n    if n==19 \n        then return x \n\
    \        else return y \n    end\n    if n==20 \n        then return x \n    \
    \    else return y \n    end\n    if n==21 \n        then return x \n        else\
    \ return y \n    end\n    if n==22 \n        then return x \n        else return\
    \ y \n    end\n    if n==23 \n        then return x \n        else return y \n\
    \    end\n    if n==24 \n        then return x \n        else return y \n    end\n\
    \    if n==25 \n        then return x \n        else return y \n    end\n    if\
    \ n==26 \n        then return x \n        else return y \n    end\n    if n==27\
    \ \n        then return x \n        else return y \n    end\n    if n==28 \n \
    \       then return x \n        else return y \n    end\n    if n==29 \n     \
    \   then return x \n        else return y \n    end\n    if n==30 \n        then\
    \ return x \n        else return y \n    end\n    if n==31 \n        then return\
    \ x \n        else return y \n    end\n    if n==32 \n        then return x \n\
    \        else return y \n    end\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplze73yq2.jl:13\nin expression starting at /tmp/tmplze73yq2.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a number as an argument and returns\
    \ the number if it is divisible by 3 or 7 and returns the string \"Not divisible\
    \ by 3 or 7\" otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7g8jsrop.jl:13\nin expression starting at /tmp/tmp7g8jsrop.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y \n    end\n    \n    if n\
    \ % 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x) \n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34,\
    \ 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector of numbers and returns the sum\
    \ of the squares of the numbers in the vector. \nThe function should raise an\
    \ error if the vector is empty.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnk4xly8u.jl:13\nin expression starting at /tmp/tmpnk4xly8u.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5a15y9q9.jl:13\nin expression starting at /tmp/tmp5a15y9q9.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    \n    if n %\
    \ 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program that\
    \ prints the factorial of a number. \nThe factorial of a number $n$ is defined\
    \ as the product of all the integers \nless than or equal to $n$. For example,\
    \ the factorial of $n$ is $n!$ if $n$ is \n1, 2, 3, ..., $n-1$, otherwise $n!\
    \ = 1$. \nThe factorial of zero is $1$.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppnj_2d68.jl:13\nin expression starting at /tmp/tmppnj_2d68.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of times a given number appears in a given array.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps6tp8c_k.jl:13\nin expression starting at /tmp/tmps6tp8c_k.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which takes as\
    \ input a number n and returns the value of x if n is a prime number and returns\
    \ the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9e2i2uzk.jl:13\nin expression starting at /tmp/tmp9e2i2uzk.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0uufx2dq.jl:13\nin expression starting at /tmp/tmp0uufx2dq.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function which returns\
    \ the number of times a given number appears in a given array.\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_221gwe8.jl:13\nin expression starting at /tmp/tmp_221gwe8.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\n\
    \        return x\n    else\n        return y\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which should return the value of x if n is \n    a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpglxgizh3.jl:17\nin expression starting at\
    \ /tmp/tmpglxgizh3.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    \n    if n %\
    \ 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34,\
    \ 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\n\
    Exercise 2\nWrite a program which prints the numbers from 1 to 100. \nThe program\
    \ should print each number on a separate line.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl73mry6d.jl:13\nin expression starting at /tmp/tmpl73mry6d.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a program that prints the square of x if x is odd and\
    \ prints the square of y if x is even.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp29q24vyi.jl:13\nin expression starting at /tmp/tmp29q24vyi.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes in three numbers and returns the\
    \ sum of the squares of the first two numbers. \nThe function should only take\
    \ in three numbers and return an Int64.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr4covb5s.jl:13\nin expression starting at /tmp/tmpr4covb5s.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of times a given value appears in a given array. \nFor example, given\
    \ the array [1, 1, 2, 3, 4, 4, 5], the function should return 3 because the value\
    \ 1 appears 3 times in the array. \nThe function should also work for an array\
    \ of any type. For example, given the array [1, 1, 2, 3, 4, 4, 5] the function\
    \ should return 3 because the value 1 appears 3 times in the array.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6m7c334.jl:13\nin expression starting at /tmp/tmpm6m7c334.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        return x \n    else \n        return y \nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an integer $n$ and returns $n$ if $n$\
    \ is a prime number and $n+1$ if $n$ is not a prime number. Test your function\
    \ with $n=7$ and $n=15$.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgm_wui9u.jl:17\nin expression starting at\
    \ /tmp/tmpgm_wui9u.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\nend\n</cell>\n<code language=julia-1.4>\n\
    x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 2\nWrite a function which returns\
    \ the number of times the number n appears in an array. For example, if the array\
    \ is [1, 1, 2, 3], then it should return 3.\nusing Test\n\n@testset begin\n\n\
    candidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm0rqskoj.jl:13\nin expression starting at /tmp/tmpm0rqskoj.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.0>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.0>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function which returns the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcitnqbpn.jl:13\nin expression starting at /tmp/tmpcitnqbpn.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 10\nWrite a function that returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyiwabstl.jl:13\nin expression starting at /tmp/tmpyiwabstl.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1\n        return x\n    else\n        return y\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which takes as input a number n and returns the value of\
    \ x if n is a prime number and returns the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3dpd7u9x.jl:17\nin expression starting at\
    \ /tmp/tmp3dpd7u9x.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n\
    \ / 2, x, y)\n    else \n        then return x_or_y(n / 2, y, x)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function which takes in a positive integer n and returns the number\
    \ of digits in n. \nFor example, \nif n = 123, then your function should return\
    \ 3.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbcsmuc9l.jl:13\nin expression starting at /tmp/tmpbcsmuc9l.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise: Write a function that returns the\
    \ value of x if n is a prime number and returns the value of y otherwise.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr1j7ac7_.jl:13\nin expression starting at /tmp/tmpr1j7ac7_.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the factorial of a number. \n\
    The factorial of a number $n$ is defined as the product of all the integers less\
    \ than or equal to $n$. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a\
    \ function that returns the factorial of a number $n$. \nThe factorial of a number\
    \ $n$ is defined as the product of all the integers less than or equal to $n$.\
    \ \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a function that returns\
    \ the factorial of a number $n$. \nThe factorial of a number $n$ is defined as\
    \ the product of all the integers less than or equal to $n$. \nFor example, 5!\
    \ = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a function that returns the factorial of\
    \ a number $n$. \nThe factorial of a number $n$ is defined as the product of all\
    \ the integers less than or equal to $n$. \nFor example, 5! = 5 x 4 x 3 x 2 x\
    \ 1 = 120. \nWrite a function that returns the factorial of a number $n$. \nThe\
    \ factorial of a number $n$ is defined as the product of all the integers less\
    \ than or equal to $n$. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a\
    \ function that returns the factorial of a number $n$. \nThe factorial of a number\
    \ $n$ is defined as the product of all the integers less than or equal to $n$.\
    \ \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a function that returns\
    \ the factorial of a number $n$. \nThe factorial of a number $n$ is defined as\
    \ the product of all the integers less than or equal to $n$. \nFor example, 5!\
    \ = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a function that returns the factorial of\
    \ a number $n$. \nThe factorial of a number $n$ is defined as the product of all\
    \ the integers less than or equal to $n$. \nFor example, 5! = 5 x 4 x 3 x 2 x\
    \ 1 = 120. \nWrite a function that returns the factorial of a number $n$. \nThe\
    \ factorial of a number $n$ is defined as the product of all the integers less\
    \ than or equal to $n$. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a\
    \ function that returns the factorial of a number $n$. \nThe factorial of a number\
    \ $n$ is defined as the product of all the integer\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_12qr2un.jl:13\nin expression starting at /tmp/tmp_12qr2un.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 7\nWrite a function that takes a number as input and returns\
    \ the factorial of it. \nThe factorial of a number $n$ is defined as the product\
    \ of all the numbers from 1 to $n$, inclusive. \nFor example, 5! = 5 x 4 x 3 x\
    \ 2 x 1 = 120. \nWrite a function that takes a number as input and returns the\
    \ factorial of it. \nThe factorial of a number $n$ is defined as the product of\
    \ all the numbers from 1 to $n$, inclusive. \nFor example, 5! = 5 x 4 x 3 x 2\
    \ x 1 = 120. \nWrite a function that takes a number as input and returns the factorial\
    \ of it. \nThe factorial of a number $n$ is defined as the product of all the\
    \ numbers from 1 to $n$, inclusive. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120.\
    \ \nWrite a function that takes a number as input and returns the factorial of\
    \ it. \nThe factorial of a number $n$ is defined as the product of all the numbers\
    \ from 1 to $n$, inclusive. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite\
    \ a function that takes a number as input and returns the factorial of it. \n\
    The factorial of a number $n$ is defined as the product of all the numbers from\
    \ 1 to $n$, inclusive. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a\
    \ function that takes a number as input and returns the factorial of it. \nThe\
    \ factorial of a number $n$ is defined as the product of all the numbers from\
    \ 1 to $n$, inclusive. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a\
    \ function that takes a number as input and returns the factorial of it. \nThe\
    \ factorial of a number $n$ is defined as the product of all the numbers from\
    \ 1 to $n$, inclusive. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a\
    \ function that takes a number as input and returns the factorial of it. \nThe\
    \ factorial of a number $n$ is defined as the product of all the numbers from\
    \ 1 to $n$, inclusive. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a\
    \ function that takes a number as input and returns the factorial of it. \nThe\
    \ factorial of a number $n$ is defined as the product of all the numbers from\
    \ 1 to $n$, inclusive. \nFor example, 5! = 5 x 4 x 3 x 2 x 1 = 120. \nWrite a\
    \ function that takes a number as input and returns the factorial of it. \nThe\
    \ factorial of a number $n$ is defined as the product \nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl1goys6w.jl:13\nin expression starting at /tmp/tmpl1goys6w.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which prints\
    \ the numbers from 1 to 100. \nThe program should print each number on a separate\
    \ line.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4lo1goxw.jl:13\nin expression starting at /tmp/tmp4lo1goxw.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpikaov6y2.jl:13\nin expression starting at /tmp/tmpikaov6y2.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpoam3s_bt.jl:13\nin expression starting at /tmp/tmpoam3s_bt.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of times a given\
    \ value appears in a given list.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3s5kiuly.jl:13\nin expression starting at /tmp/tmp3s5kiuly.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y \n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n /\
    \ 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a program which should\
    \ return the value of x if n is \n    a prime number and should return the value\
    \ of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpytexgqtn.jl:13\nin expression starting at /tmp/tmpytexgqtn.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0\n        x \n    else\n        y\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 5 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzi3246hd.jl:20

    '
  stdout: "test set: Test Failed at /tmp/tmpzi3246hd.jl:23\n  Expression: candidate(7,\
    \ 34, 12) == 34\n   Evaluated: 12 == 34\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzi3246hd.jl:23 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzi3246hd.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpzi3246hd.jl:25\n  Expression: candidate(3, 33, 5212) == 33\n\
    \   Evaluated: 5212 == 33\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzi3246hd.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzi3246hd.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpzi3246hd.jl:26\n  Expression: candidate(1259, 3, 52) == 3\n\
    \   Evaluated: 52 == 3\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzi3246hd.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzi3246hd.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpzi3246hd.jl:27\n  Expression: candidate(7919, -1, 12) == -1\n\
    \   Evaluated: 12 == -1\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzi3246hd.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzi3246hd.jl:22\ntest set: Test\
    \ Failed at /tmp/tmpzi3246hd.jl:30\n  Expression: candidate(6, 34, 1234) == 1234\n\
    \   Evaluated: 34 == 1234\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined"
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 2 || n == 3 || n == 5\n        return y\n    else\n        return x\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpyx_uojxv.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyx_uojxv.jl:1\n\
    in expression starting at /tmp/tmpyx_uojxv.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpibdvxf13.jl:13\nin expression starting at /tmp/tmpibdvxf13.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function which returns\
    \ the value of x if n is a prime number and returns the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzp91_78r.jl:13\nin expression starting at /tmp/tmpzp91_78r.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program that prints\
    \ the value of x if n is a prime number and prints the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjbpr9ot7.jl:13\nin expression starting at /tmp/tmpjbpr9ot7.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\n\
    \        return x\n    else\n        return y\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbax4l6op.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbax4l6op.jl:1\n\
    in expression starting at /tmp/tmpbax4l6op.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x \n    else \n        return y \nend \n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the factorial of a given number. \nThe function should accept a single argument\
    \ and should return the factorial of the given number. \nThe function should raise\
    \ a TypeError if the given number is not a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9nq1jsbf.jl:17\nin expression starting at\
    \ /tmp/tmp9nq1jsbf.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as the product of all the integers \nless than or equal to $n$. \nFor example,\
    \ the factorial of $n$ is $n!$ if $n$ is odd and $n(n+1)$ if $n$ is even. \nWrite\
    \ a recursive function factorial(n) that returns the factorial of $n$.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppyuzh7ss.jl:13\nin expression starting at /tmp/tmppyuzh7ss.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of prime numbers\
    \ less than a given number. \nThe function should take one parameter, n, which\
    \ represents the number to be tested.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpplng3bpk.jl:13\nin expression starting at /tmp/tmpplng3bpk.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n\
    \ / 2, x, y)\n    else \n        then return x_or_y(n / 2, y, x)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of numbers and returns the sum of the\
    \ squares of the numbers.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps6nkn4kb.jl:13\nin expression starting at /tmp/tmps6nkn4kb.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 2 || n == 3 || n == 5\n        return y\n    else\n        return x\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgusm2i8n.jl:17\nin expression starting at\
    \ /tmp/tmpgusm2i8n.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that returns the product of two numbers.\
    \ \nThe function should take two numbers as arguments and return the product of\
    \ the two numbers.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp73s2xsps.jl:13\nin expression starting at /tmp/tmp73s2xsps.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn5h8fe8l.jl:13\nin expression starting at /tmp/tmpn5h8fe8l.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a program which prints the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as the product of all the integers \nless than or\
    \ equal to $n$. \nFor example, the factorial of $n$ is defined as $n!$, where\
    \ $n$ is \nthe number whose factorial is to be printed. \nThe factorial of $n$\
    \ can be computed by using the following recursive \nformula:\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqrbx1g54.jl:13\nin expression starting at /tmp/tmpqrbx1g54.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp05xalkas.jl:13\nin expression starting at /tmp/tmp05xalkas.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\n\
    \        return x\n    else\n        return y\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that takes in three numbers and returns their sum.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr7szux7v.jl:17\nin expression starting at\
    \ /tmp/tmpr7szux7v.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a given number.\
    \ \nThe factorial of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjyb5ie8q.jl:13\nin expression starting at /tmp/tmpjyb5ie8q.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program that prints the\
    \ square of x if x is odd and prints the square of y if x is even.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp28g5cgfh.jl:13\nin expression starting at /tmp/tmp28g5cgfh.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1\n        return x\n    else\n        return y\nend\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppfoqb6tf.jl:17\nin expression starting at\
    \ /tmp/tmppfoqb6tf.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n%x ==\
    \ 0 && n%y == 0 \n        then return n\n        else return y\n    end\nend\n\
    </cell>\n<text>\nExercise 10\nWrite a program which takes three numbers as input\
    \ and returns the sum of the squares of the first two numbers and the sum of the\
    \ squares of the last two numbers. \nThe sum of the squares of the first two numbers\
    \ is $x^2 + y^2$ and the sum of the squares of the last two numbers is $x^2 +\
    \ y^2 + z^2$. \nThe sum of the squares of the first two numbers is $x^2 + y^2$\
    \ and the sum of the squares of the last two numbers is $x^2 + y^2 + z^2$. \n\
    The sum of the squares of the first two numbers is $x^2 + y^2$ and the sum of\
    \ the squares of the last two numbers is $x^2 + y^2 + z^2$. \nThe sum of the squares\
    \ of the first two numbers is $x^2 + y^2$ and the sum of the squares of the last\
    \ two numbers is $x^2 + y^2 + z^2$. \nThe sum of the squares of the first two\
    \ numbers is $x^2 + y^2$ and the sum of the squares of the last two numbers is\
    \ $x^2 + y^2 + z^2$. \nThe sum of the squares of the first two numbers is $x^2\
    \ + y^2$ and the sum of the squares of the last two numbers is $x^2 + y^2 + z^2$.\
    \ \nThe sum of the squares of the first two numbers is $x^2 + y^2$ and the sum\
    \ of the squares of the last two numbers is $x^2 + y^2 + z^2$. \nThe sum of the\
    \ squares of the first two numbers is $x^2 + y^2$ and the sum of the squares of\
    \ the last two numbers is $x^2 + y^2 + z^2$. \nThe sum of the squares of the first\
    \ two numbers is $x^2 + y^2$ and the sum of the squares of the last two numbers\
    \ is $x^2 + y^2 + z^2$. \nThe sum of the squares of the first two numbers is $x^2\
    \ + y^2$ and the sum of the squares of the last two numbers is $x^2 + y^2 + z^2$.\
    \ \nThe sum of the squares of the first two numbers is $x^2 + y^2$ and the sum\
    \ of the squares of the last two numbers is $x^2 + y^2 + z^2$. \nThe sum of the\
    \ squares of the first two numbers is $x^2 + y^2$ and the sum of the squares of\
    \ the last two numbers is $x^2 + y^2 + z^2$. \nThe sum of the squares of the first\
    \ two number\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxh06xm_l.jl:13\nin expression starting at /tmp/tmpxh06xm_l.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0\n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@code_warntype x_or_y(7, 34, 12)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function which returns the value of x if n is a prime number\
    \ and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1wuaw1hj.jl:13\nin expression starting at /tmp/tmp1wuaw1hj.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a number as input and returns the factorial of that number.\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4wltcneo.jl:13\nin expression starting at /tmp/tmp4wltcneo.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    \n    if n %\
    \ 2 == 0 \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the factorial of a number. \nThe factorial of a number $n$ is defined as:\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzovz9b1e.jl:13\nin expression starting at /tmp/tmpzovz9b1e.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\n\
    \        return x\n    else\n        return y\nend\n</cell>\n<code language=julia-1.3>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise\nWrite a function which returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmparbvhbfc.jl:17\nin expression starting at\
    \ /tmp/tmparbvhbfc.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of times a given value appears in a given array.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpddoh0nmf.jl:13\nin expression starting at /tmp/tmpddoh0nmf.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0\n        x \n    else\n        y\n    end\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the factorial of a number. \nThe factorial\
    \ of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp_bh1g91.jl:18\nin expression starting at\
    \ /tmp/tmpp_bh1g91.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes in two numbers and returns the\
    \ sum of the squares of the first two numbers. \nThe function should only take\
    \ in two numbers and return an Int64.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmph76fc7ve.jl:13\nin expression starting at /tmp/tmph76fc7ve.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    \n    if n %\
    \ 2 == 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n\
    \ / 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function which\
    \ returns the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppvcm2631.jl:13\nin expression starting at /tmp/tmppvcm2631.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y \n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n /\
    \ 2, y, x)\n    end\nend\n</cell>\n<code language=julia-1.0>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.0>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a program which returns the number of prime numbers less than a given\
    \ number. \nThe function should take one argument, n, which represents the number\
    \ to be tested.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmprn55jspt.jl:13\nin expression starting at /tmp/tmprn55jspt.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a program which takes a number n and returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpf7pl1tta.jl:13\nin expression starting at /tmp/tmpf7pl1tta.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which should\
    \ return the value of x if n is a prime number and should return the value of\
    \ y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplle335r6.jl:13\nin expression starting at /tmp/tmplle335r6.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 10\nWrite a function that returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5wyq4l0e.jl:13\nin expression starting at /tmp/tmp5wyq4l0e.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n%2 ==\
    \ 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a program which should return the value of x if n is a prime\
    \ number and should return the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkrqpj2qt.jl:13\nin expression starting at /tmp/tmpkrqpj2qt.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function which returns the number of times the number n appears in\
    \ the array arr. \nThe function should return the number of times the number n\
    \ appears in the array arr. \nThe function should work for arrays of any length.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr0r0k4_8.jl:13\nin expression starting at /tmp/tmpr0r0k4_8.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkk4eftrg.jl:13\nin expression starting at /tmp/tmpkk4eftrg.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ value of x if n is a prime number and returns the value of y otherwise.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3b2z2v2x.jl:13\nin expression starting at /tmp/tmp3b2z2v2x.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 4\nWrite a function which returns\
    \ the number of times a given number appears in a given array.\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpodl5cv3l.jl:13\nin expression starting at /tmp/tmpodl5cv3l.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function which takes\
    \ in three numbers and returns the sum of the squares of the first two numbers\
    \ and the sum of the squares of the last two numbers. \nThe function should return\
    \ nothing if any of the numbers is less than or equal to zero.\nusing Test\n\n\
    @testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t\
    @test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo5trubz_.jl:13\nin expression starting at /tmp/tmpo5trubz_.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1\n        return y\n    else\n        return x_or_y(n-1, x-y, y)\nend\n</cell>\n\
    <code language=julia-1.5>\nx_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(15, 8, 5)\n</cell>\n<text>\nExercise 2\nWrite a function which returns\
    \ the factorial of a given number. \nThe factorial of a number $n$ is defined\
    \ as:\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp809y3uag.jl:17\nin expression starting at\
    \ /tmp/tmp809y3uag.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2_t81_u0.jl:13\nin expression starting at /tmp/tmp2_t81_u0.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvae7_utj.jl:13\nin expression starting at /tmp/tmpvae7_utj.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\
    \ == true\n        return x\n    else\n        return y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes in three numbers and returns the\
    \ product of the numbers. \nThe function should return an error if the numbers\
    \ are less than or equal to 0.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzfcjs1ay.jl:18\nin expression starting at\
    \ /tmp/tmpzfcjs1ay.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n==1\
    \ \n        then return x\n        else return y\n    end\n    if n==2 \n    \
    \    then return x\n        else return y\n    end\n    if n%3==0 \n        then\
    \ return x_or_y(n/3, x, y)\n        else return x_or_y(n/3, y, x)\n    end\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function which takes in two numbers and returns\
    \ the sum of their squares.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzlzhi4fw.jl:13\nin expression starting at /tmp/tmpzlzhi4fw.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1\n        return x\n    else\n        return y\nend\n</cell>\n<code language=julia-1.0>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.0>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the value of x if n is a prime\
    \ number and returns the value of y otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwl70wfm0.jl:17\nin expression starting at\
    \ /tmp/tmpwl70wfm0.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which takes two numbers as inputs and returns\
    \ their sum. \nThe program should raise an exception if either of the inputs is\
    \ negative.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9d90aoj7.jl:13\nin expression starting at /tmp/tmp9d90aoj7.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0\n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an array of numbers and returns\
    \ the number of even numbers in the array.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsf2ft25b.jl:13\nin expression starting at /tmp/tmpsf2ft25b.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes in three numbers and returns the\
    \ product of those numbers. \nThe function should only take in numbers that are\
    \ positive integers. \nThe function should return an error message if the numbers\
    \ are not all positive integers.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm4wmn55f.jl:13\nin expression starting at /tmp/tmpm4wmn55f.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x\n    else if n % 2 == 0 \n        return x_or_y(n / 2,\
    \ x, y)\n    else \n        return x_or_y(n / 2, y, x)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphgg050ga.jl:14\nin expression starting at\
    \ /tmp/tmphgg050ga.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x \n        else return y \n    end\n    if n % 2 ==\
    \ 0 \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n /\
    \ 2, y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the factorial of a number.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmiugulf1.jl:13\nin expression starting at /tmp/tmpmiugulf1.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x \n    else \n        return y \nend \n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the factorial of a number. \nThe factorial\
    \ of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe0ts_a8y.jl:17\nin expression starting at\
    \ /tmp/tmpe0ts_a8y.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function which returns\
    \ the number of digits in an integer. \nThe function should take an Int64 argument\
    \ and return the number of digits in that \ninteger. \nThe function should work\
    \ for any integer type.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4gttnkj6.jl:13\nin expression starting at /tmp/tmp4gttnkj6.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.3>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.3>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function which returns the value of x if n is a prime number and\
    \ returns the value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_80u2kv0.jl:13\nin expression starting at /tmp/tmp_80u2kv0.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a program which returns\
    \ the value of x if n is a prime number and returns the value of y otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgaz07d1w.jl:13\nin expression starting at /tmp/tmpgaz07d1w.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 2\n        return y\n    else\n        return x_or_y(n-1, x, y+1)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpyh2yteov.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyh2yteov.jl:1\n\
    in expression starting at /tmp/tmpyh2yteov.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the factorial of a given number. \nThe factorial\
    \ of a number $n$ is defined as\n$$\nn! = n  n-1  n-2  ...  1  \n$$\nFor example,\
    \ \n$$\n5! = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1\n$$\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxzudikf8.jl:13\nin expression starting at /tmp/tmpxzudikf8.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a number. \n\
    The factorial of a number is defined as the product of all the integers up to\
    \ and including the number itself.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpevy9tpdb.jl:13\nin expression starting at /tmp/tmpevy9tpdb.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a program which takes an\
    \ integer n and returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbqge2ohs.jl:13\nin expression starting at /tmp/tmpbqge2ohs.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\
    \ == true\n        return x\n    else\n        return y\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a number as input and returns the number\
    \ of digits in the number. For example, if the input is 123, then the output should\
    \ be 3.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwq8q16g0.jl:17\nin expression starting at\
    \ /tmp/tmpwq8q16g0.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return y\n        else return x\n    end\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes in two numbers and returns the\
    \ sum of the numbers. \nThe function should return an error if the numbers are\
    \ not numbers.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgwcj35a0.jl:13\nin expression starting at /tmp/tmpgwcj35a0.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.5>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of prime numbers less than a given\
    \ number. \nThe function should take one argument, x, and should return the number\
    \ of prime numbers less than x.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmph64khrn2.jl:13\nin expression starting at /tmp/tmph64khrn2.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn5h8fe8l.jl:13\nin expression starting at /tmp/tmpn5h8fe8l.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n/2, x, y)\n        else return x_or_y(n/2, y,\
    \ x)\n    end\nend\n</cell>\n<text>\nExercise 7: Write a program that prints the\
    \ square of x if x is odd and prints the square of y if x is even.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpf4joppcs.jl:13\nin expression starting at /tmp/tmpf4joppcs.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return True if n is a prime number\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0uoz2brh.jl:13\nin expression starting at /tmp/tmp0uoz2brh.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.4>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.4>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of times a given number appears\
    \ in a given array.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvtltcl1b.jl:13\nin expression starting at /tmp/tmpvtltcl1b.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn5h8fe8l.jl:13\nin expression starting at /tmp/tmpn5h8fe8l.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1\n        1\n    else\n        if isPrime(n)\n            x\n        else\n\
    \            y\n        end\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that returns the factorial of a number.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy5p14430.jl:22\nin expression starting at\
    \ /tmp/tmpy5p14430.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes\
    \ a number n and returns the value of x if n is a prime number and returns the\
    \ value of y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\
    \t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpae155o6l.jl:13\nin expression starting at /tmp/tmpae155o6l.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a program which should\
    \ return the value of x if n is a prime number and should return the value of\
    \ y otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpq3txpxfe.jl:13\nin expression starting at /tmp/tmpq3txpxfe.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a program which should return True if n is a prime number\
    \ and False otherwise.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t\
    @test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3,\
    \ 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxk5sb5ri.jl:13\nin expression starting at /tmp/tmpxk5sb5ri.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n/2,\
    \ x, y)\n    else \n        return x_or_y(n/2, y, x)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a program which returns the number of prime numbers\
    \ less than a given number. \nThe function should take one argument, x, and should\
    \ return the number of prime numbers less than x.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7je0p00c.jl:13\nin expression starting at /tmp/tmp7je0p00c.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n\
    \ / 2, x, y)\n    else \n        then return x_or_y(n / 2, y, x)\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a program that prints the square of x if x\
    \ is odd and prints the square of y if x is even.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmunx88mv.jl:13\nin expression starting at /tmp/tmpmunx88mv.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 9\nWrite a function that takes an integer $n$ and returns $n$\
    \ if $n$ is a prime number and $n + 1$ if $n$ is not a prime number. Test your\
    \ function by calling it on $n = 5$ and $n = 6$.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7ktlz7ni.jl:13\nin expression starting at /tmp/tmp7ktlz7ni.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if n % 2 == 0 \n        then return x_or_y(n\
    \ / 2, x, y)\n    else \n        return x_or_y(n / 2, y, x)\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the factorial of a number. \nThe factorial\
    \ of a number $n$ is defined as:\nusing Test\n\n@testset begin\n\ncandidate =\
    \ x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5) ==\
    \ 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52) ==\
    \ 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583)\
    \ == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34, 1234)\
    \ == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp61246avr.jl:13\nin expression starting at /tmp/tmp61246avr.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n    else if isPrime(n)\n        then return y\n \
    \   else \n        return x_or_y(n-1, x, y)\nend\n</cell>\n<code language=julia-1.5>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.5>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a program which returns the number of prime numbers\
    \ less than a given number. \nThe function should take one argument, x, and return\
    \ the number of prime numbers less than x.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk61x_5oo.jl:13\nin expression starting at /tmp/tmpk61x_5oo.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes in three numbers and returns the\
    \ sum of the squares of the first two numbers. \nThe function should take in three\
    \ numbers and return a single number.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdh0ddrev.jl:13\nin expression starting at /tmp/tmpdh0ddrev.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 2 || n == 3 || n == 5\n        return x\n    else\n        return y\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0p8yrg3g.jl:17\nin expression starting at\
    \ /tmp/tmp0p8yrg3g.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the factorial of a number.\n\
    using Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34,\
    \ 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212)\
    \ == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12)\
    \ == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56,\
    \ 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpb2bo3hjp.jl:13\nin expression starting at /tmp/tmpb2bo3hjp.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x\n        else return y\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2k1h2dmn.jl:13\nin expression starting at /tmp/tmp2k1h2dmn.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.3>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.3>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function which takes a number n and returns the value of x if n is\
    \ a prime number and returns the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpv1v4_zc4.jl:13\nin expression starting at /tmp/tmpv1v4_zc4.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.0>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.0>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that returns the number of divisors of n that are less than\
    \ or equal to n.\nusing Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7,\
    \ 34, 12) == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33,\
    \ 5212) == 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919,\
    \ -1, 12) == -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91,\
    \ 56, 129) == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1,\
    \ 2, 0) == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsr0ayymd.jl:13\nin expression starting at /tmp/tmpsr0ayymd.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x \n    else \n        return y \nend \n</cell>\n<code language=julia-1.3>\n\
    x_or_y(7, 34, 12)\n</cell>\n<code language=julia-1.3>\nx_or_y(15, 8, 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of prime numbers\
    \ less than a given number. \nThe function should take one parameter, n, which\
    \ represents the number to be tested.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3cyy10gp.jl:17\nin expression starting at\
    \ /tmp/tmp3cyy10gp.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a program that prints the square of the numbers from\
    \ 1 to 100. \nThe program should print each number on a separate line.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12)\
    \ == 34)\n\t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) ==\
    \ 33)\n\t@test(candidate(1259, 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) ==\
    \ -1)\n\t@test(candidate(3609, 1245, 583) == 583)\n\t@test(candidate(91, 56, 129)\
    \ == 129)\n\t@test(candidate(6, 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0)\
    \ == 0)\n\t@test(candidate(2, 2, 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpb05atb4q.jl:13\nin expression starting at /tmp/tmpb05atb4q.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers and returns\
    \ the number of even numbers in the array.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15, 8, 5)\
    \ == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259, 3, 52)\
    \ == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609, 1245,\
    \ 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6, 34,\
    \ 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2, 0)\
    \ == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpx_6fuc9y.jl:13\nin expression starting at /tmp/tmpx_6fuc9y.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0uufx2dq.jl:13\nin expression starting at /tmp/tmp0uufx2dq.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if isPrime(n)\
    \ == true\n        return y\n    else\n        return x\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpb5n7t5qw.jl:11\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpb5n7t5qw.jl:1\n\
    in expression starting at /tmp/tmpb5n7t5qw.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        then return x\n        else return y\n    end\n    if n % 2 == 0\
    \ \n        then return x_or_y(n / 2, x, y)\n        else return x_or_y(n / 2,\
    \ y, x)\n    end\nend\n</cell>\n<code language=julia-1.4>\nx_or_y(7, 34, 12)\n\
    </cell>\n<code language=julia-1.4>\nx_or_y(15, 8, 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of times a given value appears in\
    \ a given array. For example, for the array [1, 1, 1, 2, 2, 3], the function should\
    \ return 3 since there are 3 1's in the array.\nusing Test\n\n@testset begin\n\
    \ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnnu986x8.jl:13\nin expression starting at /tmp/tmpnnu986x8.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a program which should return the value of x if n is\
    \ \n    a prime number and should return the value of y otherwise.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0uufx2dq.jl:13\nin expression starting at /tmp/tmp0uufx2dq.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n % 2\
    \ == 0 \n        then return x \n        else return y\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the factorial of a number.\nusing Test\n\
    \n@testset begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\
    \t@test(candidate(15, 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5o3i2rg6.jl:13\nin expression starting at /tmp/tmp5o3i2rg6.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"A simple program which should return the value of x if n is \n \
    \   a prime number and should return the value of y otherwise.\n\n    Examples:\n\
    \    >>> x_or_y(7, 34, 12)\n    34\n    >>> x_or_y(15, 8, 5)\n    5\n    \n  \
    \  \"\"\"\nfunction x_or_y(n::Int64, x::Int64, y::Int64)::Int64 \n    if n ==\
    \ 1 \n        return x \n    else \n        return y \nend \n</cell>\n<text>\n\
    Exercise 3\nWrite a program which should return the value of x if n is \n    a\
    \ prime number and should return the value of y otherwise.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = x_or_y;\n\t@test(candidate(7, 34, 12) == 34)\n\t@test(candidate(15,\
    \ 8, 5) == 5)\n\t@test(candidate(3, 33, 5212) == 33)\n\t@test(candidate(1259,\
    \ 3, 52) == 3)\n\t@test(candidate(7919, -1, 12) == -1)\n\t@test(candidate(3609,\
    \ 1245, 583) == 583)\n\t@test(candidate(91, 56, 129) == 129)\n\t@test(candidate(6,\
    \ 34, 1234) == 1234)\n\t@test(candidate(1, 2, 0) == 0)\n\t@test(candidate(2, 2,\
    \ 0) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy008q7pr.jl:17\nin expression starting at\
    \ /tmp/tmpy008q7pr.jl:17\n"
  stdout: ''

name: HumanEval_136_largest_smallest_integers
language: jl
prompt: "\"\"\"\n    Create a function that returns a tuple (a, b), where 'a' is\n\
  \    the largest of negative integers, and 'b' is the smallest\n    of positive\
  \ integers in a vector.\n    If there is no negative or positive integers, return\
  \ them as nothing.\n\n    Examples:\n    >>> largest_smallest_integers([2, 4, 1,\
  \ 3, 5, 7])\n    (nothing, 1)\n    >>> largest_smallest_integers([])\n    (nothing,\
  \ nothing)\n    >>> largest_smallest_integers([0])\n    (nothing, nothing)\n   \
  \ \"\"\"\nfunction largest_smallest_integers(lst::Vector{Int64})::Tuple{Union{Int64,\
  \ Nothing}, Union{Int64, Nothing}} \n"
tests: "using Test\n\n@testset begin\n\ncandidate = largest_smallest_integers;\n\t\
  @test(candidate([2, 4, 1, 3, 5, 7]) == (nothing, 1))\n\t@test(candidate([2, 4, 1,\
  \ 3, 5, 7, 0]) == (nothing, 1))\n\t@test(candidate([1, 3, 2, 4, 5, 6, -2]) == (-2,\
  \ 1))\n\t@test(candidate([4, 5, 3, 6, 2, 7, -7]) == (-7, 2))\n\t@test(candidate([7,\
  \ 3, 8, 4, 9, 2, 5, -9]) == (-9, 2))\n\t@test(candidate(Vector{Int64}([])) == (nothing,\
  \ nothing))\n\t@test(candidate([0]) == (nothing, nothing))\n\t@test(candidate([-1,\
  \ -3, -5, -6]) == (-1, nothing))\n\t@test(candidate([-1, -3, -5, -6, 0]) == (-1,\
  \ nothing))\n\t@test(candidate([-6, -4, -4, -3, 1]) == (-3, 1))\n\t@test(candidate([-6,\
  \ -4, -4, -3, -100, 1]) == (-3, 1))\nend\n"
completions: ["    if length(lst) == 0 \n        return (nothing, nothing) \n    else\
    \ \n        largest = minimum(lst)\n        smallest = maximum(lst)\n        return\
    \ (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the number of integers in a vector that are less than a given value.",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = nothing \n        smallest = nothing \n        largest = maximum(lst,\
    \ largest) \n        smallest = minimum(lst, smallest) \n        return largest,\
    \ smallest \nend \n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ vector of integers and returns the sum of the integers in the vector. \nIf the\
    \ vector is empty, return 0.", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    else \n        largest = nothing\n        smallest = nothing\n\
    \        for i in lst \n            if i < 0 \n                largest = i \n\
    \            else \n                smallest = i \n        return largest, smallest\
    \ \nend\n</cell>\n<text>\nExercise: Write a function that returns the largest\
    \ and smallest numbers in a vector. Test it on some vectors.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend \n\
    </cell>\n<text>\nExercise: Write a function that takes a vector of integers and\
    \ returns the sum of the integers in the vector. \nThis function should handle\
    \ empty vectors.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns a vector with all the even numbers in an input vector.",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = nothing\n        smallest = nothing\n        for elt in lst \n   \
    \         if elt > largest \n                largest = elt \n            elseif\
    \ elt < smallest \n                smallest = elt \n            end \n       \
    \ end\n        return largest, smallest \n    end\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of positive integers in a vector.",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst)\n        smallest = maximum(lst)\n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise: Write a function that returns the\
    \ number of positive integers in a vector. Test it on [4, 1, 3, 5, 7].", "   \
    \ if length(lst) == 0 \n        return nothing, nothing \n    else \n        largest\
    \ = nothing\n        smallest = nothing\n        for elt in lst \n           \
    \ if elt > largest \n                largest = elt \n            else \n     \
    \           smallest = elt \n        \n        return (largest, smallest)\n  \
    \  end\nend\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise: Write a function that returns the\
    \ largest and smallest numbers in a vector, ignoring any negative or positive\
    \ numbers.", "    if length(lst) == 0 \n        return nothing, nothing \n   \
    \ else \n        largest = nothing\n        smallest = nothing\n        for elt\
    \ in lst \n            if elt > largest \n                largest = elt \n   \
    \         else \n                smallest = elt \n        return largest, smallest\
    \ \nend\n</cell>\n<text>\nExercise\nWrite a function that returns the number of\
    \ positive integers in a vector.", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the sum of the integers in a vector.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing\n    end\n    largest = nothing\n   \
    \ smallest = nothing\n    for x in lst\n        if x < 0\n            if largest\
    \ == nothing\n                largest = x\n            else\n                largest\
    \ = min(largest, x)\n            end\n        elseif x > 0\n            if smallest\
    \ == nothing\n                smallest = x\n            else\n               \
    \ smallest = max(smallest, x)\n            end\n        end\n    end\n    return\
    \ largest, smallest\nend\n</cell>\n<code language=julia-1.5>", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend\n\
    </cell>\n<code language=julia-1.5>", "    if all(isnothing(lst))\n        return\
    \ (nothing, nothing)\n    elseif all(isnothing(lst[1:end-1]))\n        return\
    \ (nothing, nothing)\n    elseif all(isnothing(lst[2:end]))\n        return (nothing,\
    \ nothing)\n    elseif all(isnothing(lst[3:end-1]))\n        return (nothing,\
    \ nothing)\n    elseif all(isnothing(lst[4:end]))\n        return (nothing, nothing)\n\
    \    elseif all(isnothing(lst[5:end-1]))\n        return (nothing, nothing)\n\
    \    elseif all(isnothing(lst[6:end]))\n        return (nothing, nothing)\n  \
    \  elseif all(isnothing(lst[7:end-1]))\n        return (nothing, nothing)\n  \
    \  elseif all(isnothing(lst[8:end]))\n        return (nothing, nothing)\n    elseif\
    \ all(isnothing(lst[9:end-1]))\n        return (nothing, nothing)\n    elseif\
    \ all(isnothing(lst[10:end]))\n        return (nothing, nothing)\n    elseif all(isnothing(lst[11:end-1]))\n\
    \        return (nothing, nothing)\n    elseif all(isnothing(lst[12:end]))\n \
    \       return (nothing, nothing)\n    elseif all(isnothing(lst[13:end-1]))\n\
    \        return (nothing, nothing)\n    elseif all(isnothing(lst[14:end]))\n \
    \       return (nothing, nothing)\n    elseif all(isnothing(lst[15:end-1]))\n\
    \        return (nothing, nothing)\n    elseif all(isnothing(lst[16:end]))\n \
    \       return (nothing, nothing)\n    elseif all(isnothing(lst[17:end-1]))\n\
    \        return (nothing, nothing)\n    elseif all(isnothing(lst[18:end]))\n \
    \       return (nothing, nothing)\n    elseif all(isnothing(lst[19:end-1]))\n\
    \        return (nothing, nothing)\n    elseif all(isnothing(lst[20:end]))\n \
    \       return (nothing, nothing)\n    elseif all(isnothing(lst[21:end-1]))\n\
    \        return (nothing, nothing)\n    elseif all(isnothing(lst[22:end]))\n \
    \       return (nothing, nothing)\n    elseif all(isnothing(lst[23:end-1]))\n\
    \        return (nothing, nothing)\n    elseif all(isnothing(lst[24:end]))\n \
    \       return (nothing, nothing)\n    elseif all(isnothing(lst[25:end-1]))\n\
    \        return (nothing, nothing)\n    elseif all(isnothing(lst[26:end]))\n \
    \       return (nothing, nothing)\n    elseif all(isnothing(lst[27:end-1]))\n\
    \        return (no", "    if length(lst) == 0 \n        return nothing, nothing\n\
    \    \n    largest = minimum(lst)\n    smallest = maximum(lst)\n    if largest\
    \ < smallest \n        return largest, smallest\n    else\n        return largest,\
    \ nothing\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of times a given value appears in a given vector.", "    if all(isnothing(lst))\n\
    \        return nothing, nothing\n    else\n        largest = minimum(lst)\n \
    \       smallest = maximum(lst)\n        return largest, smallest\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector and returns\
    \ the sum of the absolute values of the elements in the vector.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing\n    \n    largest = minimum(lst)\n \
    \   smallest = maximum(lst)\n    return largest, smallest\nend\n</cell>\n<text>\n\
    Exercise: Write a function that takes a vector of integers and returns the sum\
    \ of the integers in the vector. Test it on some test vectors.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    \n    largest = nothing \n    smallest\
    \ = nothing \n    \n    for x in lst \n        if x < 0 \n            if largest\
    \ == nothing \n                largest = x \n            else \n             \
    \   largest = min(largest, x)\n        else \n            if smallest == nothing\
    \ \n                smallest = x \n            else \n                smallest\
    \ = max(smallest, x)\n    end\n    \n    return largest, smallest \nend\n</cell>\n\
    <text>\nExercise: Write a function that returns the largest and smallest numbers\
    \ in a vector, ignoring any zeroes. Test it on some test cases. How does it compare\
    \ to your previous solution?", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \n    end\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of positive integers in a vector.",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst)\n        smallest = maximum(lst)\n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ and returns the sum of the absolute values of the elements of the vector.",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst)\n        smallest = maximum(lst)\n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ and returns the sum of the absolute values of the elements in the vector.",
  "    if length(lst) == 0 \n        return (nothing, nothing) \n    else \n     \
    \   largest = minimum(lst)\n        smallest = maximum(lst)\n        return (largest,\
    \ smallest)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the number of positive integers in a vector.", "    if length(lst) ==\
    \ 0 \n        return nothing, nothing \n    \n    largest = minimum(lst)\n   \
    \ smallest = maximum(lst)\n    return largest, smallest\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of positive integers in a\
    \ vector.", "    if length(lst) == 0 \n        return nothing, nothing \n    else\
    \ \n        largest = nothing \n        smallest = nothing \n        for elt in\
    \ lst \n            if elt > largest \n                largest = elt \n      \
    \      else \n                smallest = elt \n        return largest, smallest\
    \ \n    end\nend\n</cell>\n<code language=julia-1.5>", "    if length(lst) ==\
    \ 0 \n        return nothing, nothing \n    \n    largest = minimum(lst)\n   \
    \ smallest = maximum(lst)\n    return largest, smallest\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function called largest_smallest_integers_v2 that returns a tuple (a, b),\
    \ where 'a' is the largest of negative integers, and 'b' is the smallest of positive\
    \ integers in a vector. Return nothing if there are no negative or positive integers.",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = nothing \n        smallest = nothing \n        largest = maximum(lst)\
    \ \n        smallest = minimum(lst) \n        return largest, smallest \nend ",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst) \n        smallest = maximum(lst) \n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes in\
    \ a vector of integers and returns the sum of the integers. If the vector is empty,\
    \ return 0.", "    if lst == []\n        return (nothing, nothing)\n    elseif\
    \ all(lst .< 0)\n        return (nothing,nothing)\n    elseif all(lst .> 0)\n\
    \        return (nothing,nothing)\n    else\n        largest = maximum(lst)\n\
    \        smallest = minimum(lst)\n        return (largest, smallest)\n    end\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that takes a vector and returns\
    \ the sum of the absolute values of the elements in the vector. Test it on some\
    \ vectors.", "    if length(lst) == 0 \n        return nothing, nothing \n   \
    \ else \n        largest = nothing\n        smallest = nothing\n        for i\
    \ in lst \n            if i < 0 \n                largest = i\n            else\
    \ \n                smallest = i\n                break\n        return largest,\
    \ smallest \nend\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise 3\nWrite a function called largest_smallest_integers_v2\
    \ that returns a tuple (a, b), where 'a' is the largest of negative integers,\
    \ and 'b' is the smallest of positive integers in a vector. Return nothing if\
    \ there are no negative or positive integers in the vector.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    \n    largest = minimum(lst)\n\
    \    smallest = maximum(lst)\n    return largest, smallest\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of positive integers\
    \ in a vector.", "    if length(lst) == 0 \n        return (nothing, nothing)\
    \ \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector and returns the sum of the elements in the\
    \ vector. \nIf there are no elements in the vector, return 0.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing\n    \n    largest = minimum(lst)\n \
    \   smallest = maximum(lst)\n    if largest < smallest \n        return largest,\
    \ smallest\n    else \n        return largest, nothing\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that takes a vector of integers and returns a vector\
    \ of booleans indicating whether each integer is odd.", "    if length(lst) ==\
    \ 0 \n        return (nothing, nothing) \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return (largest, smallest)\n   \
    \ end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes in a list\
    \ of numbers and returns the sum of the numbers in the list. \nIf the list is\
    \ empty, return 0.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return largest, smallest \nend\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the number of positive integers in a vector.", "    if\
    \ length(lst) == 0 \n        return nothing, nothing \n    else \n        largest\
    \ = minimum(lst)\n        smallest = maximum(lst)\n        return largest, smallest\
    \ \nend\n</cell>\n<text>\nExercise: Write a function that takes a vector and returns\
    \ the sum of the absolute values of the elements in the vector. Test it on some\
    \ examples. Write a function that takes a vector and returns the sum of the squares\
    \ of the elements in the vector. Test it on some examples. Write a function that\
    \ takes a vector and returns the sum of the squares of the elements in the vector,\
    \ squared, and the sum of the squares of the squares of the elements in the vector,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, squared,\
    \ squared, squared, squared, squared, squared, squared, squared, squared, square",
  "    if length(lst) == 0 \n        return nothing, nothing\n    \n    largest =\
    \ minimum(lst)\n    smallest = maximum(lst)\n    return largest, smallest\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a vector and returns\
    \ the sum of the absolute values of the elements of the vector.", "    if length(lst)\
    \ == 0 \n        return (nothing, nothing) \n    end\n    largest = nothing\n\
    \    smallest = nothing\n    for i in lst\n        if i < 0\n            if largest\
    \ == nothing\n                largest = i\n            else\n                largest\
    \ = nothing\n            end\n        elseif i > 0 \n            if smallest ==\
    \ nothing\n                smallest = i\n            else\n                smallest\
    \ = nothing\n            end\n        end\n    end\n    return (largest, smallest)\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector as input\
    \ and returns a vector where each element is the sum of the squares of the positive\
    \ integers in the vector.", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the number of positive integers in a vector.", "    if\
    \ length(lst) == 0 \n        return nothing, nothing \n    else \n        largest\
    \ = nothing\n        smallest = nothing\n        largest = maximum(lst)\n    \
    \    smallest = minimum(lst)\n        return largest, smallest \n    end\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that returns the number of elements\
    \ in a vector that are greater than a given value.", "    if length(lst) == 0\
    \ \n        return nothing, nothing\n    \n    largest = nothing\n    smallest\
    \ = nothing\n    \n    for i in lst\n        if i < 0\n            if largest\
    \ == nothing\n                largest = i\n            else\n                largest\
    \ = nothing\n        end\n        if i > 0 \n            if smallest == nothing\n\
    \                smallest = i\n            else\n                smallest = nothing\n\
    \        end\n    end\n    return largest, smallest\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise\nWrite\
    \ a function called largest_smallest_integers_2 that returns a tuple (a, b), where\
    \ 'a' is the largest of negative integers, and 'b' is the smallest of positive\
    \ integers in a vector. Return nothing if there are no negative or positive integers\
    \ in the vector.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = nothing \n        smallest = nothing \n     \
    \   for elt in lst \n            if elt > largest \n                largest =\
    \ elt \n            else if elt < smallest \n                smallest = elt \n\
    \            end \n        end \n        return largest, smallest \n    end \n\
    end \n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2, 4, 1,\
    \ 3, 5, 7])\n</cell>\n<text>\nExercise: Write a function that returns the largest\
    \ and smallest numbers in a vector, ignoring any zeros in the vector.", "    if\
    \ length(lst) == 0 \n        return nothing, nothing \n    else \n        largest\
    \ = minimum(lst) \n        smallest = maximum(lst) \n        return largest, smallest\
    \ \nend\n</cell>\n<code language=julia-1.5>", "    if length(lst) == 0 \n    \
    \    return nothing, nothing\n    largest = minimum(lst)\n    smallest = maximum(lst)\n\
    \    return largest, smallest\nend\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([])\n\
    </cell>\n<code language=julia-1.5>\nlargest_smallest_integers([0])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of integers in a\
    \ vector that are less than a given value.", "    if lst.is_empty\n        return\
    \ nothing, nothing\n    largest = minimum(lst)\n    smallest = maximum(lst)\n\
    \    return largest, smallest\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector and returns the sum of the absolute values of the elements\
    \ of the vector.", "    if length(lst) == 0 \n        return (nothing, nothing)\n\
    \    elseif length(lst) == 1 \n        return (lst[1], nothing)\n    elseif all(x\
    \ < 0 for x in lst) \n        return (nothing,lst[1])\n    elseif all(x > 0 for\
    \ x in lst) \n        return (lst[1],nothing)\n    else\n        largest = maximum(lst)\n\
    \        smallest = minimum(lst)\n        return (largest, smallest)\n    end\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector and returns\
    \ the sum of the absolute values of the elements of the vector. \nThe function\
    \ should work for both real and complex numbers.", "    if length(lst) == 0 \n\
    \        return nothing, nothing \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a vector of integers and returns\
    \ the sum of the integers in the vector. \nIf there are no integers in the vector,\
    \ return 0.", "    if length(lst) == 0 \n        return nothing, nothing \n  \
    \  else \n        largest = minimum(lst) \n        smallest = maximum(lst) \n\
    \        return largest, smallest \nend\n</cell>\n<text>\nExercise 3: Write a\
    \ function that takes a vector and returns the sum of the absolute values of the\
    \ elements in the vector. \nFor example, if the vector is [5, -4, 3, -2, 1], your\
    \ function should return 7.", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the number of positive integers in a vector.", "    if\
    \ length(lst) == 0 \n        return nothing, nothing \n    else \n        largest\
    \ = minimum(lst)\n        smallest = maximum(lst)\n        return largest, smallest\
    \ \nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum of\
    \ the integers in a vector.", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend\n</cell>\n<code language=julia-1.5>",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst) \n        smallest = maximum(lst) \n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector\
    \ and returns the sum of the absolute values of the elements in the vector.",
  "    if length(lst) == 0 \n        return nothing, nothing \n    \n    largest =\
    \ nothing\n    smallest = nothing\n    \n    for x in lst\n        if x < 0 \n\
    \            if largest == nothing \n                largest = x \n          \
    \  else \n                largest = min(largest, x)\n        else \n         \
    \   if smallest == nothing \n                smallest = x \n            else \n\
    \                smallest = max(smallest, x)\n    end\n    \n    return largest,\
    \ smallest\nend\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([])\n\
    </cell>\n<code language=julia-1.5>\nlargest_smallest_integers([0])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the largest integer in a vector,\
    \ ignoring negative integers.", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend \n</cell>\n<code language=julia-1.5>\n\
    largest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the number of positive integers in a vector.", "   \
    \ if length(lst) == 0 \n        return nothing, nothing \n    else \n        largest\
    \ = minimum(lst)\n        smallest = maximum(lst)\n        return largest, smallest\
    \ \nend\n</cell>\n<text>\nExercise 2\nWrite a function that returns the number\
    \ of times a given value appears in a given vector.", "    if length(lst) == 0\
    \ \n        return nothing, nothing \n    else \n        largest = nothing\n \
    \       smallest = nothing\n        largest = maximum(lst, largest)\n        smallest\
    \ = minimum(lst, smallest)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a vector and returns the sum of\
    \ the absolute values of the elements in the vector.", "    if length(lst) ==\
    \ 0 \n        return (nothing, nothing) \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return (largest, smallest)\n    end\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector and returns\
    \ the sum of the absolute values of the elements of the vector. \nFor example,\
    \ \n$$\n\\begin{align}\n\\text{sum}(\\vec{x}) = \n\\begin{cases}\n\\sum{x} |x|\
    \ \\\n\\text{otherwise}\n\\end{cases}\n\\end{align}\n$$\nWrite a function that\
    \ takes a vector and returns the sum of the squares of the elements of the vector.\
    \ \nFor example, \n$$\n\\begin{align}\n\\text{sum}(\\vec{x}) = \n\\begin{cases}\n\
    \\sum{x}^2 \\\n\\text{otherwise}\n\\end{cases}\n\\end{align}\n$$\nWrite a function\
    \ that takes a vector and returns the sum of the squares of the elements of the\
    \ vector. \nFor example, \n$$\n\\begin{align}\n\\text{sum}(\\vec{x}) = \n\\begin{cases}\n\
    \\sum{x}^2 \\\n\\text{otherwise}\n\\end{cases}\n\\end{align}\n$$\nWrite a function\
    \ that takes a vector and returns the sum of the squares of the elements of the\
    \ vector. \nFor example, \n$$\n\\begin{align}\n\\text{sum}(\\vec{x}) = \n\\begin{cases}\n\
    \\sum{x}^2 \\\n\\text{otherwise}\n\\end{cases}\n\\end{align}\n$$\nWrite a function\
    \ that takes a vector and returns the sum of the squares of the elements of the\
    \ vector. \nFor example, \n$$\n\\begin{align}\n\\text{sum}(\\vec{x}) = \n\\begin{cases}\n\
    \\sum{x}^2 \\\n\\text{otherwise}\n\\end{cases}\n\\end{align}\n$$\nWrite a function\
    \ that takes a vector and returns the sum of the squares of the elements of the\
    \ vector. \nFor example, \n$$\n\\begin{align}\n\\text{sum}(\\vec{x}) = \n\\begin{cases}\n\
    \\sum{x}^2 \\\n\\text{otherwise}\n\\end{cases}\n\\end{align}\n$$", "    if length(lst)\
    \ == 0 \n        return (nothing, nothing)\n    \n    largest = minimum(lst)\n\
    \    smallest = maximum(lst)\n    return (largest, smallest)\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of elements in a vector that\
    \ are not equal to zero.", "    if all(isnothing(lst)) \n        return nothing,\
    \ nothing \n    \n    largest = nothing\n    smallest = nothing\n    \n    for\
    \ elt in lst \n        if elt > largest \n            largest = elt \n       \
    \ else if elt < smallest \n            smallest = elt \n        else \n      \
    \      return largest, smallest \n    return largest, smallest \nend\n</cell>\n\
    <text>\nlargest_smallest_integers", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    \n    largest = minimum(lst)\n    smallest = maximum(lst)\n\
    \    \n    if largest < smallest \n        return largest, smallest \n    else\
    \ \n        return largest, nothing \nend\n</cell>\n<code language=julia-1.5>\n\
    largest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of positive integers in a vector.", "   \
    \ if length(lst) == 0 \n        return nothing, nothing \n    \n    largest =\
    \ nothing\n    smallest = nothing\n    \n    for x in lst\n        if x < 0 \n\
    \            if largest == nothing \n                largest = x\n           \
    \ elseif largest < x \n                largest = x\n            else \n      \
    \          smallest = x \n        else \n            if smallest == nothing \n\
    \                smallest = x \n            elseif smallest > x \n           \
    \     smallest = x \n            else\n                largest = x \n    \n  \
    \  return largest, smallest\nend\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise 3\nWrite a function called largest_smallest_integers_v2\
    \ that returns a tuple (a, b), where 'a' is the largest of negative integers,\
    \ and 'b' is the smallest of positive integers in a vector.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes a vector of integers and returns\
    \ the sum of the integers in the vector. \nIf there are no integers in the vector,\
    \ return 0.", "    if length(lst) == 0 \n        return nothing, nothing \n  \
    \  \n    largest = nothing\n    smallest = nothing\n    \n    for x in lst \n\
    \        if x < 0 \n            if largest == nothing \n                largest\
    \ = x \n            else \n                largest = min(largest, x)\n       \
    \ else \n            if smallest == nothing \n                smallest = x \n\
    \            else \n                smallest = max(smallest, x)\n    end\n   \
    \ \n    return largest, smallest\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the number of positive integers in a vector.", "    if length(lst)\
    \ == 0 \n        return (nothing, nothing) \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return (largest, smallest)\n    end\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of integers\
    \ and returns the sum of the integers in the vector. \nIf the vector is empty,\
    \ return 0.", "    if length(lst) == 0 \n        return nothing, nothing \n  \
    \  else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n  \
    \      return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise 2:\
    \ Write a function that returns the number of times a given value appears in a\
    \ given vector.", "    if length(lst) == 0 \n        return nothing, nothing \n\
    \    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the number of positive integers in a vector.", "    if\
    \ length(lst) == 0 \n        return nothing, nothing\n    \n    largest = minimum(lst)\n\
    \    smallest = maximum(lst)\n    if largest < smallest \n        return largest,\
    \ smallest\n    else \n        return nothing, nothing\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of elements in a vector that\
    \ are less than a given value.  For example, if the vector is [4, 6, 3, 8, 2],\
    \ and you call your function with the value 2, your function should return 3.",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = nothing \n        smallest = nothing \n        largest = maximum(lst)\
    \ \n        smallest = minimum(lst) \n        return largest, smallest \n    end\n\
    end\n</cell>\n<text>\nExercise\nWrite a function that takes a vector and returns\
    \ the sum of the absolute values of the elements of the vector.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    \n    largest = nothing\n    smallest\
    \ = nothing\n    \n    for i in lst\n        if i < 0\n            if largest\
    \ == nothing\n                largest = i\n            else\n                largest\
    \ = nothing\n        end\n        if i > 0 \n            if smallest == nothing\n\
    \                smallest = i\n            else\n                smallest = nothing\n\
    \        end\n    end\n    \n    return largest, smallest\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of positive integers\
    \ in a vector.", "    if length(lst) == 0 \n        return nothing, nothing \n\
    \    else \n        largest = minimum(lst) \n        smallest = maximum(lst) \n\
    \        return largest, smallest \nend \n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a vector of integers and returns the sum of the integers\
    \ in the vector. \nIf there are no integers in the vector, return 0.", "    if\
    \ length(lst) == 0 \n        return nothing, nothing \n    else \n        largest\
    \ = minimum(lst)\n        smallest = maximum(lst)\n        return largest, smallest\
    \ \nend\n</cell>\n<text>\nExercise: Write a function that takes a vector and returns\
    \ the sum of the absolute values of the elements in the vector. Test it on some\
    \ examples. How would you test it?", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    else \n        largest = nothing \n        smallest =\
    \ nothing \n        largest = maximum(lst) \n        smallest = minimum(lst) \n\
    \        return largest, smallest \nend ", "    if length(lst) == 0 \n       \
    \ return (nothing, nothing)\n    elseif length(lst) == 1 \n        return (lst[1],\
    \ nothing)\n    elseif lst[1] < 0 \n        return (lst[1], lst[1])\n    elseif\
    \ lst[1] > 0 \n        return (nothing, lst[1])\n    elseif lst[1] == 0 \n   \
    \     return (nothing, nothing)\n    end\n    \n    largest = nothing\n    smallest\
    \ = nothing\n    for x in lst\n        if x < 0 \n            if largest == nothing\
    \ \n                largest = x\n            elseif x > largest \n           \
    \     largest = x\n            end\n        elseif x > 0 \n            if smallest\
    \ == nothing \n                smallest = x\n            elseif x < smallest \n\
    \                smallest = x\n            end\n        end\n    end\n    return\
    \ (largest, smallest)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the sum of the integers in a vector, where 'integers' are defined as\
    \ integers greater than or equal to 0.", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    else \n        largest = minimum(lst) \n        smallest\
    \ = maximum(lst) \n        return largest, smallest \n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a vector of integers and returns\
    \ the sum of the integers in the vector.", "    if length(lst) == 0 \n       \
    \ return (nothing, nothing) \n    else \n        largest = minimum(lst)\n    \
    \    smallest = maximum(lst)\n        return (largest, smallest)\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector and returns\
    \ the number of unique elements in it.", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    else \n        largest = minimum(lst)\n        smallest\
    \ = maximum(lst)\n        return largest, smallest \nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of positive integers in a vector.",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst) \n        smallest = maximum(lst) \n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise 4\nWrite a function that returns the\
    \ number of positive integers in a vector.", "    if length(lst) == 0 \n     \
    \   return nothing, nothing \n    else \n        largest = nothing\n        smallest\
    \ = nothing\n        for elt in lst \n            if elt > largest \n        \
    \        largest = elt \n            else \n                smallest = elt \n\
    \        return largest, smallest \nend\n</cell>\n<text>\nExercise: Write a function\
    \ that takes a vector of integers and returns the sum of the absolute values of\
    \ the integers in the vector.", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    \n    largest = minimum(lst)\n    smallest = maximum(lst)\n  \
    \  if largest < smallest \n        return largest, smallest \n    else \n    \
    \    return largest, nothing \nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that returns a tuple (a, b), where 'a' is the largest of positive integers,\
    \ and 'b' is the smallest of negative integers in a vector.", "    if all(isnothing(lst))\n\
    \        return nothing, nothing\n    elseif all(iszero(lst))\n        return\
    \ nothing, nothing\n    elseif all(lst.==0)\n        return nothing, nothing\n\
    \    elseif all(lst.==1)\n        return nothing, nothing\n    elseif all(lst.==-1)\n\
    \        return 1, nothing\n    else\n        largest = maximum(lst.-Int64(1))\n\
    \        smallest = minimum(lst.+Int64(1))\n        return largest, smallest\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>", "    if length(lst) == 0 \n\
    \        return nothing, nothing \n    \n    largest = nothing\n    smallest =\
    \ nothing\n    \n    for elt in lst \n        if elt < 0 \n            largest\
    \ = elt \n        else \n            smallest = elt \n    \n    return largest,\
    \ smallest \nend", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend\n</cell>\n<code language=julia-1.5>\n\
    largest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the number of positive integers in a vector.", "   \
    \ if length(lst) == 0 \n        return nothing, nothing \n    else \n        largest\
    \ = nothing \n        smallest = nothing \n        for elt in lst \n         \
    \   if elt > largest \n                largest = elt \n            else \n   \
    \             smallest = elt \n        return largest, smallest \n    end\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of positive\
    \ integers in a vector.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend\n</cell>\n<code language=julia-1.5>\n\
    largest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function called largest_smallest_integers_2 that takes in a list of integers\
    \ and returns the largest and smallest integers in the list.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend \n\
    </cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2, 4, 1, 3, 5,\
    \ 7])\n</cell>\n<text>\nExercise: Write a function that takes a vector of integers\
    \ and returns the sum of the integers in the vector. \nThe function should return\
    \ nothing if the vector is empty.", "    if lst.empty\n        return (nothing,\
    \ nothing)\n    \n    largest = minimum(lst)\n    smallest = maximum(lst)\n  \
    \  return (largest, smallest)\nend", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    else \n        largest = minimum(lst) \n        smallest\
    \ = maximum(lst) \n        return largest, smallest \nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of integers in a vector that are\n\
    less than a given value.", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend\n</cell>\n<text>\nExercise\nWrite a\
    \ function that takes a vector of integers and returns the sum of the integers\
    \ in the vector.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a vector and returns the sum of the absolute values of\
    \ the elements in the vector. \nIf there are no non-negative numbers in the vector,\
    \ return 0.", "    if length(lst) == 0 \n        return nothing, nothing \n  \
    \  \n    largest = minimum(lst)\n    smallest = maximum(lst)\n    return largest,\
    \ smallest\nend\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([])\n\
    </cell>\n<code language=julia-1.5>\nlargest_smallest_integers([0])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of positive integers\
    \ in a vector.", "    if length(lst) == 0 \n        return nothing, nothing \n\
    \    \n    largest = minimum(lst)\n    smallest = maximum(lst)\n    \n    if largest\
    \ < smallest \n        return largest, smallest \n    else \n        return largest,\
    \ nothing \nend\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of positive integers in a vector.", "    if all(isnothing(lst)) \n\
    \        return nothing, nothing \n    \n    largest = nothing \n    smallest\
    \ = nothing \n    \n    for x in lst \n        if x < 0 \n            largest\
    \ = x \n        else \n            smallest = x \n    \n    return largest, smallest\
    \ \nend\n</cell>\n<text>\nExercise: Write a function that returns the largest\
    \ and smallest numbers in a vector, ignoring any NaNs.", "    if length(lst) ==\
    \ 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a vector and returns the sum of\
    \ the absolute values of the elements in the vector.", "    if length(lst) ==\
    \ 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function called largest_smallest_integers_2\
    \ that returns the largest and smallest integers in a vector, ignoring any zeros.\
    \ If there are no integers, return nothing (no return statement).", "    if length(lst)\
    \ == 0 \n        return (nothing, nothing) \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return (largest, smallest)\n   \
    \ end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ and returns the number of positive integers in it.", "    if length(lst) ==\
    \ 0 \n        return nothing, nothing \n    else \n        largest = nothing\n\
    \        smallest = nothing\n        for i in lst \n            if i < 0 \n  \
    \              largest = i \n            else \n                smallest = i \n\
    \                break\n        return largest, smallest \nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of times a given value appears\
    \ in a given vector.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return largest, smallest \nend\n</cell>\n<code language=julia-1.5>",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = nothing \n        smallest = nothing \n        for elt in lst \n \
    \           if elt > largest \n                largest = elt \n            else\
    \ if elt < smallest \n                smallest = elt \n            end \n    \
    \    end \n        return largest, smallest \n    end \nend \n</cell>\n<code language=julia-1.4>\n\
    largest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the largest and smallest numbers in a vector, ignoring\
    \ any negative or positive numbers.", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    else \n        largest = minimum(lst)\n        smallest\
    \ = maximum(lst)\n        return largest, smallest \nend\n</cell>\n<code language=julia-1.5>\n\
    largest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise: Write\
    \ a function that returns the largest and smallest integers in a vector, ignoring\
    \ negative and positive integers.", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    else \n        largest = nothing \n        smallest =\
    \ nothing \n        largest = maximum(lst) \n        smallest = minimum(lst) \n\
    \        return largest, smallest \nend ", "    if length(lst) == 0 \n       \
    \ return nothing, nothing \n    else \n        largest = minimum(lst) \n     \
    \   smallest = maximum(lst) \n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes a vector of integers and returns\
    \ the sum of the integers in the vector.", "    if length(lst) == 0 \n       \
    \ return (nothing, nothing) \n    else \n        largest = minimum(lst) \n   \
    \     smallest = maximum(lst) \n        return (largest, smallest) \n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2, 4, 1, 3,\
    \ 5, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that returns the number\
    \ of positive integers in a vector.", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    else \n        largest = minimum(lst) \n        smallest\
    \ = maximum(lst) \n        return largest, smallest \nend \n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a list of integers and returns the sum\
    \ of the integers in the list.", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    \n    largest = minimum(lst)\n    smallest = maximum(lst)\n  \
    \  return largest, smallest\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the sum of the numbers in a vector. \nIf there are no numbers,\
    \ return 0.", "    if length(lst) == 0 \n        return nothing, nothing \n  \
    \  else \n        largest = minimum(lst) \n        smallest = maximum(lst) \n\
    \        return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the number of positive integers in a vector.", "    if\
    \ length(lst) == 0 \n        return (nothing, nothing) \n    else \n        largest\
    \ = minimum(lst)\n        smallest = maximum(lst)\n        return (largest, smallest)\n\
    \    end\nend\n</cell>\n<text>\nExercise\nWrite a function that takes a vector\
    \ of integers and returns the sum of the integers in the vector. \nWrite a function\
    \ that takes a vector of integers and returns the product of the integers in the\
    \ vector. \nWrite a function that takes a vector of integers and returns the largest\
    \ and smallest integers in the vector. \nWrite a function that takes a vector\
    \ of integers and returns the largest and smallest integers in the vector. \n\
    Write a function that takes a vector of integers and returns the sum of the integers\
    \ in the vector. \nWrite a function that takes a vector of integers and returns\
    \ the product of the integers in the vector. \nWrite a function that takes a vector\
    \ of integers and returns the largest and smallest integers in the vector. \n\
    Write a function that takes a vector of integers and returns the sum of the integers\
    \ in the vector. \nWrite a function that takes a vector of integers and returns\
    \ the product of the integers in the vector. ", "    if length(lst) == 0 \n  \
    \      return nothing, nothing \n    else \n        largest = minimum(lst) \n\
    \        smallest = maximum(lst) \n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes a vector and returns the sum of\
    \ the absolute values of the elements in the vector.", "    if length(lst) ==\
    \ 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector of integers\
    \ and returns the sum of the integers in the vector.", "    if length(lst) ==\
    \ 0 \n        return (nothing, nothing) \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return (largest, smallest)\n    end\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that returns the largest and\
    \ smallest numbers in a vector. Test it on some examples. Does it work?", "  \
    \  if length(lst) == 0 \n        return nothing, nothing \n    \n    largest =\
    \ minimum(lst)\n    smallest = maximum(lst)\n    return largest, smallest\nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2, 4, 1, 3, 5,\
    \ 7])\n</cell>\n<text>\nExercise 2\nWrite a function that returns the number of\
    \ positive integers in a vector.", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    else \n        largest = nothing \n        smallest = nothing\
    \ \n        for elt in lst \n            if elt > largest \n                largest\
    \ = elt \n            else if elt < smallest \n                smallest = elt\
    \ \n            end \n        end \n        return largest, smallest \n    end\
    \ \nend ", "    if length(lst) == 0 \n        return nothing, nothing \n    \n\
    \    largest = minimum(lst)\n    smallest = maximum(lst)\n    return largest,\
    \ smallest\nend", "    if length(lst) == 0 \n        return nothing, nothing \n\
    \    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a vector of integers and returns the sum of the integers\
    \ in the vector.", "    if all(isnothing(lst))\n        return nothing, nothing\n\
    \    elseif all(iszero(lst))\n        return nothing, nothing\n    elseif all(lst\
    \ .< 0)\n        return nothing, nothing\n    elseif all(lst .> 0)\n        return\
    \ 1, nothing\n    else\n        largest = maximum(lst)\n        smallest = minimum(lst)\n\
    \        return largest, smallest\n    end\nend\n</cell>\n<text>\nExercise: Write\
    \ a function that takes a vector of integers and returns the sum of the integers\
    \ in the vector. Test it on some test cases.", "    if length(lst) == 0 \n   \
    \     return nothing, nothing\n    largest = minimum(lst)\n    smallest = maximum(lst)\n\
    \    return largest, smallest\nend", "    if all(isnothing(lst)) \n        return\
    \ nothing, nothing \n    \n    largest, smallest = nothing\n    \n    for x in\
    \ lst \n        if x < 0 \n            if largest == nothing \n              \
    \  largest = x \n            else \n                largest = min(largest, x)\
    \ \n        else \n            if smallest == nothing \n                smallest\
    \ = x \n            else \n                smallest = max(smallest, x) \n    return\
    \ largest, smallest \nend\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of positive integers in a vector.", "    if length(lst) == 0 \n \
    \       return (nothing, nothing)\n    \n    largest = minimum(lst)\n    smallest\
    \ = maximum(lst)\n    return (largest, smallest)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns a vector of all integers up to a certain limit, inclusive.",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst) \n        smallest = maximum(lst) \n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise: Write a function that returns the\
    \ largest and smallest numbers in a vector, ignoring any zeros in the vector.",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = nothing\n        smallest = nothing\n        for i in lst \n     \
    \       if i < 0 \n                largest = i \n            else \n         \
    \       smallest = i \n                break\n        return largest, smallest\
    \ \nend\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2, 4,\
    \ 1, 3, 5, 7])\n</cell>\n<text>\nExercise: Write a function that returns the largest\
    \ and smallest numbers in a vector, ignoring any zeroes. Test it on some test\
    \ cases. How does it compare to the previous function?", "    if length(lst) ==\
    \ 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend\n\
    </cell>\n<text>\nExercise: Write a function that returns a tuple (a, b), where\
    \ 'a' is the largest of positive integers, and 'b' is the smallest of negative\
    \ integers in a vector.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    \n    largest = minimum(lst)\n    smallest = maximum(lst)\n    \n    if\
    \ largest < smallest \n        return largest, smallest \n    else \n        return\
    \ nothing, nothing \nend\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of positive integers in a vector.", "    if length(lst) == 0 \n \
    \       return nothing, nothing \n    else \n        largest = nothing\n     \
    \   smallest = nothing\n        for elt in lst \n            if elt > largest\
    \ \n                largest = elt \n            else \n                smallest\
    \ = elt \n        end\n        return largest, smallest \n    end\nend\n</cell>\n\
    <text>\nExercise: Write a function that returns the largest and smallest numbers\
    \ in a vector, ignoring any zeros. Test it on some test cases. What happens if\
    \ you pass it an empty vector?", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    else \n        largest = nothing\n        smallest = nothing\n\
    \        for i in lst\n            if i < 0\n                largest = i\n   \
    \         else if i > 0 \n                smallest = i\n            else \n  \
    \              return largest, smallest \n        return largest, smallest \n\
    \    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of integers in a vector that are less than a given number. Test it on\
    \ some test cases.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \n    end\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector and returns the number of elements that\
    \ are less than or equal to each of the elements in the vector. For example, if\
    \ the vector is [4, 6, 2, 7, 3, 5], the function should return [4, 3, 1]. Make\
    \ sure to handle vectors of length 0.", "    if length(lst) == 0 \n        return\
    \ (nothing, nothing) \n    else \n        largest = minimum(lst)\n        smallest\
    \ = maximum(lst)\n        return (largest, smallest)\n    end\nend\n</cell>\n\
    <text>\nExercise\nWrite a function that takes a vector of integers and returns\
    \ the sum of the integers in the vector. Test it on some test vectors.", "   \
    \ if length(lst) == 0 \n        return nothing, nothing \n    else \n        largest\
    \ = nothing\n        smallest = nothing\n        for i in lst \n            if\
    \ i < 0 \n                largest = i \n            else \n                smallest\
    \ = i \n        return largest, smallest \nend\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the number of times a given value appears in a vector.\
    \ For example, if the vector is [1, 1, 2, 3, 4, 4, 5], the function should return\
    \ 3 because there are 3 1's and 2 4's.", "    if length(lst) == 0 \n        return\
    \ (nothing, nothing) \n    else \n        largest = minimum(lst)\n        smallest\
    \ = maximum(lst)\n        return (largest, smallest)\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function called largest_smallest_integers_v2 that\
    \ returns a tuple (a, b), where 'a' is the largest of negative integers, and 'b'\
    \ is the smallest of positive integers in a vector. Return nothing if there are\
    \ no negative or positive integers in the vector.", "    if length(lst) == 0 \n\
    \        return nothing, nothing \n    else \n        largest = nothing\n    \
    \    smallest = nothing\n        for element in lst \n            if element >\
    \ largest \n                largest = element \n            else if element <\
    \ smallest \n                smallest = element \n            end\n        end\n\
    \        return largest, smallest \n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector of integers and returns a vector of booleans\
    \ indicating whether each element is even or odd.", "    if length(lst) == 0 \n\
    \        return nothing, nothing\n    end\n    largest = nothing\n    smallest\
    \ = nothing\n    for x in lst\n        if x < 0 \n            if largest == nothing\
    \ \n                largest = x\n            else\n                largest = nothing\n\
    \            end\n        elseif x > 0 \n            if smallest == nothing \n\
    \                smallest = x\n            else\n                smallest = nothing\n\
    \            end\n        else\n            if largest == nothing \n         \
    \       largest = x\n            elseif smallest == nothing \n               \
    \ smallest = x\n            end\n        end\n    end\n    return largest, smallest\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of integers\
    \ and returns the sum of the integers in the vector. \nIf there are no integers\
    \ in the vector, return 0.", "    if length(lst) == 0 \n        return (nothing,\
    \ nothing)\n    \n    largest = minimum(lst)\n    smallest = maximum(lst)\n  \
    \  if largest < smallest \n        return (largest, smallest)\n    else \n   \
    \     return (nothing, nothing)\n    end\nend\n</cell>\n<text>\nExercise\nWrite\
    \ a function that takes in a vector of integers and returns the sum of the integers\
    \ in the vector.", "    if length(lst) == 0 \n        return (nothing, nothing)\
    \ \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise\n\
    Write a function that returns the largest and smallest numbers in a vector. Test\
    \ it on some examples. Write a function that returns the largest and smallest\
    \ numbers in a vector. Test it on some examples. Write a function that returns\
    \ the largest and smallest numbers in a vector. Test it on some examples.", " \
    \   if length(lst) == 0 \n        return nothing, nothing \n    else \n      \
    \  largest = nothing \n        smallest = nothing \n        for elt in lst \n\
    \            if elt > largest \n                largest = elt \n            else\
    \ \n                smallest = elt \n        return largest, smallest \nend \n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector of integers\
    \ and returns the sum of the absolute values of the integers in the vector.",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst) \n        smallest = maximum(lst) \n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of positive integers in a vector.", "    if length(lst) == 0 \n     \
    \   return nothing, nothing \n    else \n        largest = minimum(lst)\n    \
    \    smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of integers in a\
    \ vector that are less than a given value.", "    if length(lst) == 0 \n     \
    \   return (nothing, nothing) \n    else \n        largest = minimum(lst)\n  \
    \      smallest = maximum(lst)\n        return (largest, smallest)\n    end\n\
    end\n</cell>\n<text>\nExercise 2: Write a function that takes a vector and returns\
    \ the number of positive integers in the vector.", "    if length(lst) == 0 \n\
    \        return nothing, nothing \n    else \n        largest = nothing\n    \
    \    smallest = nothing\n        for i in lst\n            if i < 0 \n       \
    \         largest = i \n            else \n                smallest = i \n   \
    \     return largest, smallest \nend", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    else \n        largest = minimum(lst) \n        smallest\
    \ = maximum(lst) \n        return largest, smallest \nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector and returns the sum of the absolute\
    \ values of the elements in the vector.", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    else \n        largest = minimum(lst)\n        smallest\
    \ = maximum(lst)\n        return largest, smallest \nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector of integers and returns a vector of\
    \ integers where the integers are the sum of the integers in the original vector.\
    \ For example, if the input vector is [4, 6, 2, 7, 1, 3], then the output vector\
    \ should be [5, 7, 7, 5, 3, 7].", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    \n    largest, smallest = nothing\n    \n    for x in lst\n  \
    \      if x < 0 \n            if largest == nothing \n                largest\
    \ = x\n            elseif largest < x \n                largest = x\n        \
    \    end\n        elseif x > 0 \n            if smallest == nothing \n       \
    \         smallest = x \n            elseif smallest > x \n                smallest\
    \ = x \n            end\n        end\n    end\n    \n    return largest, smallest\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2, 4, 1, 3,\
    \ 5, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum of\
    \ the integers in a vector. \nIf there are no integers, return 0.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of positive\
    \ integers in a vector.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the number of positive integers in a vector.", "   \
    \ if length(lst) == 0 \n        return (nothing, nothing) \n    \n    largest\
    \ = nothing\n    smallest = nothing\n    \n    for x in lst\n        if x < 0\n\
    \            if largest == nothing\n                largest = x\n            else\n\
    \                largest = max(largest, x)\n        elseif x > 0\n           \
    \ if smallest == nothing\n                smallest = x\n            else\n   \
    \             smallest = min(smallest, x)\n        end\n    end\n    return (largest,\
    \ smallest)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of integers and returns the sum of the integers in the vector.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of positive\
    \ integers in a vector.", "    if length(lst) == 0 \n        return (nothing,\
    \ nothing) \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise:\
    \ Write a function that takes a vector and returns the sum of the absolute values\
    \ of the elements in the vector. Test it on some vectors.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend\n\
    </cell>\n<code language=julia-1.3>\nlargest_smallest_integers([2, 4, 1, 3, 5,\
    \ 7])\n</cell>\n<code language=julia-1.3>\nlargest_smallest_integers([])\n</cell>\n\
    <code language=julia-1.3>\nlargest_smallest_integers([0])\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the number of positive integers in a vector.",
  "    if length(lst) == 0 \n        return nothing, nothing \n    \n    largest =\
    \ minimum(lst)\n    smallest = maximum(lst)\n    \n    if largest < smallest \n\
    \        return largest, smallest \n    else \n        return largest, nothing\
    \ \nend\n</cell>\n<code language=julia-1.5>", "    if length(lst) == 0 \n    \
    \    return nothing, nothing \n    else \n        largest = minimum(lst) \n  \
    \      smallest = maximum(lst) \n        return largest, smallest \nend ", " \
    \   if length(lst) == 0 \n        return nothing, nothing \n    else \n      \
    \  largest = minimum(lst)\n        smallest = maximum(lst)\n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes a vector\
    \ and returns the sum of the absolute values of the elements in the vector.",
  "    if all(isnothing(lst)) \n        return nothing, nothing \n    \n    largest\
    \ = nothing\n    smallest = nothing\n    \n    for x in lst \n        if x < 0\
    \ \n            largest = x \n        else \n            smallest = x \n    return\
    \ largest, smallest \nend\n</cell>\n<text>\nExercise: Write a function that takes\
    \ a vector of integers and returns the sum of the integers in the vector.", " \
    \   if length(lst) == 0 \n        return nothing, nothing \n    else \n      \
    \  largest = nothing\n        smallest = nothing\n        for elt in lst \n  \
    \          if elt > largest \n                largest = elt \n            else\
    \ \n                smallest = elt \n        largest, smallest\n    end\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function called largest_smallest_integers_v2\
    \ that returns the largest and smallest integers in a vector.", "    if length(lst)\
    \ == 0 \n        return (nothing, nothing) \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return (largest, smallest)\n    end\n\
    end\n</cell>\n<text>\nExercise: Write a function that returns the largest and\
    \ smallest numbers in a vector. Test it on some examples. What happens if you\
    \ give it an empty vector?", "    if length(lst) == 0 \n        return (nothing,\
    \ nothing) \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a list of numbers and returns the sum of the numbers\
    \ in the list.", "    if length(lst) == 0 \n        return nothing, nothing \n\
    \    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return largest, smallest \nend\n</cell>\n<code language=julia-1.5>",
  "    if length(lst) == 0 \n        return nothing, nothing\n    \n    largest =\
    \ minimum(lst)\n    smallest = maximum(lst)\n    return largest, smallest\nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2, 4, 1, 3, 5,\
    \ 7])\n</cell>\n<text>\nExercise: Write a function that returns the largest and\
    \ smallest numbers in a vector, ignoring any zeros. Test it on some test cases.",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = nothing \n        smallest = nothing \n        largest = maximum(lst)\
    \ \n        smallest = minimum(lst) \n        return largest, smallest \nend\n\
    </cell>\n<code language=julia-1.5>", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    else \n        largest = nothing\n        smallest =\
    \ nothing\n        for element in lst \n            if element > largest \n  \
    \              largest = element \n            else \n                smallest\
    \ = element \n        return (largest, smallest) \n    end\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that takes a vector and returns the sum of the absolute\
    \ values of the elements of the vector.", "    if length(lst) == 0 \n        return\
    \ (nothing, nothing) \n    else \n        largest = minimum(lst) \n        smallest\
    \ = maximum(lst) \n        return (largest, smallest)\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function called largest_smallest_integers_v2 that\
    \ returns the largest and smallest integers in a vector. Test it on a list of\
    \ integers containing only positive and negative integers.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing\n    \n    largest = nothing\n    smallest\
    \ = nothing\n    \n    for x in lst\n        if x < 0\n            if largest\
    \ == nothing\n                largest = x\n            else\n                largest\
    \ = nothing\n        end\n        if x > 0\n            if smallest == nothing\n\
    \                smallest = x\n            else\n                smallest = nothing\n\
    \        end\n    end\n    \n    return largest, smallest\nend\n</cell>\n<text>\n\
    Exercise: Write a function that takes a vector and returns the sum of the absolute\
    \ values of the elements of the vector.", "    if length(lst) == 0 \n        return\
    \ (nothing, nothing) \n    else \n        largest = minimum(lst)\n        smallest\
    \ = maximum(lst)\n        return (largest, smallest)\n    end\nend\n</cell>\n\
    <text>\nExercise: Write a function that takes in a vector of integers and returns\
    \ the sum of the integers in the vector. Test it on some vectors.", "    if length(lst)\
    \ == 0 \n        return (nothing, nothing)\n    \n    largest = minimum(lst)\n\
    \    smallest = maximum(lst)\n    return (largest, smallest)\nend", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    \n    largest, smallest = nothing\n\
    \    for x in lst \n        if x < 0 \n            if largest == nothing \n  \
    \              largest = x \n            else \n                largest = min(largest,\
    \ x) \n        else \n            if smallest == nothing \n                smallest\
    \ = x \n            else \n                smallest = max(smallest, x) \n    return\
    \ largest, smallest \nend\n</cell>\n<text>\nExercise: Write a function that returns\
    \ the largest and smallest numbers in a vector, ignoring any negative or positive\
    \ numbers.", "    if length(lst) == 0 \n        return nothing, nothing \n   \
    \ else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n   \
    \     return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector and returns the sum of the absolute values of the elements\
    \ in the vector.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a vector of integers and returns the sum of the integers\
    \ in the vector.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = nothing\n        smallest = nothing\n       \
    \ for i in lst \n            if i < 0 \n                largest = i \n       \
    \     else \n                smallest = i \n        return largest, smallest \n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2, 4, 1, 3,\
    \ 5, 7])\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of\
    \ integers and returns the sum of the absolute values of the numbers in the vector.",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst)\n        smallest = maximum(lst)\n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector\
    \ of integers and returns the sum of the integers. If the vector is empty, return\
    \ 0.", "    if length(lst) == 0 \n        return nothing, nothing \n    else \n\
    \        largest = minimum(lst) \n        smallest = maximum(lst) \n        return\
    \ largest, smallest \nend\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of positive integers in a vector.", "    if all(x < 0 for x in lst)\n\
    \        nothing\n    elseif all(x > 0 for x in lst)\n        nothing\n    else\n\
    \        largest = min(lst)\n        smallest = max(lst)\n        (largest, smallest)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>", "    if length(lst) == 0 \n\
    \        return nothing, nothing \n    else \n        largest = minimum(lst) \n\
    \        smallest = maximum(lst) \n        return largest, smallest \nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n\
    <text>\nExercise 2\nWrite a function called largest_smallest_integers_v2 that\
    \ returns the largest and smallest integers in a vector, except for those that\
    \ are negative or zero.", "    if length(lst) == 0 \n        return nothing, nothing\n\
    \    \n    largest = minimum(lst)\n    smallest = maximum(lst)\n    if largest\
    \ < smallest \n        return largest, smallest\n    else \n        return largest,\
    \ nothing\nend\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of positive integers in a vector.", "    if length(lst) == 0 \n \
    \       return nothing, nothing \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return largest, smallest \n    end\n\
    end\n</cell>\n<text>\nExercise 2: Write a function that takes a vector and returns\
    \ the number of positive integers in it.", "    if length(lst) == 0 \n       \
    \ return nothing, nothing \n    else \n        largest = minimum(lst) \n     \
    \   smallest = maximum(lst) \n        return largest, smallest \n    end\nend\n\
    </cell>\n<code language=julia-1.5>", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    else \n        largest = minimum(lst) \n        smallest\
    \ = maximum(lst) \n        return largest, smallest \nend \n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of integers and returns the sum\
    \ of the squares of the integers. \nIf there are no integers in the vector, return\
    \ 0.", "    if length(lst) == 0 \n        return nothing, nothing \n    else \n\
    \        largest = minimum(lst) \n        smallest = maximum(lst) \n        return\
    \ largest, smallest \nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector and returns the sum of the absolute values of the elements of\
    \ the vector.", "    if length(lst) == 0 \n        return nothing, nothing \n\
    \    \n    largest = minimum(lst)\n    smallest = maximum(lst)\n    \n    if largest\
    \ < smallest \n        return largest, smallest \n    else \n        return nothing,\
    \ nothing \nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of integers and returns a vector of integers where the integers are the sum\
    \ of the integers in the original vector, but with negative integers replaced\
    \ by zero, and positive integers replaced by one.", "    if length(lst) == 0 \n\
    \        return nothing, nothing \n    else \n        largest = nothing\n    \
    \    smallest = nothing\n        for elt in lst \n            if elt < 0 \n  \
    \              largest = elt \n            else \n                smallest = elt\
    \ \n        end\n        return largest, smallest \n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n\
    <text>\nExercise: Write a function that returns the largest and smallest numbers\
    \ in a vector. Test it on some examples. What happens if you pass a vector of\
    \ length 0?", "    if length(lst) == 0 \n        return nothing, nothing \n  \
    \  else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n  \
    \      return largest, smallest \nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the number of positive integers in a vector.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = nothing\
    \ \n        smallest = nothing \n        for elt in lst \n            if elt <\
    \ smallest \n                smallest = elt \n            elseif elt > largest\
    \ \n                largest = elt \n            end \n        end \n        return\
    \ largest, smallest \n    end \nend \n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns a tuple (a, b), where 'a' is the largest of positive integers,\
    \ and 'b' is the smallest of negative integers in a vector.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    \n    largest = minimum(lst)\n\
    \    smallest = maximum(lst)\n    return largest, smallest\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return largest, smallest \nend\n</cell>\n<code language=julia-1.5>",
  "    if length(lst) == 0 \n        return nothing, nothing \n    \n    largest =\
    \ nothing\n    smallest = nothing\n    \n    for i in lst \n        if i < 0 \n\
    \            largest = i \n        else \n            smallest = i \n        \
    \    break\n    \n    return largest, smallest \nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of integers and returns the sum of the\
    \ integers in the vector.", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend \n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a vector of integers and returns a vector of booleans\
    \ indicating whether each integer is odd.", "    if length(lst) == 0 \n      \
    \  return nothing, nothing \n    \n    largest = nothing\n    smallest = nothing\n\
    \    \n    for x in lst \n        if x < 0 \n            largest = x \n      \
    \  else \n            smallest = x \n            break \n    end\n    \n    return\
    \ largest, smallest \nend\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([])\n\
    </cell>\n<code language=julia-1.5>\nlargest_smallest_integers([0])\n</cell>\n\
    <text>\nExercise: Write a function that returns the number of integers in a vector\
    \ that are less than a given number. Test it on some vectors.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    \n    largest = minimum(lst)\n\
    \    smallest = maximum(lst)\n    return largest, smallest\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a vector and returns the sum of the absolute\
    \ values of the elements in the vector.", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    \n    largest = nothing\n    smallest = nothing\n   \
    \ \n    for x in lst\n        if x < 0 \n            largest = x \n        else\
    \ \n            smallest = x \n    \n    return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of positive integers\
    \ in a vector.", "    if length(lst) == 0 \n        return (nothing, nothing)\
    \ \n    else \n        largest = minimum(lst)\n        smallest = maximum(lst)\n\
    \        return (largest, smallest)\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if length(lst) == 0 \n        return nothing, nothing \n    else \n       \
    \ largest = minimum(lst) \n        smallest = maximum(lst) \n        return largest,\
    \ smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ number of positive integers in a vector.", "    if length(lst) == 0 \n     \
    \   return nothing, nothing\n    elseif length(lst) == 1 \n        return lst[1],\
    \ nothing\n    elseif all(x < 0 for x in lst) \n        return nothing, nothing\n\
    \    elseif all(x > 0 for x in lst) \n        return lst[1], nothing\n    else\n\
    \        largest = maximum(lst)\n        smallest = minimum(lst)\n        return\
    \ (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ called largest_smallest_integers_list that takes a list of integers and returns\
    \ a tuple of the largest and smallest integers in the list.", "    if length(lst)\
    \ == 0 \n        return (nothing, nothing) \n    else \n        largest = minimum(lst)\n\
    \        smallest = maximum(lst)\n        return (largest, smallest)\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2, 4, 1, 3,\
    \ 5, 7])\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([])\n\
    </cell>\n<code language=julia-1.5>\nlargest_smallest_integers([0])\n</cell>\n\
    <text>\nExercise: Write a function that takes a vector of integers and returns\
    \ the sum of the largest and smallest integers. \nThe function should return nothing\
    \ if the vector is empty.", "    if length(lst) == 0 \n        return nothing,\
    \ nothing \n    else \n        largest = nothing \n        smallest = nothing\
    \ \n        largest = maximum(lst) \n        smallest = minimum(lst) \n      \
    \  return largest, smallest \nend \n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of positive integers in a vector.", "    if length(lst) == 0 \n \
    \       return nothing, nothing \n    else \n        largest = nothing\n     \
    \   smallest = nothing\n        for i in lst \n            if i < 0 \n       \
    \         largest = i\n            else \n                smallest = i\n     \
    \           break\n        return largest, smallest \nend\n</cell>\n<code language=julia-1.5>\n\
    largest_smallest_integers([2, 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function called largest_smallest_integers_2 that returns a tuple (a, b), where\
    \ 'a' is the largest of negative integers, and 'b' is the smallest of positive\
    \ integers in a vector. \nIf there is no negative or positive integers, return\
    \ them as nothing.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = nothing \n        smallest = nothing \n     \
    \   largest = maximum(lst) \n        smallest = minimum(lst) \n        return\
    \ largest, smallest \nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector and returns the sum of the absolute values of the elements of\
    \ the vector.", "    if length(lst) == 0 \n        return nothing, nothing \n\
    \    \n    largest = minimum(lst)\n    smallest = maximum(lst)\n    return largest,\
    \ smallest\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector\
    \ of integers and returns a vector of integers containing the first n integers\
    \ of the original vector. For example, if the original vector is [1,2,3,4,5,6,7,8,9],\
    \ the function should return [1,2,3,4,5,6].", "    if length(lst) == 0 \n    \
    \    return nothing, nothing \n    \n    largest = minimum(lst)\n    smallest\
    \ = maximum(lst)\n    if largest < smallest \n        return largest, smallest\
    \ \n    else \n        return largest, nothing \nend", "    if length(lst) ==\
    \ 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend\n\
    </cell>\n<text>\nExercise: Write a function that returns the sum of the integers\
    \ in a vector. Test it on some vectors.", "    if length(lst) == 0 \n        return\
    \ nothing, nothing \n    \n    largest, smallest = nothing\n    \n    for x in\
    \ lst \n        if x < 0 \n            largest = x \n        else \n         \
    \   smallest = x \n            break \n    \n    return largest, smallest \nend\n\
    </cell>\n<text>\nlargest_smallest_integers_v2", "    if length(lst) == 0 \n  \
    \      return nothing, nothing \n    else \n        largest = minimum(lst)\n \
    \       smallest = maximum(lst)\n        return largest, smallest \nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a vector of integers and returns\
    \ the sum of the squares of the integers. \nIf there are no integers in the vector,\
    \ return 0.", "    if length(lst) == 0 \n        return (nothing, nothing) \n\
    \    else \n        largest = minimum(lst) \n        smallest = maximum(lst) \n\
    \        return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector of integers and returns the sum of the integers\
    \ in the vector.", "    if length(lst) == 0 \n        return nothing, nothing\
    \ \n    else \n        largest = minimum(lst) \n        smallest = maximum(lst)\
    \ \n        return largest, smallest \nend\n</cell>\n<text>\nExercise: Write a\
    \ function that returns the largest and smallest numbers in a vector, ignoring\
    \ any NaNs.", "    if length(lst) == 0 \n        return (nothing, nothing) \n\
    \    else \n        largest = minimum(lst) \n        smallest = maximum(lst) \n\
    \        return (largest, smallest)\n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function called largest_smallest_integers_2 that takes two vectors as\
    \ arguments and returns the largest and smallest of those vectors.", "    if lst\
    \ == []\n        return nothing, nothing\n    end\n    largest = nothing\n   \
    \ smallest = nothing\n    for x in lst\n        if x < 0\n            if largest\
    \ == nothing\n                largest = x\n            else\n                largest\
    \ = nothing\n            end\n        elseif x > largest\n            if smallest\
    \ == nothing\n                smallest = x\n            else\n               \
    \ smallest = nothing\n            end\n        end\n    end\n    return largest,\
    \ smallest\nend\n</cell>\n<code language=julia-1.5>\nlargest_smallest_integers([2,\
    \ 4, 1, 3, 5, 7])\n</cell>\n<text>\nExercise 3\nWrite a function called largest_smallest_integers_2\
    \ that takes in a list of integers and returns the largest and smallest integers\
    \ in the list. Your function should return (nothing, nothing) if the list is empty.",
  "    if length(lst) == 0 \n        return nothing, nothing\n    \n    largest =\
    \ minimum(lst)\n    smallest = maximum(lst)\n    if largest < smallest \n    \
    \    return largest, smallest\n    else \n        return largest, nothing\n  \
    \  end\nend\n</cell>\n<text>\nExercise 3\nWrite a function called largest_smallest_integers_2\
    \ that takes a list of integers and returns the largest and smallest integers\
    \ in the list. Your function should return a tuple of two numbers, where the first\
    \ number is either the largest or the smallest of the list, and the second number\
    \ is the largest or smallest of the numbers in the list.", "    if length(lst)\
    \ == 0 \n        return nothing, nothing \n    else \n        largest = minimum(lst)\
    \ \n        smallest = maximum(lst) \n        return largest, smallest \nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector and returns\
    \ the sum of the absolute values of the elements in the vector. For example,"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

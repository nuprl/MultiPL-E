name: HumanEval_106_f
language: jl
results:
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n == 1\n     \
    \   return [1]\n    else\n        factorials = [1]\n        for i in 1:n\n   \
    \         factorials[i] = factorials[i-1] * i\n        end\n        return factorials\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\nf(5)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a vector of numbers and returns the sum of the\
    \ squares of the numbers.\nExample: \n>>> f([1,2,3])\n[1,2,3]\n>>> f([1,4,9])\n\
    [9,16,25]\n>>> f([1,4,9,16])\n[9,16,25]\n>>> f([1,4,9,16,25])\n[9,16,25]\n>>>\
    \ f([1,4,9,16,25,36])\n[9,16,25]\n>>> f([1,4,9,16,25,36,49])\n[9,16,25]\n>>> f([1,4,9,16,25,36,49,64])\n\
    [9,16,25]\n>>> f([1,4,9,16,25,36,49,64,81])\n[9,16,25]\n>>> f([1,4,9,16,25,36,49,64,81,100])\n\
    [9,16,25]\n>>> f([1,4,9,16,25,36,49,64,81,100,121])\n[9,16,25]\n>>> f([1,4,9,16,25,36,49,64,81,100,121,144])\n\
    [9,16,25]\n>>> f([1,4,9,16,25,36,49,64,81,100,121,144,169])\n[9,16,25]\n>>> f([1,4,9,16,25,36,49,64,81,100,121,144,169,196])\n\
    [9,16,25]\n>>> f([1,4,9,16,25,36,49,64,81,100,121,144,169,196,225])\n[9,16,25]\n\
    >>> f([1,4,9,16,25,36,49,64,81,100,121,144,169,196,225,256])\n[9,16,25]\n>>> f([1,4,9,16,25,36,49,64,81,100,121,144,169,196,225,256,289])\n\
    [9,16,25]\n>>> f([1,4,9,16,25,36,49,64,81,100,121,144,169,196,225,256,289,324])\n\
    [9,16,25]\n>>> f([1,4,9,16,25,36,49,64,81,100,121,144,169,196,225,256,289,324,361])\n\
    using Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1, 2,\
    \ 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcrnaax5e.jl:21\nin expression starting at\
    \ /tmp/tmpcrnaax5e.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n==0\n       \
    \ Vector{Int64}()\n    else\n        factorials = Vector{Int64}()\n        for\
    \ i=1:n\n            factorials[i] = factorials[i-1]*i\n        end\n        factorials\n\
    \    end\nend\n</cell>\n<text>\nExercise 2\nImplement the function g that takes\
    \ n as a parameter, and returns a vector of size n, such that the value of the\
    \ element at index i is the factorial of i if i is odd and -1 otherwise.\n   \
    \ i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> g(5)\n    [1, -1, -1,\
    \ 1, -1]\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpipvizhyw.jl:21\nin expression starting at\
    \ /tmp/tmpipvizhyw.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n==0\n       \
    \ Vector{Int64}()\n    else\n        factorial(n-1)\n    end\nend\n</cell>\n<text>\n\
    Exercise 9\nImplement the function g that takes n as a parameter, and returns\
    \ a vector of size n, such that the value of the element at index i is the factorial\
    \ of i if i is odd and -1 otherwise.\n    i starts from 1.\n    the factorial\
    \ of i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n \
    \   Example:\n    >>> g(5)\n    [1, -1, 6, -24, 15]\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1, 2, 6, 24, 15])\n\
    \t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1) == [1])\n\
    \t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2aw8_ten.jl:17\nin expression starting at\
    \ /tmp/tmp2aw8_ten.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n == 0\n     \
    \   Vector{Int64}()\n    else\n        factorials = Vector{Int64}()\n        for\
    \ i = 1:n\n            factorials += i\n        end\n        factorials\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nf(5)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a vector v and a number k, and returns the vector v with\
    \ all elements multiplied by k.\nusing Test\n\n@testset begin\n\ncandidate = f;\n\
    \t@test(candidate(5) == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6,\
    \ 24, 15, 720, 28])\n\t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1,\
    \ 2, 6])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdbleaxyk.jl:21\nin expression starting at\
    \ /tmp/tmpdbleaxyk.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n == 0\n     \
    \   return [1]\n    else\n        factorials = f(n-1)\n        factorials[1] =\
    \ 1\n        for i in 2:n\n            factorials[i] = factorials[i-1] * i\n \
    \       end\n        return factorials\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = f;\n\t@test(candidate(5) == [1, 2, 6, 24, 15])\n\t@test(candidate(7)\
    \ == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1) == [1])\n\t@test(candidate(3)\
    \ == [1, 2, 6])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpmmf8fsoc.jl:27\n  Test threw exception\n\
    \  Expression: candidate(5) == [1, 2, 6, 24, 15]\n  BoundsError: attempt to access\
    \ 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] setindex!\n    \
    \ @ ./array.jl:903 [inlined]\n   [2] f(n::Int64)\n     @ Main /tmp/tmpmmf8fsoc.jl:17\n\
    \   [3] f(n::Int64) (repeats 3 times)\n     @ Main /tmp/tmpmmf8fsoc.jl:14\n  \
    \ [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpmmf8fsoc.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpmmf8fsoc.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpmmf8fsoc.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(7) == [1, 2, 6, 24, 15, 720, 28]\n  BoundsError: attempt to access\
    \ 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] setindex!\n    \
    \ @ ./array.jl:903 [inlined]\n   [2] f(n::Int64)\n     @ Main /tmp/tmpmmf8fsoc.jl:17\n\
    \   [3] f(n::Int64) (repeats 5 times)\n     @ Main /tmp/tmpmmf8fsoc.jl:14\n  \
    \ [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpmmf8fsoc.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpmmf8fsoc.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpmmf8fsoc.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(3) == [1, 2, 6]\n  BoundsError: attempt to access 1-element Vector{Int64}\
    \ at index [2]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n\
    \   [2] f(n::Int64)\n     @ Main /tmp/tmpmmf8fsoc.jl:17\n   [3] f(n::Int64)\n\
    \     @ Main /tmp/tmpmmf8fsoc.jl:14\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpmmf8fsoc.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpmmf8fsoc.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n == 0\n     \
    \   return Vector{Int64}()\n    else\n        factorials = Vector{Int64}()\n \
    \       for i in 1:n\n            factorials += i\n        end\n        return\
    \ factorials\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t\
    @test(candidate(5) == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24,\
    \ 15, 720, 28])\n\t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2,\
    \ 6])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmpm6krq_4j.jl:26\n  Test threw exception\n\
    \  Expression: candidate(5) == [1, 2, 6, 24, 15]\n  MethodError: no method matching\
    \ +(::Vector{Int64}, ::Int64)\n  For element-wise addition, use broadcasting with\
    \ dot syntax: array .+ scalar\n  Closest candidates are:\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] f(n::Int64)\n     @ Main /tmp/tmpm6krq_4j.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm6krq_4j.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpm6krq_4j.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpm6krq_4j.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(7) == [1, 2, 6, 24, 15, 720, 28]\n  MethodError: no method matching\
    \ +(::Vector{Int64}, ::Int64)\n  For element-wise addition, use broadcasting with\
    \ dot syntax: array .+ scalar\n  Closest candidates are:\n    +(::Any, ::Any,\
    \ !Matched::Any, !Matched::Any...) at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n\
    \    +(!Matched::T, ::T) where T<:Union{Int128, Int16, Int32, Int64, Int8, UInt128,\
    \ UInt16, UInt32, UInt64, UInt8} at /shared/centos7/julia/1.7.3/share/julia/base/int.jl:87\n\
    \    +(!Matched::T, ::Integer) where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:237\n\
    \    ...\n  Stacktrace:\n   [1] f(n::Int64)\n     @ Main /tmp/tmpm6krq_4j.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpm6krq"
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmpm6krq_4j.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n==0\n       \
    \ Vector{Int64}()\n    else\n        factorials = Vector{Int64}()\n        for\
    \ i=1:n\n            factorials[i] = factorials[i-1]*i\n        end\n        factorials\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp2tjqtfsn.jl:26\n  Test threw exception\n\
    \  Expression: candidate(5) == [1, 2, 6, 24, 15]\n  BoundsError: attempt to access\
    \ 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] f(n::Int64)\n     @ Main /tmp/tmp2tjqtfsn.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2tjqtfsn.jl:26 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2tjqtfsn.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp2tjqtfsn.jl:27\n  Test threw exception\n  Expression:\
    \ candidate(7) == [1, 2, 6, 24, 15, 720, 28]\n  BoundsError: attempt to access\
    \ 0-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] f(n::Int64)\n     @ Main /tmp/tmp2tjqtfsn.jl:16\n\
    \   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2tjqtfsn.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2tjqtfsn.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp2tjqtfsn.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(1) == [1]\n  BoundsError: attempt to access 0-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] f(n::Int64)\n     @ Main /tmp/tmp2tjqtfsn.jl:16\n   [3] macro expansion\n\
    \     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2tjqtfsn.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2tjqtfsn.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp2tjqtfsn.jl:29\n  Test threw exception\n  Expression: "
  stderr: "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp2tjqtfsn.jl:23\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n == 0\n     \
    \   Vector{Int64}()\n    else\n        factorials = Vector{Int64}()\n        for\
    \ i = 1:n\n            factorials[i] = factorials[i-1]*i\n        end\n      \
    \  factorials\n    end\nend\n</cell>\n<code language=julia-1.5>\nf(5)\n</cell>\n\
    <text>\nExercise 2\nImplement the function f that takes n as a parameter,\n  \
    \  and returns a vector of size n, such that the value of the element at index\
    \ i is the factorial of i if i is even\n    or the sum of numbers from 1 to i\
    \ otherwise.\n    i starts from 1.\n    the factorial of i is the multiplication\
    \ of the numbers from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n\
    \    [1, 2, 6, 24, 15]\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate\
    \ = f;\n\t@test(candidate(5) == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1,\
    \ 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1) == [1])\n\t@test(candidate(3)\
    \ == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy5t4ajqo.jl:21\nin expression starting at\
    \ /tmp/tmpy5t4ajqo.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n==0\n       \
    \ [1]\n    else\n        factorials(n-1)\n    end\nend\n</cell>\n<text>\nExercise\
    \ 7\nImplement the function g that takes n as a parameter, and returns a vector\
    \ of size n, such that the value of the element at index i is the factorial of\
    \ i if i is odd and -1 otherwise.\n    i starts from 1.\n    the factorial of\
    \ i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    Example:\n\
    \    >>> g(5)\n    [1, -1, 6, -24, 15]\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = f;\n\t@test(candidate(5) == [1, 2, 6, 24, 15])\n\t@test(candidate(7)\
    \ == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1) == [1])\n\t@test(candidate(3)\
    \ == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc4h10qmj.jl:17\nin expression starting at\
    \ /tmp/tmpc4h10qmj.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n==0\n       \
    \ return [1]\n    else\n        factorials = [1]\n        for i in 1:n\n     \
    \       factorials[i] = factorials[i-1]*i\n        end\n        return factorials\n\
    \    end\nend\n</cell>\n<text>\nExercise 5\nWrite a function that takes a vector\
    \ of size n and returns the sum of the elements in the vector that are greater\
    \ than or equal to 3.\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3nz36yae.jl:21\nin expression starting at\
    \ /tmp/tmp3nz36yae.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n == 1\n     \
    \   return [1]\n    else\n        factorials = [1]\n        for i in 2:n\n   \
    \         factorials = factorials * (i-1)\n        end\n        return factorials\n\
    \    end\nend\n</cell>\n<code language=julia-1.0>\nf(5)\n</cell>\n<text>\nExercise\
    \ 2\nImplement the function g that takes n as a parameter, and returns a vector\
    \ of size n, such that the value of the element at index i is the factorial of\
    \ i if i is odd and -1 otherwise.\n    i starts from 1.\n    the factorial of\
    \ i is the multiplication of the numbers from 1 to i (1 * 2 * ... * i).\n    Example:\n\
    \    >>> g(5)\n    [1, -1, -1, 1, -1]\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = f;\n\t@test(candidate(5) == [1, 2, 6, 24, 15])\n\t@test(candidate(7)\
    \ == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1) == [1])\n\t@test(candidate(3)\
    \ == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpegzqhpt1.jl:21\nin expression starting at\
    \ /tmp/tmpegzqhpt1.jl:21\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n==0\n       \
    \ Vector{Int64}()\n    else\n        factorial=factorial(n-1)\n        factorial=[factorial[i]+1\
    \ for i in 1:n]\n    end\nend\n</cell>\n<text>\nExercise 2\nImplement the function\
    \ g(n::Int64) that returns the factorial of n if n is even, and returns the sum\
    \ of numbers from 1 to n otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = f;\n\t@test(candidate(5) == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1,\
    \ 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1) == [1])\n\t@test(candidate(3)\
    \ == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpik2jmrok.jl:18\nin expression starting at\
    \ /tmp/tmpik2jmrok.jl:18\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n==0\n       \
    \ Vector{Int64}()\n    else\n        factorial=factorial(n-1)\n        factorial=[factorial[i]*i\
    \ for i in range(1,n+1)]\n        factorial\n    end\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes as input a vector of size n and returns a vector\
    \ of size n+1 such that each element of the vector is the sum of the elements\
    \ of the vector except the element at position i.\nExample\n>>> f([1,2,3,4,5])\n\
    [2,3,6,10,15]\nHint: use slicing\nusing Test\n\n@testset begin\n\ncandidate =\
    \ f;\n\t@test(candidate(5) == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1,\
    \ 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1) == [1])\n\t@test(candidate(3)\
    \ == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2m4oh1mk.jl:19\nin expression starting at\
    \ /tmp/tmp2m4oh1mk.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n==0\n       \
    \ Vector{Int64}()\n    else\n        Vector{Int64}((n-1)..1)\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an integer $n$ and returns the\
    \ factorial of $n$, i.e. $n!$. \nExample: \n$n! = n \\times \\times \\times \\\
    times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \\times \\times \\times \\times\
    \ \\times \\times \\times \\times \\times \\times \nusing Test\n\n@testset begin\n\
    \ncandidate = f;\n\t@test(candidate(5) == [1, 2, 6, 24, 15])\n\t@test(candidate(7)\
    \ == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1) == [1])\n\t@test(candidate(3)\
    \ == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3e5rwblz.jl:17\nin expression starting at\
    \ /tmp/tmp3e5rwblz.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n==0\n       \
    \ Vector{Int64}()\n    else\n        Vector{Int64}((n+1)::Int64)\n    end\nend\n\
    </cell>\n<text>\nExercise 2\nImplement the function g that takes n as a parameter,\n\
    \    and returns a vector of size n, such that the value of the element at index\
    \ i is the factorial of i if i is odd\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> g(5)\n    [1, 3, 9, 27,\
    \ 81]\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5)\
    \ == [1, 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\
    \t@test(candidate(1) == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf8ya3iu6.jl:17\nin expression starting at\
    \ /tmp/tmpf8ya3iu6.jl:17\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n==0\n       \
    \ return [1]\n    else\n        factorials = f(n-1)\n        factorials[1] = 1\n\
    \        factorials[2] = factorials[1]*factorials[2]\n        return factorials\n\
    \    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function g(n::Int64) that\
    \ returns the factorial of n if n is even and the sum of numbers from 1 to n otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1, 2,\
    \ 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbt9rjmcs.jl:20\nin expression starting at\
    \ /tmp/tmpbt9rjmcs.jl:20\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n % 2 == 0\n \
    \       factorials = Vector{Int64}()\n        for i in 1:n\n            factorials\
    \ += i\n        return factorials\n    else\n        factorials = Vector{Int64}()\n\
    \        for i in 1:n\n            factorials += i\n        return factorials\n\
    \    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes an integer\
    \ $n$ and returns the factorial of $n$ if $n$ is even, and returns the sum of\
    \ the factorials from 1 to $n$ if $n$ is odd.\nusing Test\n\n@testset begin\n\n\
    candidate = f;\n\t@test(candidate(5) == [1, 2, 6, 24, 15])\n\t@test(candidate(7)\
    \ == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1) == [1])\n\t@test(candidate(3)\
    \ == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmptpovuwp0.jl:13 expected \"\
    end\", got \"else\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptpovuwp0.jl:16\n\
    in expression starting at /tmp/tmptpovuwp0.jl:16\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n==0\n       \
    \ Vector{Int64}()\n    else\n        factorial=factorial(n-1)\n        factorial=[factorial[i]*i\
    \ for i in range(1,n+1)]\n        factorial\n    end\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an integer $n$ and returns the factorial of $n$,\
    \ i.e. the product of the numbers from 1 to $n$, i.e.\n$$\nf(n) = \\prod_{i=1}^n\
    \ i\n$$\nExample: \n$$\nf(5) = 5 \\times 4 \\times 3 \\times 2 \\times 1 = 120\n\
    $$\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp52y302h0.jl:19\nin expression starting at\
    \ /tmp/tmp52y302h0.jl:19\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n == 0\n     \
    \   Vector{Int64}()\n    else\n        factorials = Vector{Int64}()\n        for\
    \ i in 1:n\n            if i % 2 == 0\n                factorials += i\n     \
    \       else\n                factorials += factorials[i-1] * i\n        end\n\
    \        factorials\n    end\nend\n</cell>\n<code language=julia-1.5>\nf(5)\n\
    </cell>\n<text>\nExercise 2\nImplement the function g that takes n as a parameter,\
    \ and returns a vector of size n, such that the value of the element at index\
    \ i is the factorial of i if i is odd and -1 otherwise.\n    i starts from 1.\n\
    \    the factorial of i is the multiplication of the numbers from 1 to i (1 *\
    \ 2 * ... * i).\n    Example:\n    >>> g(5)\n    [1, -1, 6, -24, 15]\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = f;\n\t@test(candidate(5) == [1,\
    \ 2, 6, 24, 15])\n\t@test(candidate(7) == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1)\
    \ == [1])\n\t@test(candidate(3) == [1, 2, 6])\nend\n"
  stdout: ''
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1h6grrys.jl:24\nin expression starting at\
    \ /tmp/tmp1h6grrys.jl:24\n"
  exit_code: 1
  status: SyntaxError
- program: "\"\"\" Implement the function f that takes n as a parameter,\n    and\
    \ returns a vector of size n, such that the value of the element at index i is\
    \ the factorial of i if i is even\n    or the sum of numbers from 1 to i otherwise.\n\
    \    i starts from 1.\n    the factorial of i is the multiplication of the numbers\
    \ from 1 to i (1 * 2 * ... * i).\n    Example:\n    >>> f(5)\n    [1, 2, 6, 24,\
    \ 15]\n    \"\"\"\nfunction f(n::Int64)::Vector{Int64} \n    if n == 0\n     \
    \   return [1]\n    else\n        factorials = f(n-1)\n        factorials[1] =\
    \ 1\n        for i in 2:n\n            factorials[i] = factorials[i-1] * i\n \
    \       end\n        return factorials\n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = f;\n\t@test(candidate(5) == [1, 2, 6, 24, 15])\n\t@test(candidate(7)\
    \ == [1, 2, 6, 24, 15, 720, 28])\n\t@test(candidate(1) == [1])\n\t@test(candidate(3)\
    \ == [1, 2, 6])\nend\n"
  stdout: "test set: Error During Test at /tmp/tmp55dgjcum.jl:27\n  Test threw exception\n\
    \  Expression: candidate(5) == [1, 2, 6, 24, 15]\n  BoundsError: attempt to access\
    \ 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] setindex!\n    \
    \ @ ./array.jl:903 [inlined]\n   [2] f(n::Int64)\n     @ Main /tmp/tmp55dgjcum.jl:17\n\
    \   [3] f(n::Int64) (repeats 3 times)\n     @ Main /tmp/tmp55dgjcum.jl:14\n  \
    \ [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp55dgjcum.jl:27 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp55dgjcum.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp55dgjcum.jl:28\n  Test threw exception\n  Expression:\
    \ candidate(7) == [1, 2, 6, 24, 15, 720, 28]\n  BoundsError: attempt to access\
    \ 1-element Vector{Int64} at index [2]\n  Stacktrace:\n   [1] setindex!\n    \
    \ @ ./array.jl:903 [inlined]\n   [2] f(n::Int64)\n     @ Main /tmp/tmp55dgjcum.jl:17\n\
    \   [3] f(n::Int64) (repeats 5 times)\n     @ Main /tmp/tmp55dgjcum.jl:14\n  \
    \ [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp55dgjcum.jl:28 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp55dgjcum.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp55dgjcum.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(3) == [1, 2, 6]\n  BoundsError: attempt to access 1-element Vector{Int64}\
    \ at index [2]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n\
    \   [2] f(n::Int64)\n     @ Main /tmp/tmp55dgjcum.jl:17\n   [3] f(n::Int64)\n\
    \     @ Main /tmp/tmp55dgjcum.jl:14\n   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp55dgjcum.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ /shared/centos7/julia"
  stderr: "ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 3 errored,\
    \ 0 broken.\nin expression starting at /tmp/tmp55dgjcum.jl:24\n"
  exit_code: 1
  status: SyntaxError

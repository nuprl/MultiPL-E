language: jl
name: HumanEval_43_pairs_sum_to_zero
results:
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0wo1e791.jl:24\nin expression starting at\
    \ /tmp/tmp0wo1e791.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns an array of the same length\nthat contains\
    \ the number of pairs of elements in the array that sum to zero.\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxy_vlytt.jl:24\nin expression starting at\
    \ /tmp/tmpxy_vlytt.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of integers and returns true if the vector has all unique elements\
    \ and false otherwise.\nFor example, \n[1,2,2,3,4] has all unique elements and\
    \ \n[1,2,2,3,4] does not have all unique elements.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjwx056fd.jl:24\nin expression starting at\
    \ /tmp/tmpjwx056fd.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that checks if a vector contains all integers from 1 to n. \nFor\
    \ example, \n[1,2,3] contains all integers from 1 to 3\n[1,2,4] contains no integers\n\
    [1,3,4] contains all integers from 1 to 4\n[1,3,4] contains no integers\n[1,3,5]\
    \ contains no integers\n[1,3,6] contains no integers\n[1,3,7] contains no integers\n\
    [1,3,8] contains no integers\n[1,3,9] contains no integers\n[1,3,10] contains\
    \ no integers\n[1,3,11] contains no integers\n[1,3,12] contains no integers\n\
    [1,3,13] contains no integers\n[1,3,14] contains no integers\n[1,3,15] contains\
    \ no integers\n[1,3,16] contains no integers\n[1,3,17] contains no integers\n\
    [1,3,18] contains no integers\n[1,3,19] contains no integers\n[1,3,20] contains\
    \ no integers\n[1,3,21] contains no integers\n[1,3,22] contains no integers\n\
    [1,3,23] contains no integers\n[1,3,24] contains no integers\n[1,3,25] contains\
    \ no integers\n[1,3,26] contains no integers\n[1,3,27] contains no integers\n\
    [1,3,28] contains no integers\n[1,3,29] contains no integers\n[1,3,30] contains\
    \ no integers\n[1,3,31] contains no integers\n[1,3,32] contains no integers\n\
    [1,3,33] contains no integers\n[1,3,34] contains no integers\n[1,3,35] contains\
    \ no integers\n[1,3,36] contains no integers\n[1,3,37] contains no integers\n\
    [1,3,38] contains no integers\n[1,3,39] contains no integers\n[1,3,40] contains\
    \ no integers\n[1,3,41] contains no integers\n[1,3,42] contains no integers\n\
    [1,3,43] contains no integers\n[1,3,44] contains no integers\n[1,3,45] contains\
    \ no integers\n[1,3,46] contains no integers\n[1,3,47] contains no integers\n\
    [1,3,48] contains no integers\n[1,3,49] contains no integers\n[1,3,50] contains\
    \ no integers\n[1,3,51] \nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpff8fli81.jl:24\nin expression starting at\
    \ /tmp/tmpff8fli81.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes as input a list of integers and returns true\
    \ if there are two distinct elements in the list that sum to zero, and false otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8g7jg0jf.jl:27\nin expression starting at\
    \ /tmp/tmp8g7jg0jf.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the number of pairs in the given vector that sum to zero.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp69yv9c44.jl:24\nin expression starting at\
    \ /tmp/tmp69yv9c44.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptexysy_1.jl:27\nin expression starting at\
    \ /tmp/tmptexysy_1.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nQuestion\
    \ 3.2\nWrite a function called pairs_sum_to_zero that takes an array of integers\
    \ as an input.\nIt returns true if there are two distinct elements in the array\
    \ that sum to zero, and false otherwise.\nThe function should return false if\
    \ the array is empty.\nThe function should return false if the array has only\
    \ one element.\nThe function should return false if the array has two or more\
    \ elements.\nThe function should return true if the array has two or more elements\
    \ that sum to zero.\nThe function should return true if the array has two or more\
    \ elements that sum to zero.\nThe function should return true if the array has\
    \ two or more elements that sum to zero.\nThe function should return true if the\
    \ array has two or more elements that sum to zero.\nThe function should return\
    \ true if the array has two or more elements that sum to zero.\nThe function should\
    \ return true if the array has two or more elements that sum to zero.\nThe function\
    \ should return true if the array has two or more elements that sum to zero.\n\
    The function should return true if the array has two or more elements that sum\
    \ to zero.\nThe function should return true if the array has two or more elements\
    \ that sum to zero.\nThe function should return true if the array has two or more\
    \ elements that sum to zero.\nThe function should return true if the array has\
    \ two or more elements that sum to zero.\nThe function should return true if the\
    \ array has two or more elements that sum to zero.\nThe function should return\
    \ true if the array has two or more elements that sum to zero.\nThe function should\
    \ return true if the array has two or more elements that sum to zero.\nThe function\
    \ should return true if the array has two or more elements that sum to zero.\n\
    The function should return true if the array has two or more elements that sum\
    \ to zero.\nThe function should return true if the array has two or more elements\
    \ that sum to zero.\nThe function should return true if the array has two or more\
    \ elements that sum to zero.\nThe function should return true if the array has\
    \ two or more elements that sum to zero.\nThe function should return true if the\
    \ array has two or more elements that sum to zero.\nThe function should return\
    \ true if the array has two or more elements that sum to zero.\nThe function should\
    \ return true if the array has two or more elements that sum to zero.\nThe function\
    \ should return true if the array has two or more elements that sum to zero.\n\
    The function should return true if the array has two or more elements that sum\
    \ to zero.\nThe function should \nusing Test\n\n@testset begin\n\ncandidate =\
    \ pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqmglvvsg.jl:27\nin expression starting at\
    \ /tmp/tmpqmglvvsg.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,2,3,4,5])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,4,5,6])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,2,3,4,5,6,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,4,5,6,7,8])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,4,5,6,7,8,9])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,4,5,6,7,8,9,10])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,4,5,6,7,8,9,10,11])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,2,3,4,5,6,7,8,9,10,11,12])\n</cell>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvwwlxcwg.jl:25\nin expression starting at\
    \ /tmp/tmpvwwlxcwg.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    pairs = zip(l[1:end-1], l[2:end])\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0,\
    \ pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n \
    \   pairs = filter(x -> x[1] == 0, pairs)\n    pair\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpweqmv7bl.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpweqmv7bl.jl:1\n\
    in expression starting at /tmp/tmpweqmv7bl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ checks if a vector has all positive elements.\nThe function should return true\
    \ if the vector has at least one positive element, and false otherwise.\nThe function\
    \ should work for both real and complex numbers.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpttsx6kve.jl:25\nin expression starting at\
    \ /tmp/tmpttsx6kve.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ as input a vector of integers and returns true if the vector has all unique\
    \ elements and false otherwise.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphf6g2vbc.jl:24\nin expression starting at\
    \ /tmp/tmphf6g2vbc.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprucl3jau.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmprucl3jau.jl:34\n  Expression: candidate([2,\
    \ 4, -5, 3, 5, 7]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprucl3jau.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprucl3jau.jl:30\ntest set: Test\
    \ Failed at /tmp/tmprucl3jau.jl:36\n  Expression: candidate([-3, 9, -1, 3, 2,\
    \ 30]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprucl3jau.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprucl3jau.jl:30\ntest set: Test\
    \ Failed at /tmp/tmprucl3jau.jl:37\n  Expression: candidate([-3, 9, -1, 3, 2,\
    \ 31]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprucl3jau.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprucl3jau.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,\nusing Test\n\n@testset\
    \ begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl_y5k7cs.jl:24\nin expression starting at\
    \ /tmp/tmpl_y5k7cs.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptexysy_1.jl:27\nin expression starting at\
    \ /tmp/tmptexysy_1.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,0])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.3>\n\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf9z8j51x.jl:26\nin expression starting at\
    \ /tmp/tmpf9z8j51x.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n    end\n    \n    sum\
    \ == 0\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes as input a vector of\
    \ integers and returns true if the vector contains any negative integers, and\
    \ false otherwise.\nThe function should work for both positive and negative integers.\n\
    The function should work for both single and double digit integers.\nThe function\
    \ should work for both single and double digit integers when the vector is empty.\n\
    The function should work for both single and double digit integers when the vector\
    \ has only one element.\nThe function should work for both single and double digit\
    \ integers when the vector has more than one element.\nThe function should work\
    \ for both single and double digit integers when the vector has one or two elements.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6gjvna2w.jl:25\nin expression starting at\
    \ /tmp/tmp6gjvna2w.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that tests whether a vector contains all integers from 1 to n. For\
    \ example, \n[1,2,3] contains all integers from 1 to 3, and [1,2,4] does not.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg68gpph1.jl:24\nin expression starting at\
    \ /tmp/tmpg68gpph1.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a list of numbers and returns the number\
    \ of positive integers contained in the list.\nusing Test\n\n@testset begin\n\n\
    candidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpab55hsuw.jl:26\nin expression starting at\
    \ /tmp/tmpab55hsuw.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    pairs = zip(l, l[1:end-1]) \n    \n    pairs = filter(x -> x[1]\
    \ > 0, pairs)\n    \n    pairs = filter(x -> x[1] == 0, pairs)\n    \n    pairs\
    \ = filter(x -> x[1] < 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x ->\
    \ x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n   \
    \ pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0,\
    \ pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1]\
    \ > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs\
    \ = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x ->\
    \ x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n   \
    \ pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0,\
    \ pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n\
    \    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1]\
    \ > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs\
    \ = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n\
    \    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x ->\
    \ x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0, pairs)\n    \n   \
    \ pairs = filter(x -> x[1] > 0, pairs)\n    \n    pairs = filter(x -> x[1] > 0,\
    \ pairs)\n    \n    pairs = filter(x -> x[1]\nusing Test\n\n@testset begin\n\n\
    candidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyt69_kxx.jl:91\nin expression starting at\
    \ /tmp/tmpyt69_kxx.jl:91\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a list of integers and returns a list of all\
    \ unique pairs of integers in the list. \nFor example, given [1,2,3], return [[1,2],[1,3],[2,3]].\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptb_oqyvn.jl:27\nin expression starting at\
    \ /tmp/tmptb_oqyvn.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that checks if a vector has all elements equal to zero. \nThe\
    \ function should take an input vector as an argument.\nThe function should return\
    \ true if the vector has all elements equal to zero, and false otherwise.\nThe\
    \ function should work for vectors of any length.\nFor example, \n>>> all_zeros([1,3,5,0])\n\
    true\n>>> all_zeros([1,3,-2,1])\nfalse\n>>> all_zeros([1,2,3,7])\nfalse\n>>> all_zeros([2,4,-5,3,5,7])\n\
    true\n>>> all_zeros([1])\nfalse\n>>> all_zeros([1,2])\nfalse\n>>> all_zeros([1,-2,3])\n\
    false\n>>> all_zeros([1,-3,2])\nfalse\n>>> all_zeros([1,-3,-2])\nfalse\n>>> all_zeros([1,-3,-2,4])\n\
    false\n>>> all_zeros([1,-3,-2,4,5])\nfalse\n>>> all_zeros([1,-3,-2,4,5,6])\nfalse\n\
    >>> all_zeros([1,-3,-2,4,5,6,7])\nfalse\n>>> all_zeros([1,-3,-2,4,5,6,7,8])\n\
    false\n>>> all_zeros([1,-3,-2,4,5,6,7,8,9])\nfalse\n>>> all_zeros([1,-3,-2,4,5,6,7,8,9,10])\n\
    false\n>>> all_zeros([1,-3,-2,4,5,6,7,8,9,10,11])\nfalse\n>>> all_zeros([1,-3,-2,4,5,6,7,8,9,10,11,12])\n\
    false\n>>> all_zeros([1,-3,-2,4,5,6,7,8,9,10,11,12,13])\nfalse\n>>> all_zeros([1,-3,-2,4,5,6,7,8,9,10,11,12,13,14])\n\
    false\n>>> all_zeros([1,-3,-2,4,5,6,7,8,9,10,11,12,13,14,15])\nfalse\n>>> all_zeros([1,-3,-2,4,5,6,7,8,9,10,11,12,13,14,15,16])\n\
    false\n>>> all_zeros([1,-3,\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv59lm5lc.jl:27\nin expression starting at\
    \ /tmp/tmpv59lm5lc.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgbidn1un.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpgbidn1un.jl:35\n  Expression: candidate([2,\
    \ 4, -5, 3, 5, 7]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbidn1un.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbidn1un.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpgbidn1un.jl:37\n  Expression: candidate([-3, 9, -1, 3, 2,\
    \ 30]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbidn1un.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbidn1un.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpgbidn1un.jl:38\n  Expression: candidate([-3, 9, -1, 3, 2,\
    \ 31]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbidn1un.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbidn1un.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiek1opdm.jl:27\nin expression starting at\
    \ /tmp/tmpiek1opdm.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that checks\
    \ if a vector contains all integers from 1 to n (inclusive).\nusing Test\n\n@testset\
    \ begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnpd4ct6s.jl:24\nin expression starting at\
    \ /tmp/tmpnpd4ct6s.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    \n    if length(l) == 0 \n        return false\n    end\n\
    \    \n    \n    \n    if l[1] == 0\n        return true\n    end\n    \n    if\
    \ l[end] == 0\n        return true\n    end\n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpmy696hng.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmy696hng.jl:1\n\
    in expression starting at /tmp/tmpmy696hng.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    sum = 0\n    for i in l\n        sum += i\n        if\
    \ sum == 0 \n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <text>\nQuestion 3\nWrite a function that returns true if the given vector contains\
    \ any zero\nelements, and false otherwise.\nFor example, \n[0, 0, 0, 0] returns\
    \ true\n[0, 0, 0, 0, 0] returns false\n[0, 0, 0, 0, 0, 1] returns false\n[0, 0,\
    \ 0, 0, 1, 0] returns false\n[0, 0, 0, 0, 1, 1] returns true\n[0, 0, 0, 0, 1,\
    \ 2] returns false\n[0, 0, 0, 0, 1, 2, 3] returns false\n[0, 0, 0, 0, 1, 2, 3,\
    \ 4] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5] returns false\n[0, 0, 0, 0, 1,\
    \ 2, 3, 4, 5, 6] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7] returns false\n\
    [0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0] returns\
    \ false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1] returns false\n[0, 0, 0,\
    \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 2] returns false\n[0, 0, 0, 0, 1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 0, 3] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 0, 4] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 5] returns false\n\
    [0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 6] returns false\n[0, 0, 0, 0, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 0, 7] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 0, 8] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 9] returns\
    \ false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10] returns false\n[0, 0,\
    \ 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 11] returns false\n[0, 0, 0, 0, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 0, 12] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 0, 13] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 14] returns\
    \ false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 15] returns false\n[0, 0,\
    \ 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 16] returns false\n[0, 0, 0, 0, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 0, 17] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 0, 18] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 19] returns\
    \ false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 20] returns false\n[0, 0,\
    \ 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 21] returns false\n[0, 0, 0, 0, 1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 0, 22] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 0, 23] returns false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 24] returns\
    \ false\n[0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 25] returns false\n[0, 0,\
    \ 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 26] returns false\n[0, 0, 0, 0, 1, 2, 3,\
    \ 4, 5, \nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7lw527va.jl:27\nin expression starting at\
    \ /tmp/tmp7lw527va.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,2])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,2,4,6,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,8])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,8,9])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,8,9,10])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,8,9,10,11])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,8,9,10,11,12])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,8,9,10,11,12,13])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,8,9,10,11,12,13,14])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,8,9,10,11,12,13,14,15])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,8,9,10,11,12,13,14,15,16])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,2,4,6,7,\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3cvulyhz.jl:27\nin expression starting at\
    \ /tmp/tmp3cvulyhz.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpggt7h1z3.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpggt7h1z3.jl:1\n\
    in expression starting at /tmp/tmpggt7h1z3.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0wo1e791.jl:24\nin expression starting at\
    \ /tmp/tmp0wo1e791.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n    end\n    \n    sum\
    \ == 0\nend\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,5])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,0])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,5,0,2])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,3])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,4])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,5])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,5,0,6])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,8])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,9])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,5,0,10])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,11])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,12])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0,13])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,5,0,14])\n</cell>\n<code language=julia-1.3>\npairs_sum\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1bphiuro.jl:25\nin expression starting at\
    \ /tmp/tmp1bphiuro.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    l = sort(l)\n    \n    pairs = Dict{Int64, Int64}()\n    \n    for\
    \ x in l\n        pairs[x] = pairs[x] + 1 if pairs[x] > 0 else 0\n    end\n  \
    \  \n    for x in pairs\n        if pairs[x] == 0\n            return false\n\
    \        end\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmpa5jxth7t.jl:22 expected \"\
    end\", got \"if\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpa5jxth7t.jl:23\n\
    in expression starting at /tmp/tmpa5jxth7t.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpjh_4py1i.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjh_4py1i.jl:1\n\
    in expression starting at /tmp/tmpjh_4py1i.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that checks if a vector has all elements equal to zero. \nFor\
    \ example, \n[0,0,0,0] is true\n[0,0,0,0,0] is false\n[0,1,0,0,0] is false\n[0,0,0,0,0]\
    \ is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n\
    [0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0]\
    \ is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n\
    [0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0]\
    \ is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n\
    [0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0]\
    \ is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n\
    [0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0]\
    \ is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n\
    [0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0]\
    \ is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n\
    [0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0]\
    \ is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n\
    [0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0]\
    \ is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n\
    [0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0] is false\n[0,0,0,0,0]\
    \ is \nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppziic_kr.jl:27\nin expression starting at\
    \ /tmp/tmppziic_kr.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes in a list of integers and returns true if the list\
    \ contains at least one pair of integers that sum to zero.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp42r401h5.jl:26\nin expression starting at\
    \ /tmp/tmp42r401h5.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpggt7h1z3.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpggt7h1z3.jl:1\n\
    in expression starting at /tmp/tmpggt7h1z3.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers as an input, and returns true if there are two distinct\
    \ elements in the array that sum to zero, and false otherwise.\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm04evf6w.jl:24\nin expression starting at\
    \ /tmp/tmpm04evf6w.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0wo1e791.jl:24\nin expression starting at\
    \ /tmp/tmp0wo1e791.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an array of integers and returns the number of\
    \ pairs of integers in the array that sum to zero.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdsyhckxi.jl:26\nin expression starting at\
    \ /tmp/tmpdsyhckxi.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of integers as an input, and returns true if the vector has all unique\
    \ elements, and false otherwise.\nFor example, \n[1,2,2,3,4] returns true\n[1,2,2,3,4]\
    \ returns false\n[1,2,2,3] returns false\n[1,2,2,3] returns true\n[1,2,2,3] returns\
    \ false\n[1,2,2,3,4] returns true\n[1,2,2,3,4] returns false\n[1,2,2,3,4] returns\
    \ true\n[1,2,2,3,4] returns false\n[1,2,2,3,4] returns true\n[1,2,2,3,4] returns\
    \ false\n[1,2,2,3,4] returns true\n[1,2,2,3,4] returns false\n[1,2,2,3,4] returns\
    \ true\n[1,2,2,3,4] returns false\n[1,2,2,3,4] returns true\n[1,2,2,3,4] returns\
    \ false\n[1,2,2,3,4] returns true\n[1,2,2,3,4] returns false\n[1,2,2,3,4] returns\
    \ true\n[1,2,2,3,4] returns false\n[1,2,2,3,4] returns true\n[1,2,2,3,4] returns\
    \ false\n[1,2,2,3,4] returns true\n[1,2,2,3,4] returns false\n[1,2,2,3,4] returns\
    \ true\n[1,2,2,3,4] returns false\n[1,2,2,3,4] returns true\n[1,2,2,3,4] returns\
    \ false\n[1,2,2,3,4] returns true\n[1,2,2,3,4] returns false\n[1,2,2,3,4] returns\
    \ true\n[1,2,2,3,4] returns false\n[1,2,2,3,4] returns true\n[1,2,2,3,4] returns\
    \ false\n[1,2,2,3,4] returns true\n[1,2,2,3,4] returns false\n[1,2,2,3,4] returns\
    \ true\n[1,2,2,3,4] returns false\n[1,2,2,3,4] returns true\n[1,2,2,\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxscmhlpn.jl:24\nin expression starting at\
    \ /tmp/tmpxscmhlpn.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    sum = 0\n    for i in l\n        sum += i\n        if\
    \ sum == 0\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes as input a vector\
    \ of integers and returns true if the vector has all unique elements and false\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4rphkkat.jl:27\nin expression starting at\
    \ /tmp/tmp4rphkkat.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    pairs = zip(l[1:end-1], l[2:end])\n    pairs = filter(x\
    \ -> x[1] == 0, pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs =\
    \ filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pair\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppl5mva17.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppl5mva17.jl:1\n\
    in expression starting at /tmp/tmppl5mva17.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes an integer as an input and returns the number of positive\
    \ integers less than or equal to that integer.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7tukuk0e.jl:24\nin expression starting at\
    \ /tmp/tmp7tukuk0e.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    sum = 0\n    for i in l\n        sum += i\n        if\
    \ sum == 0\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    \nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeiup0og9.jl:27\nin expression starting at\
    \ /tmp/tmpeiup0og9.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1, 3, 5, 0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,\
    \ 3, -2, 1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1, 2, 3,\
    \ 7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2, 4, -5, 3, 5,\
    \ 7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([-1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([-1, -2, 3, -4, -5, -6, -7, -8, 0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([-1, -2, 3, -4, -5, -6,\
    \ -7, -8, 0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([-1, -2,\
    \ 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([-1,\
    \ -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([-1,\
    \ -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([-1,\
    \ -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([-1,\
    \ -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([-1,\
    \ -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([-1,\
    \ -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([-1,\
    \ -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([-1,\
    \ -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([-1,\
    \ -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpflhpqwl4.jl:24\nin expression starting at\
    \ /tmp/tmpflhpqwl4.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    l = l[1..end]\n    \n    if l[1] == 0\n        return\
    \ true\n    end\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6rjs1yl5.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6rjs1yl5.jl:1\n\
    in expression starting at /tmp/tmp6rjs1yl5.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an array of integers as an input, and returns\
    \ true if the array contains any negative integers, and false otherwise.\nFor\
    \ example, \n[1,2,-3,-4,-5,6] should return true.\n[1,2,3,4,5,6] should return\
    \ false.\n[1,2,-3,-4,-5,6,7] should return false.\n[1,2,3,4,5,6,7] should return\
    \ true.\n[1,2,3,4,5,6,7,8] should return false.\n[1,2,3,4,5,6,7,8,9] should return\
    \ false.\n[1,2,3,4,5,6,7,8,9,0] should return false.\n[1,2,3,4,5,6,7,8,9,0,1]\
    \ should return true.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,8,9,0,-1]\
    \ should return false.\n[1,2,3,4,5,6,7,8,9,0,-1] should return false.\n[1,2,3,4,5,6,7,\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuvips8xz.jl:27\nin expression starting at\
    \ /tmp/tmpuvips8xz.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes in a list of integers and returns\
    \ the number of pairs in the list that sum to zero.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8twvdbxc.jl:27\nin expression starting at\
    \ /tmp/tmp8twvdbxc.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmw1b3nd_.jl:24\nin expression starting at\
    \ /tmp/tmpmw1b3nd_.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of pairs in the given vector that sum to zero.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprborsvb_.jl:24\nin expression starting at\
    \ /tmp/tmprborsvb_.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    l = sort(l)\n    \n    if l[1] == 0\n        return true\n    end\n\
    \    \n    if l[2] == 0\n        return true\n    end\n    \n    if l[1] == l[2]\n\
    \        return false\n    end\n    \n    if l[1] > l[2]\n        return pairs_sum_to_zero(l[1:end-1])\n\
    \    end\n    \n    return pairs_sum_to_zero(l[2:end])\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of elements\
    \ in a vector that are less than a given value.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3_b37qz3.jl:38\nin expression starting at\
    \ /tmp/tmp3_b37qz3.jl:38\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0wo1e791.jl:24\nin expression starting at\
    \ /tmp/tmp0wo1e791.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that checks if a vector has all positive elements and returns\
    \ true if it does, and false otherwise.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqpbu6aaz.jl:27\nin expression starting at\
    \ /tmp/tmpqpbu6aaz.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that checks if a vector contains all integers from 1 to n (both included).\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0dlp4mpg.jl:24\nin expression starting at\
    \ /tmp/tmp0dlp4mpg.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a list of numbers as an input,\
    \ and returns a list of all numbers in the list that do not sum to zero.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo21oo7od.jl:27\nin expression starting at\
    \ /tmp/tmpo21oo7od.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n\
    \            return true\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpmd7c6_6b.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmd7c6_6b.jl:1\n\
    in expression starting at /tmp/tmpmd7c6_6b.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes a vector of integers as an input.\nIt returns true\
    \ if the vector has all positive elements, and false otherwise.\nFor example,\
    \ \n>>> positive_elements([1, 3, -5, -7, 0])\ntrue\n>>> positive_elements([1,\
    \ 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5, -7, 0])\nfalse\n>>>\
    \ positive_elements([1, 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5,\
    \ -7, 0])\nfalse\n>>> positive_elements([1, 3, -5, -7, 0])\nfalse\n>>> positive_elements([1,\
    \ 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5, -7, 0])\nfalse\n>>>\
    \ positive_elements([1, 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5,\
    \ -7, 0])\nfalse\n>>> positive_elements([1, 3, -5, -7, 0])\nfalse\n>>> positive_elements([1,\
    \ 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5, -7, 0])\nfalse\n>>>\
    \ positive_elements([1, 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5,\
    \ -7, 0])\nfalse\n>>> positive_elements([1, 3, -5, -7, 0])\nfalse\n>>> positive_elements([1,\
    \ 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5, -7, 0])\nfalse\n>>>\
    \ positive_elements([1, 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5,\
    \ -7, 0])\nfalse\n>>> positive_elements([1, 3, -5, -7, 0])\nfalse\n>>> positive_elements([1,\
    \ 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5, -7, 0])\nfalse\n>>>\
    \ positive_elements([1, 3, -5, -7, 0])\nfalse\n>>> positive_elements([1, 3, -5,\
    \ -7, 0])\nfalse\n>>> positive_\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptletvzmt.jl:26\nin expression starting at\
    \ /tmp/tmptletvzmt.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes as input a vector of integers and returns true if there are two distinct\
    \ elements in the vector that sum to zero, and false otherwise.\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj1myhuu_.jl:24\nin expression starting at\
    \ /tmp/tmpj1myhuu_.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0wo1e791.jl:24\nin expression starting at\
    \ /tmp/tmp0wo1e791.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n4.3 The function\
    \ count_zero\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgusc0o2u.jl:27\nin expression starting at\
    \ /tmp/tmpgusc0o2u.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list of integers and returns true if all elements are\
    \ distinct, and false otherwise.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_t9e3819.jl:24\nin expression starting at\
    \ /tmp/tmp_t9e3819.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprucl3jau.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmprucl3jau.jl:34\n  Expression: candidate([2,\
    \ 4, -5, 3, 5, 7]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprucl3jau.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprucl3jau.jl:30\ntest set: Test\
    \ Failed at /tmp/tmprucl3jau.jl:36\n  Expression: candidate([-3, 9, -1, 3, 2,\
    \ 30]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprucl3jau.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprucl3jau.jl:30\ntest set: Test\
    \ Failed at /tmp/tmprucl3jau.jl:37\n  Expression: candidate([-3, 9, -1, 3, 2,\
    \ 31]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprucl3jau.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprucl3jau.jl:30\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a list of integers and returns the number\
    \ of integers in the list that sum to zero.\nusing Test\n\n@testset begin\n\n\
    candidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppbef00yd.jl:26\nin expression starting at\
    \ /tmp/tmppbef00yd.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n\
    \            return true\n        sum -= i\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppnltmvpi.jl:27\nin expression starting at\
    \ /tmp/tmppnltmvpi.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptlxchxqj.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmptlxchxqj.jl:35\n  Expression: candidate([2,\
    \ 4, -5, 3, 5, 7]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptlxchxqj.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptlxchxqj.jl:31\ntest set: Test\
    \ Failed at /tmp/tmptlxchxqj.jl:37\n  Expression: candidate([-3, 9, -1, 3, 2,\
    \ 30]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptlxchxqj.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptlxchxqj.jl:31\ntest set: Test\
    \ Failed at /tmp/tmptlxchxqj.jl:38\n  Expression: candidate([-3, 9, -1, 3, 2,\
    \ 31]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptlxchxqj.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptlxchxqj.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    l = sort(l)\n    \n    if l[1] == 0\n        return true\n    end\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmphoeta3wl.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphoeta3wl.jl:1\n\
    in expression starting at /tmp/tmphoeta3wl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    \n    sum = 0\n    for i in l\n        sum += i\n   \
    \     if sum == 0\n            return true\n        end\n    end\n    return false\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns true if the given vector has\
    \ all positive elements, and false otherwise.\nusing Test\n\n@testset begin\n\n\
    candidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuykks0tc.jl:28\nin expression starting at\
    \ /tmp/tmpuykks0tc.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0wo1e791.jl:24\nin expression starting at\
    \ /tmp/tmp0wo1e791.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ as input a vector of integers and returns true if the vector has two distinct\
    \ elements that sum to zero, and false otherwise.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc5dj3sg5.jl:24\nin expression starting at\
    \ /tmp/tmpc5dj3sg5.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpggt7h1z3.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpggt7h1z3.jl:1\n\
    in expression starting at /tmp/tmpggt7h1z3.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    l = sort(l)\n    \n    sum = 0\n    for i in l\n        sum += i\n\
    \    end\n    \n    \n    for i in l\n        if sum == 0 \n            return\
    \ false\n        end\n        \n        sum += i\n    end\n    \n    return true\n\
    end\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that checks if a vector contains all integers\
    \ from 1 to n (both included).\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpen7f3w9x.jl:36\nin expression starting at\
    \ /tmp/tmpen7f3w9x.jl:36\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the number of pairs in the given vector that sum\
    \ to zero.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t\
    @test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\
    \t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5,\
    \ 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpea7_iiaj.jl:27\nin expression starting at\
    \ /tmp/tmpea7_iiaj.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes as input a vector of integers and returns\
    \ true if the vector contains any negative integers, and false otherwise.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3hfb4l5q.jl:27\nin expression starting at\
    \ /tmp/tmp3hfb4l5q.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list of integers and returns true if there are two distinct\
    \ elements in the list that sum to zero, and false otherwise.\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcn9k348l.jl:24\nin expression starting at\
    \ /tmp/tmpcn9k348l.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0wo1e791.jl:24\nin expression starting at\
    \ /tmp/tmp0wo1e791.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptexysy_1.jl:27\nin expression starting at\
    \ /tmp/tmptexysy_1.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n\
    </cell>\n<code language=juli\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1bejyh4f.jl:24\nin expression starting at\
    \ /tmp/tmp1bejyh4f.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a vector of integers as an input, and returns true if the vector has all unique\
    \ elements, and false otherwise.\nFor example, \n[1,2,2,3,3] returns true\n[1,2,2,3,4]\
    \ returns false\n[1,2,2,3,3] returns false\n[1,2,2,3,4] returns false\n[1,2,2,3,5]\
    \ returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5]\
    \ returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5]\
    \ returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5]\
    \ returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5]\
    \ returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5]\
    \ returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5]\
    \ returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5]\
    \ returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5]\
    \ returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5]\
    \ returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5]\
    \ returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5]\
    \ returns false\n[1,2,2,3,5] returns false\n[1,2,2,3,5] returns \nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplwad6to1.jl:24\nin expression starting at\
    \ /tmp/tmplwad6to1.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n    \
    \        return true\n    return false\nend\nusing Test\n\n@testset begin\n\n\
    candidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpwxd96ztm.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwxd96ztm.jl:1\n\
    in expression starting at /tmp/tmpwxd96ztm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a vector of integers as an input, and returns true if\
    \ the vector has all unique elements, and false otherwise.\nFor example, \n[1,\
    \ 1, 2] has all unique elements, so it returns true.\n[1, 3, 2] has all unique\
    \ elements, so it returns true.\n[1, 2, 3] has all unique elements, so it returns\
    \ false.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg4g6acpc.jl:24\nin expression starting at\
    \ /tmp/tmpg4g6acpc.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpggt7h1z3.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpggt7h1z3.jl:1\n\
    in expression starting at /tmp/tmpggt7h1z3.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgbidn1un.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpgbidn1un.jl:35\n  Expression: candidate([2,\
    \ 4, -5, 3, 5, 7]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbidn1un.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbidn1un.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpgbidn1un.jl:37\n  Expression: candidate([-3, 9, -1, 3, 2,\
    \ 30]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbidn1un.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbidn1un.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpgbidn1un.jl:38\n  Expression: candidate([-3, 9, -1, 3, 2,\
    \ 31]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbidn1un.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbidn1un.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    l = sort(l)\n    \n    if length(l) == 0 \n        return false\n\
    \    end\n    \n    if l[1] == 0\n        return true\n    end\n    \n    if l[end]\
    \ == 0\n        return true\n    end\n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpuymr7cad.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpuymr7cad.jl:1\n\
    in expression starting at /tmp/tmpuymr7cad.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that checks if a vector contains all integers from 1 to\
    \ n. \nFor example, \n[1,2,3] contains all integers from 1 to 3, and [1,2,4] does\
    \ not.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo0r10syn.jl:27\nin expression starting at\
    \ /tmp/tmpo0r10syn.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a vector of integers as an input,\
    \ and returns true if the vector has all positive elements, and false otherwise.\n\
    For example, \n[1,2,3] has all positive elements, and \n[-1,2,3] has all negative\
    \ elements.\nThe function should return false for [1,2,3], and true for [-1,2,3].\n\
    The function should work for both positive and negative integers.\nThe function\
    \ should work for vectors of any length.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjeurm6js.jl:27\nin expression starting at\
    \ /tmp/tmpjeurm6js.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ checks if a vector contains all integers from 1 to n. \nFor example, \n[1,2,3]\
    \ contains all integers from 1 to 3.\n[1,2,4] does not contain all integers from\
    \ 1 to 3.\n[1,2,3] contains all integers from 1 to 2.\n[1,2,4] does not contain\
    \ all integers from 1 to 2.\n[1,2,3] contains all integers from 1 to 1.\n[1,2,4]\
    \ does not contain all integers from 1 to 1.\n[1,2,3] contains all integers from\
    \ 0 to 3.\n[1,2,4] does not contain all integers from 0 to 3.\n[1,2,3] contains\
    \ all integers from 0 to 2.\n[1,2,4] does not contain all integers from 0 to 2.\n\
    [1,2,3] contains all integers from 0 to 1.\n[1,2,4] does not contain all integers\
    \ from 0 to 1.\n[1,2,3] contains all integers from 0 to 3.\n[1,2,4] does not contain\
    \ all integers from 0 to 3.\n[1,2,3] contains all integers from 0 to 2.\n[1,2,4]\
    \ does not contain all integers from 0 to 2.\n[1,2,3] contains all integers from\
    \ 0 to 1.\n[1,2,4] does not contain all integers from 0 to 1.\n[1,2,3] contains\
    \ all integers from 0 to 3.\n[1,2,4] does not contain all integers from 0 to 3.\n\
    [1,2,3] contains all integers from 0 to 2.\n[1,2,4] does not contain all integers\
    \ from 0 to 2.\n[1,2,3] contains all integers from 0 to 1.\n[1,2,4] does not contain\
    \ all integers from 0 to 1.\n[1,2,3] contains all integers from 0 to 3.\n[1,2,4]\
    \ does not contain all integers from 0 to 3.\n[1,2,3] contains all integers from\
    \ 0 to 2.\n[1,2,4] does not contain all integers from 0 to 2.\n[1,2,3] contains\
    \ all integers from 0 to 1.\n[1,2,4] does not contain all integers from 0 to 1.\n\
    [1,2,3] contains all integers from 0 to 3.\n[1,2,4] does not contain all integers\
    \ from 0 to 3.\n[1,2,3] contains all integers from 0 to 2.\n[1,2,4] does not contain\
    \ all integers from 0 to 2.\n[1,2,3] contains all integers from 0 to 1.\n[1,2,4]\
    \ does not contain all integers from 0 to 1.\n[1,2,3] contains all integers from\
    \ 0 to 3.\n[1,2,4] does not contain all integers from 0 to 3.\n[1,2,3] contains\
    \ all integers from 0 to 2.\n[1,2,4] does not contain all integers from 0 to 2.\n\
    [1,2,\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpao9ar1db.jl:24\nin expression starting at\
    \ /tmp/tmpao9ar1db.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns an array of integers representing the\
    \ number of times each unique number appears in the array.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpes716hli.jl:24\nin expression starting at\
    \ /tmp/tmpes716hli.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list of integers and returns a list of all positive\
    \ integers less than the largest element in the list.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3sedkz6c.jl:24\nin expression starting at\
    \ /tmp/tmp3sedkz6c.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that checks if a vector has all elements\
    \ equal, except for one. For example, vec([1]) should return false, but vec([1];\
    \ [2]) should return true.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxrilaw86.jl:27\nin expression starting at\
    \ /tmp/tmpxrilaw86.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\n4.3 Exercise\nWrite a function that returns\
    \ the number of pairs in the given vector that sum to zero.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp14t7o3c8.jl:24\nin expression starting at\
    \ /tmp/tmp14t7o3c8.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n    \
    \        return true\n    return false\nend\nusing Test\n\n@testset begin\n\n\
    candidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpwxd96ztm.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwxd96ztm.jl:1\n\
    in expression starting at /tmp/tmpwxd96ztm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ checks if a vector has all positive elements and returns true if it does, and\
    \ false if it does not. Test it on some vectors.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmkxoja71.jl:24\nin expression starting at\
    \ /tmp/tmpmkxoja71.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    \n    pairs = zip(l[1:end-1], l[2:end])\n    \n    sum\
    \ = 0\n    for pair in pairs\n        sum += pair[1]\n        if sum == 0\n  \
    \          return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplcuvyn9d.jl:30\nin expression starting at\
    \ /tmp/tmplcuvyn9d.jl:30\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function that checks\
    \ if a vector contains all integers from 1 to n. \nFor example, \n[1,2,3,4,5,6,7,8,9,10]\
    \ contains all integers from 1 to 10. \n[1,2,3,4,5,6,7,8,9,10] does not contain\
    \ all integers from 1 to 9. \n[1,2,3,4,5,6,7,8,9,10] contains all integers from\
    \ 1 to 9. \n[1,2,3,4,5,6,7,8,9,10] does not contain all integers from 1 to 10.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf37wf5n_.jl:24\nin expression starting at\
    \ /tmp/tmpf37wf5n_.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n\
    \            return true\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpmd7c6_6b.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmd7c6_6b.jl:1\n\
    in expression starting at /tmp/tmpmd7c6_6b.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpggt7h1z3.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpggt7h1z3.jl:1\n\
    in expression starting at /tmp/tmpggt7h1z3.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpggt7h1z3.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpggt7h1z3.jl:1\n\
    in expression starting at /tmp/tmpggt7h1z3.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1, 3, 5, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1, 3, -2, 1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,\
    \ 2, 3, 7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of elements in a\
    \ vector that are positive.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj4mm_1ek.jl:27\nin expression starting at\
    \ /tmp/tmpj4mm_1ek.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that takes an array of integers and returns\
    \ an array of integers where the even numbers are moved to the end of the array,\
    \ and the odd numbers are moved to the beginning.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnnpw1048.jl:27\nin expression starting at\
    \ /tmp/tmpnnpw1048.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that checks if a vector has all elements\
    \ equal to zero.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd94j9tpe.jl:27\nin expression starting at\
    \ /tmp/tmpd94j9tpe.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1, 3, 5, 0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,\
    \ 3, -2, 1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1, 2, 3,\
    \ 7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2, 4, -5, 3, 5,\
    \ 7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an array of integers and returns the number\
    \ of pairs that sum to zero.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmenx9u0r.jl:24\nin expression starting at\
    \ /tmp/tmpmenx9u0r.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1, 3, 5, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1, 3, -2, 1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,\
    \ 2, 3, 7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n\
    <text>\n4.3 Exercise: Write a function that takes an array of integers and returns\
    \ the number of pairs of elements in the array that sum to zero.\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptb1w59yz.jl:26\nin expression starting at\
    \ /tmp/tmptb1w59yz.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptexysy_1.jl:27\nin expression starting at\
    \ /tmp/tmptexysy_1.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of pairs in the given vector\
    \ that sum to zero.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpm4hbyuih.jl:27\nin expression starting at\
    \ /tmp/tmpm4hbyuih.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that checks if a vector contains all zeros\
    \ or not. For example, given [0, 0, 0], it returns true. Given [0, 0, 0, 0, 0],\
    \ it returns false. Given [0, 0, 0, 0, 0, 0], returns false.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmf1bfuzb.jl:27\nin expression starting at\
    \ /tmp/tmpmf1bfuzb.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\nusing Test\n\n@testset begin\n\n\
    candidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpmsz_nege.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmsz_nege.jl:1\n\
    in expression starting at /tmp/tmpmsz_nege.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a list of numbers as an input, and returns true\
    \ if there are two distinct elements in the list that sum to zero, and false otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpubkjbvj4.jl:27\nin expression starting at\
    \ /tmp/tmpubkjbvj4.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    pairs = zip(l[1:end-1], l[2:end])\n    pairs = filter(x\
    \ -> x[1] > 0, pairs)\n    pairs = filter(x -> x[1] == 0, pairs)\n    pairs =\
    \ filter(x -> x[1] == x[2], pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1] != x[2],\
    \ pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1]\
    \ != x[2], pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ 0, pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1] != x[2],\
    \ pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1]\
    \ != x[2], pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x\
    \ -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs\
    \ = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n\
    \    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x -> x[1] !=\
    \ 0, pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs = filter(x\
    \ -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n    pairs\
    \ = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1] != x[2], pairs)\n\
    \    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1] != x[2],\
    \ pairs)\n    pairs = filter(x -> x[1] != 0, pairs)\n    pairs = filter(x -> x[1]\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy4w7d1ot.jl:59\nin expression starting at\
    \ /tmp/tmpy4w7d1ot.jl:59\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of pairs in a given vector that\
    \ sum to zero.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpplejj379.jl:26\nin expression starting at\
    \ /tmp/tmpplejj379.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a list of integers and returns a list of all positive\
    \ integers less than or equal to the input integer. For example, given the list\
    \ [10, 20, 30, 40], the function should return [10, 20, 30, 40].\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdc9qtqsg.jl:24\nin expression starting at\
    \ /tmp/tmpdc9qtqsg.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n    \
    \        return true\n    return false\nend\nusing Test\n\n@testset begin\n\n\
    candidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpwxd96ztm.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwxd96ztm.jl:1\n\
    in expression starting at /tmp/tmpwxd96ztm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert pairs_sum_to_zero([1, 3, 5, 0]) == false\n@assert\
    \ pairs_sum_to_zero([1, 3, -2, 1]) == false\n@assert pairs_sum_to_zero([1, 2,\
    \ 3, 7]) == false\n@assert pairs_sum_to_zero([2, 4, -5, 3, 5, 7]) == true\n@assert\
    \ pairs_sum_to_zero([1]) == false\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that checks if a vector contains all integers from 1 to n (both included).\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqgtqmeh0.jl:26\nin expression starting at\
    \ /tmp/tmpqgtqmeh0.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that takes as input a vector of integers and returns true if the\
    \ vector contains any negative integers, and false otherwise.\nFor example, \n\
    [5, -4, -7, 2, 3] should return true.\n[5, -4, -7, 2, -3] should return false.\n\
    [5, -4, -7, 2, 3] should return false.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk8mlhz1u.jl:24\nin expression starting at\
    \ /tmp/tmpk8mlhz1u.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 6 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgbidn1un.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpgbidn1un.jl:35\n  Expression: candidate([2,\
    \ 4, -5, 3, 5, 7]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbidn1un.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbidn1un.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpgbidn1un.jl:37\n  Expression: candidate([-3, 9, -1, 3, 2,\
    \ 30]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbidn1un.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbidn1un.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpgbidn1un.jl:38\n  Expression: candidate([-3, 9, -1, 3, 2,\
    \ 31]) == true\n   Evaluated: false == true\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgbidn1un.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgbidn1un.jl:31\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    6     3      9\n"
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,3,4])\n</cell>\n<code language=julia-1.5>\n\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp16gasb47.jl:24\nin expression starting at\
    \ /tmp/tmp16gasb47.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpggt7h1z3.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpggt7h1z3.jl:1\n\
    in expression starting at /tmp/tmpggt7h1z3.jl:1\n"
  stdout: ''
- exit_code: -1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    pairs = zip(l, l[1:end-1]) \n    \n    pairs = filter(x -> x[1]\
    \ == 0, pairs)\n    \n    return length(pairs) == 0\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: '''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n    end\n    \n    sum\
    \ == 0\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1, 3, 5, 0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1, 3, -2, 1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1, 2, 3, 7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([-1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([-1, 1, -2, 3, -4, -5, -6, -7, -8, 0])\n</cell>\n<code language=julia-1.5\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqgjvgcgv.jl:25\nin expression starting at\
    \ /tmp/tmpqgjvgcgv.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a list of numbers as an input,\
    \ and returns a list of all positive numbers that are less than or equal to each\
    \ of the numbers in the list. For example, if the list is [5, 3, 8, 2, 6, 4, 9],\
    \ the function should return [5, 3, 8].\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy50hfxnx.jl:27\nin expression starting at\
    \ /tmp/tmpy50hfxnx.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd2gpr24m.jl:26\nin expression starting at\
    \ /tmp/tmpd2gpr24m.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpggt7h1z3.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpggt7h1z3.jl:1\n\
    in expression starting at /tmp/tmpggt7h1z3.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\n</cell>\n<text>\nExercise 4\n\
    Write a function that takes a vector of integers as an input, and returns true\
    \ if the vector has all unique elements, and false otherwise.\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2cj0q99v.jl:25\nin expression starting at\
    \ /tmp/tmp2cj0q99v.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    l = l[1..end]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[\nusing Test\n\n@testset begin\n\ncandidate =\
    \ pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprk7hlu_f.jl:1\nin expression starting at /tmp/tmprk7hlu_f.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpggt7h1z3.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpggt7h1z3.jl:1\n\
    in expression starting at /tmp/tmpggt7h1z3.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes as input a vector of integers and returns\
    \ true if the vector contains any negative integers, and false otherwise.\nFor\
    \ example, \n[5, -4, 3, -6, 2] should return true.\n[5, -4, 3, -6, -2] should\
    \ return false.\n[5, -4, 3, -6, 2, 0] should return false.\n[5, -4, 3, -6, 2,\
    \ -1, 0] should return true.\n[5, -4, 3, -6, 2, -1, 0, 3] should return false.\n\
    [5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0,\
    \ 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n\
    [5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0,\
    \ 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n\
    [5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0,\
    \ 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n\
    [5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0,\
    \ 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n\
    [5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0,\
    \ 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n\
    [5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0,\
    \ 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n\
    [5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0,\
    \ 3, 0] should return false.\n[5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n\
    [5, -4, 3, -6, 2, -1, 0, 3, 0] should return false.\n[5, -4, 3, -\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5as_baqy.jl:26\nin expression starting at\
    \ /tmp/tmp5as_baqy.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-5,0])\n</cell>\n<code\
    \ language=juli\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwfcv45q_.jl:24\nin expression starting at\
    \ /tmp/tmpwfcv45q_.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that checks if a vector is a permutation of another vector.\nThe\
    \ function should return true if the first vector is a permutation of the second\
    \ vector.\nThe function should return false if the first vector is not the same\
    \ length as the second vector.\nThe function should return false if the first\
    \ vector contains any duplicate elements.\nThe function should return false if\
    \ the second vector contains any duplicate elements.\nThe function should return\
    \ false if the second vector is longer than the first vector.\nThe function should\
    \ return false if any element in the first vector is negative.\nThe function should\
    \ return false if any element in the second vector is negative.\nThe function\
    \ should return false if any element in the second vector is zero.\nThe function\
    \ should return false if any element in the second vector is greater than the\
    \ largest element in the first vector.\nThe function should return false if any\
    \ element in the second vector is less than the smallest element in the first\
    \ vector.\nThe function should return false if any element in the second vector\
    \ is greater than the largest element in the first vector.\nThe function should\
    \ return false if any element in the second vector is less than the smallest element\
    \ in the first vector.\nThe function should return false if any element in the\
    \ second vector is greater than the largest element in the first vector.\nThe\
    \ function should return false if any element in the second vector is less than\
    \ the smallest element in the first vector.\nThe function should return false\
    \ if any element in the second vector is greater than the largest element in the\
    \ first vector.\nThe function should return false if any element in the second\
    \ vector is less than the smallest element in the first vector.\nThe function\
    \ should return false if any element in the second vector is greater than the\
    \ largest element in the first vector.\nThe function should return false if any\
    \ element in the second vector is less than the smallest element in the first\
    \ vector.\nThe function should return false if any element in the second vector\
    \ is greater than the largest element in the first vector.\nThe function should\
    \ return false if any element in the second vector is less than the smallest element\
    \ in the first vector.\nThe function should return false if any element in the\
    \ second vector is greater than the largest element in the first vector.\nThe\
    \ function should return false if any element in the second vector is less than\
    \ the smallest element in the first vector.\nThe function should return false\
    \ if any element in the second vector is greater than the largest element in the\
    \ first vector.\nThe function should return false if any element in the second\
    \ vector is less than the smallest element in the first vector.\nThe function\
    \ should return false if any element in the second vector is greater than the\
    \ largest element in the first vector.\nThe function should return false if any\
    \ element in the second vector is less than \nusing Test\n\n@testset begin\n\n\
    candidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmhlfbs51.jl:24\nin expression starting at\
    \ /tmp/tmpmhlfbs51.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes an array of integers and returns the number of pairs that\
    \ sum to zero.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpum1o8eow.jl:24\nin expression starting at\
    \ /tmp/tmpum1o8eow.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n\
    \    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l\
    \ = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==0)]\n    l = l[1:end-1]\n    l = l[findall(l==0)]\n\
    \    l = l[1:end-1]\n    l = l[findall(l==\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaogr4ucq.jl:80\nin expression starting at\
    \ /tmp/tmpaogr4ucq.jl:80\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.3>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeythgwjk.jl:24\nin expression starting at\
    \ /tmp/tmpeythgwjk.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1,2])\n</cell>\n<code language=julia-1.5>\n\
    pairs_\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwbnu1pf0.jl:27\nin expression starting at\
    \ /tmp/tmpwbnu1pf0.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n    end\n    \n    sum\
    \ == 0\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3932aqpn.jl:25\nin expression starting at\
    \ /tmp/tmp3932aqpn.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.3>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.3>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.3>\npairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 2\n\
    Write a function that checks if a vector contains all integers from 1 to n (both\
    \ included).\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpav5l4yt4.jl:24\nin expression starting at\
    \ /tmp/tmpav5l4yt4.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.4>\npairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,2,3,7])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n\
    <code language=julia-1.4>\npairs_sum_to_zero([1])\n</cell>\n<text>\n4.3 Exercise:\
    \ Find all pairs of integers whose sum is zero in a given vector\nWrite a function\
    \ that takes as input a vector of integers and returns all pairs of integers whose\
    \ sum is zero.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppm3u_4ec.jl:27\nin expression starting at\
    \ /tmp/tmppm3u_4ec.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a list of numbers and returns\
    \ the number of pairs in the list that sum to zero.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq2t4nt9u.jl:27\nin expression starting at\
    \ /tmp/tmpq2t4nt9u.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt1dtjnjg.jl:24\nin expression starting at\
    \ /tmp/tmpt1dtjnjg.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    pairs = zip(l, l[1:end-1]) \n    \n    for pair in pairs \n    \
    \    if pair[1] == 0 \n            return true\n        else \n            return\
    \ false \n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ an array of integers as an input, and returns true if there are two distinct\
    \ elements in the array that sum to zero, and false otherwise.\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxus811iv.jl:27\nin expression starting at\
    \ /tmp/tmpxus811iv.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    l = sort(l)\n    \n    if length(l)==0\n        return false\n \
    \   end\n    \n    \n    \n    if l[1]==0\n        return false\n    end\n   \
    \ \n    \n    if l[end-1]==0\n        return false\n    end\n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_z41_c8j.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_z41_c8j.jl:1\n\
    in expression starting at /tmp/tmp_z41_c8j.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0wo1e791.jl:24\nin expression starting at\
    \ /tmp/tmp0wo1e791.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.4>\n\
    pairs_sum_to_zero([1,3,-2,1,0])\n</cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0,0])\n</cell>\n\
    <code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0,0,0])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0,0,0,0])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0])\n</cell>\n<code\
    \ language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,0])\n</cell>\n\
    <code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,0,0])\n</cell>\n\
    <code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0])\n</cell>\n\
    <code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0])\n</cell>\n\
    <code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0,0])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0,0,0])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0,0,0,0])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0,0,0,0,0])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0])\n\
    </cell>\n<code language=julia-1.4>\npairs_sum_to_zero([1,3,-2,\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8bnishwa.jl:26\nin expression starting at\
    \ /tmp/tmp8bnishwa.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptexysy_1.jl:27\nin expression starting at\
    \ /tmp/tmptexysy_1.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes an array of integers and returns an array of booleans indicating whether\
    \ each element in the array is greater than zero.\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfwtavyit.jl:24\nin expression starting at\
    \ /tmp/tmpfwtavyit.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of pairs that sum to zero in a given\
    \ vector.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t\
    @test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\
    \t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5,\
    \ 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_ht52fap.jl:27\nin expression starting at\
    \ /tmp/tmp_ht52fap.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpggt7h1z3.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpggt7h1z3.jl:1\n\
    in expression starting at /tmp/tmpggt7h1z3.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that checks if a vector contains all integers\
    \ from 1 to n (inclusive).\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmph1uk89.jl:27\nin expression starting at\
    \ /tmp/tmpmph1uk89.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes as input a vector of integers\
    \ and returns true if there are two distinct elements in the vector that sum to\
    \ zero and false otherwise.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaeb8z86z.jl:27\nin expression starting at\
    \ /tmp/tmpaeb8z86z.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpggt7h1z3.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpggt7h1z3.jl:1\n\
    in expression starting at /tmp/tmpggt7h1z3.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpggt7h1z3.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpggt7h1z3.jl:1\n\
    in expression starting at /tmp/tmpggt7h1z3.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes as input a vector of integers\
    \ and returns true if the vector has all positive elements and false otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpomt5loy8.jl:27\nin expression starting at\
    \ /tmp/tmpomt5loy8.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    pairs = zip(l, l[1:end-1]) \n    \n    for p in pairs \n       \
    \ if p[1] == 0 \n            return true \n        else \n            return false\
    \ \n    end\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0hu425_0.jl:27\nin expression starting at\
    \ /tmp/tmp0hu425_0.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n\
    \            return true\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp20nmel_7.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp20nmel_7.jl:1\n\
    in expression starting at /tmp/tmp20nmel_7.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp_i0gdeat.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_i0gdeat.jl:1\n\
    in expression starting at /tmp/tmp_i0gdeat.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\n</cell>\n<text>\nExercise 4\n\
    Write a function that takes as input a vector of integers and returns true if\
    \ the vector contains any negative integers, and false otherwise.\nFor example,\
    \ \n[4, -5, -7, -9, -10, -6, -3] is true.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, -6, -3] is false.\n[4, -5, -7, -9, -10, -6, -3] is false.\n\
    [4, -5, -7, -9, -10, \nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcmzwoab0.jl:25\nin expression starting at\
    \ /tmp/tmpcmzwoab0.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n    l = l[1..end-1]\n\
    \    l = l[1..end-1]\n    l = l\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpap_m1ruu.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpap_m1ruu.jl:1\n\
    in expression starting at /tmp/tmpap_m1ruu.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,0])\n\
    </cell>\n<text>\nExercise: Write a function that takes in a vector of integers\
    \ and returns true if the vector contains any negative integers, and false otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvefu8zo6.jl:24\nin expression starting at\
    \ /tmp/tmpvefu8zo6.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes as input a vector of integers and returns true\
    \ if the sum of the absolute values of the elements in the vector is less than\
    \ twice the largest absolute value of the elements in the vector, and false otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl1a0abnr.jl:26\nin expression starting at\
    \ /tmp/tmpl1a0abnr.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t\
    @test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\
    \t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\
    \t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1,\
    \ 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t\
    @test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmp_i0gdeat.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_i0gdeat.jl:1\n\
    in expression starting at /tmp/tmp_i0gdeat.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    l = sort(l)\n    \n    if l[1] == 0\n        return true\n    end\n\
    \    \n    if l[end] == 0\n        return true\n    end\n    \n    if l[end] ==\
    \ l[1]\n        return false\n    end\n    \n    \n    return pairs_sum_to_zero(l[1:end-1])\
    \ && pairs_sum_to_zero(l[2:end])\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2cisin7o.jl:35\nin expression starting at\
    \ /tmp/tmp2cisin7o.jl:35\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nQuestion 2.3\nWrite a function that takes an array of integers as an input\
    \ and returns the number of pairs in the array that sum to zero.\nusing Test\n\
    \n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4gbypc2q.jl:27\nin expression starting at\
    \ /tmp/tmp4gbypc2q.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpggt7h1z3.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpggt7h1z3.jl:1\n\
    in expression starting at /tmp/tmpggt7h1z3.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n    end\n    \n    sum\
    \ == 0\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes as input a vector of\
    \ integers and returns true if the vector contains no 0s, false otherwise. \n\
    For example, \n>>> no_zeros([1,3,5,0])\nfalse\n>>> no_zeros([1,3,-2,1])\ntrue\n\
    >>> no_zeros([1,2,3,7])\ntrue\n>>> no_zeros([2,4,-5,3,5,7])\nfalse\n>>> no_zeros([1])\n\
    true\n>>> no_zeros([2,4,-5,3,5,7,0])\nfalse\n>>> no_zeros([2,4,-5,3,5,7,0,0])\n\
    true\n>>> no_zeros([2,4,-5,3,5,7,0,0,0])\nfalse\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0])\n\
    true\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0])\nfalse\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0])\n\
    true\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0])\nfalse\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\n\
    true\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\nfalse\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\n\
    true\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\nfalse\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\n\
    true\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\nfalse\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\n\
    true\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\nfalse\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\n\
    true\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\nfalse\n>>> no_zeros([2,4,-5,3,5,7,0,0,0,0,0,0,0,0])\n\
    true\n>>> no_zeros([2,4,-\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpswhs8tj6.jl:25\nin expression starting at\
    \ /tmp/tmpswhs8tj6.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that checks if a vector contains all integers from 1 to\
    \ n (both included).\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1l30nmnn.jl:26\nin expression starting at\
    \ /tmp/tmp1l30nmnn.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpggt7h1z3.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpggt7h1z3.jl:1\n\
    in expression starting at /tmp/tmpggt7h1z3.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    sum = 0\n    for i in l\n        sum += i\n        if\
    \ sum == 0\n            return true\n    return false\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2,4,-5,3,5,7,1])\n\
    </cell\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4i66s1hl.jl:25\nin expression starting at\
    \ /tmp/tmp4i66s1hl.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for x in l\n        sum += x\n        if sum == 0\n     \
    \       return true\n    return false\nend\n</cell>\n<code language=julia-1.3>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes as input a list of integers and returns true if and only if the list contains\
    \ at least one pair of distinct integers that sum to zero.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) ==\
    \ false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1, 2,\
    \ 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph4sim2l8.jl:24\nin expression starting at\
    \ /tmp/tmph4sim2l8.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1, 3, 5, 0])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1, 3, -2, 1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,\
    \ 2, 3, 7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([2, 4, -5,\
    \ 3, 5, 7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n</cell>\n\
    <text>\n4.4 Exercise: Find all pairs of numbers that sum to zero in a given vector\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_yg6z_b2.jl:27\nin expression starting at\
    \ /tmp/tmp_yg6z_b2.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes as input a vector of integers\
    \ and returns true if the vector has all unique elements and false otherwise.\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsliatq8h.jl:27\nin expression starting at\
    \ /tmp/tmpsliatq8h.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaqecxuwq.jl:16\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaqecxuwq.jl:1\n\
    in expression starting at /tmp/tmpaqecxuwq.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    l = sort(l)\n    \n    if length(l) == 0 \n        return false\n    end\n\
    \    \n    pairs = zeros(Int, 2)\n    \n    for i = 1:length(l) \n        pairs[1]\
    \ = l[i]\n        pairs[2] = l[i+1]\n        if pairs[1] + pairs[2] != 0 \n  \
    \          return false\n        end\n    end\n    \n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes in a vector of integers and returns true if the\
    \ vector contains any negative integers, and false otherwise.\nusing Test\n\n\
    @testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5,\
    \ 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp78fsnkb0.jl:35\nin expression starting at\
    \ /tmp/tmp78fsnkb0.jl:35\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n    end\n    \n    sum\
    \ == 0\nend\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,5,0])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1])\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes as input a vector of\
    \ integers and returns true if the vector contains any negative numbers and false\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxhz2o72t.jl:25\nin expression starting at\
    \ /tmp/tmpxhz2o72t.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code\
    \ language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptexysy_1.jl:27\nin expression starting at\
    \ /tmp/tmptexysy_1.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes as input a vector of integers and returns\
    \ true if the number of elements in the vector that are positive is equal to the\
    \ number of elements in the vector that are negative, and false otherwise.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr1ps9cuf.jl:26\nin expression starting at\
    \ /tmp/tmpr1ps9cuf.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n        end\n    end\n    return false\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a list of integers and returns true if\
    \ the list contains any negative integers, and false otherwise.\nFor example,\
    \ \n[4, -5, -7, 3] should return true.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3] should return false.\n\
    [4, -5, -7, 3, 0] should return false.\n[4, -5, -7, 3, 0] should return false.\n\
    [4, -5, -7, 3] should return \nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpob5i3umu.jl:26\nin expression starting at\
    \ /tmp/tmpob5i3umu.jl:26\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n     \
    \       return true\n    return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"for\" at /tmp/tmpggt7h1z3.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpggt7h1z3.jl:1\n\
    in expression starting at /tmp/tmpggt7h1z3.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a list of integers and returns\
    \ true if there are two distinct elements in the list that sum to zero, and false\
    \ otherwise.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\
    \t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) ==\
    \ false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2, 4,\
    \ -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprt5_gmpq.jl:27\nin expression starting at\
    \ /tmp/tmprt5_gmpq.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a list of integers and returns\
    \ true if there are two distinct elements in the list that sum to zero.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_d5em_vr.jl:27\nin expression starting at\
    \ /tmp/tmp_d5em_vr.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n    end\n    \n    for\
    \ i in l\n        if sum == 0 \n            return false\n        end\n      \
    \  \n        sum -= i\n    end\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    pairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a vector of integers as an input, and returns true if the vector has all\
    \ positive integers and false otherwise.\nFor example, \n>>> all_positive([-1,\
    \ 2, -3, 4])\ntrue\n>>> all_positive([-1, 2, -3, -4])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive([-1, 2, -3, 5])\nfalse\n>>> all_positive([-1,\
    \ 2, -3, 5])\nfalse\n>>> all_positive\nusing Test\n\n@testset begin\n\ncandidate\
    \ = pairs_sum_to_zero;\n\t@test(candidate([1, 3, 5, 0]) == false)\n\t@test(candidate([1,\
    \ 3, -2, 1]) == false)\n\t@test(candidate([1, 2, 3, 7]) == false)\n\t@test(candidate([2,\
    \ 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1]) == false)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3, 9, -1, 3, 2, 31]) == true)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\t@test(candidate([-3, 9,\
    \ -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3mj_ssei.jl:33\nin expression starting at\
    \ /tmp/tmp3mj_ssei.jl:33\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0 \n    \
    \        return true\n    return false\nend\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1,3,5,0])\n</cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,3,-2,1])\n\
    </cell>\n<code language=julia-1.0>\npairs_sum_to_zero([1,2,3,7])\n</cell>\n<code\
    \ language=julia-1.0>\npairs_sum_to_zero([2,4,-5,3,5,7])\n</cell>\n<code language=julia-1.0>\n\
    pairs_sum_to_zero([1])\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a vector of integers as an input and returns the number of pairs that sum to\
    \ zero.\nusing Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpacgupnpt.jl:24\nin expression starting at\
    \ /tmp/tmpacgupnpt.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    pairs_sum_to_zero takes a vector of integers as an input.\n\
    \    it returns true if there are two distinct elements in the vector that\n \
    \   sum to zero, and false otherwise.\n    >>> pairs_sum_to_zero([1, 3, 5, 0])\n\
    \    false\n    >>> pairs_sum_to_zero([1, 3, -2, 1])\n    false\n    >>> pairs_sum_to_zero([1,\
    \ 2, 3, 7])\n    false\n    >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n    true\n\
    \    >>> pairs_sum_to_zero([1])\n    false\n    \"\"\"\nfunction pairs_sum_to_zero(l::Vector{Int64})::Bool\
    \ \n    \n    sum = 0\n    for i in l\n        sum += i\n        if sum == 0\n\
    \            return true\n        end\n    end\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\npairs_sum_to_zero([1,3,-2,1])\n</cell>\n<text>\nPart\
    \ III. Finding all pairs of integers in a given vector whose sum is exactly zero\n\
    using Test\n\n@testset begin\n\ncandidate = pairs_sum_to_zero;\n\t@test(candidate([1,\
    \ 3, 5, 0]) == false)\n\t@test(candidate([1, 3, -2, 1]) == false)\n\t@test(candidate([1,\
    \ 2, 3, 7]) == false)\n\t@test(candidate([2, 4, -5, 3, 5, 7]) == true)\n\t@test(candidate([1])\
    \ == false)\n\t@test(candidate([-3, 9, -1, 3, 2, 30]) == true)\n\t@test(candidate([-3,\
    \ 9, -1, 3, 2, 31]) == true)\n\t@test(candidate([-3, 9, -1, 4, 2, 30]) == false)\n\
    \t@test(candidate([-3, 9, -1, 4, 2, 31]) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1z7rqz9_.jl:27\nin expression starting at\
    \ /tmp/tmp1z7rqz9_.jl:27\n"
  stdout: ''

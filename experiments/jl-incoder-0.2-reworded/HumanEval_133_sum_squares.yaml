name: HumanEval_133_sum_squares
language: jl
prompt: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
  \ of squared numbers in the given vector,\n    round each element in the vector\
  \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
  \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
  \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n \
  \   6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
  \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
  \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
  \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
  \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
  \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
  \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
completions: ["    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return\
    \ sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n   \
    \ return sum\nend", "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0,\
    \ 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,\
    \ 1.0, 1.0])\n</cell>\n<text>\nExercise 3\nWrite a function that returns the number\
    \ of elements in a vector that satisfy a condition. For example, if the vector\
    \ is [1.0, 2.0, 3.0, 4.0, 5.0], your function should return 2 because there are\
    \ 2 elements in the vector that satisfy the condition: x^2 \u2265 3.", "    sum\
    \ = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2,\
    \ 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the squares of the\
    \ numbers in the given vector.", "    sum = 0\n    for i in lst\n        sum +=\
    \ i*i\n    end\n    return sum\nend", "    sum = 0\n    for i in lst\n       \
    \ sum += i * i\n    end\n    return sum\nend", "    sum = 0\n    for i in lst\n\
    \        sum += i^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the squares of the numbers in a\
    \ vector.", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.0>\nsum_squares([1.0, 2.0, 3.0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code\
    \ language=julia-1.0>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([-2.4,\
    \ 1.0, 1.0])\n</cell>\n<text>\nExercise 3\nWrite a function that returns the number\
    \ of elements in a vector. \nExamples:\n>>> lst([1.0, 2.0, 3.0])\n3\n>>> lst([1.0,\
    \ 4.0, 9.0])\n3\n>>> lst([1.0, 3.0, 5.0, 7.0])\n4\n>>> lst([1.4, 4.2, 0.0])\n\
    3\n>>> lst([-2.4, 1.0, 1.0])\n3\n>>> lst([1.0, 2.0, 3.0, 4.0, 5.0])\n5\n>>> lst([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 6.0])\n6\n>>> lst([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0])\n\
    7\n>>> lst([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0])\n8\n>>> lst([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 6.0, 7.0, 8.0, 9.0])\n9\n>>> lst([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0,\
    \ 8.0, 9.0, 10.0])\n10\n>>> lst([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0,\
    \ 10.0, 11.0])\n11\n>>> lst([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0,\
    \ 11.0, 12.0])\n12\n>>> lst([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0,\
    \ 11.0, 12.0, 13.0])\n13\n>>> lst([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0,\
    \ 10.0, 11.0, 12.0, 13.0, 14.0])\n14\n>>> lst([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0,\
    \ 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0])\n15\n>>> lst([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0])\n16\n\
    >>> lst([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0,\
    \ 14.0, 15.0, 16.0, 17.0])\n17", "    sum = 0\n    for i in lst\n        sum +=\
    \ i^2\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n       \
    \ sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the sum of the squares of the first n numbers\
    \ in a vector", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares(lst)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the squares of the\
    \ numbers in the given vector.", "    sum = 0\n    for i in lst\n        sum +=\
    \ i * i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares(lst)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of elements\
    \ in a vector that satisfy a condition. For example, if the vector is [1.0, 2.0,\
    \ 3.0, 4.0, 5.0] and the condition is x > 2, then the function should return 3.",
  "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of elements\
    \ in a vector that are greater than a given value.", "    sum = 0\n    for i in\
    \ lst\n        sum += i^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the squares of the numbers in the\
    \ given vector.", "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0,\
    \ 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,\
    \ 1.0, 1.0])\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the squares of the numbers in the given vector.\nExamples:\n>>> lst([1.0,\
    \ 2.0, 3.0])\n14\n>>> lst([1.0, 4.0, 9.0])\n98\n>>> lst([1.0, 3.0, 5.0, 7.0])\n\
    84\n>>> lst([1.4, 4.2, 0.0])\n29\n>>> lst([-2.4, 1.0, 1.0])\n6", "    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2,\
    \ 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a vector of numbers and returns\
    \ the sum of the squares of the numbers.", "    sum = 0\n    for x in lst\n  \
    \      sum += x^2\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n\
    \        sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes in a list of numbers and returns the sum of the\
    \ squared numbers in the list.\nExamples:\n>>> lst([1.0, 2.0, 3.0])\n14\n>>> lst([1.0,\
    \ 4.0, 9.0])\n98\n>>> lst([1.0, 3.0, 5.0, 7.0])\n84\n>>> lst([1.4, 4.2, 0.0])\n\
    29\n>>> lst([-2.4, 1.0, 1.0])\n6", "    sum = 0\n    for x in lst\n        sum\
    \ += x^2\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n    \
    \    sum += x^2\n    end\n    return sum\nend", "    sum = 0\n    for i in lst\n\
    \        sum += i * i\n    end\n    return sum\nend", "    sum = 0\n    for x\
    \ in lst\n        sum += x^2\n    end\n    return sum\nend", "    sum = 0\n  \
    \  for x in lst\n        sum += x^2\n    end\n    return sum\nend", "    sum =\
    \ 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend", "  \
    \  sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code\
    \ language=julia-1.0>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the squares\
    \ of the first n integers in a list.", "    sum = 0\n    for i in lst\n      \
    \  sum += i^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector of numbers and returns the sum of squared\
    \ numbers in the vector.", "    sum = 0\n    for i in lst\n        sum += i*i\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the product of numbers in a given vector.\nExamples:\n    >>> lst([1.0,\
    \ 2.0, 3.0])\n    6\n    >>> lst([1.0, 4.0, 9.0])\n    24\n    >>> lst([1.0, 3.0,\
    \ 5.0, 7.0])\n    49\n    >>> lst([1.4, 4.2, 0.0])\n    0.2\n    >>> lst([-2.4,\
    \ 1.0, 1.0])\n    -1\n    ", "    sum = 0\n    for i in lst\n        sum += i*i\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the number of elements in a vector that are greater than a given value.",
  "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the product of all\
    \ the numbers in a vector.", "    sum = 0\n    for x in lst\n        sum += x^2\n\
    \    end\n    return sum\nend", "    sum = 0\n    for x in lst\n        sum +=\
    \ x^2\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n       \
    \ sum += x^2\n    end\n    return sum\nend", "    sum = 0\n    for i in lst\n\
    \        sum += i^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the square root of a number. \nExamples:\n\
    >>> sqrt(9)\n3\n>>> sqrt(-3)\n\u22123\n>>> sqrt(0)\n\u221E\n>>> sqrt(1)\n1", " \
    \   sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend",
  "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end", "    sum = 0\n    for i in lst\n        sum += i*i\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares(lst)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of elements in a vector\n\
    that satisfy a condition. For example, if the vector is [1,2,3,4,5,6,7,8,9] and\
    \ the condition is x > 3, the function should return 5.", "    sum = 0\n    for\
    \ x in lst\n        sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares(lst)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ maximum of a vector. \nThe function should take in a vector of numbers and return\
    \ a single number.\nExamples:\n    >>> lst([1.0, 2.0, 3.0])\n    3.0\n    >>>\
    \ lst([1.0, 4.0, 9.0])\n    9.0\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n    7.0\n\
    \    >>> lst([1.4, 4.2, 0.0])\n    4.0\n    >>> lst([-2.4, 1.0, 1.0])\n    1.0\n\
    \    ", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return\
    \ sum\nend", "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n \
    \   return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares(lst)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes in a vector of numbers and returns\
    \ the sum of the squares of the numbers in the vector.\nExamples:\n>>> lst([1.0,\
    \ 2.0, 3.0])\n14\n>>> lst([1.0, 4.0, 9.0])\n98\n>>> lst([1.0, 3.0, 5.0, 7.0])\n\
    84\n>>> lst([1.4, 4.2, 0.0])\n29\n>>> lst([-2.4, 1.0, 1.0])\n6", "    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return sum\nend", "    sum\
    \ = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\nend",
  "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend",
  "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end", "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return\
    \ sum\nend", "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n \
    \   return sum\nend\n</cell>\n<code language=julia-1.0>\nsum_squares(lst)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes in a vector of numbers and returns\
    \ the product of all the numbers in the vector. \nExamples:\n>>> lst([1.0, 2.0,\
    \ 3.0])\n    6\n>>> lst([1.0, 4.0, 9.0])\n    27\n>>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    49\n>>> lst([1.4, 4.2, 0.0])\n    0.2\n>>> lst([-2.4, 1.0, 1.0])\n    -1",
  "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 2", "    sum = 0\n    for i in lst\n        sum += i\
    \ * i\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n       \
    \ sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.4>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.4>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.4>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.4>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.4>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the maximum of a vector. \nExamples:\n    >>>\
    \ lst([1.0, 2.0, 3.0])\n    3.0\n    >>> lst([1.0, 4.0, 9.0])\n    9.0\n    >>>\
    \ lst([1.0, 3.0, 5.0, 7.0])\n    7.0\n    >>> lst([1.4, 4.2, 0.0])\n    4.0\n\
    \    >>> lst([-2.4, 1.0, 1.0])\n    1.0\n    ", "    sum = 0\n    for x in lst\n\
    \        sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares(lst)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ maximum of a vector. \nExamples:\n    >>> lst([1.0, 2.0, 3.0])\n    3.0\n  \
    \  >>> lst([1.0, 4.0, 9.0])\n    9.0\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n    7.0\n\
    \    >>> lst([1.4, 4.2, 0.0])\n    2.0\n    >>> lst([-2.4, 1.0, 1.0])\n    1.0\n\
    \    ", "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return\
    \ sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n   \
    \ return sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n\
    \    return sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n  \
    \  end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the sum of the squares of the numbers in the given vector.", "    sum\
    \ = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\nend",
  "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend",
  "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the maximum of a vector",
  "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend",
  "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the sum of the squares\
    \ of the numbers in the given vector, rounded up to the next integer.", "    sum\
    \ = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend", " \
    \   sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 2", "    sum = 0\n    for i in lst\n        sum += i\
    \ * i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares(lst)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a vector of numbers and\
    \ returns the product of the numbers in the vector.\nExamples:\n>>> lst([1.0,\
    \ 2.0, 3.0])\n    6.0\n>>> lst([1.0, 4.0, 9.0])\n    30.0\n>>> lst([1.0, 3.0,\
    \ 5.0, 7.0])\n    15.0\n>>> lst([1.4, 4.2, 0.0])\n    2.0\n>>> lst([-2.4, 1.0,\
    \ 1.0])\n    0.0", "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares(lst)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of squared numbers in\
    \ the given vector.\nExamples:\n>>> lst([1.0, 2.0, 3.0])\n14\n>>> lst([1.0, 4.0,\
    \ 9.0])\n98\n>>> lst([1.0, 3.0, 5.0, 7.0])\n84\n>>> lst([1.4, 4.2, 0.0])\n29\n\
    >>> lst([-2.4, 1.0, 1.0])\n6", "    sum = 0\n    for i in lst\n        sum +=\
    \ i^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares(lst)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the squares\
    \ of the numbers in the given vector.\nExamples:\n>>> lst([1.0, 2.0, 3.0])\n14\n\
    >>> lst([1.0, 4.0, 9.0])\n98\n>>> lst([1.0, 3.0, 5.0, 7.0])\n84\n>>> lst([1.4,\
    \ 4.2, 0.0])\n29\n>>> lst([-2.4, 1.0, 1.0])\n6", "    sum = 0\n    for x in lst\n\
    \        sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.3>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.3>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.3>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.3>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.3>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of elements in a vector that are\
    \ positive.", "    sum = 0\n    for i in lst\n        sum += i*i\n    end\n  \
    \  return sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares(lst)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the squares of the\
    \ numbers in the given vector.", "    sum = 0\n    for x in lst\n        sum +=\
    \ x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the sum of the squares of the numbers in the given vector.", "    sum\
    \ = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of elements\
    \ in a vector that are positive.", "    sum = 0\n    for x in lst\n        sum\
    \ += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the maximum of a vector. \nExamples:\n>>> lst([1.0, 2.0, 3.0])\n3.0\n\
    >>> lst([1.0, 4.0, 9.0])\n9.0\n>>> lst([1.0, 3.0, 5.0, 7.0])\n7.0\n>>> lst([1.4,\
    \ 4.2, 0.0])\n4.0\n>>> lst([-2.4, 1.0, 1.0])\n1.0", "    sum = 0\n    for x in\
    \ lst\n        sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\n\
    Write a function that returns the sum of the squares of the numbers in the given\
    \ vector.", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares(lst)\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that takes in a vector of numbers and returns the\
    \ sum of the squared numbers in the vector.", "    sum = 0\n    for i in lst\n\
    \        sum += i * i\n    end\n    return sum\nend", "    sum = 0\n    for x\
    \ in lst\n        sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the squares of the first n numbers\
    \ in a vector. \nExamples:\n>>> lst([1.0, 2.0, 3.0])\n14\n>>> lst([1.0, 4.0, 9.0])\n\
    98\n>>> lst([1.0, 3.0, 5.0, 7.0])\n84\n>>> lst([1.4, 4.2, 0.0])\n29\n>>> lst([-2.4,\
    \ 1.0, 1.0])\n6", "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n\
    \    return sum\nend", "    sum = 0\n    for i in lst\n        sum += i * i\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the maximum of a vector. \nExamples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    3\n    >>> lst([1.0, 4.0, 9.0])\n    9\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    7\n    >>> lst([1.4, 4.2, 0.0])\n    4\n    >>> lst([-2.4, 1.0, 1.0])\n \
    \   1", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,\
    \ 1.0, 1.0])\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the squares of the numbers in the given vector.\nExamples:\n>>> lst([1.0,\
    \ 2.0, 3.0])\n14\n>>> lst([1.0, 4.0, 9.0])\n98\n>>> lst([1.0, 3.0, 5.0, 7.0])\n\
    84\n>>> lst([1.4, 4.2, 0.0])\n29\n>>> lst([-2.4, 1.0, 1.0])\n6", "    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return sum\nend", "    sum\
    \ = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2,\
    \ 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the square root of a number",
  "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.3>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code\
    \ language=julia-1.3>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.3>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.3>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.3>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of elements\
    \ in a vector that are less than a given value.", "    sum = 0\n    for x in lst\n\
    \        sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of elements in a vector that are\
    \ less than a given value.", "    sum = 0\n    for x in lst\n        sum += x^2\n\
    \    end\n    return sum\nend", "    sum = 0\n    for i in lst\n        sum +=\
    \ i*i\n    end\n    return sum\nend", "    sum = 0\n    for i in lst\n       \
    \ sum += i^2\n    end\n    return sum\nend", "    sum = 0\n    for i in lst\n\
    \        sum += i*i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.0>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the squares of the numbers in the\
    \ given vector.", "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.0>\nsum_squares([1.0, 2.0,\
    \ 3.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n\
    <code language=julia-1.0>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([-2.4,\
    \ 1.0, 1.0])\n</cell>\n<text>\nExercise: Write a function that returns the sum\
    \ of the squares of the numbers in the given vector. \nThe function should round\
    \ each element in the vector to the upper int(Ceiling) first.", "    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return sum\nend", "    sum\
    \ = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\nend",
  "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code\
    \ language=julia-1.0>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the squares\
    \ of the numbers in the given vector.\nExamples:\n>>> lst([1.0, 2.0, 3.0])\n14\n\
    >>> lst([1.0, 4.0, 9.0])\n98\n>>> lst([1.0, 3.0, 5.0, 7.0])\n84\n>>> lst([1.4,\
    \ 4.2, 0.0])\n29\n>>> lst([-2.4, 1.0, 1.0])\n6", "    sum = 0\n    for i in lst\n\
    \        sum += i^2\n    end\n    return sum\nend", "    sum = 0\n    for x in\
    \ lst\n        sum += x^2\n    end\n    return sum\nend", "    sum = 0\n    for\
    \ i in lst\n        sum += i^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a vector of numbers and returns the sum of the\
    \ squared numbers in the vector.", "    sum = 0\n    for i in lst\n        sum\
    \ += i * i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 2", "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return\
    \ sum\nend", "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n \
    \   return sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n   \
    \ end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares(lst)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the squares\
    \ of the numbers in the given vector. \nThe function should round each element\
    \ in the vector to the upper int(Ceiling) first.\nExamples:\n>>> lst([1.0, 2.0,\
    \ 3.0])\n14\n>>> lst([1.0, 4.0, 9.0])\n98\n>>> lst([1.0, 3.0, 5.0, 7.0])\n84\n\
    >>> lst([1.4, 4.2, 0.0])\n29\n>>> lst([-2.4, 1.0, 1.0])\n6", "    sum = 0\n  \
    \  for i in lst\n        sum += i*i\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares(lst)\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the product of numbers in a given vector. \nExamples:\n\
    >>> lst([1.0, 2.0, 3.0])\n    6\n>>> lst([1.0, 4.0, 9.0])\n    27\n>>> lst([1.0,\
    \ 3.0, 5.0, 7.0])\n    49\n>>> lst([1.4, 4.2, 0.0])\n    0.2\n>>> lst([-2.4, 1.0,\
    \ 1.0])\n    -1", "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n\
    \    return sum\nend", "    sum = 0\n    for i in lst\n        sum += i * i\n\
    \    end\n    return sum\nend", "    sum = 0\n    for x in lst\n        sum +=\
    \ x^2\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n       \
    \ sum += x^2\n    end\n    return sum\nend", "    sum = 0\n    for i in lst\n\
    \        sum += i * i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares(lst)\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for x\
    \ in lst\n        sum += x^2\n    end\n    return sum\nend", "    sum = 0\n  \
    \  for i in lst\n        sum += i * i\n    end\n    return sum\nend", "    sum\
    \ = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend", " \
    \   sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend",
  "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.0>\nsum_squares(lst)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of elements in a vector that are\
    \ less than a given value.", "    sum = 0\n    for i in lst\n        sum += i^2\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the maximum of a vector. \nExamples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    3.0\n    >>> lst([1.0, 4.0, 9.0])\n    9.0\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    7.0\n    >>> lst([1.4, 4.2, 0.0])\n    4.0\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    1.0\n    ", "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0,\
    \ 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,\
    \ 1.0, 1.0])\n</cell>\n<text>\nExercise 2", "    sum = 0\n    for i in lst\n \
    \       sum += i * i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares(lst)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ sum of the squares of the numbers in the given vector, rounded to\nthe upper\
    \ int(Ceiling) first. Examples:\n>>> lst([1.0, 2.0, 3.0])\n14\n>>> lst([1.0, 4.0,\
    \ 9.0])\n98\n>>> lst([1.0, 3.0, 5.0, 7.0])\n84\n>>> lst([1.4, 4.2, 0.0])\n29\n\
    >>> lst([-2.4, 1.0, 1.0])\n6", "    sum = 0\n    for i in lst\n        sum +=\
    \ i * i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the sum of the squares of the numbers in the given vector.", "    sum\
    \ = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2,\
    \ 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n\
    <text>\nExercise\nWrite a function that takes in a list of numbers and returns\
    \ the sum of squared numbers in the given vector, round each element in the vector\
    \ to the upper int(Ceiling) first.", "    sum = 0\n    for x in lst\n        sum\
    \ += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the maximum of a vector", "    sum = 0\n    for x in lst\n        sum\
    \ += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the sum of the squares of the numbers in the given vector, rounded to\n\
    the upper int(Ceiling) first.", "    sum = 0\n    for x in lst\n        sum +=\
    \ x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the sum of the squares of the numbers in the given vector.", "    sum\
    \ = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\nend",
  "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend",
  "    sum = 0\n    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_squares(lst)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the squares of the numbers in the\
    \ given vector. \nThe vector can contain any type of numbers.\nExamples:\n>>>\
    \ lst([1.0, 2.0, 3.0])\n14\n>>> lst([1.0, 4.0, 9.0])\n98\n>>> lst([1.0, 3.0, 5.0,\
    \ 7.0])\n84\n>>> lst([1.4, 4.2, 0.0])\n29\n>>> lst([-2.4, 1.0, 1.0])\n6", "  \
    \  sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.0>\nsum_squares([1.0, 2.0, 3.0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code\
    \ language=julia-1.0>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([-2.4,\
    \ 1.0, 1.0])\n</cell>\n<text>\nExercise\nWrite a function that calculates the\
    \ mean of a vector.", "    sum = 0\n    for i in lst\n        sum += i * i\n \
    \   end\n    return sum\nend", "    sum = 0\n    for i in lst\n        sum +=\
    \ i * i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares(lst)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the squares\
    \ of the numbers in the given vector.", "    sum = 0\n    for x in lst\n     \
    \   sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 2", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return\
    \ sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares(lst)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the maximum of a vector. \n\
    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n    3.0\n    >>> lst([1.0, 4.0, 9.0])\n\
    \    9.0\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n    7.0\n    >>> lst([1.4, 4.2, 0.0])\n\
    \    4.0\n    >>> lst([-2.4, 1.0, 1.0])\n    1.0\n    ", "    sum = 0\n    for\
    \ x in lst\n        sum += x^2\n    end\n    return sum\nend", "    sum = 0\n\
    \    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.0>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.0,\
    \ 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4, 4.2,\
    \ 0.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of squared numbers in\
    \ the given vector.\nExamples:\n>>> lst([1.0, 2.0, 3.0])\n14\n>>> lst([1.0, 4.0,\
    \ 9.0])\n98\n>>> lst([1.0, 3.0, 5.0, 7.0])\n84\n>>> lst([1.4, 4.2, 0.0])\n29\n\
    >>> lst([-2.4, 1.0, 1.0])\n6", "    sum = 0\n    for x in lst\n        sum +=\
    \ x^2\n    end\n    return sum\nend", "    sum = 0\n    for i in lst\n       \
    \ sum += i*i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([", "    sum = 0\n  \
    \  for x in lst\n        sum += x^2\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2,\
    \ 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the squares of the\
    \ first n integers in a vector.", "    sum = 0\n    for i in lst\n        sum\
    \ += i * i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.3>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.3>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.3>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.3>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.3>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the product of numbers in a vector.", "   \
    \ sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\nend",
  "    sum = 0\n    for i in lst\n        sum += i*i\n    end\n    return sum\nend",
  "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\nsum_squares(lst)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes in a list of numbers and returns the sum of the\
    \ squared numbers in the list. \nExamples:\nlst([1.0, 2.0, 3.0])\n14\nlst([1.0,\
    \ 4.0, 9.0])\n98\nlst([1.0, 3.0, 5.0, 7.0])\n84\nlst([1.4, 4.2, 0.0])\n29\nlst([-2.4,\
    \ 1.0, 1.0])\n6", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n\
    \    return sum\nend", "    sum = 0\n    for i in lst\n        sum += i^2\n  \
    \  end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\nsum_squares([1.0,\
    \ 2.0, 3.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.0, 4.0, 9.0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n\
    <code language=julia-1.0>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the sum of the squares of the numbers in the given vector.", "    sum\
    \ = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2,\
    \ 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the squares of the\
    \ numbers in the given vector.", "    sum = 0\n    for x in lst\n        sum +=\
    \ x^2\n    end\n    return sum\nend", "    sum = 0\n    for i in lst\n       \
    \ sum += i * i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares(lst)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ product of numbers in a given vector.", "    sum = 0\n    for i in lst\n   \
    \     sum += i * i\n    end\n    return sum\nend", "    sum = 0\n    for i in\
    \ lst\n        sum += i*i\n    end\n    return sum\nend", "    sum = 0\n    for\
    \ x in lst\n        sum += x^2\n    end\n    return sum\nend", "    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return sum\nend", "    sum\
    \ = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend", " \
    \   sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.3>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n\
    <code language=julia-1.3>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.3>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.3>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.3>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the squares\
    \ of the numbers in the given vector.", "    sum = 0\n    for i in lst\n     \
    \   sum += i * i\n    end\n    return sum\nend", "    sum = 0\n    for i in lst\n\
    \        sum += i * i\n    end\n    return sum\nend", "    sum = 0\n    for i\
    \ in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of elements in a vector", "    sum\
    \ = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend", " \
    \   sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code\
    \ language=julia-1.0>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise: Write a function that returns the product of the numbers\
    \ in the given vector.", "    sum = 0\n    for i in lst\n        sum += i * i\n\
    \    end\n    return sum\nend", "    sum = 0\n    for i in lst\n        sum +=\
    \ i^2\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n       \
    \ sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\n\
    Write a function that returns the sum of the squares of the numbers in the given\
    \ vector. \nThe vector can contain any number of elements.\nThe function should\
    \ round each element in the vector to the upper int(Ceiling) first.\nExamples:\n\
    >>> lst([1.0, 2.0, 3.0])\n14\n>>> lst([1.0, 4.0, 9.0])\n98\n>>> lst([1.0, 3.0,\
    \ 5.0, 7.0])\n84\n>>> lst([1.4, 4.2, 0.0])\n29\n>>> lst([-2.4, 1.0, 1.0])\n6",
  "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend",
  "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend",
  "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend",
  "    sum = 0\n    for i in lst\n        sum += i*i\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code\
    \ language=julia-1.0>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the squares\
    \ of the numbers in the given vector.\nExamples:\n>>> lst([1.0, 2.0, 3.0])\n14\n\
    >>> lst([1.0, 4.0, 9.0])\n98\n>>> lst([1.0, 3.0, 5.0, 7.0])\n84\n>>> lst([1.4,\
    \ 4.2, 0.0])\n29\n>>> lst([-2.4, 1.0, 1.0])\n6", "    sum = 0\n    for i in lst\n\
    \        sum += i^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the sum of the squares of the first $n$ numbers\
    \ in a vector. \nExamples:\n>>> lst([1.0, 2.0, 3.0])\n14\n>>> lst([1.0, 4.0, 9.0])\n\
    98\n>>> lst([1.0, 3.0, 5.0, 7.0])\n84\n>>> lst([1.4, 4.2, 0.0])\n29\n>>> lst([-2.4,\
    \ 1.0, 1.0])\n6", "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n\
    \    return sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n  \
    \  end\n    return sum\nend", "    sum = 0\n    for x in lst\n        sum += x^2\n\
    \    end\n    return sum\nend", "    sum = 0\n    for i in lst\n        sum +=\
    \ i^2\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n       \
    \ sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares(lst)\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for i\
    \ in lst\n        sum += i^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.0>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 2", "    sum = 0\n    for i in lst\n        sum += i*i\n    end\n    return\
    \ sum\nend", "    sum = 0\n    for i in lst\n        sum += i * i\n    end\n \
    \   return sum\nend\n</cell>\n<code language=julia-1.3>\nsum_squares([1.0, 2.0,\
    \ 3.0])\n</cell>\n<code language=julia-1.3>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n\
    <code language=julia-1.3>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.3>\n\
    sum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.3>\nsum_squares([-2.4,\
    \ 1.0, 1.0])\n</cell>\n<text>\nExercise\nWrite a function that calculates the\
    \ sum of squared numbers in a given vector.", "    sum = 0\n    for i in lst\n\
    \        sum += i^2\n    end\n    return sum\nend", "    sum = 0\n    for i in\
    \ lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the squares of the numbers in the\
    \ given vector. \nExamples:\n>>> lst([1.0, 2.0, 3.0])\n14\n>>> lst([1.0, 4.0,\
    \ 9.0])\n98\n>>> lst([1.0, 3.0, 5.0, 7.0])\n84\n>>> lst([1.4, 4.2, 0.0])\n29\n\
    >>> lst([-2.4, 1.0, 1.0])\n6", "    sum = 0\n    for i in lst\n        sum +=\
    \ i*i\n    end\n    return sum\nend", "    sum = 0\n    for x in lst\n       \
    \ sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the maximum of a vector. \nThe function should\
    \ take one argument, a list of numbers.\nThe function should return the maximum\
    \ element in the list.\nExamples:\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0,\
    \ 4.0, 9.0])\n9.0\n>>> lst([1.0, 3.0, 5.0, 7.0])\n7.0\n>>> lst([1.4, 4.2, 0.0])\n\
    4.0\n>>> lst([-2.4, 1.0, 1.0])\n1.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0,\
    \ 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n\
    >>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst", "    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return\
    \ sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,\
    \ 1.0, 1.0])\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the squares of the numbers in the given vector.", "    sum = 0\n    for i\
    \ in lst\n        sum += i^2\n    end\n    return sum\nend", "    sum = 0\n  \
    \  for x in lst\n        sum += x^2\n    end\n    return sum\nend", "    sum =\
    \ 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares(lst)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the product of numbers in a vector.", "    sum = 0\n\
    \    for x in lst\n        sum += x^2\n    end\n    return sum\nend", "    sum\
    \ = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend", " \
    \   sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 2", "    sum = 0\n    for x in lst\n        sum += x^2\n\
    \    end\n    return sum\nend", "    sum = 0\n    for i in lst\n        sum +=\
    \ i * i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\nsum_squares(lst)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the product of numbers\
    \ in a given vector.", "    sum = 0\n    for i in lst\n        sum += i * i\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares(lst)\n\
    </cell>\n<text>\nProblem 7\nWrite a function that returns the maximum of a vector.\
    \ \nThe function should take in a vector of numbers and return the maximum value\
    \ of the vector.\nExamples:\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 4.0,\
    \ 9.0])\n9.0\n>>> lst([1.0, 3.0, 5.0, 7.0])\n7.0\n>>> lst([1.4, 4.2, 0.0])\n4.0\n\
    >>> lst([-2.4, 1.0, 1.0])\n1.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.", "    sum\
    \ = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.0>\nsum_squares(lst)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the maximum of a vector. \nExamples:\n>>> lst([1.0,\
    \ 2.0, 3.0])\n3.0\n>>> lst([1.0, 4.0, 9.0])\n9.0\n>>> lst([1.0, 3.0, 5.0, 7.0])\n\
    7.0\n>>> lst([1.4, 4.2, 0.0])\n4.0\n>>> lst([-2.4, 1.0, 1.0])\n1.0\n>>> lst([1.0,\
    \ 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n\
    >>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n", "    sum = 0\n    for\
    \ i in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.0>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.0,\
    \ 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4, 4.2,\
    \ 0.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the maximum of a vector. \n\
    The function should work for both real and complex numbers.\nExamples:\n    >>>\
    \ lst([1.0, 2.0, 3.0])\n    3.0\n    >>> lst([1.0, 4.0, 9.0])\n    9.0\n    >>>\
    \ lst([1.0, 3.0, 5.0, 7.0])\n    7.0\n    >>> lst([1.4, 4.2, 0.0])\n    4.0\n\
    \    >>> lst([-2.4, 1.0, 1.0])\n    1.0\n    >>> lst([1.0, 2.0, 3.0, 4.0])\n \
    \   4.0\n    >>> lst([1.0, 2.0, 3.0, 4.0, 5.0])\n    5.0\n    >>> lst([1.0, 2.0,\
    \ 3.0, 4.0, 5.0, 6.0])\n    6.0\n    >>> lst([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0])\n\
    \    7.0\n    >>> lst([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0])\n    8.0\n   \
    \ >>> lst([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0])\n    9.0\n    >>> lst([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0])\n    10.0\n    >>> lst([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0])\n    11.0\n    >>> lst([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0])\n    12.0\n    >>>\
    \ lst([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0])\n\
    \    13.0\n    >>> lst([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0,\
    \ 12.0, 13.0, 14.0])\n    14.0\n    >>> lst([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0,\
    \ 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0])\n    15.0\n    >>> lst([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, ", "    sum\
    \ = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend", " \
    \   sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_squares(lst)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the product of numbers in a given vector.",
  "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the squares\
    \ of the numbers in the given vector. \nExamples:\n>>> lst([1.0, 2.0, 3.0])\n\
    14\n>>> lst([1.0, 4.0, 9.0])\n98\n>>> lst([1.0, 3.0, 5.0, 7.0])\n84\n>>> lst([1.4,\
    \ 4.2, 0.0])\n29\n>>> lst([-2.4, 1.0, 1.0])\n6", "    sum = 0\n    for i in lst\n\
    \        sum += i * i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0, 4.0, 5.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 6.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 6.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0])\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0,\
    \ 10.0, 11.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0, 4.0, 5.0, 6.0,\
    \ 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0,\
    \ 14.0, 15.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0,\
    \ 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.", "    sum = 0\n    for\
    \ i in lst\n        sum += i*i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares(lst)\n</cell>\n<text>\nExercise 2\nWrite a function that takes in\
    \ a vector of numbers and returns the product of all the numbers in the vector.\
    \ \nExamples:\n>>> lst([1.0, 2.0, 3.0])\n    6\n>>> lst([1.0, 4.0, 9.0])\n   \
    \ 27\n>>> lst([1.0, 3.0, 5.0, 7.0])\n    49\n>>> lst([1.4, 4.2, 0.0])\n    0.2\n\
    >>> lst([-2.4, 1.0, 1.0])\n    -1", "    sum = 0\n    for i in lst\n        sum\
    \ += i*i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ calculates the average of a given vector. \nThe function should take one argument,\
    \ a vector of numbers.\nThe function should return the average of the numbers\
    \ in the vector.\nExamples:\n>>> lst([1.0, 2.0, 3.0])\n1.5\n>>> lst([1.0, 4.0,\
    \ 9.0])\n3.33333\n>>> lst([1.4, 4.2, 0.0])\n2.8\n>>> lst([-2.4, 1.0, 1.0])\n1.0",
  "    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>\nsum_squares(lst)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the maximum of a vector. \nThe function should\
    \ take in a vector of numbers and return the maximum number in the vector. \n\
    Examples:\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 4.0, 9.0])\n9.0\n>>> lst([1.0,\
    \ 3.0, 5.0, 7.0])\n7.0\n>>> lst([1.4, 4.2, 0.0])\n2.0\n>>> lst([-2.4, 1.0, 1.0])\n\
    1.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0,\
    \ 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n\
    >>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>>\
    \ lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0, 3.0])\n3.0\n>>> lst([1.0, 2.0,\
    \ 3.0])\n3.0\n>>> lst", "    sum = 0\n    for x in lst\n        sum += x^2\n \
    \   end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the sum of the squares of the first n integers in a vector.", "    sum\
    \ = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2,\
    \ 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the squares of the\
    \ first n integers in a vector. \nExamples:\n>>> lst([1.0, 2.0, 3.0])\n14\n>>>\
    \ lst([1.0, 4.0, 9.0])\n98\n>>> lst([1.0, 3.0, 5.0, 7.0])\n84\n>>> lst([1.4, 4.2,\
    \ 0.0])\n29\n>>> lst([-2.4, 1.0, 1.0])\n6", "    sum = 0\n    for i in lst\n \
    \       sum += i * i\n    end\n    return sum\nend", "    sum = 0\n    for x in\
    \ lst\n        sum += x^2\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.0>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the maximum of a given vector.", "    sum =\
    \ 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2,\
    \ 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of elements in a\
    \ vector that are greater than a given value.", "    sum = 0\n    for x in lst\n\
    \        sum += x^2\n    end\n    return sum\nend", "    sum = 0\n    for i in\
    \ lst\n        sum += i * i\n    end\n    return sum\nend", "    sum = 0\n   \
    \ for x in lst\n        sum += x^2\n    end\n    return sum\nend", "    sum =\
    \ 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2,\
    \ 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of elements in a\
    \ vector that are positive.", "    sum = 0\n    for x in lst\n        sum += x^2\n\
    \    end\n    return sum\nend", "    sum = 0\n    for i in lst\n        sum +=\
    \ i * i\n    end\n    return sum\nend", "    sum = 0\n    for i in lst\n     \
    \   sum += i*i\n    end\n    return sum\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_124_valid_date
language: jl
prompt: "\"\"\"You have to write a function which validates a given date string and\n\
  \    returns true if the date is valid otherwise false.\n    The date is valid if\
  \ all of the following rules are satisfied:\n    1. The date string is not empty.\n\
  \    2. The number of days is not less than 1 or higher than 31 days for months\
  \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days\
  \ for months 4,6,9,11. And, the number of days is not less than 1 or higher than\
  \ 29 for the month 2.\n    3. The months should not be less than 1 or higher than\
  \ 12.\n    4. The date should be in the format: mm-dd-yyyy\n\n    >>> valid_date(\"\
  03-11-2000\")\n    true\n\n    >>> valid_date(\"15-01-2012\")\n    false\n\n   \
  \ >>> valid_date(\"04-0-2040\")\n    false\n\n    >>> valid_date(\"06-04-2020\"\
  )\n    true\n\n    >>> valid_date(\"06/04/2020\")\n    false\n    \"\"\"\nfunction\
  \ valid_date(date::String)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = valid_date;\n\t@test(candidate(\"\
  03-11-2000\") == true)\n\t@test(candidate(\"15-01-2012\") == false)\n\t@test(candidate(\"\
  04-0-2040\") == false)\n\t@test(candidate(\"06-04-2020\") == true)\n\t@test(candidate(\"\
  01-01-2007\") == true)\n\t@test(candidate(\"03-32-2011\") == false)\n\t@test(candidate(\"\
  \") == false)\n\t@test(candidate(\"04-31-3000\") == false)\n\t@test(candidate(\"\
  06-06-2005\") == true)\n\t@test(candidate(\"21-31-2000\") == false)\n\t@test(candidate(\"\
  04-12-2003\") == true)\n\t@test(candidate(\"04122003\") == false)\n\t@test(candidate(\"\
  20030412\") == false)\n\t@test(candidate(\"2003-04\") == false)\n\t@test(candidate(\"\
  2003-04-12\") == false)\n\t@test(candidate(\"04-2003\") == false)\nend\n"
completions: ["    \n    date = Date.parse(date)\n    \n    if date == nil\n     \
    \   return false\n    end\n    \n    if date.day < 1 || date.day > 31\n      \
    \  return false\n    end\n    \n    if date.month < 1 || date.month > 12\n   \
    \     return false\n    end\n    \n    if date.year < 1 || date.year > 9999\n\
    \        return false\n    end\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    date_split = split(date, \"-\")\n    \n    if date_split[1] == \"01\"\
    \ or date_split[1] == \"03\" or date_split[1] == \"05\" or date_split[1] == \"\
    07\" or date_split[1] == \"08\" or date_split[1] == \"10\" or date_split[1] ==\
    \ \"12\" or date_split[1] == \"04\" or date_split[1] == \"06\" or date_split[1]\
    \ == \"09\" or date_split[1] == \"11\" or date_split[1] == \"02\" or date_split[1]\
    \ == \"05\" or date_split[1] == \"07\" or date_split[1] == \"08\" or date_split[1]\
    \ == \"10\" or date_split[1] == \"12\" or date_split[1] == \"01\" or date_split[1]\
    \ == \"03\" or date_split[1] == \"05\" or date_split[1] == \"07\" or date_split[1]\
    \ == \"08\" or date_split[1] == \"10\" or date_split[1] == \"12\" or date_split[1]\
    \ == \"04\" or date_split[1] == \"06\" or date_split[1] == \"09\" or date_split[1]\
    \ == \"11\" or date_split[1] == \"02\" or date_split[1] == \"05\" or date_split[1]\
    \ == \"07\" or date_split[1] == \"08\" or date_split[1] == \"10\" or date_split[1]\
    \ == \"12\" or date_split[1] == \"01\" or date_split[1] == \"03\" or date_split[1]\
    \ == \"05\" or date_split[1] == \"07\" or date_split[1] == \"08\" or date_split[1]\
    \ == \"10\" or date_split[1] == \"12\" or date_split[1] == \"04\" or date_split[1]\
    \ == \"06\" or date_split[1] == \"09\" or date_split[1] == \"11\" or date_split[1]\
    \ == \"02\" or date_split[1] == \"05\" or date_split[1] == \"07\" or date_split[1]\
    \ == \"08\" or date_split[1] == \"10\" or date_split[1] == \"12\" or date_split[1]\
    \ == \"01\" or date_split[1] == \"03\" or date_split[1] == \"05\" or date_split[1]\
    \ == \"07\" or date_split[1] == \"08\" or date_split[1] == \"10\" or date_split[1]\
    \ == \"12\" or date_split[1] == \"04\" or date_split[1] == \"06\" or date_split[1]\
    \ == \"09\" or date_split[1] == \"11\" or date_split[1] == \"02\" or date_split[1]\
    \ == \"05\" or date_split[1] == \"07\" or date_split[1] == \"08\" or date_split[1]\
    \ == \"10\" or date_split[1] == \"12\" or date_split[1] == \"01\" or date_split[1]\
    \ == \"03\" or date_split[1] == \"05\" or date_split[1] == \"07\" or date_split[1]\
    \ == \"08\" or date_split[1] == \"10\" or date_split[1] == \"12\" or date_split[1]\
    \ == \"04\" or date_split[1] == \"06\" or date_split[1] == \"09\" or date_split[1]\
    \ == \"11\" or date_split[1] == \"02\" or date_split[1] == \"05\" or date_split[1]\
    \ == \"07\" or date_split[1] == \"08\" or date_", "    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    valid_date_str = Date.parse(date)\n   \
    \ if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(valid_date_str)\n    if valid_date_str == nil\n        return false\n\
    \    end\n    valid_date_str = Date.parse(valid_date_str)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(valid_date_str)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(valid_date_str)\n    if valid_date_str == nil\n        return false\n\
    \    end\n    valid_date_str = Date.parse(valid_date_str)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(valid_date_str)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(valid_date_str)\n    if valid_date_str == nil\n        return false\n\
    \    end\n    valid_date_str = Date.parse(valid_date_str)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(valid_date_str)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(valid_date_str)\n    if valid_date_str == nil\n        return false\n\
    \    end\n    valid_date_str = Date.parse(valid_date_str)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(valid_date_str)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(valid_date_str)\n    if valid_date_str == nil\n        return false\n\
    \    end\n    valid_date_str = Date.parse(valid_date_str)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(valid_date_str)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(valid_date_str)\n    if valid_date_str == nil\n        return false\n\
    \    end\n    valid_date_str = Date.parse(valid_date_str)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(valid_date_str)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(valid_date_str)\n    if valid_date_str == nil\n        return false\n\
    \    end\n    valid_date_str = Date.parse(valid_date_str)\n    if valid_date_str\
    \ == nil\n        return false\n    end\n    valid_date_str = Date.parse(valid_date_str)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    valid_date_str\
    \ = Date.parse(valid_date_str)\n    if valid_date_str == nil\n        return false\n\
    \    end\n    valid_date_str = Date.parse(valid_date_", "    \n    valid_date::Bool\
    \ = true \n    \n    if date == \"\" \n        valid_date = false \n    else \n\
    \        \n        days::Int = count_days(date) \n        \n        if days ==\
    \ 0 \n            valid_date = false \n        else \n            \n         \
    \   if days > 31 \n                valid_date = false \n            else \n  \
    \              \n                if days > 29 \n                    valid_date\
    \ = false \n                else \n                    \n                    if\
    \ days > 28 \n                        valid_date = false \n                  \
    \  else \n                        \n                        if days > 31 \n  \
    \                          valid_date = false \n                        else \n\
    \                            \n                            if days > 30 \n   \
    \                             valid_date = false \n                          \
    \  else \n                                \n                                if\
    \ days > 31 \n                                    valid_date = false \n      \
    \                          else \n                                    \n     \
    \                               if days > 30 \n                              \
    \          valid_date = false \n                                    else \n  \
    \                                      \n                                    \
    \    if days > 31 \n                                            valid_date = false\
    \ \n                                        else \n                          \
    \                  \n                                            if days > 30\
    \ \n                                                valid_date = false \n    \
    \                                        else \n                             \
    \                   \n                                                if days\
    \ > 31 \n                                                    valid_date = false\
    \ \n                                                else \n                  \
    \                                  \n                                        \
    \            if days > 30 \n                                                 \
    \       valid_date = false \n                                                \
    \    else \n                                                        \n       \
    \                                                 if days > 31 \n            \
    \                                                valid_date = false \n       \
    \                                                 else \n                    \
    \                                        \n                                  \
    \                          if days > 30 \n                                   \
    \                             valid_date = false \n                          \
    \                                  else \n                                   \
    \                             \n                                             \
    \                   if days > 31 \n                                          \
    \                          valid_date = false \n                             \
    \                                   else \n                                  \
    \                                  \n                                        \
    \                            if days > 30 \n                                 \
    \                                       valid_date = false \n                \
    \                                                    else \n                 \
    \                                                       \n                   \
    \                                                     if days > 31 \n        \
    \                                                                    valid_date\
    \ = false \n                                                                 \
    \       else \n                                                              \
    \              \n                                                            \
    \                if days > 30 \n                                             \
    \                                   valid_date = false \n                    \
    \                                                        else \n             \
    \                                                                   \n       \
    \                                                                         if days\
    \ > 31 \n                                                                    \
    \                valid_date = false \n                                       \
    \                                         else \n                            \
    \                                                        \n                  \
    \                                                                  if days > 30\
    \ \n                                                                         \
    \               valid_date = false \n                                        \
    \                                            else \n                         \
    \                                                               \n           \
    \                                                                            \
    \ if days > 31 \n                                                            \
    \                                valid_date = false \n                       \
    \                                                                 else \n    \
    \                                                                            \
    \            \n                                                              \
    \                              if days > 30 \n                               \
    \                                                                 valid_date =\
    \ false \n                                                                   \
    \                         else \n                                            \
    \                                                    \n                      \
    \                                                                          if\
    \ days > 31 \n                                                               \
    \                                     valid_date = false \n                  \
    \                                                                            \
    \  else \n                                                                   \
    \                                 \n                                         \
    \                                                               if days > 30 \n\
    \                                                                            \
    \                                valid_date = false \n                       \
    \                                                                            \
    \     else \n                                                                \
    \                                            \n                              \
    \                                                                            \
    \  if days > 31 \n                                                           \
    \                                                     valid_date = false \n  \
    \                                                                            \
    \                              else \n                                       \
    \                                                                         \n \
    \                                                                            \
    \                                   if days > 30 \n                          \
    \                                                                            \
    \              valid_date = false \n                                         \
    \                                                                       else \n\
    \                                                                            \
    \                                        \n                                  \
    \                                                                            \
    \      if days > 31 \n                                                       \
    \                                                                 valid_date =\
    \ false \n                                                                   \
    \                                                 else \n                    \
    \                                                                            \
    \                        \n                                                  \
    \                                                                      if days\
    \ > 30 \n                                                                    \
    \                                                        valid_", "    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    \n    if date == \"\"\n   \
    \     false\n    else\n        if length(date) != 10\n            false\n    \
    \    else\n            if month(date) < 1 || month(date) > 12\n              \
    \  false\n            else\n                if day(date) < 1 || day(date) > 31\n\
    \                    false\n                else\n                    if month(date)\
    \ == 2 && day(date) > 29\n                        false\n                    else\n\
    \                        if month(date) == 1 && day(date) > 30\n             \
    \               false\n                        else\n                        \
    \    if month(date) == 3 && day(date) > 31\n                                false\n\
    \                            else\n                                if month(date)\
    \ == 5 && day(date) > 30\n                                    false\n        \
    \                        else\n                                    if month(date)\
    \ == 7 && day(date) > 31\n                                        false\n    \
    \                                else\n                                      \
    \  if month(date) == 8 && day(date) > 31\n                                   \
    \         false\n                                        else\n              \
    \                              if month(date) == 10 && day(date) > 30\n      \
    \                                          false\n                           \
    \                 else\n                                                if month(date)\
    \ == 12 && day(date) > 31\n                                                  \
    \  false\n                                                else\n             \
    \                                       true\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that checks if a given date string is valid or not.",
  "    \n    date_str = split(date,\"-\")\n    \n    if date_str.length != 3 || date_str[1].length\
    \ != 2 || date_str[2].length != 4 || date_str[1] < 1 || date_str[1] > 12 || date_str[2]\
    \ < 1 || date_str[2] > 31 || date_str[1] < 1 || date_str[1] > 31 || date_str[2]\
    \ < 1 || date_str[2] > 30 || date_str[1] < 1 || date_str[1] > 29 || date_str[2]\
    \ < 1 || date_str[2] > 12\n        return false\n    else\n        return true\n\
    \    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that checks if a\
    \ given date string is valid or not.", "    \n    if date == \"\"\n        false\n\
    \    elseif length(date) < 1 || length(date) > 31\n        false\n    elseif length(date)\
    \ < 1 || length(date) > 30\n        false\n    elseif length(date) < 1 || length(date)\
    \ > 29\n        false\n    elseif length(date) < 1 || length(date) > 12\n    \
    \    false\n    elseif length(date) < 1 || length(date) > 31\n        false\n\
    \    elseif length(date) < 1 || length(date) > 30\n        false\n    elseif length(date)\
    \ < 1 || length(date) > 29\n        false\n    elseif length(date) < 1 || length(date)\
    \ > 12\n        false\n    elseif length(date) < 1 || length(date) > 31\n    \
    \    false\n    elseif length(date) < 1 || length(date) > 30\n        false\n\
    \    elseif length(date) < 1 || length(date) > 29\n        false\n    elseif length(date)\
    \ < 1 || length(date) > 12\n        false\n    elseif length(date) < 1 || length(date)\
    \ > 31\n        false\n    elseif length(date) < 1 || length(date) > 30\n    \
    \    false\n    elseif length(date) < 1 || length(date) > 29\n        false\n\
    \    elseif length(date) < 1 || length(date) > 12\n        false\n    elseif length(date)\
    \ < 1 || length(date) > 31\n        false\n    elseif length(date) < 1 || length(date)\
    \ > 30\n        false\n    elseif length(date) < 1 || length(date) > 29\n    \
    \    false\n    elseif length(date) < 1 || length(date) > 12\n        false\n\
    \    elseif length(date) < 1 || length(date) > 31\n        false\n    elseif length(date)\
    \ < 1 || length(date) > 30\n        false\n    elseif length(date) < 1 || length(date)\
    \ > 29\n        false\n    elseif length(date) < 1 || length(date) > 12\n    \
    \    false\n    elseif length(date) < 1 || length(date) > 31\n        false\n\
    \    elseif length(date) < 1 || length(date) > 30\n        false\n    elseif length(date)\
    \ < 1 || length(date) > 29\n        false\n    elseif length(date) < 1 || length(date)\
    \ > 12\n        false\n    elseif length(date) < 1 || length(date) > 31\n    \
    \    false\n    elseif length(date) < 1 || length(date) > 30\n        false\n\
    \    elseif length(date) < 1 || length(date) > 29\n        false\n    elseif length(date)\
    \ < 1 || length(date) > 12\n        false\n    elseif length(date) < 1 || length(date)\
    \ > 31\n        false\n    elseif length(date) < 1 || length(date) > 30\n    \
    \    false\n    elseif length(date) < 1 || length(date) > 29\n        false\n\
    \    elseif length(date) < 1 || length(date) > 12\n        ", "    \n    date_array\
    \ = string.split(date,\"-\")\n    \n    days_array = string.split(date_array[1],\"\
    -\")\n    \n    months_array = string.split(date_array[2],\"-\")\n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    ", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    if date == \"\"\n        false\n    elseif length(date) < 1\n        false\n\
    \    elseif length(date) > 31\n        false\n    elseif length(date) > 30\n \
    \       false\n    elseif length(date) > 29\n        false\n    elseif length(date)\
    \ > 12\n        false\n    elseif length(date) < 1\n        false\n    elseif\
    \ length(date) < 3\n        false\n    elseif length(date) < 5\n        false\n\
    \    elseif length(date) < 7\n        false\n    elseif length(date) < 8\n   \
    \     false\n    elseif length(date) < 10\n        false\n    elseif length(date)\
    \ < 12\n        false\n    elseif length(date) < 4\n        false\n    elseif\
    \ length(date) < 6\n        false\n    elseif length(date) < 9\n        false\n\
    \    elseif length(date) < 11\n        false\n    elseif length(date) < 2\n  \
    \      false\n    else\n        true\n    end\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that checks if a given date string is valid or not.", " \
    \   \n    date = Date.parse(date)\n    if date == nil\n        return false\n\
    \    end\n    if date.day < 1 || date.day > 31\n        return false\n    end\n\
    \    if date.month < 1 || date.month > 12\n        return false\n    end\n   \
    \ if date.year < 1900 \n        return false\n    end\n    return true\nend\n\
    </cell>\n<text>\nExercise 4\nWrite a function that checks if a given date string\
    \ is valid or not.", "    \n    valid_date::Bool = true \n    \n    if date ==\
    \ \"\"\n        valid_date = false\n    else\n        \n        day::Int = length(date)\
    \ - length(replace(date, \"-\", \"\")) + 1\n        \n        if day < 1 || day\
    \ > 31\n            valid_date = false\n        elseif day < 1 || day > 30\n \
    \           valid_date = false\n        elseif day < 1 || day > 29\n         \
    \   valid_date = false\n        elseif day < 1 || day > 28\n            valid_date\
    \ = false\n        else\n            valid_date = true\n        end\n    end\n\
    \    return valid_date\nend\n</cell>\n<code language=julia-1.5>", "    \n    date_split\
    \ = split(date, \"-\")\n    \n    if date_split[1] < 1 || date_split[1] > 12\n\
    \        false\n    elseif date_split[2] < 1 || date_split[2] > 31\n        false\n\
    \    elseif date_split[2] < 1 || date_split[2] > 30\n        false\n    elseif\
    \ date_split[2] < 1 || date_split[2] > 29\n        false\n    elseif date_split[1]\
    \ < 1 || date_split[1] > 12\n        false\n    else\n        true\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n\
    <code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that checks if a given date string is valid or not.",
  "    \n    valid_date::Bool = true \n    \n    if date == \"\"\n        valid_date\
    \ = false\n        return valid_date\n    \n    day::Int = length(date) - length(replace(date,\
    \ \"-\", \"\")) + 1\n    \n    if day < 1 || day > 31\n        valid_date = false\n\
    \        return valid_date\n    \n    month::Int = length(date) - length(replace(date,\
    \ \"-\", \"\")) - length(replace(date, \"/\", \"\")) + 1\n    \n    if month <\
    \ 1 || month > 12\n        valid_date = false\n        return valid_date\n   \
    \ \n    year::Int = length(date) - length(replace(date, \"-\", \"\")) - length(replace(date,\
    \ \"/\", \"\")) - length(replace(date, \".\", \"\")) + 1\n    \n    if year <\
    \ 1 || year > 9999\n        valid_date = false\n        return valid_date\n  \
    \  \n    valid_date = true\n    return valid_date\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    date_split = split(date, \"-\")\n    \n    days_not_less_than_1_or_higher_than_31\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12]\n    days_not_less_than_1_or_higher_than_30 =\
    \ [4,6,9,11]\n    days_not_less_than_1_or_higher_than_29 = [2]\n    months_not_less_than_1_or_higher_than_12\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12]\n    \n    months_not_less_than_1_or_higher_than_1\
    \ = [1,3,5,7,8,10,12]\n    \n    months_not_less_than_1_or_higher_than_4 = [4,6,9,11]\n\
    \    \n    months_not_less_than_1_or_higher_than_6 = [4,6,9,11]\n    \n    months_not_less_than_1_or_higher_than_9\
    \ = [4,6,9,11]\n    \n    months_not_less_than_1_or_higher_than_11 = [4,6,9,11]\n\
    \    \n    months_not_less_than_1_or_higher_than_12 = [4,6,9,11]\n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    ", "    \n    valid_date_regex = Regex(\"^(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])[-\
    \ /.](19|20)\\d\\d$\")\n    \n    if valid_date_regex.match(date) == nil\n   \
    \     false\n    else\n        true\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    valid_date_str = true\n    valid_date_str = !is_empty(date)\n    valid_date_str\
    \ = !is_less_than_or_equal_to_one(date)\n    valid_date_str = !is_less_than_or_equal_to_31(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_30(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_29(date)\n    valid_date_str = !is_less_than_or_equal_to_12(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_1(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_30(date)\n    valid_date_str = !is_less_than_or_equal_to_29(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_12(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_1(date)\n    valid_date_str = !is_less_than_or_equal_to_30(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_29(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_12(date)\n    valid_date_str = !is_less_than_or_equal_to_1(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_30(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_29(date)\n    valid_date_str = !is_less_than_or_equal_to_12(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_1(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_30(date)\n    valid_date_str = !is_less_than_or_equal_to_29(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_12(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_1(date)\n    valid_date_str = !is_less_than_or_equal_to_30(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_29(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_12(date)\n    valid_date_str = !is_less_than_or_equal_to_1(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_30(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_29(date)\n    valid_date_str = !is_less_than_or_equal_to_12(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_1(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_30(date)\n    valid_date_str = !is_less_", "    \n\
    \    valid_date::Bool = true \n    \n    if date == \"\" then \n        valid_date\
    \ = false \n    else \n        \n        days::Int = split(date, \"-\")[2]\n \
    \       \n        if days < 1 or days > 31 then \n            valid_date = false\
    \ \n        else \n            \n            months::Int = split(date, \"-\")[1]\n\
    \            \n            if months < 1 or months > 12 then \n              \
    \  valid_date = false \n            else \n                \n                years::Int\
    \ = split(date, \"-\")[3]\n                \n                if years < 1 or years\
    \ > 20 then \n                    valid_date = false \n                else \n\
    \                    \n                    valid_date = true \n              \
    \  end \n            end \n        end \n    end \n    return valid_date \nend\
    \ \n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n\
    <code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that checks if a given date string is valid or not.",
  "    \n    if date == \"\"\n        false\n    else\n        if length(date) !=\
    \ 10\n            false\n        else\n            if month(date) < 1 || month(date)\
    \ > 12\n                false\n            else\n                if day(date)\
    \ < 1 || day(date) > 31\n                    false\n                else\n   \
    \                 if month(date) == 2 && day(date) > 29\n                    \
    \    false\n                    else\n                        if month(date) ==\
    \ 2 && day(date) < 1\n                            false\n                    \
    \    else\n                            if month(date) == 3 && day(date) > 12\n\
    \                                false\n                            else\n   \
    \                             if month(date) == 3 && day(date) < 1\n         \
    \                           false\n                                else\n    \
    \                                if month(date) == 4 && day(date) > 11\n     \
    \                                   false\n                                  \
    \  else\n                                        if month(date) == 4 && day(date)\
    \ < 1\n                                            false\n                   \
    \                     else\n                                            if month(date)\
    \ == 5 && day(date) > 10\n                                                false\n\
    \                                            else\n                          \
    \                      if month(date) == 5 && day(date) < 1\n                \
    \                                    false\n                                 \
    \               else\n                                                    if month(date)\
    \ == 6 && day(date) > 9\n                                                    \
    \    false\n                                                    else\n       \
    \                                                 if month(date) == 6 && day(date)\
    \ < 1\n                                                            false\n   \
    \                                                     else\n                 \
    \                                           if month(date) == 7 && day(date) >\
    \ 8\n                                                                false\n \
    \                                                           else\n           \
    \                                                     if month(date) == 7 && day(date)\
    \ < 1\n                                                                    false\n\
    \                                                                else\n      \
    \                                                              if month(date)\
    \ == 8 && day(date) > 7\n                                                    \
    \                    false\n                                                 \
    \                   else\n                                                   \
    \     if month(date) == 8 && day(date) < 1\n                                 \
    \                           false\n                                          \
    \              else\n                                                        \
    \    if month(date) == 9 && day(date) > 6\n                                  \
    \                              false\n                                       \
    \                     else\n                                                 \
    \               if month(date) == 9 && day(date) < 1\n                       \
    \                                             false\n                        \
    \                                        else\n                              \
    \                                      if month(date) == 10 && day(date) > 5\n\
    \                                                                        false\n\
    \                                                                    else\n  \
    \                                                      if month(date) == 10 &&\
    \ day(date) < 1\n                                                            false\n\
    \                                                        else\n              \
    \                                              if month(date) == 11 && day(date)\
    \ > 4\n                                                                false\n\
    \                                                            else\n          \
    \                                                      if month(date) == 11 &&\
    \ day(date) < 1\n                                                            \
    \        false\n                                                             \
    \   else\n                                                                   \
    \ if month(date) == 12 && day(date) > 3\n                                    \
    \                                    false\n                                 \
    \                                   else\n                                   \
    \                     if month(date) == 12 && day(date) < 1\n                \
    \                                            false\n                         \
    \                               else\n                                       \
    \                     true\n    end\nend\n", "    \n    date_split = split(date,\
    \ \"-\")\n    \n    months = date_split[1]\n    days = date_split[2]\n    \n \
    \   months = months.split(\"-\")\n    \n    months_length = len(months)\n    \n\
    \    days_length = days.split(\"-\")\n    \n    days_length_length = len(days_length)\n\
    \    \n    \n    if months_length == 2 && days_length_length == 2 && days_length[1]\
    \ == \"01\" && months[1] == \"01\" \n    \n        \n        return true\n   \
    \ \n    else if months_length == 2 && days_length_length == 2 && days_length[1]\
    \ == \"01\" && months[1] == \"02\" \n    \n        \n        return true\n   \
    \ \n    else if months_length == 2 && days_length_length == 2 && days_length[1]\
    \ == \"01\" && months[1] == \"03\" \n    \n        \n        return true\n   \
    \ \n    else if months_length == 2 && days_length_length == 2 && days_length[1]\
    \ == \"01\" && months[1] == \"04\" \n    \n        \n        return true\n   \
    \ \n    else if months_length == 2 && days_length_length == 2 && days_length[1]\
    \ == \"01\" && months[1] == \"05\" \n    \n        \n        return true\n   \
    \ \n    else if months_length == 2 && days_length_length == 2 && days_length[1]\
    \ == \"01\" && months[1] == \"06\" \n    \n        \n        return true\n   \
    \ \n    else if months_length == 2 && days_length_length == 2 && days_length[1]\
    \ == \"01\" && months[1] == \"07\" \n    \n        \n        return true\n   \
    \ \n    else if months_length == 2 && days_length_length == 2 && days_length[1]\
    \ == \"01\" && months[1] == \"08\" \n    \n        \n        return true\n   \
    \ \n    else if months_length == 2 && days_length_length == 2 && days_length[1]\
    \ == \"01\" && months[1] == \"09\" \n    \n        \n        return true\n   \
    \ \n    else if months_length == 2 && days_length_length == 2 && days_length[1]\
    \ == \"01\" && months[1] == \"10\" \n    \n        \n        return true\n   \
    \ \n    else if months_length == 2 && days_length_length == 2 && days_length[1]\
    \ == \"01\" && months[1] == \"11\" \n    \n        \n        return true\n   \
    \ \n    else if months_length == 2 && days_length_length == 2 && days_length[1]\
    \ == \"01\" && months[1] == \"12\" \n    \n        \n        return true\n   \
    \ \n    else if months_length == 3 && days_length_length", "    \n    date_str\
    \ = split(date, \"-\")\n    \n    if date_str.length != 3 || date_str[1] < 1 ||\
    \ date_str[2] < 1 || date_str[1] > 12 || date_str[2] > 12 || date_str[1] > date_str[2]\
    \ || date_str[1] < 0 || date_str[2] < 0\n        return false\n    \n    months\
    \ = date_str[1]\n    days = date_str[2]\n    \n    if months == 0 || months ==\
    \ 1 || months == 3 || months == 5 || months == 7 || months == 8 || months == 10\
    \ || months == 12\n        return true\n    \n    if days == 0 || days == 1 ||\
    \ days == 3 || days == 5 || days == 7 || days == 8 || days == 10 || days == 12\n\
    \        return true\n    \n    if days == 29 && months == 2\n        return true\n\
    \    \n    return false\nend\n</cell>\n<code language=julia-1.5>", "    \n   \
    \ if date == \"\"\n        return false\n    \n    date_split = split(date, \"\
    -\")\n    \n    if date_split[2] != \"01\"\n        return false\n    \n    if\
    \ date_split[2] != \"03\"\n        return false\n    \n    if date_split[2] !=\
    \ \"05\"\n        return false\n    \n    if date_split[2] != \"07\"\n       \
    \ return false\n    \n    if date_split[2] != \"08\"\n        return false\n \
    \   \n    if date_split[2] != \"10\"\n        return false\n    \n    if date_split[2]\
    \ != \"12\"\n        return false\n    \n    if date_split[1] != \"01\"\n    \
    \    return false\n    \n    if date_split[1] != \"04\"\n        return false\n\
    \    \n    if date_split[1] != \"06\"\n        return false\n    \n    if date_split[1]\
    \ != \"09\"\n        return false\n    \n    if date_split[1] != \"11\"\n    \
    \    return false\n    \n    if date_split[1] != \"12\"\n        return false\n\
    \    \n    return true\nend\n</cell>\n<code language=julia-1.5>", "    \n    \n\
    \    if date == \"\"\n        false\n    else\n        \n        \n        if\
    \ length(date) < 1\n            false\n        elseif length(date) > 31\n    \
    \        false\n        elseif length(date) > 30\n            false\n        elseif\
    \ length(date) > 29\n            false\n        elseif length(date) > 12\n   \
    \         false\n        elseif length(date) < 1\n            false\n        elseif\
    \ length(date) < 3\n            false\n        elseif length(date) < 5\n     \
    \       false\n        elseif length(date) < 7\n            false\n        elseif\
    \ length(date) < 8\n            false\n        elseif length(date) < 10\n    \
    \        false\n        elseif length(date) < 12\n            false\n        elseif\
    \ length(date) < 4\n            false\n        elseif length(date) < 6\n     \
    \       false\n        elseif length(date) < 9\n            false\n        elseif\
    \ length(date) < 11\n            false\n        elseif length(date) < 2\n    \
    \        false\n        else\n            true\n        end\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that checks if a given date string is a valid\
    \ date or not.", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    date_split = split(date, \"-\")\n    \n    days_valid = true\n    \n\
    \    months_valid = true\n    \n    years_valid = true\n    \n    days_valid =\
    \ days_valid && days_valid && days_valid && days_valid && days_valid && days_valid\
    \ && days_valid && days_valid && days_valid && days_valid && days_valid && days_valid\
    \ && days_valid && days_valid && days_valid && days_valid && days_valid && days_valid\
    \ && days_valid && days_valid && days_valid && days_valid && days_valid && days_valid\
    \ && days_valid && days_valid && days_valid && days_valid && days_valid && days_valid\
    \ && days_valid && days_valid && days_valid && days_valid && days_valid && days_valid\
    \ && days_valid && days_valid && days_valid && days_valid && days_valid && days_valid\
    \ && days_valid && days_valid && days_valid && days_valid && days_valid && days_valid\
    \ && days_valid && days_valid && days_valid && days_valid && days_valid && days_valid\
    \ && days_valid && days_valid && days_valid && days_valid && days_valid && days_valid\
    \ && days_valid && days_valid && days_valid && days_valid && days_valid && days_valid\
    \ && days_valid && days_valid && days_valid && days_valid && days_valid && days_valid\
    \ && days_valid && days_valid && days_valid && days_valid && days_valid && days_valid\
    \ && days_valid && days_valid && days_valid && days_valid && days_valid && days_valid\
    \ && days_valid && days_valid && days_valid && days_valid && days_valid && days_valid\
    \ && days_valid && days_valid && days_valid && days_valid && days_valid && days_valid\
    \ && days_valid && days_valid && days_valid && days_valid && days_valid && days_valid\
    \ && days_valid && days_valid && days_valid && days_valid && days_valid && days_valid\
    \ && days_valid && days_valid && days_valid && days_valid && days_valid && days_valid\
    \ && days_valid && days_valid && days_valid && days_valid ", "    \n    if date\
    \ == \"\"\n        false\n    else\n        if length(date) < 1 || length(date)\
    \ > 31\n            false\n        elseif length(date) < 1 || length(date) > 30\n\
    \            false\n        elseif length(date) < 1 || length(date) > 29\n   \
    \         false\n        elseif length(date) < 1 || length(date) > 12\n      \
    \      false\n        else\n            true\n        end\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that checks if a date string is valid or\
    \ not.", "    \n    date_split = split(date, \"-\")\n    \n    if length(date_split)\
    \ == 3 && date_split[2] != \"00\" \n        && date_split[2] != \"01\" && date_split[2]\
    \ != \"02\"\n        && date_split[2] != \"03\" && date_split[2] != \"04\"\n \
    \       && date_split[2] != \"05\" && date_split[2] != \"06\"\n        && date_split[2]\
    \ != \"07\" && date_split[2] != \"08\"\n        && date_split[2] != \"09\" &&\
    \ date_split[2] != \"10\"\n        && date_split[2] != \"11\" && date_split[2]\
    \ != \"12\"\n        && date_split[2] != \"00\" && date_split[2] != \"01\"\n \
    \       && date_split[2] != \"02\" && date_split[2] != \"03\"\n        && date_split[2]\
    \ != \"04\" && date_split[2] != \"05\"\n        && date_split[2] != \"06\" &&\
    \ date_split[2] != \"07\"\n        && date_split[2] != \"08\" && date_split[2]\
    \ != \"09\"\n        && date_split[2] != \"10\" && date_split[2] != \"11\"\n \
    \       && date_split[2] != \"12\" && date_split[2] != \"00\"\n        && date_split[2]\
    \ != \"01\" && date_split[2] != \"02\"\n        && date_split[2] != \"03\" &&\
    \ date_split[2] != \"04\"\n        && date_split[2] != \"05\" && date_split[2]\
    \ != \"06\"\n        && date_split[2] != \"07\" && date_split[2] != \"08\"\n \
    \       && date_split[2] != \"09\" && date_split[2] != \"10\"\n        && date_split[2]\
    \ != \"11\" && date_split[2] != \"12\"\n        && date_split[2] != \"00\" &&\
    \ date_split[2] != \"01\"\n        && date_split[2] != \"02\" && date_split[2]\
    \ != \"03\"\n        && date_split[2] != \"04\" && date_split[2] != \"05\"\n \
    \       && date_split[2] != \"06\" && date_split[2] != \"07\"\n        && date_split[2]\
    \ != \"08\" && date_split[2] != \"09\"\n        && date_split[2] != \"10\" &&\
    \ date_split[2] != \"11\"\n        && date_split[2] != \"12\" && date_split[2]\
    \ != \"00\"\n        && date_split[2] != \"01\" && date_split[2] != \"02\"\n \
    \       && date_split[2] != \"03\" && date_split[2] != \"04\"\n        && date_split[2]\
    \ != \"05\" && date_split[2] != \"06\"\n        && date_split[2] != \"07\" &&\
    \ date_split[2] != \"08\"\n        && date_split[2] != \"09\" && date_split[2]\
    \ != \"10\"\n        && date_split[2] != \"11\" && date_split[2] != \"12\"\n \
    \       && date_split[2] != \"00\" && date_split[2] != \"01\"", "    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    \n    date_split = split(date,\
    \ \"-\")\n    \n    months = date_split[1]\n    days_str = date_split[2]\n   \
    \ \n    days_str = days_str.replace(\" \", \"\")\n    \n    days_str = days_str.replace(\"\
    ,\", \"\")\n    \n    days_str = days_str.replace(\"'\", \"\")\n    \n    days_str\
    \ = days_str.replace(\"\\\"\", \"\")\n    \n    days_str = days_str.replace(\"\
    \\\"\", \"\")\n    \n    days_str = days_str.replace(\"\\\"\", \"\")\n    \n \
    \   days_str = days_str.replace(\"\\\"\", \"\")\n    \n    days_str = days_str.replace(\"\
    \\\"\", \"\")\n    \n    days_str = days_str.replace(\"\\\"\", \"\")\n    \n \
    \   days_str = days_str.replace(\"\\\"\", \"\")\n    \n    days_str = days_str.replace(\"\
    \\\"\", \"\")\n    \n    days_str = days_str.replace(\"\\\"\", \"\")\n    \n \
    \   days_str = days_str.replace(\"\\\"\", \"\")\n    \n    days_str = days_str.replace(\"\
    \\\"\", \"\")\n    \n    days_str = days_str.replace(\"\\\"\", \"\")\n    \n \
    \   days_str = days_str.replace(\"\\\"\", \"\")\n    \n    days_str = days_str.replace(\"\
    \\\"\", \"\")\n    \n    days_str = days_str.replace(\"\\\"\", \"\")\n    \n \
    \   days_str = days_str.replace(\"\\\"\", \"\")\n    \n    days_str = days_str.replace(\"\
    \\\"\", \"\")\n    \n    days_str = days_str.replace(\"\\\"\", \"\")\n    \n \
    \   days_str = days_str.replace(\"\\\"\", \"\")\n    \n    days_str = days_str.replace(\"\
    \\\"\", \"\")\n    \n    days_str = days_str.replace(\"\\\"\", \"\")\n    \n \
    \   days_str = days_str.replace(\"\\\"\", \"\")\n    \n    days_str = days_str.replace(\"\
    \\\"\", \"\")\n    \n    days_str = days_str.replace(\"\\\"\", \"\")\n    \n \
    \   days_str = days_str.replace(\"\\\"\", \"\")\n    \n    days_str = days_str.replace(\"\
    \\\"\", \"\")\n    \n    days_str = days_str.replace(\"\\\"\", \"\")\n    \n \
    \   days_str = days_str.replace(\"\\\"\", \"\")\n    \n    days_str = days_str.replace(\"\
    \\\"\", \"\")\n    \n    days_str = days_str.replace(\"\\\"\", \"\")\n    \n \
    \   days_str = days_str.replace(\"\\\"\", \"\")\n    \n    days_str = days_str.replace(\"\
    \\\"\", ", "    \n    valid_date::Bool = false\n    \n    if date == \"\"\n  \
    \      valid_date = true\n    else\n        \n        days::Int = count_days(date)\n\
    \        \n        if days < 1 or days > 31\n            valid_date = false\n\
    \        elseif days < 1 or days > 30\n            valid_date = false\n      \
    \  elseif days < 1 or days > 29\n            valid_date = false\n        elseif\
    \ days < 1 or days > 28\n            valid_date = false\n        else\n      \
    \      valid_date = true\n        end\n    end\n    \n    return valid_date\n\
    end\n</cell>\n<code language=julia-1.5>", "    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \n    valid_date::Bool = true \n    \n    if date ==\
    \ \"\" \n        valid_date = false \n    else \n        \n        days::Int =\
    \ count_days(date) \n        \n        if days < 1 \n            valid_date =\
    \ false \n        else if days > 31 \n            valid_date = false \n      \
    \  else if days > 29 \n            valid_date = false \n        else if days >\
    \ 28 \n            valid_date = false \n        else if days > 27 \n         \
    \   valid_date = false \n        else if days > 26 \n            valid_date =\
    \ false \n        else if days > 25 \n            valid_date = false \n      \
    \  else if days > 24 \n            valid_date = false \n        else if days >\
    \ 23 \n            valid_date = false \n        else if days > 22 \n         \
    \   valid_date = false \n        else if days > 21 \n            valid_date =\
    \ false \n        else if days > 20 \n            valid_date = false \n      \
    \  else if days > 19 \n            valid_date = false \n        else if days >\
    \ 18 \n            valid_date = false \n        else if days > 17 \n         \
    \   valid_date = false \n        else if days > 16 \n            valid_date =\
    \ false \n        else if days > 15 \n            valid_date = false \n      \
    \  else if days > 14 \n            valid_date = false \n        else if days >\
    \ 13 \n            valid_date = false \n        else if days > 12 \n         \
    \   valid_date = false \n        else if days > 11 \n            valid_date =\
    \ false \n        else if days > 10 \n            valid_date = false \n      \
    \  else if days > 9 \n            valid_date = false \n        else if days >\
    \ 8 \n            valid_date = false \n        else if days > 7 \n           \
    \ valid_date = false \n        else if days > 6 \n            valid_date = false\
    \ \n        else if days > 5 \n            valid_date = false \n        else if\
    \ days > 4 \n            valid_date = false \n        else if days > 3 \n    \
    \        valid_date = false \n        else if days > 2 \n            valid_date\
    \ = false \n        else if days > 1 \n            valid_date = false \n     \
    \   else if days > 0 \n            valid_date = false \n        else \n      \
    \      valid_date = false \n    end \n    \n    return valid_date \nend \n</cell>\n\
    <code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\n\
    Exerci", "    \n    valid_date_str = date\n    valid_date_str = valid_date_str.replace(\"\
    \ \", \"\")\n    valid_date_str = valid_date_str.replace(\"-\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"/\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    :\", \"\")\n    valid_date_str = valid_date_str.replace(\"-\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\":\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    ,\", \"\")\n    valid_date_str = valid_date_str.replace(\"'\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"\\\"\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    %\", \"\")\n    valid_date_str = valid_date_str.replace(\"(\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\")\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    +\", \"\")\n    valid_date_str = valid_date_str.replace(\"*\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"%\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    <\", \"\")\n    valid_date_str = valid_date_str.replace(\">\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"?\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    !\", \"\")\n    valid_date_str = valid_date_str.replace(\"@\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"$\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    %\", \"\")\n    valid_date_str = valid_date_str.replace(\"^\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"&\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    *\", \"\")\n    valid_date_str = valid_date_str.replace(\"(\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\")\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    ,\", \"\")\n    valid_date_str = valid_date_str.replace(\";\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\":\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    ,\", \"\")\n    valid_date_str = valid_date_str.replace(\"'\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"\\\"\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    !\", \"\")\n    valid_date_str = valid_date_str.replace(\"?\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"-\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    _\", \"\")\n    valid_date_str = valid_date_str.replace(\"(\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\")\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    ,\", \"\")\n    valid_date_str = valid_date_str.replace(\"'\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"\\\"\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    !\", \"\")\n    valid_date_str = valid_date_str.replace(\"?\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"-\", \"\")\n    valid_date_", "    \n    \n    if\
    \ date == \"\"\n        false\n    else\n        if length(date) < 1 || length(date)\
    \ > 31\n            false\n        elseif length(date) < 1 || length(date) > 30\n\
    \            false\n        elseif length(date) < 1 || length(date) > 29\n   \
    \         false\n        elseif length(date) < 1 || length(date) > 12\n      \
    \      false\n        else\n            true\n        end\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a date string and returns the\
    \ number of days between the current date and that date.", "    \n    valid_date_str\
    \ = date\n    valid_date_str = valid_date_str.replace(\" \", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"-\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    /\", \"\")\n    valid_date_str = valid_date_str.replace(\":\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"'\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    \\\"\", \"\")\n    valid_date_str = valid_date_str.replace(\",\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"-\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    \\\"\", \"\")\n    valid_date_str = valid_date_str.replace(\"(\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\")\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    ,\", \"\")\n    valid_date_str = valid_date_str.replace(\":\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"'\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    \\\"\", \"\")\n    valid_date_str = valid_date_str.replace(\"!\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"?\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    *\", \"\")\n    valid_date_str = valid_date_str.replace(\"%\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"$\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    &\", \"\")\n    valid_date_str = valid_date_str.replace(\"(\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\")\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    ,\", \"\")\n    valid_date_str = valid_date_str.replace(\"-\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"\\\"\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    (\", \"\")\n    valid_date_str = valid_date_str.replace(\")\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\",\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    :\", \"\")\n    valid_date_str = valid_date_str.replace(\"'\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"\\\"\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    !\", \"\")\n    valid_date_str = valid_date_str.replace(\"?\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"*\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    %\", \"\")\n    valid_date_str = valid_date_str.replace(\"$\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"&\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    (\", \"\")\n    valid_date_str = valid_date_str.replace(\")\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\",\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    -\", \"\")\n    valid_date_str = valid_date_str.replace(\"\\\"\", \"\")\n    valid_date_str\
    \ = valid_date_str.replace(\"(\", \"\")\n    valid_date_str = valid_date_str.replace(\"\
    )", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    valid_date::Bool\
    \ = \n        if length(date) == 0 \n            then false\n            else\
    \ \n                if length(date) != 10 \n                    then false\n \
    \                   else \n                        if month(date) != 0 \n    \
    \                        or day(date) != 0 \n                            or year(date)\
    \ != 0 \n                            or month(date) != 12 \n                 \
    \           or day(date) != 31 \n                            or day(date) != 30\
    \ \n                            or day(date) != 29 \n                        \
    \    or month(date) != 1 \n                            or month(date) != 3 \n\
    \                            or month(date) != 5 \n                          \
    \  or month(date) != 7 \n                            or month(date) != 8 \n  \
    \                          or month(date) != 10 \n                           \
    \ or month(date) != 12 \n                            then false\n            \
    \                else true\n        end\n    return valid_date\nend\n</cell>\n\
    <code language=julia-1.5>", "    \n    date = Date.parse(date)\n    if date ==\
    \ Date.invalid\n        return false\n    \n    daysInMonth = Date.daysInMonth(date.month,\
    \ date.year)\n    if daysInMonth < 1 || daysInMonth > 31\n        return false\n\
    \    \n    daysInYear = Date.daysInYear(date.month, date.year)\n    if daysInYear\
    \ < 1 || daysInYear > 30\n        return false\n    \n    daysInMonth = Date.daysInMonth(date.month,\
    \ date.year)\n    if daysInMonth < 1 || daysInMonth > 29\n        return false\n\
    \    \n    return true\nend\n</cell>\n<code language=julia-1.5>", "    \n    valid_date_str\
    \ = Date.valid_date_str(date)\n    \n    if valid_date_str == \"\"\n        false\n\
    \    else\n        Date.valid_date(valid_date_str)\n    end\nend", "    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    valid_date_str\
    \ = true\n    valid_date_str = !is_empty(date)\n    valid_date_str = !is_less_than_or_equal_to_1(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_31(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_30(date)\n    valid_date_str = !is_less_than_or_equal_to_29(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_12(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_4(date)\n    valid_date_str = !is_less_than_or_equal_to_6(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_9(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_11(date)\n    valid_date_str = !is_less_than_or_equal_to_13(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_15(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_17(date)\n    valid_date_str = !is_less_than_or_equal_to_19(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_20(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_21(date)\n    valid_date_str = !is_less_than_or_equal_to_23(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_25(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_27(date)\n    valid_date_str = !is_less_than_or_equal_to_29(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_30(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_31(date)\n    valid_date_str = !is_less_than_or_equal_to_12(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_4(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_6(date)\n    valid_date_str = !is_less_than_or_equal_to_9(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_11(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_13(date)\n    valid_date_str = !is_less_than_or_equal_to_15(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_17(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_19(date)\n    valid_date_str = !is_less_than_or_equal_to_20(date)\n\
    \    valid_", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    date_str = date\n    \n    if date_str == \"\"\n        true\n    else\n\
    \        \n        days_str = date_str[date_str.index(\"-\") + 1 : date_str.index(\"\
    -\")]\n        \n        days_str = days_str[days_str.index(\"-\") + 1 : days_str.index(\"\
    -\")]\n        \n        days_str = days_str[days_str.index(\"-\") + 1 : days_str.index(\"\
    -\")]\n        \n        days_str = days_str[days_str.index(\"-\") + 1 : days_str.index(\"\
    -\")]\n        \n        days_str = days_str[days_str.index(\"-\") + 1 : days_str.index(\"\
    -\")]\n        \n        days_str = days_str[days_str.index(\"-\") + 1 : days_str.index(\"\
    -\")]\n        \n        days_str = days_str[days_str.index(\"-\") + 1 : days_str.index(\"\
    -\")]\n        \n        days_str = days_str[days_str.index(\"-\") + 1 : days_str.index(\"\
    -\")]\n        \n        days_str = days_str[days_str.index(\"-\") + 1 : days_str.index(\"\
    -\")]\n        \n        days_str = days_str[days_str.index(\"-\") + 1 : days_str.index(\"\
    -\")]\n        \n        days_str = days_str[days_str.index(\"-\") + 1 : days_str.index(\"\
    -\")]\n        \n        days_str = days_str[days_str.index(\"-\") + 1 : days_str.index(\"\
    -\")]\n        \n        days_str = days_str[days_str.index(\"-\") + 1 : days_str.index(\"\
    -\")]\n        \n        days_str = days_str[days_str.index(\"-\") + 1 : days_str.index(\"\
    -\")]\n        \n        days_str = days_str[days_str.index(\"-\") + 1 : days_str.index(\"\
    -\")]\n        \n        days_str = days_str[days_str.index(\"-\") + 1 : days_str.index(\"\
    -\")]\n        \n        days_str = days_str[days_str.index(\"-\") + 1 : days_str.index(\"\
    -\")]\n        \n        days_str = days_str[days_str.index(\"-\") + 1 : days_str.index(\"\
    -\")]\n        \n        days_str = days_str[days_str.index(\"-\") + 1 : days_str.index(\"\
    -\")]\n        \n        days_str = days_str[days_str.index(\"-\") + 1 : days_",
  "    \n    date_split = split(date, \"-\")\n    \n    if date_split[1] < 1 || date_split[1]\
    \ > 12 || date_split[2] < 1 || date_split[2] > 31 || date_split[1] < 1 || date_split[1]\
    \ > 31 || date_split[2] < 1 || date_split[2] > 30 || date_split[1] < 1 || date_split[1]\
    \ > 29 || date_split[2] < 1 || date_split[2] > 29\n        return false\n    else\n\
    \        return true\n    end\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<code language=julia-1.5>", "    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    \n    date_str = split(date,\
    \ \"-\")\n    \n    if date_str.length != 3 || date_str[1].length != 2 || date_str[2].length\
    \ != 4 || date_str[1] < 1 || date_str[1] > 12 || date_str[2] < 1 || date_str[2]\
    \ > 31 || date_str[1] > date_str[2] || date_str[1] > date_str[2]\n    \n     \
    \   return false\n    \n    else \n        return true\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    date_split = split(date, \"-\")\n    \n    if date_split[1] == \"01\"\
    \ or date_split[1] == \"03\" or date_split[1] == \"05\" or date_split[1] == \"\
    07\" or date_split[1] == \"08\" or date_split[1] == \"10\" or date_split[1] ==\
    \ \"12\" or date_split[1] == \"04\" or date_split[1] == \"06\" or date_split[1]\
    \ == \"09\" or date_split[1] == \"11\" or date_split[1] == \"02\" or date_split[1]\
    \ == \"05\" or date_split[1] == \"07\" or date_split[1] == \"08\" or date_split[1]\
    \ == \"10\" or date_split[1] == \"12\" or date_split[1] == \"01\" or date_split[1]\
    \ == \"03\" or date_split[1] == \"05\" or date_split[1] == \"07\" or date_split[1]\
    \ == \"08\" or date_split[1] == \"10\" or date_split[1] == \"12\" or date_split[1]\
    \ == \"04\" or date_split[1] == \"06\" or date_split[1] == \"09\" or date_split[1]\
    \ == \"11\" or date_split[1] == \"02\" or date_split[1] == \"05\" or date_split[1]\
    \ == \"07\" or date_split[1] == \"08\" or date_split[1] == \"10\" or date_split[1]\
    \ == \"12\" or date_split[1] == \"01\" or date_split[1] == \"03\" or date_split[1]\
    \ == \"05\" or date_split[1] == \"07\" or date_split[1] == \"08\" or date_split[1]\
    \ == \"10\" or date_split[1] == \"12\" or date_split[1] == \"04\" or date_split[1]\
    \ == \"06\" or date_split[1] == \"09\" or date_split[1] == \"11\" or date_split[1]\
    \ == \"02\" or date_split[1] == \"05\" or date_split[1] == \"07\" or date_split[1]\
    \ == \"08\" or date_split[1] == \"10\" or date_split[1] == \"12\" or date_split[1]\
    \ == \"01\" or date_split[1] == \"03\" or date_split[1] == \"05\" or date_split[1]\
    \ == \"07\" or date_split[1] == \"08\" or date_split[1] == \"10\" or date_split[1]\
    \ == \"12\" or date_split[1] == \"04\" or date_split[1] == \"06\" or date_split[1]\
    \ == \"09\" or date_split[1] == \"11\" or date_split[1] == \"02\" or date_split[1]\
    \ == \"05\" or date_split[1] == \"07\" or date_split[1] == \"08\" or date_split[1]\
    \ == \"10\" or date_split[1] == \"12\" or date_split[1] == \"01\" or date_split[1]\
    \ == \"03\" or date_split[1] == \"05\" or date_split[1] == \"07\" or date_split[1]\
    \ == \"08\" or date_split[1] == \"10\" or date_split[1] == \"12\" or date_split[1]\
    \ == \"04\" or date_split[1] == \"06\" or date_split[1] == \"09\" or date_split[1]\
    \ == \"11\" or date_split[1] == \"02\" or date_split[1] == \"05\" or date_split[1]\
    \ == \"07\" or date_split[1] == \"08\" or date_", "    \n    date_split = split(date,\
    \ \"-\")\n    \n    if date_split[1] == \"01\" or date_split[1] == \"03\" or date_split[1]\
    \ == \"05\" or date_split[1] == \"07\" or date_split[1] == \"08\" or date_split[1]\
    \ == \"10\" or date_split[1] == \"12\" then\n        return true\n    end\n  \
    \  \n    if date_split[1] == \"04\" or date_split[1] == \"06\" or date_split[1]\
    \ == \"09\" or date_split[1] == \"11\" then\n        return true\n    end\n  \
    \  \n    if date_split[1] == \"02\" then\n        return true\n    end\n    \n\
    \    return false\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function to check if a given\
    \ date string is valid or not.", "    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    if date == \"\"\n        return false\n    \n    date_array\
    \ = string.split(date, \"-\")\n    \n    if date_array.length != 3\n        return\
    \ false\n    \n    days_array = string.split(date_array[1], \"-\")\n    \n   \
    \ if days_array.length != 2\n        return false\n    \n    months_array = string.split(date_array[0],\
    \ \"-\")\n    \n    if months_array.length != 2\n        return false\n    \n\
    \    years_array = string.split(date_array[2], \"-\")\n    \n    if years_array.length\
    \ != 2\n        return false\n    \n    if days_array[1] < 1 || days_array[1]\
    \ > 31\n        return false\n    \n    if days_array[0] < 1 || days_array[0]\
    \ > 31\n        return false\n    \n    if days_array[1] < 1 || days_array[1]\
    \ > 30\n        return false\n    \n    if days_array[0] < 1 || days_array[0]\
    \ > 30\n        return false\n    \n    if days_array[1] < 1 || days_array[1]\
    \ > 29\n        return false\n    \n    if days_array[0] < 1 || days_array[0]\
    \ > 29\n        return false\n    \n    if months_array[1] < 1 || months_array[1]\
    \ > 12\n        return false\n    \n    if months_array[0] < 1 || months_array[0]\
    \ > 12\n        return false\n    \n    if months_array[1] < 1 || months_array[1]\
    \ > 12\n        return false\n    \n    if years_array[1] < 1 || years_array[1]\
    \ > 9999\n        return false\n    \n    if years_array[0] < 1 || years_array[0]\
    \ > 9999\n        return false\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    date_str = split(date, \"-\")\n    \n    if date_str.length != 3 || date_str[1].length\
    \ != 2 || date_str[2].length != 4 || date_str[1] < 1 || date_str[2] < 1 || date_str[1]\
    \ > 12 || date_str[2] > 12 || date_str[1] > date_str[2] || date_str[1] < date_str[2]\
    \ || date_str[2] > 31 || date_str[1] > 30 || date_str[2] > 29 || date_str[1] <\
    \ 1 || date_str[2] < 1\n    \n        return false\n    \n    return true\nend\n\
    </cell>\n<code language=julia-1.5>", "    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    date_str = split(date,\"-\")\n    \n    months = date_str[1]\n    days\
    \ = date_str[2]\n    \n    months = months.split(\"-\")\n    \n    months_int\
    \ = [int(x) for x in months]\n    \n    days_int = [int(x) for x in days]\n  \
    \  \n    months_int = [x % 12 for x in months_int]\n    \n    days_int = [x %\
    \ 30 for x in days_int]\n    \n    days_int = [x % 29 for x in days_int]\n   \
    \ \n    months_int = [x % 12 for x in months_int]\n    \n    days_int = [x % 30\
    \ for x in days_int]\n    \n    days_int = [x % 29 for x in days_int]\n    \n\
    \    months_int = [x % 12 for x in months_int]\n    \n    days_int = [x % 30 for\
    \ x in days_int]\n    \n    days_int = [x % 29 for x in days_int]\n    \n    months_int\
    \ = [x % 12 for x in months_int]\n    \n    days_int = [x % 30 for x in days_int]\n\
    \    \n    days_int = [x % 29 for x in days_int]\n    \n    months_int = [x %\
    \ 12 for x in months_int]\n    \n    days_int = [x % 30 for x in days_int]\n \
    \   \n    days_int = [x % 29 for x in days_int]\n    \n    months_int = [x % 12\
    \ for x in months_int]\n    \n    days_int = [x % 30 for x in days_int]\n    \n\
    \    days_int = [x % 29 for x in days_int]\n    \n    months_int = [x % 12 for\
    \ x in months_int]\n    \n    days_int = [x % 30 for x in days_int]\n    \n  \
    \  days_int = [x % 29 for x in days_int]\n    \n    months_int = [x % 12 for x\
    \ in months_int]\n    \n    days_int = [x % 30 for x in days_int]\n    \n    days_int\
    \ = [x % 29 for x in days_int]\n    \n    months_int = [x % 12 for x in months_int]\n\
    \    \n    days_int = [x % 30 for x in days_int]\n    \n    days_int = [x % 29\
    \ for x in days_int]\n    \n    months_int = [x % 12 for x in months_int]\n  \
    \  \n    days_int = [x % 30 for x in days_int]\n    \n    days_int = [x % 29 for\
    \ x in days_int]\n    \n    ", "    \n    date_split = split(date, \"-\")\n  \
    \  \n    if date_split.length != 3 || date_split[1] < 1 || date_split[2] < 1 ||\
    \ date_split[1] > 12 || date_split[2] > 12 || date_split[1] > date_split[2] ||\
    \ date_split[1] < 1 || date_split[2] < 1 || date_split[1] > 31 || date_split[2]\
    \ > 31 || date_split[1] > 30 || date_split[2] > 30 || date_split[1] > 29 || date_split[2]\
    \ > 29\n        return false\n    else\n        return true\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string and returns the number\
    \ of characters in the string.", "    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n", "    \n    if date == \"\"\n        return false\n    \n    daysInMonth\
    \ = [31,28,31,30,31,30,31,30,31,30,31]\n    monthsInYear = [0,31,28,31,30,31,30,31,30,31,30,31]\n\
    \    \n    daysInMonth[monthsInYear.index(date.split(\"-\")[1])]\n    \n    if\
    \ date.split(\"-\")[1] == \"01\"\n        return true\n    \n    if date.split(\"\
    -\")[1] == \"02\"\n        return true\n    \n    if date.split(\"-\")[1] == \"\
    03\"\n        return true\n    \n    if date.split(\"-\")[1] == \"04\"\n     \
    \   return true\n    \n    if date.split(\"-\")[1] == \"05\"\n        return true\n\
    \    \n    if date.split(\"-\")[1] == \"06\"\n        return true\n    \n    if\
    \ date.split(\"-\")[1] == \"07\"\n        return true\n    \n    if date.split(\"\
    -\")[1] == \"08\"\n        return true\n    \n    if date.split(\"-\")[1] == \"\
    09\"\n        return true\n    \n    if date.split(\"-\")[1] == \"10\"\n     \
    \   return true\n    \n    if date.split(\"-\")[1] == \"11\"\n        return true\n\
    \    \n    if date.split(\"-\")[1] == \"12\"\n        return true\n    \n    if\
    \ date.split(\"-\")[1] == \"13\"\n        return true\n    \n    if date.split(\"\
    -\")[1] == \"14\"\n        return true\n    \n    if date.split(\"-\")[1] == \"\
    15\"\n        return true\n    \n    if date.split(\"-\")[1] == \"16\"\n     \
    \   return true\n    \n    if date.split(\"-\")[1] == \"17\"\n        return true\n\
    \    \n    if date.split(\"-\")[1] == \"18\"\n        return true\n    \n    if\
    \ date.split(\"-\")[1] == \"19\"\n        return true\n    \n    if date.split(\"\
    -\")[1] == \"20\"\n        return true\n    \n    if date.split(\"-\")[1] == \"\
    21\"\n        return true\n    \n    if date.split(\"-\")[1] == \"22\"\n     \
    \   return true\n    \n    if date.split(\"-\")[1] == \"23\"\n        return true\n\
    \    \n    if date.split(\"-\")[1] == \"24\"\n        return true\n    \n    if\
    \ date.split(\"-\")[1] == \"25\"\n        return true\n    \n    if date.split(\"\
    -\")[1] == \"26\"\n        return true\n    \n    if date.split(\"-\")[1] == \"\
    27\"\n        return true\n    \n    if date.split(\"-\")[1] == \"28\"\n     \
    \   return true\n    \n    if date.split(\"-\")[1] == \"29\"\n        return true\n\
    \    \n    if date.split(\"-\")[1] == \"30\"\n        return true\n    \n    if\
    \ date.split(\"-\")[1] == \"31\"\n        return true\n    \n    if date.split(\"\
    -\")[1] == \"32\"\n        return true\n    \n    if ", "    \n    if date ==\
    \ \"\"\n        return false\n    \n    date_array = split(date, \"-\")\n    \n\
    \    if length(date_array) != 3\n        return false\n    \n    days_array =\
    \ split(date_array[1], \"-\")\n    \n    if length(days_array) != 3\n        return\
    \ false\n    \n    months_array = split(date_array[2], \"-\")\n    \n    if length(months_array)\
    \ != 3\n        return false\n    \n    if months_array[1] < 1 || months_array[1]\
    \ > 12\n        return false\n    \n    if months_array[2] < 1 || months_array[2]\
    \ > 12\n        return false\n    \n    if days_array[1] < 1 || days_array[1]\
    \ > 31\n        return false\n    \n    if days_array[2] < 1 || days_array[2]\
    \ > 30\n        return false\n    \n    if days_array[1] > days_array[2]\n   \
    \     return false\n    \n    if days_array[2] > 29\n        return false\n  \
    \  \n    if days_array[1] != days_array[2]\n        return false\n    \n    if\
    \ months_array[1] != months_array[2]\n        return false\n    \n    return true\n\
    end\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n\
    <code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function to check if a given string is a valid phone number.\
    \ Valid phone numbers are in the following formats:", "    \n    valid_date_regex\
    \ = Regex(\"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-[0-9]{4}$\")\n    \n   \
    \ if valid_date_regex.match(date) == nil\n        false\n    else\n        true\n\
    \    end\nend\n</cell>\n<text>\nExercise 2: Write a function that validates a\
    \ given date string and returns true if the date is valid otherwise false.\nThe\
    \ date is valid if all of the following rules are satisfied:\n1. The date string\
    \ is not empty.\n2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n3. The months should not be less than 1\
    \ or higher than 12.\n4. The date should be in the format: mm-dd-yyyy", "    \n\
    \    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n       \
    \ false\n    else\n        true\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that checks if a given date string is valid or not.", "    \n   \
    \ if date == \"\"\n        return false\n    \n    days_months = split(date, \"\
    -\")\n    \n    days_months_len = length(days_months)\n    \n    if days_months_len\
    \ != 3\n        return false\n    \n    days_months_1 = days_months[1]\n    \n\
    \    if days_months_len == 1 && days_months_1 != \"01\"\n        return false\n\
    \    \n    days_months_2 = days_months[2]\n    \n    if days_months_len == 2 &&\
    \ days_months_2 != \"01\"\n        return false\n    \n    days_months_3 = days_months[3]\n\
    \    \n    if days_months_len == 3 && days_months_3 != \"01\"\n        return\
    \ false\n    \n    days_months_4 = days_months[4]\n    \n    if days_months_len\
    \ == 4 && days_months_4 != \"01\"\n        return false\n    \n    days_months_5\
    \ = days_months[5]\n    \n    if days_months_len == 5 && days_months_5 != \"01\"\
    \n        return false\n    \n    days_months_6 = days_months[6]\n    \n    if\
    \ days_months_len == 6 && days_months_6 != \"01\"\n        return false\n    \n\
    \    days_months_7 = days_months[7]\n    \n    if days_months_len == 7 && days_months_7\
    \ != \"01\"\n        return false\n    \n    days_months_8 = days_months[8]\n\
    \    \n    if days_months_len == 8 && days_months_8 != \"01\"\n        return\
    \ false\n    \n    days_months_9 = days_months[9]\n    \n    if days_months_len\
    \ == 9 && days_months_9 != \"01\"\n        return false\n    \n    days_months_10\
    \ = days_months[10]\n    \n    if days_months_len == 10 && days_months_10 != \"\
    01\"\n        return false\n    \n    days_months_11 = days_months[11]\n    \n\
    \    if days_months_len == 11 && days_months_11 != \"01\"\n        return false\n\
    \    \n    days_months_12 = days_months[12]\n    \n    if days_months_len == 12\
    \ && days_months_12 != \"01\"\n        return false\n    \n    days_months_len\
    \ = days_months_len - 1\n    \n    if days_months_len < 1 || days_months_len > ",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    if date ==\
    \ \"\"\n        false\n    elseif length(date) < 1 || length(date) > 31\n    \
    \    false\n    elseif length(date) < 1 || length(date) > 30\n        false\n\
    \    elseif length(date) < 1 || length(date) > 29\n        false\n    elseif length(date)\
    \ < 1 || length(date) > 12\n        false\n    elseif month(date) < 1 || month(date)\
    \ > 12\n        false\n    elseif day(date) < 1 || day(date) > 31\n        false\n\
    \    elseif day(date) < 1 || day(date) > 30\n        false\n    elseif day(date)\
    \ < 1 || day(date) > 29\n        false\n    elseif month(date) < 1 || month(date)\
    \ > 12\n        false\n    else\n        true\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that checks if a date string is a valid date or not.",
  "    \n    if date == \"\"\n        false\n    else\n        if length(date) < 1\
    \ || length(date) > 31\n            false\n        elseif length(date) < 1 ||\
    \ length(date) > 30\n            false\n        elseif length(date) < 1 || length(date)\
    \ > 29\n            false\n        elseif length(date) < 1 || length(date) > 12\n\
    \            false\n        else\n            true\n        end\n    end\nend\n\
    </cell>\n<text>\nExercise 3: Write a function that checks if a given date string\
    \ is a valid date in the format mm-dd-yyyy", "    \n    date_split = split(date,\
    \ \"-\")\n    \n    if date_split[1] == \"01\" or date_split[1] == \"03\" or date_split[1]\
    \ == \"05\" or date_split[1] == \"07\" or date_split[1] == \"08\" or date_split[1]\
    \ == \"10\" or date_split[1] == \"12\" then\n        return true\n    end\n  \
    \  \n    if date_split[1] == \"04\" or date_split[1] == \"06\" or date_split[1]\
    \ == \"09\" or date_split[1] == \"11\" then\n        return true\n    end\n  \
    \  \n    if date_split[1] == \"02\" then\n        if date_split[2] < 1 or date_split[2]\
    \ > 29 then\n            return false\n        end\n        return true\n    end\n\
    \    \n    return false\nend\n</cell>\n<code language=julia-1.5>", "    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    else\n        return\
    \ true\n    end\nend\n</cell>\n<code language=julia-1.5>", "    \n    valid_date_regex\
    \ = Regex(\"^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-[0-9]{4}$\")\n    \n   \
    \ if valid_date_regex.match(date) == nil\n        false\n    else\n        true\n\
    \    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string\
    \ and returns a new string with all the characters in lowercase except for the\
    \ following characters: !@#$%^&*()_+=-[]{};:,./<>?", "    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = ", "    \n    \n    if date == \"\"\n      \
    \  false\n    else\n        if length(date) < 1 || length(date) > 31\n       \
    \     false\n        elseif length(date) < 1 || length(date) > 30\n          \
    \  false\n        elseif length(date) < 1 || length(date) > 29\n            false\n\
    \        elseif length(date) < 1 || length(date) > 12\n            false\n   \
    \     else\n            if month(date) < 1 || month(date) > 12\n             \
    \   false\n            elseif day(date) < 1 || day(date) > 31\n              \
    \  false\n            elseif day(date) < 1 || day(date) > 30\n               \
    \ false\n            elseif day(date) < 1 || day(date) > 29\n                false\n\
    \            else\n                true\n            end\n        end\n    end\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a date string as\
    \ input and returns the number of days between the date string and the current\
    \ date. \nThe date string should be in the format: mm-dd-yyyy", "    \n    valid_date::Bool\
    \ = true \n    \n    if date == \"\" || date == \"null\" || date == \"Null\" ||\
    \ date == \"NULL\" || date == \"Null\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL\" || date == \"NULL\" || date == \"NULL\"\
    \ || date == \"NULL\" || date == \"NULL", "    \n    if date == \"\"\n       \
    \ return false\n    \n    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n  \
    \  days_month[month - 1]\n    \n    if days_month[month - 1] <= 0\n        return\
    \ false\n    \n    days_month[month - 1]\n    \n    if days_month[month - 1] <=\
    \ 0\n        return false\n    \n    days_month[month - 1]\n    \n    if days_month[month\
    \ - 1] <= 0\n        return false\n    \n    days_month[month - 1]\n    \n   \
    \ if days_month[month - 1] <= 0\n        return false\n    \n    days_month[month\
    \ - 1]\n    \n    if days_month[month - 1] <= 0\n        return false\n    \n\
    \    days_month[month - 1]\n    \n    if days_month[month - 1] <= 0\n        return\
    \ false\n    \n    days_month[month - 1]\n    \n    if days_month[month - 1] <=\
    \ 0\n        return false\n    \n    days_month[month - 1]\n    \n    if days_month[month\
    \ - 1] <= 0\n        return false\n    \n    days_month[month - 1]\n    \n   \
    \ if days_month[month - 1] <= 0\n        return false\n    \n    days_month[month\
    \ - 1]\n    \n    if days_month[month - 1] <= 0\n        return false\n    \n\
    \    days_month[month - 1]\n    \n    if days_month[month - 1] <= 0\n        return\
    \ false\n    \n    days_month[month - 1]\n    \n    if days_month[month - 1] <=\
    \ 0\n        return false\n    \n    days_month[month - 1]\n    \n    if days_month[month\
    \ - 1] <= 0\n        return false\n    \n    days_month[month - 1]\n    \n   \
    \ if days_month[month - 1] <= 0\n        return false\n    \n    days_month[month\
    \ - 1]\n    \n    if days_month[month - 1] <= 0\n        return false\n    \n\
    \    days_month[month - 1]\n    \n    if days_month[month - 1] <= 0\n        return\
    \ false\n    \n    days_month[month - 1]\n    \n    if days_month[month - 1] <=\
    \ 0\n        return false\n    \n    days_month[month - 1]\n    \n    if days_month[month\
    \ - 1] <= 0\n        return false\n    \n    days_month[month - 1]\n    \n   \
    \ if days_month[month - 1] <= 0\n        return false\n    \n    days_month[month\
    \ - 1]", "    \n    date_split = split(date, \"-\")\n    \n    months = date_split[1]\n\
    \    \n    days_split = get_days(date_split[2])\n    \n    years = date_split[3]\n\
    \    \n    months_split = get_months(months)\n    \n    days_split = get_days(days_split)\n\
    \    \n    years_split = get_years(years)\n    \n    \n    \n    if months_split[1]\
    \ < 1 or months_split[1] > 12:\n        return false\n    \n    if days_split[1]\
    \ < 1 or days_split[1] > 31:\n        return false\n    \n    if months_split[2]\
    \ < 1 or months_split[2] > 12:\n        return false\n    \n    if days_split[2]\
    \ < 1 or days_split[2] > 30:\n        return false\n    \n    if months_split[0]\
    \ < 1 or months_split[0] > 12:\n        return false\n    \n    if days_split[0]\
    \ < 1 or days_split[0] > 29:\n        return false\n    \n    if months_split[1]\
    \ != months_split[2]:\n        return false\n    \n    if days_split[1] != days_split[2]:\n\
    \        return false\n    \n    if months_split[0] != months_split[1]:\n    \
    \    return false\n    \n    if days_split[0] != days_split[1]:\n        return\
    \ false\n    \n    if years_split[0] < 1 or years_split[0] > 100:\n        return\
    \ false\n    \n    if years_split[1] < 1 or years_split[1] > 100:\n        return\
    \ false\n    \n    if years_split[2] < 1 or years_split[2] > 100:\n        return\
    \ false\n    \n    if years_split[0] != years_split[1]:\n        return false\n\
    \    \n    if years_split[0] != years_split[2]:\n        return false\n    \n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</", "    \n    valid_date_str\
    \ = true\n    valid_date_str = !is_empty(date)\n    valid_date_str = !is_less_than_or_equal_to(1,31,date,valid_date_str)\n\
    \    valid_date_str = !is_less_than_or_equal_to(1,30,date,valid_date_str)\n  \
    \  valid_date_str = !is_less_than_or_equal_to(1,29,date,valid_date_str)\n    valid_date_str\
    \ = !is_less_than_or_equal_to(1,12,date,valid_date_str)\n    valid_date_str =\
    \ !is_less_than_or_equal_to(4,12,date,valid_date_str)\n    valid_date_str = !is_less_than_or_equal_to(2,12,date,valid_date_str)\n\
    \    valid_date_str = !is_less_than_or_equal_to(2,1,date,valid_date_str)\n   \
    \ valid_date_str = !is_less_than_or_equal_to(2,3,date,valid_date_str)\n    valid_date_str\
    \ = !is_less_than_or_equal_to(2,5,date,valid_date_str)\n    valid_date_str = !is_less_than_or_equal_to(2,7,date,valid_date_str)\n\
    \    valid_date_str = !is_less_than_or_equal_to(2,8,date,valid_date_str)\n   \
    \ valid_date_str = !is_less_than_or_equal_to(2,10,date,valid_date_str)\n    valid_date_str\
    \ = !is_less_than_or_equal_to(2,11,date,valid_date_str)\n    valid_date_str =\
    \ !is_less_than_or_equal_to(2,12,date,valid_date_str)\n    valid_date_str = !is_less_than_or_equal_to(3,1,date,valid_date_str)\n\
    \    valid_date_str = !is_less_than_or_equal_to(3,5,date,valid_date_str)\n   \
    \ valid_date_str = !is_less_than_or_equal_to(3,7,date,valid_date_str)\n    valid_date_str\
    \ = !is_less_than_or_equal_to(3,8,date,valid_date_str)\n    valid_date_str = !is_less_than_or_equal_to(3,10,date,valid_date_str)\n\
    \    valid_date_str = !is_less_than_or_equal_to(3,11,date,valid_date_str)\n  \
    \  valid_date_str = !is_less_than_or_equal_to(3,12,date,valid_date_str)\n    valid_date_str\
    \ = !is_less_than_or_equal_to(4,1,date,valid_date_str)\n    valid_date_str = !is_less_than_or_equal_to(4,6,date,valid_date_str)\n\
    \    valid_date_str = !is_less_than_or_equal_to(4,9,date,valid_date_str)\n   \
    \ valid_date_str = !is_less_than_or_equal_to(4,11,date,valid_date_str)\n    valid_date_str\
    \ = !is_less_than_or_equal_to(4,12,date,valid_date_str)\n    ", "    \n    valid_date_str\
    \ = Date.valid_date_str(date)\n    \n    if valid_date_str == \"\"\n        false\n\
    \    else\n        Date.valid_date(valid_date_str)\n    end\nend", "    \n   \
    \ date_split = split(date, \"-\")\n    \n    if date_split[1] < 1 || date_split[1]\
    \ > 12 || date_split[2] < 1 || date_split[2] > 31 || date_split[1] < 1 || date_split[1]\
    \ > 31 || date_split[2] < 1 || date_split[2] > 30 || date_split[1] < 1 || date_split[1]\
    \ > 29 || date_split[2] < 1 || date_split[2] > 29\n        return false\n    else\n\
    \        return true\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that checks if a given date string is a valid date or not.", "    \n    date\
    \ = date.split(\"/\")\n    \n    if date.length != 3 || date[1].length != 2 ||\
    \ date[2].length != 4 || date[1] < 1 || date[2] < 1 || date[1] > 12 || date[2]\
    \ > 12 || date[1] > 31 || date[2] > 31 || date[1] > 30 || date[2] > 30 || date[1]\
    \ > 29 || date[2] > 29\n        return false\n    else\n        return true\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>", "    \n    date_split = split(date,\
    \ \"-\")\n    \n    days_valid = check_days(date_split)\n    \n    months_valid\
    \ = check_months(date_split)\n    \n    year_valid = check_year(date_split)\n\
    \    \n    return days_valid and months_valid and year_valid\nend", "    valid_date::Bool\
    \ = false\n    if date != \"\"\n        if length(date) == 7\n            if month(date)\
    \ == 0 || month(date) == 4 || month(date) == 6 || month(date) == 9 || month(date)\
    \ == 11 || month(date) == 12\n                if day(date) == 1 || day(date) ==\
    \ 3 || day(date) == 5 || day(date) == 7 || day(date) == 8 || day(date) == 10 ||\
    \ day(date) == 12\n                    if year(date) == 2000\n               \
    \         valid_date::Bool = true\n                    end\n                end\n\
    \            end\n        end\n    end\n    return valid_date\nend\n</cell>\n\
    <code language=julia-1.5>", "    \n    if date == \"\"\n        false\n    else\n\
    \        if length(date) != 10\n            false\n        else\n            if\
    \ month(date) < 1 || month(date) > 12\n                false\n            else\n\
    \                if day(date) < 1 || day(date) > 31\n                    false\n\
    \                else\n                    if month(date) == 2 || month(date)\
    \ == 4 || month(date) == 6 || month(date) == 9 || month(date) == 11\n        \
    \                false\n                    else\n                        if day(date)\
    \ > 30\n                            false\n                        else\n    \
    \                        if month(date) == 1 || month(date) == 3 || month(date)\
    \ == 5 || month(date) == 7 || month(date) == 8 || month(date) == 10 || month(date)\
    \ == 12\n                                false\n                            else\n\
    \                                if day(date) > 29\n                         \
    \           false\n                                else\n                    \
    \                true\n        end\n    end\nend\n</cell>\n<text>\nExercise 4\n\
    Write a function that checks if a given date string is valid or not.", "    \n\
    \    if date == \"\"\n        false\n    elseif length(date) < 1\n        false\n\
    \    elseif length(date) > 31\n        false\n    elseif length(date) < 30\n \
    \       false\n    elseif length(date) < 29\n        false\n    elseif length(date)\
    \ < 12\n        false\n    elseif length(date) > 12\n        false\n    elseif\
    \ length(date) < 4\n        false\n    elseif length(date) > 12\n        false\n\
    \    elseif length(date) < 6\n        false\n    elseif length(date) > 12\n  \
    \      false\n    elseif length(date) < 9\n        false\n    elseif length(date)\
    \ > 12\n        false\n    elseif length(date) < 11\n        false\n    elseif\
    \ length(date) > 12\n        false\n    elseif length(date) < 3\n        false\n\
    \    elseif length(date) > 12\n        false\n    elseif length(date) < 7\n  \
    \      false\n    elseif length(date) > 12\n        false\n    elseif length(date)\
    \ < 8\n        false\n    elseif length(date) > 12\n        false\n    elseif\
    \ length(date) < 10\n        false\n    elseif length(date) > 12\n        false\n\
    \    elseif length(date) < 12\n        false\n    elseif length(date) > 12\n \
    \       false\n    elseif length(date) < 13\n        false\n    elseif length(date)\
    \ > 12\n        false\n    elseif length(date) < 15\n        false\n    elseif\
    \ length(date) > 12\n        false\n    elseif length(date) < 16\n        false\n\
    \    elseif length(date) > 12\n        false\n    elseif length(date) < 18\n \
    \       false\n    elseif length(date) > 12\n        false\n    elseif length(date)\
    \ < 19\n        false\n    elseif length(date) > 12\n        false\n    elseif\
    \ length(date) < 20\n        false\n    elseif length(date) > 12\n        false\n\
    \    elseif length(date) < 21\n        false\n    elseif length(date) > 12\n \
    \       false\n    elseif length(date) < 22\n        false\n    elseif length(date)\
    \ > 12\n        false\n    elseif length(date) < 23\n        false\n    elseif\
    \ length(date) > 12\n        false\n    elseif length(date) < 24\n        false\n\
    \    elseif length(date) > 12\n        false\n    elseif length(date) < 25\n \
    \       false\n    elseif length(date) > 12\n        false\n    elseif length(date)\
    \ < 26\n        false\n    elseif length(date) > 12\n        false\n    elseif\
    \ length(date) < 27\n        false\n    elseif length(date) > 12\n        false\n\
    \    elseif ", "    \n    valid_date::Bool = true \n    \n    if date == \"\"\
    \ then \n        return valid_date\n    \n    day::Int = days(date)\n    \n  \
    \  if day < 1 or day > 31 then \n        return valid_date\n    \n    month::Int\
    \ = months(date)\n    \n    if month < 1 or month > 12 then \n        return valid_date\n\
    \    \n    year::Int = year(date)\n    \n    if year < 1 or year > 9999 then \n\
    \        return valid_date\n    \n    return valid_date\nend", "    \n    date\
    \ = Date.parse(date)\n    \n    if date == nil\n        return false\n    end\n\
    \    \n    if date.year == nil\n        return false\n    end\n    \n    if date.month\
    \ == nil\n        return false\n    end\n    \n    if date.day == nil\n      \
    \  return false\n    end\n    \n    if date.month < 1 || date.month > 12\n   \
    \     return false\n    end\n    \n    if date.day < 1 || date.day > 31\n    \
    \    return false\n    end\n    \n    if date.month < 1 || date.month > 12\n \
    \       return false\n    end\n    \n    if date.day < 1 || date.day > 30\n  \
    \      return false\n    end\n    \n    if date.month < 1 || date.month > 12\n\
    \        return false\n    end\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    valid_date_str = true\n    valid_date_str = !is_empty(date)\n    valid_date_str\
    \ = !is_less_than_or_equal_to_1(date)\n    valid_date_str = !is_less_than_or_equal_to_31(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_30(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_29(date)\n    valid_date_str = !is_less_than_or_equal_to_12(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_31(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_30(date)\n    valid_date_str = !is_less_than_or_equal_to_29(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_12(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_30(date)\n    valid_date_str = !is_less_than_or_equal_to_29(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_12(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_30(date)\n    valid_date_str = !is_less_than_or_equal_to_29(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_12(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_30(date)\n    valid_date_str = !is_less_than_or_equal_to_29(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_12(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_30(date)\n    valid_date_str = !is_less_than_or_equal_to_29(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_12(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_30(date)\n    valid_date_str = !is_less_than_or_equal_to_29(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_12(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_30(date)\n    valid_date_str = !is_less_than_or_equal_to_29(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_12(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_30(date)\n    valid_date_str = !is_less_than_or_equal_to_29(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_12(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_30(date)\n", "    \n    if date == \"\"\n        false\n\
    \    elseif length(date) < 1 || length(date) > 31\n        false\n    elseif month(date)\
    \ < 1 || month(date) > 12\n        false\n    elseif day(date) < 1 || day(date)\
    \ > 30\n        false\n    elseif month(date) == 2 && day(date) > 29\n       \
    \ false\n    else\n        true\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that validates a given date string and returns true if the date is\
    \ valid otherwise false.\nThe date is valid if all of the following rules are\
    \ satisfied:\n1. The date string is not empty.\n2. The number of days is not less\
    \ than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of\
    \ days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the\
    \ number of days is not less than 1 or higher than 29 for the month 2.\n3. The\
    \ months should not be less than 1 or higher than 12.\n4. The date should be in\
    \ the format: mm-dd-yyyy", "    \n    if date == \"\"\n        false\n    elseif\
    \ date == \"01-01-2000\"\n        true\n    elseif date == \"01-01-2001\"\n  \
    \      false\n    elseif date == \"01-01-2002\"\n        false\n    elseif date\
    \ == \"01-01-2003\"\n        false\n    elseif date == \"01-01-2004\"\n      \
    \  false\n    elseif date == \"01-01-2005\"\n        false\n    elseif date ==\
    \ \"01-01-2006\"\n        false\n    elseif date == \"01-01-2007\"\n        false\n\
    \    elseif date == \"01-01-2008\"\n        false\n    elseif date == \"01-01-2009\"\
    \n        false\n    elseif date == \"01-01-2010\"\n        false\n    elseif\
    \ date == \"01-01-2011\"\n        false\n    elseif date == \"01-01-2012\"\n \
    \       false\n    elseif date == \"01-01-2013\"\n        false\n    elseif date\
    \ == \"01-01-2014\"\n        false\n    elseif date == \"01-01-2015\"\n      \
    \  false\n    elseif date == \"01-01-2016\"\n        false\n    elseif date ==\
    \ \"01-01-2017\"\n        false\n    elseif date == \"01-01-2018\"\n        false\n\
    \    elseif date == \"01-01-2019\"\n        false\n    elseif date == \"01-01-2020\"\
    \n        false\n    elseif date == \"01-01-2021\"\n        false\n    elseif\
    \ date == \"01-01-2022\"\n        false\n    elseif date == \"01-01-2023\"\n \
    \       false\n    elseif date == \"01-01-2024\"\n        false\n    elseif date\
    \ == \"01-01-2025\"\n        false\n    elseif date == \"01-01-2026\"\n      \
    \  false\n    elseif date == \"01-01-2027\"\n        false\n    elseif date ==\
    \ \"01-01-2028\"\n        false\n    elseif date == \"01-01-2029\"\n        false\n\
    \    elseif date == \"01-01-2030\"\n        false\n    elseif date == \"01-01-2031\"\
    \n        false\n    elseif date == \"01-01-2032\"\n        false\n    elseif\
    \ date == \"01-01-2033\"\n        false\n    elseif date == \"01-01-2034\"\n \
    \       false\n    elseif date == \"01-01-2035\"\n        false\n    elseif date\
    \ == \"01-01-2036\"\n        false\n    elseif date == \"01-01-2037\"\n      \
    \  false\n    elseif date == \"01-01-2038\"\n        ", "    \n    date_split\
    \ = split(date, \"-\")\n    \n    if date_split[1] < 1 || date_split[1] > 12\n\
    \        error(\"The months should not be less than 1 or higher than 12\")\n \
    \   end\n    \n    if date_split[2] < 1 || date_split[2] > 31\n        error(\"\
    The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
    \ And the number of days is not less than 1 or higher than 30 days for months\
    \ 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the\
    \ month 2.\")\n    end\n    \n    if date_split[1] == 2 && date_split[2] > 29\n\
    \        error(\"The date should be in the format: mm-dd-yyyy\")\n    end\n  \
    \  \n    if date_split[2] > 30\n        error(\"The date should be in the format:\
    \ mm-dd-yyyy\")\n    end\n    \n    if date_split[1] == 2 && date_split[2] > 29\n\
    \        error(\"The date should be in the format: mm-dd-yyyy\")\n    end\n  \
    \  \n    if date_split[2] > 30\n        error(\"The date should be in the format:\
    \ mm-dd-yyyy\")\n    end\n    \n    if date_split[1] == 2 && date_split[2] > 29\n\
    \        error(\"The date should be in the format: mm-dd-yyyy\")\n    end\n  \
    \  \n    if date_split[2] > 30\n        error(\"The date should be in the format:\
    \ mm-dd-yyyy\")\n    end\n    \n    if date_split[1] == 2 && date_split[2] > 29\n\
    \        error(\"The date should be in the format: mm-dd-yyyy\")\n    end\n  \
    \  \n    if date_split[2] > 30\n        error(\"The date should be in the format:\
    \ mm-dd-yyyy\")\n    end\n    \n    if date_split[1] == 2 && date_split[2] > 29\n\
    \        error(\"The date should be in the format: mm-dd-yyyy\")\n    end\n  \
    \  \n    if date_split[2] > 30\n        error(\"The date should be in the format:\
    \ mm-dd-yyyy\")\n    end\n    \n    if date_split[1] == 2 && date_split[2] > 29\n\
    \        error(\"The date should be in the format: mm-dd-yyyy\")\n    end\n  \
    \  \n    if date_split[2] > 30\n        error(\"The date should be in the format:\
    \ mm-dd-yyyy\")\n    end\n    \n    if date_split[1] == 2 && date_split[2] > 29\n\
    \        error(\"The date should be in the format: mm-dd-yyyy\")\n    end\n  \
    \  \n    if date_split[2] > 30\n        error(\"The date should be in the format:\
    \ mm-dd-yyyy\")\n    end\n    \n    if ", "    \n    date_array = string.split(date,\
    \ \"-\")\n    \n    if date_array.length != 3:\n        return false\n    \n \
    \   days_array = string.split(date_array[1], \"-\")\n    \n    if days_array.length\
    \ != 2:\n        return false\n    \n    months_array = string.split(date_array[0],\
    \ \"-\")\n    \n    if months_array.length != 2:\n        return false\n    \n\
    \    years_array = string.split(date_array[2], \"/\")\n    \n    if years_array.length\
    \ != 3:\n        return false\n    \n    days_array[1] = days_array[1].toInt()\n\
    \    \n    if days_array[1] < 1 or days_array[1] > 31:\n        return false\n\
    \    \n    months_array[1] = months_array[1].toInt()\n    \n    if months_array[1]\
    \ < 1 or months_array[1] > 12:\n        return false\n    \n    years_array[1]\
    \ = years_array[1].toInt()\n    \n    if years_array[1] < 1 or years_array[1]\
    \ > 100:\n        return false\n    \n    days_array[2] = days_array[2].toInt()\n\
    \    \n    if days_array[2] < 1 or days_array[2] > 30:\n        return false\n\
    \    \n    months_array[2] = months_array[2].toInt()\n    \n    if months_array[2]\
    \ < 1 or months_array[2] > 12:\n        return false\n    \n    return true\n\
    end\n</cell>\n<code language=julia-1.5>", "    \n    valid_date_str = Date.valid_date_str(date)\n\
    \    \n    if valid_date_str == \"\"\n        false\n    else\n        Date.valid_date_days(valid_date_str)\n\
    \    end\nend", "    \n    if date == \"\"\n        false\n    elseif length(date)\
    \ < 1 || length(date) > 31\n        false\n    elseif month(date) < 1 || month(date)\
    \ > 12\n        false\n    elseif day(date) < 1 || day(date) > 30\n        false\n\
    \    elseif month(date) == 2 && day(date) > 29\n        false\n    else\n    \
    \    true\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a date string and returns the number of days between the current date and that\
    \ date.", "    \n    if date == \"\"\n        return false\n    \n    days_months\
    \ = split(date, \"-\")\n    \n    if days_months.length != 3\n        return false\n\
    \    \n    days_months = days_months[1..2]\n    \n    if days_months.length !=\
    \ 12\n        return false\n    \n    days_months = days_months[1..12]\n    \n\
    \    if days_months.length != 31\n        return false\n    \n    days_months\
    \ = days_months[1..31]\n    \n    if days_months.length != 30\n        return\
    \ false\n    \n    days_months = days_months[1..29]\n    \n    if days_months.length\
    \ != 29\n        return false\n    \n    days_months = days_months[1..12]\n  \
    \  \n    if days_months.length != 12\n        return false\n    \n    days_months\
    \ = days_months[1..31]\n    \n    if days_months.length != 31\n        return\
    \ false\n    \n    days_months = days_months[1..30]\n    \n    if days_months.length\
    \ != 30\n        return false\n    \n    days_months = days_months[1..29]\n  \
    \  \n    if days_months.length != 29\n        return false\n    \n    days_months\
    \ = days_months[1..12]\n    \n    if days_months.length != 12\n        return\
    \ false\n    \n    days_months = days_months[1..31]\n    \n    if days_months.length\
    \ != 31\n        return false\n    \n    days_months = days_months[1..30]\n  \
    \  \n    if days_months.length != 30\n        return false\n    \n    days_months\
    \ = days_months[1..29]\n    \n    if days_months.length != 29\n        return\
    \ false\n    \n    days_months = days_months[1..12]\n    \n    if days_months.length\
    \ != 12\n        return false\n    \n    days_months = days_months[1..31]\n  \
    \  \n    if days_months.length != 31\n        return false\n    \n    days_months\
    \ = days_months[1..30]\n    \n    if days_months.length != 30\n        return\
    \ false\n    \n    days_months = days_months[1..29]\n    \n    if days_months.length\
    \ != 29\n        return false\n    \n    days_months = days_months[1..12", " \
    \   \n    if date == \"\"\n        false\n    else if length(date) < 1 || length(date)\
    \ > 31\n        false\n    else if month(date) < 1 || month(date) > 12\n     \
    \   false\n    else if day(date) < 1 || day(date) > 30\n        false\n    else\
    \ if month(date) == 2 && day(date) > 29\n        false\n    else\n        true\n\
    \    end\nend\n</cell>\n<text>\nExercise 9: Write a function that checks if a\
    \ date string is valid or not.", "    \n    if date == \"\"\n        false\n \
    \   else\n        if length(date) < 1 || length(date) > 31\n            false\n\
    \        elseif length(date) < 1 || length(date) > 30\n            false\n   \
    \     elseif length(date) < 1 || length(date) > 29\n            false\n      \
    \  elseif length(date) < 1 || length(date) > 12\n            false\n        else\n\
    \            if month(date) < 1 || month(date) > 12\n                false\n \
    \           else\n                if day(date) < 1 || day(date) > 31\n       \
    \             false\n                else\n                    if year(date) <\
    \ 1 || year(date) > 2020\n                        false\n                    else\n\
    \                        true\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that checks if a date is valid or not.", "    \n    valid_date::Bool\
    \ = false \n    \n    if date == \"\"\n        valid_date = true\n        return\
    \ valid_date\n    \n    days::Int = split(date, \"-\")[2]\n    months::Int = split(date,\
    \ \"-\")[1]\n    years::Int = split(date, \"-\")[3]\n    \n    if days < 1 ||\
    \ days > 31\n        valid_date = false\n        return valid_date\n    \n   \
    \ if months < 1 || months > 12\n        valid_date = false\n        return valid_date\n\
    \    \n    if years < 1 || years > 9999\n        valid_date = false\n        return\
    \ valid_date\n    \n    if months == 2\n        if days < 1 || days > 29\n   \
    \         valid_date = false\n            return valid_date\n    \n    if months\
    \ == 4\n        if days < 1 || days > 30\n            valid_date = false\n   \
    \         return valid_date\n    \n    if months == 6\n        if days < 1 ||\
    \ days > 31\n            valid_date = false\n            return valid_date\n \
    \   \n    if months == 9\n        if days < 1 || days > 30\n            valid_date\
    \ = false\n            return valid_date\n    \n    if months == 11\n        if\
    \ days < 1 || days > 31\n            valid_date = false\n            return valid_date\n\
    \    \n    if months == 12\n        if days < 1 || days > 31\n            valid_date\
    \ = false\n            return valid_date\n    \n    return valid_date\nend\n</cell>\n\
    <code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that checks if a given date string is valid or not.",
  "    \n    valid_date::Bool = false\n    \n    if date == \"\"\n        valid_date\
    \ = false\n    else\n        valid_date = true\n        \n        if length(date)\
    \ < 1 || length(date) > 31\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 30\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 29\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 12\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 31\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 30\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 29\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 12\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 31\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 30\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 29\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 12\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 31\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 30\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 29\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 12\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 31\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 30\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 29\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 12\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 31\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 30\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 29\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 12\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 31\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 30\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 29\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 12\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 31\n            valid_date = false\n        elseif length(date)\
    \ < 1 || length(date) > 30\n            valid_date = false\n        elseif length(",
  "    \n    valid_date_regex = Regex(\"^((0[1-9]|[12]\\d|3[01])-(0[1-9]|1[0-2])-((19|20)\\\
    d\\d))$\")\n    valid_date_match = valid_date_regex.match(date)\n    \n    if\
    \ valid_date_match != nil\n        \n        days_regex = Regex(\"^((0[1-9]|[12]\\\
    d|3[01])-(0[1-9]|1[0-2])-((19|20)\\d\\d))$\")\n        days_match = days_regex.match(date)\n\
    \        \n        if days_match != nil\n            \n            months_regex\
    \ = Regex(\"^((0[1-9]|[12]\\d|3[01])-(0[1-9]|1[0-2])-((19|20)\\d\\d))$\")\n  \
    \          months_match = months_regex.match(date)\n            \n           \
    \ if months_match != nil\n                \n                year_regex = Regex(\"\
    ^((19|20)\\d\\d)$\")\n                year_match = year_regex.match(date)\n  \
    \              \n                if year_match != nil\n                    \n\
    \                    days_match = days_match.captures\n                    months_match\
    \ = months_match.captures\n                    year_match = year_match.captures\n\
    \                    \n                    days_match[1]\n                   \
    \ months_match[1]\n                    year_match[1]\n                    \n \
    \                   days_match[2]\n                    months_match[2]\n     \
    \               year_match[2]\n                    \n                    days_match[3]\n\
    \                    months_match[3]\n                    year_match[3]\n    \
    \                \n                    days_match[4]\n                    months_match[4]\n\
    \                    year_match[4]\n                    \n                   \
    \ days_match[5]\n                    months_match[5]\n                    year_match[5]\n\
    \                    \n                    days_match[6]\n                   \
    \ months_match[6]\n                    year_match[6]\n                    \n \
    \                   days_match[7]\n                    months_match[7]\n     \
    \               year_match[7]\n                    \n                    days_match[8]\n\
    \                    months_match[8]\n                    year_match[8]\n    \
    \                \n                    days_match[9]\n                    months_match[9]\n\
    \                    year_match[9]\n                    \n                   \
    \ days_match[10]\n                    months_match[10]\n                    year_match[10]\n\
    \                    \n                    days_match[11]\n                  \
    \  months_match[11]\n                    year_match[11]\n                    \n\
    \                    days_match[12]\n                    months_match[12]\n  \
    \                  year_match[12]\n                    \n                    days_match[13]\n\
    \                    months_match[13]\n                    year_match[13]\n  \
    \                  \n                    days_match[14]\n                    months_match",
  "    \n    if date == \"\"\n        false\n    else\n        if length(date) < 1\
    \ || length(date) > 31\n            false\n        elseif length(date) < 1 ||\
    \ length(date) > 30\n            false\n        elseif length(date) < 1 || length(date)\
    \ > 29\n            false\n        elseif length(date) < 1 || length(date) > 12\n\
    \            false\n        else\n            true\n        end\n    end\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that checks if a given date string\
    \ is valid or not.", "    \n    date = Date.parse(date)\n    \n    if date ==\
    \ nil\n        return false\n    end\n    \n    days_array = Date.days_array(date)\n\
    \    \n    if days_array[1] < 1 || days_array[1] > 31\n        return false\n\
    \    end\n    \n    if days_array[2] < 1 || days_array[2] > 30\n        return\
    \ false\n    end\n    \n    if days_array[3] < 1 || days_array[3] > 29\n     \
    \   return false\n    end\n    \n    if days_array[4] < 1 || days_array[4] > 12\n\
    \        return false\n    end\n    \n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that checks if a given date string is a valid date in the format\
    \ mm-dd-yyyy", "    \n    date = Date.parse(date)\n    if date == nil\n      \
    \  return false\n    end\n    \n    days = (date.month * 30) + date.day\n    if\
    \ days < 1 || days > 31\n        return false\n    end\n    \n    if date.month\
    \ < 1 || date.month > 12\n        return false\n    end\n    \n    if date.day\
    \ < 1 || date.day > 30\n        return false\n    end\n    \n    return true\n\
    end\n</cell>\n<code language=julia-1.5>", "    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \n    if date == \"\"\n        return false\n    \n\
    \    date_split = split(date, \"-\")\n    \n    if date_split[1] < 1 || date_split[1]\
    \ > 12\n        return false\n    \n    if date_split[2] < 1 || date_split[2]\
    \ > 31\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 29\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ < 1\n        return false\n    \n    if date_split[1] == 2 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 3 && date_split[2]\
    \ > 29\n        return false\n    \n    if date_split[1] == 3 && date_split[2]\
    \ < 1\n        return false\n    \n    if date_split[1] == 3 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 4 && date_split[2]\
    \ > 29\n        return false\n    \n    if date_split[1] == 4 && date_split[2]\
    \ < 1\n        return false\n    \n    if date_split[1] == 4 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 5 && date_split[2]\
    \ > 29\n        return false\n    \n    if date_split[1] == 5 && date_split[2]\
    \ < 1\n        return false\n    \n    if date_split[1] == 5 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 6 && date_split[2]\
    \ > 29\n        return false\n    \n    if date_split[1] == 6 && date_split[2]\
    \ < 1\n        return false\n    \n    if date_split[1] == 6 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 7 && date_split[2]\
    \ > 29\n        return false\n    \n    if date_split[1] == 7 && date_split[2]\
    \ < 1\n        return false\n    \n    if date_split[1] == 7 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 8 && date_split[2]\
    \ > 29\n        return false\n    \n    if date_split[1] == 8 && date_split[2]\
    \ < 1\n        return false\n    \n    if date_split[1] == 8 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 9 && date_split[2]\
    \ > 29\n        return false\n    \n    if date_split[1] == 9 && date_split[2]\
    \ < 1\n        return false\n    \n    if date_split[1] == 9 && date_split[2]\
    \ > 30\n        return false\n    \n    if date_split[1] == 10 && date_split[2]\
    \ > 29\n        return false\n    \n    if date_split[1] == 10 && date_split[2]\
    \ < 1\n        return false\n    \n    if date_split[1] == 10 && date_split[2]\
    \ > 30\n        return false", "    \n    if date == \"\"\n        return false\n\
    \    \n    day::Int = split(date, \"-\")[2]\n    month::Int = split(date, \"-\"\
    )[1]\n    year::Int = split(date, \"-\")[3]\n    \n    if day == \"\"\n      \
    \  return false\n    \n    if month == \"\"\n        return false\n    \n    if\
    \ year == \"\"\n        return false\n    \n    if month < 1 || month > 12\n \
    \       return false\n    \n    if day < 1 || day > 31\n        return false\n\
    \    \n    if day < 1 || day > 30\n        return false\n    \n    if day < 1\
    \ || day > 29\n        return false\n    \n    return true\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    date_split = split(date, \"-\")\n    \n   \
    \ if length(date_split) != 3 || date_split[2] != \"-\" || date_split[1] < \"01\"\
    \ || date_split[1] > \"12\" || date_split[0] < \"01\" || date_split[0] > \"31\"\
    \ || date_split[1] < \"01\" || date_split[1] > \"30\" || date_split[1] < \"01\"\
    \ || date_split[1] > \"29\" || date_split[1] < \"01\" || date_split[1] > \"12\"\
    \ || date_split[0] < \"01\" || date_split[0] > \"31\" || date_split[0] < \"01\"\
    \ || date_split[0] > \"30\" || date_split[0] < \"01\" || date_split[0] > \"29\"\
    \ || date_split[0] < \"01\" || date_split[0] > \"12\"\n    \n    else \n    \n\
    \        true\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ checks if a given date string is a valid date or not.", "    \n    valid_date::Bool\
    \ = true \n    \n    if date == \"\"\n        valid_date = false\n    else if\
    \ length(date) < 1 || length(date) > 31\n        valid_date = false\n    else\
    \ if month(date) < 1 || month(date) > 12\n        valid_date = false\n    else\
    \ if day(date) < 1 || day(date) > 30\n        valid_date = false\n    else if\
    \ month(date) == 2 && day(date) > 29\n        valid_date = false\n    else\n \
    \       valid_date = true\n    end\n    \n    return valid_date\nend\n</cell>\n\
    <code language=julia-1.5>", "    \n    if date == \"\"\n        false\n    \n\
    \    else if length(date) < 1 || length(date) > 31\n        false\n    \n    else\
    \ if month(date) < 1 || month(date) > 12\n        false\n    \n    else if day(date)\
    \ < 1 || day(date) > 30\n        false\n    \n    else if month(date) == 2 &&\
    \ day(date) > 29\n        false\n    \n    else if month(date) == 2 && day(date)\
    \ < 1\n        false\n    \n    else if month(date) == 1 && day(date) > 31\n \
    \       false\n    \n    else if month(date) == 1 && day(date) < 1\n        false\n\
    \    \n    else\n        true\nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that checks if a given date string is valid or not.", "    \n    valid_date_str\
    \ = true\n    valid_date_str = !is_empty(date)\n    valid_date_str = !is_less_than_or_equal_to_1(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_31(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_30(date)\n    valid_date_str = !is_less_than_or_equal_to_29(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_12(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_31(date)\n    valid_date_str = !is_less_than_or_equal_to_30(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_29(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_12(date)\n    valid_date_str = !is_less_than_or_equal_to_31(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_30(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_29(date)\n    valid_date_str = !is_less_than_or_equal_to_12(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_31(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_30(date)\n    valid_date_str = !is_less_than_or_equal_to_29(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_12(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_31(date)\n    valid_date_str = !is_less_than_or_equal_to_30(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_29(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_12(date)\n    valid_date_str = !is_less_than_or_equal_to_31(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_30(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_29(date)\n    valid_date_str = !is_less_than_or_equal_to_12(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_31(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_30(date)\n    valid_date_str = !is_less_than_or_equal_to_29(date)\n\
    \    valid_date_str = !is_less_than_or_equal_to_12(date)\n    valid_date_str =\
    \ !is_less_than_or_equal_to_31(date)\n    valid_date_str = !is_less_than_or_equal_to_30(date)\n",
  "    \n    date = Date.parse(date)\n    \n    if date == Date.invalid\n        return\
    \ false\n    \n    if date.year < 1 || date.year > 9999\n        return false\n\
    \    \n    if date.month < 1 || date.month > 12\n        return false\n    \n\
    \    if date.day < 1 || date.day > 31\n        return false\n    \n    if date.month\
    \ == 2 && date.day > 29\n        return false\n    \n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that checks if a given date string is valid or not.\n\
    The date is valid if all of the following rules are satisfied:\n1. The date string\
    \ is not empty.\n2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n3. The months should not be less than 1\
    \ or higher than 12.\n4. The date should be in the format: mm-dd-yyyy", "    \n\
    \    valid_date::Bool = true \n    \n    if date == \"\"\n        valid_date =\
    \ false\n    else if length(date) < 1 || length(date) > 31\n        valid_date\
    \ = false\n    else if length(date) < 1 || length(date) > 30\n        valid_date\
    \ = false\n    else if length(date) < 1 || length(date) > 29\n        valid_date\
    \ = false\n    else if length(date) < 1 || length(date) > 12\n        valid_date\
    \ = false\n    else if month(date) < 1 || month(date) > 12\n        valid_date\
    \ = false\n    else if day(date) < 1 || day(date) > 31\n        valid_date = false\n\
    \    else if day(date) < 1 || day(date) > 30\n        valid_date = false\n   \
    \ else if day(date) < 1 || day(date) > 29\n        valid_date = false\n    else\
    \ if day(date) < 1 || day(date) > 31\n        valid_date = false\n    else if\
    \ day(date) < 1 || day(date) > 30\n        valid_date = false\n    else if day(date)\
    \ < 1 || day(date) > 29\n        valid_date = false\n    else if day(date) < 1\
    \ || day(date) > 31\n        valid_date = false\n    else if day(date) < 1 ||\
    \ day(date) > 30\n        valid_date = false\n    else if day(date) < 1 || day(date)\
    \ > 29\n        valid_date = false\n    else if day(date) < 1 || day(date) > 31\n\
    \        valid_date = false\n    else if day(date) < 1 || day(date) > 30\n   \
    \     valid_date = false\n    else if day(date) < 1 || day(date) > 29\n      \
    \  valid_date = false\n    else if day(date) < 1 || day(date) > 31\n        valid_date\
    \ = false\n    else if day(date) < 1 || day(date) > 30\n        valid_date = false\n\
    \    else if day(date) < 1 || day(date) > 29\n        valid_date = false\n   \
    \ else if day(date) < 1 || day(date) > 31\n        valid_date = false\n    else\
    \ if day(date) < 1 || day(date) > 30\n        valid_date = false\n    else if\
    \ day(date) < 1 || day(date) > 29\n        valid_date = false\n    else if day(date)\
    \ < 1 || day(date) > 31\n        valid_date = false\n    else if day(date) < 1\
    \ || day(date) > 30\n        valid_date = false\n    else if day(date) < 1 ||\
    \ day(date) > 29\n        valid_date = false\n    else if day", "    \n    valid_date::Bool\
    \ = false \n    \n    if date == \"\" \n        valid_date = false \n    else\
    \ \n        \n        days::Int = count_days(date) \n        \n        if days\
    \ > 31 \n            valid_date = false \n        else \n            \n      \
    \      months::Int = count_months(date) \n            \n            if months\
    \ > 12 \n                valid_date = false \n            else \n            \
    \    \n                years::Int = count_years(date) \n                \n   \
    \             if years > 0 \n                    valid_date = true \n        \
    \        else \n                    valid_date = false \n            end \n  \
    \      end \n    end \n    return valid_date \nend \n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 3\n\
    Write a function that accepts a string and returns the number of words in the\
    \ string.", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n\
    \    date_split = split(date, \"-\")\n    \n    days_months_years = date_split[2]\n\
    \    \n    days_months_years_split = split(days_months_years, \"-\")\n    \n \
    \   days_months_years_split[2] = days_months_years_split[2].replace(\"-\", \"\"\
    )\n    \n    days_months_years_split[2] = days_months_years_split[2].replace(\"\
    ,\", \"\")\n    \n    days_months_years_split[2] = days_months_years_split[2].replace(\"\
    '\", \"\")\n    \n    days_months_years_split[2] = days_months_years_split[2].replace(\"\
    \\\"\", \"\")\n    \n    days_months_years_split[2] = days_months_years_split[2].replace(\"\
    %\", \"\")\n    \n    days_months_years_split[2] = days_months_years_split[2].replace(\"\
    '\", \"\")\n    \n    days_months_years_split[2] = days_months_years_split[2].replace(\"\
    \\\"\", \"\")\n    \n    days_months_years_split[2] = days_months_years_split[2].replace(\"\
    %\", \"\")\n    \n    days_months_years_split[2] = days_months_years_split[2].replace(\"\
    '\", \"\")\n    \n    days_months_years_split[2] = days_months_years_split[2].replace(\"\
    \\\"\", \"\")\n    \n    days_months_years_split[2] = days_months_years_split[2].replace(\"\
    %\", \"\")\n    \n    days_months_years_split[2] = days_months_years_split[2].replace(\"\
    '\", \"\")\n    \n    days_months_years_split[2] = days_months_years_split[2].replace(\"\
    \\\"\", \"\")\n    \n    days_months_years_split[2] = days_months_years_split[2].replace(\"\
    %\", \"\")\n    \n    days_months_years_split[2] = days_months_years_split[2].replace(\"\
    '\", \"\")\n    \n    days_months_years_split[2] = days_months_years_split[2].replace(\"\
    \\\"\", \"\")\n    \n    days_months_years_split[2] = days_months_years_split[2].replace(\"\
    %\", \"\")\n    \n    days_months_years_split[2] = days_months_years_split[2].replace(\"\
    '\", \"\")\n    \n    days_months_years_split[2] = days_months_years_split[2].replace(\"\
    \\\"\", \"\")\n    \n    days_months_years_split[2] = days_months_years_split[2].replace(\"\
    %\", \"\")\n    \n    day", "    \n    date_str = split(date, \"-\")\n    \n \
    \   months = split(date_str[1], \"-\")\n    \n    days_str = split(date_str[2],\
    \ \"-\")\n    \n    days_str = split(date_str[2], \"-\")\n    \n    days_str =\
    \ split(date_str[2], \"-\")\n    \n    days_str = split(date_str[2], \"-\")\n\
    \    \n    days_str = split(date_str[2], \"-\")\n    \n    days_str = split(date_str[2],\
    \ \"-\")\n    \n    days_str = split(date_str[2], \"-\")\n    \n    days_str =\
    \ split(date_str[2], \"-\")\n    \n    days_str = split(date_str[2], \"-\")\n\
    \    \n    days_str = split(date_str[2], \"-\")\n    \n    days_str = split(date_str[2],\
    \ \"-\")\n    \n    days_str = split(date_str[2], \"-\")\n    \n    days_str =\
    \ split(date_str[2], \"-\")\n    \n    days_str = split(date_str[2], \"-\")\n\
    \    \n    days_str = split(date_str[2], \"-\")\n    \n    days_str = split(date_str[2],\
    \ \"-\")\n    \n    days_str = split(date_str[2], \"-\")\n    \n    days_str =\
    \ split(date_str[2], \"-\")\n    \n    days_str = split(date_str[2], \"-\")\n\
    \    \n    days_str = split(date_str[2], \"-\")\n    \n    days_str = split(date_str[2],\
    \ \"-\")\n    \n    days_str = split(date_str[2], \"-\")\n    \n    days_str =\
    \ split(date_str[2], \"-\")\n    \n    days_str = split(date_str[2], \"-\")\n\
    \    \n    days_str = split(date_str[2], \"-\")\n    \n    days_str = split(date_str[2],\
    \ \"-\")\n    \n    days_str = split(date_str[2], \"-\")\n    \n    days_str =\
    \ split(date_str[2], \"-\")\n    \n    days_str = split(date_str[2], \"-\")\n\
    \    \n    days_str = split(date_str[2], \"-\")\n    \n    days_str = split(date_str[2],\
    \ \"-\")\n    \n    days_str = split(date_str[2], \"-\")\n    \n    days_str =\
    \ split(date_str[2], \"-\")\n    \n    days_str = split(date_str[2], \"-\")\n\
    \    \n    days_str = split(date_str[2], \"-\")\n    \n    days_str = split(date_str[2],\
    \ \"-\")\n    \n    days_str = split(date_str[2], \"-\")\n    \n    days_str =\
    \ split(date_str", "    \n    valid_date_regex = Regex(\"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-([0-9]{4})$\"\
    )\n    \n    if valid_date_regex.match(date) == nil then\n        return false\n\
    \    end", "    \n    date_split = split(date, \"-\")\n    \n    days_valid =\
    \ true\n    \n    days_valid &= (length(date_split) == 3)\n    \n    days_valid\
    \ &= (date_split[2] >= 1 && date_split[2] <= 31)\n    \n    days_valid &= (date_split[1]\
    \ >= 1 && date_split[1] <= 30)\n    \n    days_valid &= (date_split[1] >= 1 &&\
    \ date_split[1] <= 29)\n    \n    days_valid &= (date_split[1] >= 1 && date_split[1]\
    \ <= 12)\n    \n    days_valid &= (date_split[1] >= 1 && date_split[1] <= 31)\n\
    \    \n    days_valid &= (date_split[1] >= 1 && date_split[1] <= 30)\n    \n \
    \   days_valid &= (date_split[1] >= 1 && date_split[1] <= 29)\n    \n    days_valid\
    \ &= (date_split[1] >= 1 && date_split[1] <= 12)\n    \n    days_valid &= (date_split[1]\
    \ >= 1 && date_split[1] <= 31)\n    \n    days_valid &= (date_split[1] >= 1 &&\
    \ date_split[1] <= 30)\n    \n    days_valid &= (date_split[1] >= 1 && date_split[1]\
    \ <= 29)\n    \n    days_valid &= (date_split[1] >= 1 && date_split[1] <= 12)\n\
    \    \n    days_valid &= (date_split[1] >= 1 && date_split[1] <= 31)\n    \n \
    \   days_valid &= (date_split[1] >= 1 && date_split[1] <= 30)\n    \n    days_valid\
    \ &= (date_split[1] >= 1 && date_split[1] <= 29)\n    \n    days_valid &= (date_split[1]\
    \ >= 1 && date_split[1] <= 12)\n    \n    days_valid &= (date_split[1] >= 1 &&\
    \ date_split[1] <= 31)\n    \n    days_valid &= (date_split[1] >= 1 && date_split[1]\
    \ <= 30)\n    \n    days_valid &= (date_split[1] >= 1 && date_split[1] <= 29)\n\
    \    \n    days_valid &= (date_split[1] >= 1 && date_split[1] <= 12)\n    \n \
    \   days_valid &= (date_split[1] >= 1 && date_split[1] <= 31)\n    \n    days_valid\
    \ &= (date_split[1] >= 1 && date_split[1] <= 30)\n    \n    days_valid &= (date_split[1]\
    \ >= 1 && date_split[1] <= 29)\n    \n    days_valid &= (date_split[1] >= 1 &&\
    \ date_split[1] <= 12)\n    \n    days_valid &= (date_split[1] >= ", "    \n \
    \   valid_date::Bool = true \n    \n    if date == \"\" \n        valid_date =\
    \ false \n    else \n        \n        days::Int = count_days(date) \n       \
    \ \n        if days > 31 \n            valid_date = false \n        else if days\
    \ > 29 \n            valid_date = false \n        else if days > 28 \n       \
    \     valid_date = false \n        else if days > 31 \n            valid_date\
    \ = false \n        else if days > 30 \n            valid_date = false \n    \
    \    else if days > 29 \n            valid_date = false \n        else if days\
    \ > 28 \n            valid_date = false \n        else if days > 31 \n       \
    \     valid_date = false \n        else if days > 30 \n            valid_date\
    \ = false \n        else if days > 29 \n            valid_date = false \n    \
    \    else if days > 28 \n            valid_date = false \n        else if days\
    \ > 31 \n            valid_date = false \n        else if days > 30 \n       \
    \     valid_date = false \n        else if days > 29 \n            valid_date\
    \ = false \n        else if days > 28 \n            valid_date = false \n    \
    \    else if days > 31 \n            valid_date = false \n        else if days\
    \ > 30 \n            valid_date = false \n        else if days > 29 \n       \
    \     valid_date = false \n        else if days > 28 \n            valid_date\
    \ = false \n        else if days > 31 \n            valid_date = false \n    \
    \    else if days > 30 \n            valid_date = false \n        else if days\
    \ > 29 \n            valid_date = false \n        else if days > 28 \n       \
    \     valid_date = false \n        else if days > 31 \n            valid_date\
    \ = false \n        else if days > 30 \n            valid_date = false \n    \
    \    else if days > 29 \n            valid_date = false \n        else if days\
    \ > 28 \n            valid_date = false \n        else if days > 31 \n       \
    \     valid_date = false \n        else if days > 30 \n            valid_date\
    \ = false \n        else if days > 29 \n            valid_date = false \n    \
    \    else if days > 28 \n            valid_date = false \n        else if days\
    \ > 31 \n            valid_date = false \n        else if days > 30 \n       \
    \     valid_date = false \n        else if days > 29 \n            valid_date\
    \ = false \n        else if days > 28 \n            valid_date = false \n    \
    \    else if days > 31 \n            valid_date = false \n        else if days\
    \ > 30 \n            valid_date = false \n        else if days > 29 \n       \
    \     valid_date = false \n        else if days > 28 \n            valid_date\
    \ = false \n        else if days > 31 \n            valid_date = false \n    \
    \    else if days > 30 \n            valid_date = false \n        else if days\
    \ > 29 \n            valid_date = false \n        else if days > 28 \n       \
    \     valid_date = false \n", "    \n    if date == \"\"\n        false\n    elseif\
    \ length(date) < 1 || length(date) > 31\n        false\n    elseif month(date)\
    \ < 1 || month(date) > 12\n        false\n    elseif day(date) < 1 || day(date)\
    \ > 30\n        false\n    elseif month(date) == 2 && day(date) > 29\n       \
    \ false\n    else\n        true\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that checks if a given string is a valid phone number. Valid phone\
    \ numbers are of the form (xxx)xxx-xxxx. An example of a valid phone number is\
    \ (xxx)xxx-xxxx.", "    \n    if date == \"\"\n        false\n    else\n     \
    \   if length(date) < 1 || length(date) > 31\n            false\n        elseif\
    \ length(date) < 1 || length(date) > 30\n            false\n        elseif length(date)\
    \ < 1 || length(date) > 29\n            false\n        elseif length(date) < 1\
    \ || length(date) > 12\n            false\n        elseif month(date) < 1 || month(date)\
    \ > 12\n            false\n        elseif day(date) < 1 || day(date) > 31\n  \
    \          false\n        elseif day(date) < 1 || day(date) > 30\n           \
    \ false\n        elseif day(date) < 1 || day(date) > 29\n            false\n \
    \       else\n            true\n        end\n    end\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that validates a given date string and returns true if the\
    \ date is valid otherwise false.\nThe date is valid if all of the following rules\
    \ are satisfied:\n1. The date string is not empty.\n2. The number of days is not\
    \ less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number\
    \ of days is not less than 1 or higher than 30 days for months 4,6,9,11. And,\
    \ the number of days is not less than 1 or higher than 29 for the month 2.\n3.\
    \ The months should not be less than 1 or higher than 12.\n4. The date should\
    \ be in the format: mm-dd-yyyy", "    \n    valid_date::Bool = false \n    \n\
    \    if date == \"\"\n        valid_date = true\n    else if length(date) < 1\
    \ || length(date) > 31\n        valid_date = false\n    else if month(date) <\
    \ 1 || month(date) > 12\n        valid_date = false\n    else if day(date) < 1\
    \ || day(date) > 30\n        valid_date = false\n    else if month(date) == 2\
    \ && day(date) > 29\n        valid_date = false\n    else if month(date) == 2\
    \ && day(date) < 1\n        valid_date = false\n    else if month(date) == 2 &&\
    \ day(date) > 30\n        valid_date = false\n    else if month(date) == 3 &&\
    \ day(date) > 31\n        valid_date = false\n    else if month(date) == 3 &&\
    \ day(date) < 1\n        valid_date = false\n    else if month(date) == 3 && day(date)\
    \ > 30\n        valid_date = false\n    else if month(date) == 4 && day(date)\
    \ > 31\n        valid_date = false\n    else if month(date) == 4 && day(date)\
    \ < 1\n        valid_date = false\n    else if month(date) == 4 && day(date) >\
    \ 30\n        valid_date = false\n    else if month(date) == 5 && day(date) >\
    \ 31\n        valid_date = false\n    else if month(date) == 5 && day(date) <\
    \ 1\n        valid_date = false\n    else if month(date) == 5 && day(date) > 30\n\
    \        valid_date = false\n    else if month(date) == 6 && day(date) > 31\n\
    \        valid_date = false\n    else if month(date) == 6 && day(date) < 1\n \
    \       valid_date = false\n    else if month(date) == 6 && day(date) > 30\n \
    \       valid_date = false\n    else if month(date) == 7 && day(date) > 31\n \
    \       valid_date = false\n    else if month(date) == 7 && day(date) < 1\n  \
    \      valid_date = false\n    else if month(date) == 7 && day(date) > 30\n  \
    \      valid_date = false\n    else if month(date) == 8 && day(date) > 31\n  \
    \      valid_date = false\n    else if month(date) == 8 && day(date) < 1\n   \
    \     valid_date = false\n    else if month(date) == 8 && day(date) > 30\n   \
    \     valid_date = false\n    else if month(date) == 9 && day(date) > 31\n   \
    \     valid_date = ", "    \n    if date == \"\"\n        false\n    elseif length(date)\
    \ < 1 || length(date) > 31\n        false\n    elseif month(date) < 1 || month(date)\
    \ > 12\n        false\n    elseif day(date) < 1 || day(date) > 30\n        false\n\
    \    elseif month(date) == 2 && day(date) > 29\n        false\n    else\n    \
    \    true\n    end\nend\n</cell>\n<text>\nExercise 3: Write a function that checks\
    \ if a date is a valid date in the future. \nThe date should be in the format:\
    \ mm-dd-yyyy", "    \n    date_split = split(date, \"-\")\n    \n    days_valid\
    \ = true\n    \n    months_valid = true\n    \n    years_valid = true\n    \n\
    \    days_valid = days_valid && check_days(date_split[1])\n    \n    months_valid\
    \ = months_valid && check_months(date_split[2])\n    \n    years_valid = years_valid\
    \ && check_years(date_split[3])\n    \n    return days_valid && months_valid &&\
    \ years_valid\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function which takes a string\
    \ and returns the number of characters in the string.", "    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    date = date.split(\"/\")\n\
    \    \n    if date.length != 3 || date[2] != \"-\" || date[1] < \"1\" || date[1]\
    \ > \"12\" || date[1] < \"3\" || date[1] > \"12\" || date[1] < \"5\" || date[1]\
    \ > \"12\" || date[1] < \"7\" || date[1] > \"12\" || date[1] < \"8\" || date[1]\
    \ > \"12\" || date[1] < \"10\" || date[1] > \"12\" || date[1] < \"11\" || date[1]\
    \ > \"12\" || date[1] < \"4\" || date[1] > \"12\" || date[1] < \"6\" || date[1]\
    \ > \"12\" || date[1] < \"9\" || date[1] > \"12\" || date[1] < \"11\" || date[1]\
    \ > \"12\" || date[1] < \"2\" || date[1] > \"12\" || date[1] < \"2\" || date[1]\
    \ > \"12\" || date[1] < \"2\" || date[1] > \"12\" || date[1] < \"2\" || date[1]\
    \ > \"12\" || date[1] < \"2\" || date[1] > \"12\" || date[1] < \"2\" || date[1]\
    \ > \"12\" || date[1] < \"2\" || date[1] > \"12\" || date[1] < \"2\" || date[1]\
    \ > \"12\" || date[1] < \"2\" || date[1] > \"12\" || date[1] < \"2\" || date[1]\
    \ > \"12\" || date[1] < \"2\" || date[1] > \"12\" || date[1] < \"2\" || date[1]\
    \ > \"12\" || date[1] < \"2\" || date[1] > \"12\" || date[1] < \"2\" || date[1]\
    \ > \"12\" || date[1] < \"2\" || date[1] > \"12\" || date[1] < \"2\" || date[1]\
    \ > \"12\" || date[1] < \"2\" || date[1] > \"12\" || date[1] < \"2\" || date[1]\
    \ > \"12\" || date[1] < \"2\" || date[1] > \"12\" || date[1] < \"2\" || date[1]\
    \ > \"12\" || date[1] < \"2\" || date[1] > \"12\" || date[1] < \"2\" || date[1]\
    \ > \"12\" || date[1] < \"2\" || date[1] > \"12\" || date[1] < \"2\" || date[1]\
    \ > \"12\" || date[1] < \"2\" || date[1] > \"12\" || date[1] < \"2\" || date[1]\
    \ > \"12\" || date[1] < \"2\" || date[1] > \"12\" || date[1] < \"2\" || date[1]\
    \ > \"12\" || date[1] < \"2\" || date[1] > \"12\" || date[1] < \"2\" || date[1]\
    \ > \"12\" || ", "    \n    date_split = split(date, \"-\")\n    \n    months\
    \ = date_split[1]\n    days = date_split[2]\n    \n    months = split(months,\
    \ \"-\")\n    \n    months = months[1]\n    \n    months = split(months, \"-\"\
    )\n    \n    months = months[1]\n    \n    months = split(months, \"-\")\n   \
    \ \n    months = months[1]\n    \n    months = split(months, \"-\")\n    \n  \
    \  months = months[1]\n    \n    months = split(months, \"-\")\n    \n    months\
    \ = months[1]\n    \n    months = split(months, \"-\")\n    \n    months = months[1]\n\
    \    \n    months = split(months, \"-\")\n    \n    months = months[1]\n    \n\
    \    months = split(months, \"-\")\n    \n    months = months[1]\n    \n    months\
    \ = split(months, \"-\")\n    \n    months = months[1]\n    \n    months = split(months,\
    \ \"-\")\n    \n    months = months[1]\n    \n    months = split(months, \"-\"\
    )\n    \n    months = months[1]\n    \n    months = split(months, \"-\")\n   \
    \ \n    months = months[1]\n    \n    months = split(months, \"-\")\n    \n  \
    \  months = months[1]\n    \n    months = split(months, \"-\")\n    \n    months\
    \ = months[1]\n    \n    months = split(months, \"-\")\n    \n    months = months[1]\n\
    \    \n    months = split(months, \"-\")\n    \n    months = months[1]\n    \n\
    \    months = split(months, \"-\")\n    \n    months = months[1]\n    \n    months\
    \ = split(months, \"-\")\n    \n    months = months[1]\n    \n    months = split(months,\
    \ \"-\")\n    \n    months = months[1]\n    \n    months = split(months, \"-\"\
    )\n    \n    months = months[1]\n    \n    months = split(months, \"-\")\n   \
    \ \n    months = months[1]\n    \n    months = split(months, \"-\")\n    \n  \
    \  months = months[1]\n    \n    months = split(months, \"-\")\n    \n    months\
    \ = months[1]\n    \n    months = split(months, \"-\")\n    \n    months = months[1]\n\
    \    \n    months = split(months, \"-\")\n    \n    months = months[1]\n    \n\
    \    months = split(months, \"-\")\n    \n    months = months[1]\n    \n    months\
    \ = split(months, \"-\")\n    \n    months = months[1]\n    ", "    \n    date\
    \ = date.strip\n    \n    if date == \"\"\n        false\n    else\n        if\
    \ length(date) < 1 \n            false\n        elseif length(date) > 31\n   \
    \         false\n        elseif length(date) > 30\n            false\n       \
    \ elseif length(date) > 29\n            false\n        elseif length(date) > 12\n\
    \            false\n        elseif length(date) < 1\n            false\n     \
    \   else\n            true\n        end\n    end\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a date string and returns the number of days\
    \ between the current date and the date given.", "    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n", "    \n    date = date.split(\"-\")\n    \n\
    \    if date.length != 3:\n        return false\n    \n    if date[0].length !=\
    \ 2 || date[1].length != 2 || date[2].length != 4 || date[2].length != 6 || date[2].length\
    \ != 9 || date[2].length != 11 || date[2].length != 12 || date[2].length != 13\
    \ || date[2].length != 14 || date[2].length != 15 || date[2].length != 16 || date[2].length\
    \ != 17 || date[2].length != 18 || date[2].length != 19 || date[2].length != 20\
    \ || date[2].length != 21 || date[2].length != 22 || date[2].length != 23 || date[2].length\
    \ != 24 || date[2].length != 25 || date[2].length != 26 || date[2].length != 27\
    \ || date[2].length != 28 || date[2].length != 29 || date[2].length != 30 || date[2].length\
    \ != 31 || date[2].length != 32 || date[2].length != 33 || date[2].length != 34\
    \ || date[2].length != 35 || date[2].length != 36 || date[2].length != 37 || date[2].length\
    \ != 38 || date[2].length != 39 || date[2].length != 40 || date[2].length != 41\
    \ || date[2].length != 42 || date[2].length != 43 || date[2].length != 44 || date[2].length\
    \ != 45 || date[2].length != 46 || date[2].length != 47 || date[2].length != 48\
    \ || date[2].length != 49 || date[2].length != 50 || date[2].length != 51 || date[2].length\
    \ != 52 || date[2].length != 53 || date[2].length != 54 || date[2].length != 55\
    \ || date[2].length != 56 || date[2].length != 57 || date[2].length != 58 || date[2].length\
    \ != 59 || date[2].length != 60 || date[2].length != 61 || date[2].length != 62\
    \ || date[2].length != 63 || date[2].length != 64 || date[2].length != 65 || date[2].length\
    \ != 66 || date[2].length != 67 || date[2].length != 68 || date[2].length != 69\
    \ || date[2].length != 70 || date[2].length != 71 || date[2].length != 72 || date[2].length\
    \ != 73 || date[2].length != 74 || date[2].length != 75 || date[2].length != 76\
    \ || date[2].length != 77 || date[2].length != 78 || date[2].length != 79 || date[2].length\
    \ != 80 || date[2].length != 81 || date[2].length != 82 || date[2].length != 83\
    \ || date[2].length != 84 || date[2].length != 85 || ", "    \n    if date ==\
    \ \"\"\n        false\n    else\n        if length(date) != 10\n            false\n\
    \        else\n            if month(date) < 1 || month(date) > 12\n          \
    \      false\n            else\n                if day(date) < 1 || day(date)\
    \ > 31\n                    false\n                else\n                    if\
    \ month(date) == 2 && day(date) > 29\n                        false\n        \
    \            else\n                        if month(date) == 4 || month(date)\
    \ == 6 || month(date) == 9 || month(date) == 11\n                            false\n\
    \                        else\n                            if month(date) == 1\
    \ || month(date) == 3 || month(date) == 5 || month(date) == 7 || month(date) ==\
    \ 8 || month(date) == 10 || month(date) == 12\n                              \
    \  false\n                            else\n                                if\
    \ day(date) > 30\n                                    false\n                \
    \                else\n                                    true\n        end\n\
    \    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that validates a\
    \ given date string and returns true if the date is valid otherwise false.\nThe\
    \ date is valid if all of the following rules are satisfied:\n1. The date string\
    \ is not empty.\n2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n3. The months should not be less than 1\
    \ or higher than 12.\n4. The date should be in the format: mm-dd-yyyy", "    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    days_str = valid_date_str.days()\n    months_str = valid_date_str.months()\n\
    \    years_str = valid_date_str.years()\n    \n    days_str = days_str[1]\n  \
    \  months_str = months_str[1]\n    years_str = years_str[1]\n    \n    if days_str\
    \ < 1 or days_str > 31\n        return false\n    end\n    if months_str < 1 or\
    \ months_str > 12\n        return false\n    end\n    if years_str < 1 or years_str\
    \ > 9999\n        return false\n    end\n    return true\nend\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    \n    if date == \"\"\n        return false\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    date_split\
    \ = split(date, \"-\")\n    \n    days_months_years = date_split[2]\n    \n  \
    \  days_months_years_split = split(days_months_years, \"-\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\"-\", \"\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\",\", \"\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\"'\", \"\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\"\\\"\", \"\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\"%\", \"\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\"'\", \"\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\"\\\"\", \"\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\"%\", \"\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\"'\", \"\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\"\\\"\", \"\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\"%\", \"\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\"'\", \"\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\"\\\"\", \"\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\"%\", \"\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\"'\", \"\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\"\\\"\", \"\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\"%\", \"\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\"'\", \"\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\"\\\"\", \"\")\n    \n    days_months_years_split[2]\
    \ = days_months_years_split[2].replace(\"%\", \"\")\n    \n    day", "    \n \
    \   if date == \"\"\n        return false\n    \n    day::Int = parse_date(date,\
    \ \"%d\")\n    month::Int = parse_date(date, \"%m\")\n    year::Int = parse_date(date,\
    \ \"%Y\")\n    \n    if day < 1 || day > 31 || month < 1 || month > 12 || year\
    \ < 1 || year > 2020\n        return false\n    \n    if month == 1 && day > 31\n\
    \        return false\n    \n    if month == 2 && day > 29\n        return false\n\
    \    \n    return true\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function to validate\
    \ a phone number string. The phone number string should contain only digits and\
    \ spaces.", "    valid_date_regex = Regex(\"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-([0-9]{4})$\"\
    )\n    valid_date_match = valid_date_regex.match(date)\n    if valid_date_match\
    \ != None\n        days_match = valid_date_match[1]\n        months_match = valid_date_match[2]\n\
    \        years_match = valid_date_match[3]\n        if days_match != None and\
    \ days_match >= 1 and days_match <= 31\n            and months_match != None and\
    \ months_match >= 1 and months_match <= 12\n            and years_match != None\
    \ and years_match >= 1900 and years_match <= 2040\n            then true\n   \
    \         else false\n        else false\n    else false\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    valid_date::Bool = false\n    \n    if date\
    \ == \"\"\n        valid_date = true\n    else if length(date) < 1 || length(date)\
    \ > 31\n        valid_date = false\n    else if month(date) < 1 || month(date)\
    \ > 12\n        valid_date = false\n    else if day(date) < 1 || day(date) > 30\n\
    \        valid_date = false\n    else if month(date) == 2 && day(date) > 29\n\
    \        valid_date = false\n    else\n        valid_date = true\n    end\n  \
    \  return valid_date\nend\n</cell>\n<text>\nExercise 4\nWrite a function which\
    \ accepts a string and returns a string which contains only alphanumeric characters\
    \ and spaces.", "    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n\
    \    valid_date_str = Date.parse(date)\n    valid_date_str = Date.parse(date)\n",
  "    \n    date_array = split(date, \"-\")\n    \n    if length(date_array) != 3\
    \ || date_array[1] < 1 || date_array[2] < 1 || date_array[2] > 12 || date_array[1]\
    \ > 12 || date_array[1] < 1 || date_array[1] > 31 || date_array[2] < 1 || date_array[2]\
    \ > 30 || date_array[1] < 1 || date_array[1] > 29 || date_array[1] < 1 || date_array[1]\
    \ > 12\n        false\n    else\n        true\n    end\nend\n</cell>\n<text>\n\
    Exercise 5\nWrite a function that takes a string and returns the number of words\
    \ in the string.", "    \n    valid_date::Bool = \n    \n    if date == \"\"\n\
    \        valid_date::Bool = false\n    else\n        if length(date) < 1 || length(date)\
    \ > 31\n            valid_date::Bool = false\n        elseif length(date) < 1\
    \ || length(date) > 30\n            valid_date::Bool = false\n        elseif length(date)\
    \ < 1 || length(date) > 29\n            valid_date::Bool = false\n        elseif\
    \ length(date) < 1 || length(date) > 12\n            valid_date::Bool = false\n\
    \        else\n            valid_date::Bool = true\n        end\n    end\n   \
    \ return valid_date\nend\n</cell>\n<text>\nExercise 2\nWrite a function that validates\
    \ a given date string and returns true if the date is valid otherwise false.\n\
    The date is valid if all of the following rules are satisfied:\n1. The date string\
    \ is not empty.\n2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n3. The months should not be less than 1\
    \ or higher than 12.\n4. The date should be in the format: mm-dd-yyyy", "    \n\
    \    date_split = split(date, \"-\")\n    \n    months = date_split[1]\n    \n\
    \    days_split = split(date_split[2], \"-\")\n    \n    days_split[1] = days_split[1][1]\n\
    \    \n    days_split[2] = days_split[2][1]\n    \n    days_split[3] = days_split[3][1]\n\
    \    \n    days_split[4] = days_split[4][1]\n    \n    days_split[5] = days_split[5][1]\n\
    \    \n    days_split[6] = days_split[6][1]\n    \n    days_split[7] = days_split[7][1]\n\
    \    \n    days_split[8] = days_split[8][1]\n    \n    days_split[9] = days_split[9][1]\n\
    \    \n    days_split[10] = days_split[10][1]\n    \n    days_split[11] = days_split[11][1]\n\
    \    \n    days_split[12] = days_split[12][1]\n    \n    days_split[13] = days_split[13][1]\n\
    \    \n    days_split[14] = days_split[14][1]\n    \n    days_split[15] = days_split[15][1]\n\
    \    \n    days_split[16] = days_split[16][1]\n    \n    days_split[17] = days_split[17][1]\n\
    \    \n    days_split[18] = days_split[18][1]\n    \n    days_split[19] = days_split[19][1]\n\
    \    \n    days_split[20] = days_split[20][1]\n    \n    days_split[21] = days_split[21][1]\n\
    \    \n    days_split[22] = days_split[22][1]\n    \n    days_split[23] = days_split[23][1]\n\
    \    \n    days_split[24] = days_split[24][1]\n    \n    days_split[25] = days_split[25][1]\n\
    \    \n    days_split[26] = days_split[26][1]\n    \n    days_split[27] = days_split[27][1]\n\
    \    \n    days_split[28] = days_split[28][1]\n    \n    days_split[29] = days_split[29][1]\n\
    \    \n    days_split[30] = days_split[30][1]\n    \n    days_split[31] = days_split[31][1]\n\
    \    \n    days_split[32] = ", "    \n    valid_date::Bool = false \n    \n  \
    \  if date == \"\" \n        then return false \n    else \n        \n       \
    \ days::Int = count_days(date) \n        \n        if days < 1 or days > 31 \n\
    \            then return false \n        else \n            \n            months::Int\
    \ = count_months(date) \n            \n            if months < 1 or months > 12\
    \ \n                then return false \n            else \n                \n\
    \                years::Int = count_years(date) \n                \n         \
    \       if years < 1 or years > 20 \n                    then return false \n\
    \                else \n                    \n                    valid_date::Bool\
    \ = true \n                end \n            end \n        end \n    end \nend\
    \ \n</code>\n<|/ a |>\n<| c |>\nThis doesn't work. `count_days(\"2020-02-29\"\
    )` returns `29` instead of `30`\n<|/ c |>\n<| c |>\nI fixed the bug. Thanks for\
    \ pointing it out.\n<|/ c |>\n<| a tags=julia,date |>\nThe Julia standard library\
    \ has many useful functions to deal with dates and times. Here is a short example\
    \ that shows how to convert a date string to a Julia Date:\n<code>\njulia> using\
    \ Dates", "    \n    valid_date::Bool = true \n    \n    if date == \"\" || date\
    \ == \" \" \n        valid_date = false \n    else \n        \n        date_parts\
    \ = split(date, \"-\")\n        \n        if date_parts.length != 3 \n       \
    \     valid_date = false \n        else \n            \n            month::Int\
    \ = date_parts[1]\n            day::Int = date_parts[2]\n            year::Int\
    \ = date_parts[0]\n            \n            if month < 1 || month > 12 \n   \
    \             valid_date = false \n            else \n                if day <\
    \ 1 || day > 31 \n                    valid_date = false \n                else\
    \ \n                    if year < 1 || year > 2020 \n                        valid_date\
    \ = false \n                    else \n                        if month == 1 &&\
    \ day > 31 \n                            valid_date = false \n               \
    \         else \n                            if month == 2 && day > 30 \n    \
    \                            valid_date = false \n                           \
    \ else \n                                if month == 3 && day > 29 \n        \
    \                            valid_date = false \n                           \
    \     else \n                                    if month == 4 && day > 28 \n\
    \                                        valid_date = false \n               \
    \                     else \n                                        if month\
    \ == 5 && day > 28 \n                                            valid_date =\
    \ false \n                                        else \n                    \
    \                        if month == 6 && day > 28 \n                        \
    \                        valid_date = false \n                               \
    \             else \n                                                if month\
    \ == 7 && day > 28 \n                                                    valid_date\
    \ = false \n                                                else \n          \
    \                                          if month == 8 && day > 28 \n      \
    \                                                  valid_date = false \n     \
    \                                               else \n                      \
    \                                  if month == 9 && day > 28 \n              \
    \                                              valid_date = false \n         \
    \                                               else \n                      \
    \                                      if month == 10 && day > 28 \n         \
    \                                                       valid_date = false \n\
    \                                                            else \n         \
    \                                                       if month == 11 && day\
    \ > 28 \n                                                                    valid_date\
    \ = false \n                                                                else\
    \ \n                                                                    if month\
    \ == 12 && day > 28 \n                                                       \
    \                 valid_date = false \n                                      \
    \                              else \n                                       \
    \                                 valid_date = false \n    return valid_date\n\
    end\n</cell>\n<code language=julia-1.4>\nvalid_date(\"03-11-2000\")\n</cell>\n\
    <code language=julia-1.4>\nvalid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.4>\n\
    valid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.4>\nvalid_date(\"06-04-2020\"\
    )\n</cell>\n<code language=julia-1.4>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function which takes a string and returns the number of characters\
    \ in the string.", "    \n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    valid_date_regex = Regex(\"^(0?[1-9]|[12][0-9]|3[01])-(0?[1-9]|1[012])-((19|20)\\\
    d\\d)$\")\n    \n    if valid_date_regex.match(date) == nil \n        error(\"\
    Invalid date\")\n    end\n    \n    days_regex = Regex(\"^((0?[1-9]|[12][0-9]|3[01])-(0?[1-9]|1[012]))$\"\
    )\n    months_regex = Regex(\"^(0?[1-9]|1[012])$\")\n    \n    days_match = days_regex.match(date)\n\
    \    months_match = months_regex.match(date)\n    \n    if days_match == nil ||\
    \ months_match == nil\n        error(\"Invalid date\")\n    end\n    \n    days_match\
    \ = days_match.captures[1].to_i\n    months_match = months_match.captures[1].to_i\n\
    \    \n    if days_match < 1 || days_match > 31 || months_match < 1 || months_match\
    \ > 12 || months_match != 2\n        error(\"Invalid date\")\n    end\n    \n\
    \    date_match = days_match > 29 || months_match > 12\n    \n    if date_match\
    \ == false\n        error(\"Invalid date\")\n    end\n    \n    return true\n\
    end\n</cell>\n<text>\nExercise 7: Write a function that checks if a given date\
    \ string is valid or not.", "    \n    date_split = split(date, \"-\")\n    \n\
    \    months = date_split[1]\n    days_str = date_split[2]\n    \n    days_split\
    \ = split(days_str, \"-\")\n    \n    days_int = days_split[1]\n    \n    months_str\
    \ = months[1]\n    \n    months_split = split(months_str, \"-\")\n    \n    months_int\
    \ = months_split[1]\n    \n    if days_int == \"\" or days_int == \" \" or days_int\
    \ == \"0\" or days_int == \"00\" or days_int == \"00\" or days_int == \"00\" or\
    \ days_int == \"00\" or days_int == \"00\" or days_int == \"00\" or days_int ==\
    \ \"00\" or days_int == \"00\" or days_int == \"00\" or days_int == \"00\" or\
    \ days_int == \"00\" or days_int == \"00\" or days_int == \"00\" or days_int ==\
    \ \"00\" or days_int == \"00\" or days_int == \"00\" or days_int == \"00\" or\
    \ days_int == \"00\" or days_int == \"00\" or days_int == \"00\" or days_int ==\
    \ \"00\" or days_int == \"00\" or days_int == \"00\" or days_int == \"00\" or\
    \ days_int == \"00\" or days_int == \"00\" or days_int == \"00\" or days_int ==\
    \ \"00\" or days_int == \"00\" or days_int == \"00\" or days_int == \"00\" or\
    \ days_int == \"00\" or days_int == \"00\" or days_int == \"00\" or days_int ==\
    \ \"00\" or days_int == \"00\" or days_int == \"00\" or days_int == \"00\" or\
    \ days_int == \"00\" or days_int == \"00\" or days_int == \"00\" or days_int ==\
    \ \"00\" or days_int == \"00\" or days_int == \"00\" or days_int == \"00\" or\
    \ days_int == \"00\" or days_int == \"00\" or days_int == \"00\" or days_int ==\
    \ \"00\" or days_int == \"00\" or days_int == \"00\" or days_int == \"00\" or\
    \ days_int == \"00\" or days_int == \"00\" or days_int == \"00\" or days_int ==\
    \ \"00\" or days_int == \"00\" or days_int == \"00\" or days_int == \"00\" or\
    \ days_int == \"00\" or days_int == \"00\" or days_int == \"00\" or days_int ==\
    \ \"00\" or days_int == \"00\" or days_int == \"00\" or days_int == \"00\" or\
    \ days_int == \"00\" or days_int == \"00", "    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    \n    valid_date_str = Date.parse(date)\n   \
    \ \n    if valid_date_str == None\n        false\n    else\n        true\n   \
    \ end\nend\n</cell>\n<code language=julia-1.5>", "    \n    valid_date::Bool =\
    \ false\n    \n    if date != \"\"\n        valid_date::Bool = true\n    else\n\
    \        valid_date::Bool = false\n    end\n    \n    if valid_date\n        valid_date::Bool\
    \ = true\n    else\n        valid_date::Bool = false\n    end\n    \n    if valid_date\n\
    \        valid_date::Bool = true\n    else\n        valid_date::Bool = false\n\
    \    end\n    \n    if valid_date\n        valid_date::Bool = true\n    else\n\
    \        valid_date::Bool = false\n    end\n    \n    if valid_date\n        valid_date::Bool\
    \ = true\n    else\n        valid_date::Bool = false\n    end\n    \n    if valid_date\n\
    \        valid_date::Bool = true\n    else\n        valid_date::Bool = false\n\
    \    end\n    \n    if valid_date\n        valid_date::Bool = true\n    else\n\
    \        valid_date::Bool = false\n    end\n    \n    if valid_date\n        valid_date::Bool\
    \ = true\n    else\n        valid_date::Bool = false\n    end\n    \n    if valid_date\n\
    \        valid_date::Bool = true\n    else\n        valid_date::Bool = false\n\
    \    end\n    \n    if valid_date\n        valid_date::Bool = true\n    else\n\
    \        valid_date::Bool = false\n    end\n    \n    if valid_date\n        valid_date::Bool\
    \ = true\n    else\n        valid_date::Bool = false\n    end\n    \n    if valid_date\n\
    \        valid_date::Bool = true\n    else\n        valid_date::Bool = false\n\
    \    end\n    \n    if valid_date\n        valid_date::Bool = true\n    else\n\
    \        valid_date::Bool = false\n    end\n    \n    if valid_date\n        valid_date::Bool\
    \ = true\n    else\n        valid_date::Bool = false\n    end\n    \n    if valid_date\n\
    \        valid_date::Bool = true\n    else\n        valid_date::Bool = false\n\
    \    end\n    \n    if valid_date\n        valid_date::Bool = true\n    else\n\
    \        valid_date::Bool = false\n    end\n    \n    if valid_date\n        valid_date::Bool\
    \ = true\n    else\n        valid_date::Bool = false\n    end\n    \n    if valid_date\n\
    \        valid_date::Bool = true\n    else\n        valid_date::Bool = false\n\
    \    end\n    \n    if valid_date\n        valid_date::Bool = true\n    else\n\
    \        valid_date::Bool = false\n    end\n    \n    if valid_date\n        valid_date::Bool\
    \ = true\n    else\n        valid_date::Bool = false\n    end\n    \n    if valid_date\n\
    \        valid_date::Bool = true\n    else\n        valid_date::Bool = false\n",
  "    \n    date_split = split(date,\"-\")\n    \n    days_valid = days_not_less_than_1_or_higher_than_31(date_split)\n\
    \    \n    months_valid = months_not_less_than_1_or_higher_than_12(date_split)\n\
    \    \n    days_valid = days_not_less_than_1_or_higher_than_30(date_split)\n \
    \   \n    months_valid = months_not_less_than_1_or_higher_than_29(date_split)\n\
    \    \n    days_valid = days_not_less_than_1_or_higher_than_29(date_split)\n \
    \   \n    months_valid = months_not_less_than_1_or_higher_than_12(date_split)\n\
    \    \n    days_valid = days_not_less_than_1_or_higher_than_31(date_split)\n \
    \   \n    months_valid = months_not_less_than_1_or_higher_than_12(date_split)\n\
    \    \n    days_valid = days_not_less_than_1_or_higher_than_31(date_split)\n \
    \   \n    months_valid = months_not_less_than_1_or_higher_than_12(date_split)\n\
    \    \n    days_valid = days_not_less_than_1_or_higher_than_31(date_split)\n \
    \   \n    months_valid = months_not_less_than_1_or_higher_than_12(date_split)\n\
    \    \n    days_valid = days_not_less_than_1_or_higher_than_31(date_split)\n \
    \   \n    months_valid = months_not_less_than_1_or_higher_than_12(date_split)\n\
    \    \n    days_valid = days_not_less_than_1_or_higher_than_31(date_split)\n \
    \   \n    months_valid = months_not_less_than_1_or_higher_than_12(date_split)\n\
    \    \n    days_valid = days_not_less_than_1_or_higher_than_31(date_split)\n \
    \   \n    months_valid = months_not_less_than_1_or_higher_than_12(date_split)\n\
    \    \n    days_valid = days_not_less_than_1_or_higher_than_31(date_split)\n \
    \   \n    months_valid = months_not_less_than_1_or_higher_than_12(date_split)\n\
    \    \n", "    \n    valid_date_regex = Regex(\"^((0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-((19|20)\\\
    \\d\\\\d)$)\")\n    \n    valid_date_match = valid_date_regex.match(date)\n  \
    \  \n    if valid_date_match != None\n        \n        day = int(valid_date_match.group(\"\
    day\"))\n        month = int(valid_date_match.group(\"month\"))\n        year\
    \ = int(valid_date_match.group(\"year\"))\n        \n        if day < 1 or day\
    \ > 31 or month < 1 or month > 12 or year < 1900 or year > 2020\n            \n\
    \            return false\n        \n        else\n            \n            return\
    \ true\n    \n    else\n        \n        return false\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    \n    if date == \"\"\n        return false\n\
    \    \n    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n    days_month[month\
    \ - 1]\n    \n    if days_month[month - 1] < 1 || days_month[month - 1] > 31\n\
    \        return false\n    \n    days_month[month - 1]\n    \n    if days_month[month\
    \ - 1] < 1 || days_month[month - 1] > 30\n        return false\n    \n    days_month[month\
    \ - 1]\n    \n    if days_month[month - 1] < 1 || days_month[month - 1] > 29\n\
    \        return false\n    \n    days_month[month - 1]\n    \n    if days_month[month\
    \ - 1] < 1 || days_month[month - 1] > 12\n        return false\n    \n    days_month[month\
    \ - 1]\n    \n    if days_month[month - 1] < 1 || days_month[month - 1] > 31\n\
    \        return false\n    \n    days_month[month - 1]\n    \n    if days_month[month\
    \ - 1] < 1 || days_month[month - 1] > 30\n        return false\n    \n    days_month[month\
    \ - 1]\n    \n    if days_month[month - 1] < 1 || days_month[month - 1] > 29\n\
    \        return false\n    \n    days_month[month - 1]\n    \n    if days_month[month\
    \ - 1] < 1 || days_month[month - 1] > 12\n        return false\n    \n    days_month[month\
    \ - 1]\n    \n    if days_month[month - 1] < 1 || days_month[month - 1] > 31\n\
    \        return false\n    \n    days_month[month - 1]\n    \n    if days_month[month\
    \ - 1] < 1 || days_month[month - 1] > 30\n        return false\n    \n    days_month[month\
    \ - 1]\n    \n    if days_month[month - 1] < 1 || days_month[month - 1] > 29\n\
    \        return false\n    \n    days_month[month - 1]\n    \n    if days_month[month\
    \ - 1] < 1 || days_month[month - 1] > 12\n        return false\n    \n    days_month[month\
    \ - 1]\n    \n    if days_month[month - 1] < 1 || days_month[month - 1] > 31\n\
    \        return false\n    \n    days_month[month - 1]\n    \n    if days_month[month\
    \ - 1] < 1 || days_month[month - 1] > 30\n        return false\n    \n    days_month[month\
    \ - 1]\n    \n    if days_month[month - 1] < 1 || day", "    \n    valid_date_str\
    \ = Date.parse(date)\n    \n    if valid_date_str == nil\n        return false\n\
    \    end\n    \n    valid_date_str = Date.parse(date)\n    \n    if valid_date_str\
    \ == nil\n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    \n    if valid_date_str == nil\n        return false\n    end\n    \n   \
    \ valid_date_str = Date.parse(date)\n    \n    if valid_date_str == nil\n    \
    \    return false\n    end\n    \n    valid_date_str = Date.parse(date)\n    \n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    \n    if valid_date_str == nil\n        return false\n\
    \    end\n    \n    valid_date_str = Date.parse(date)\n    \n    if valid_date_str\
    \ == nil\n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    \n    if valid_date_str == nil\n        return false\n    end\n    \n   \
    \ valid_date_str = Date.parse(date)\n    \n    if valid_date_str == nil\n    \
    \    return false\n    end\n    \n    valid_date_str = Date.parse(date)\n    \n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    \n    if valid_date_str == nil\n        return false\n\
    \    end\n    \n    valid_date_str = Date.parse(date)\n    \n    if valid_date_str\
    \ == nil\n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    \n    if valid_date_str == nil\n        return false\n    end\n    \n   \
    \ valid_date_str = Date.parse(date)\n    \n    if valid_date_str == nil\n    \
    \    return false\n    end\n    \n    valid_date_str = Date.parse(date)\n    \n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    \n    if valid_date_str == nil\n        return false\n\
    \    end\n    \n    valid_date_str = Date.parse(date)\n    \n    if valid_date_str\
    \ == nil\n        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    \n    if valid_date_str == nil\n        return false\n    end\n    \n   \
    \ valid_date_str = Date.parse(date)\n    \n    if valid_date_str == nil\n    \
    \    return false\n    end\n    \n    valid_date_str = Date.parse(date)\n    \n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    \n    if valid_date_str == nil\n        return false\n\
    \    end\n    \n    valid_date_str = Date.parse(", "    \n    date_split = split(date,\
    \ \"-\")\n    \n    months = date_split[1]\n    days = date_split[2]\n    year\
    \ = date_split[3]", "    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    if date ==\
    \ \"\"\n        return false\n    \n    day::Int = date[1..2]\n    month::Int\
    \ = date[3..4]\n    year::Int = date[5..8]\n    \n    if day < 1 || day > 31\n\
    \        return false\n    \n    if month < 1 || month > 12\n        return false\n\
    \    \n    if year < 1 || year > 9999\n        return false\n    \n    return\
    \ true\nend\n</cell>\n<code language=julia-1.5>", "    \n    valid_date_str =\
    \ Date.parse(date)\n    \n    if valid_date_str == nil\n        false\n    else\n\
    \        true\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ checks if a given date string is a valid date or not.", "    \n    date_split\
    \ = split(date, \"-\")\n    \n    if date_split[1] < 1 || date_split[1] > 12\n\
    \        false\n    elseif date_split[2] < 1 || date_split[2] > 31\n        false\n\
    \    elseif date_split[1] == 2 && date_split[2] > 29\n        false\n    elseif\
    \ date_split[1] == 2 && date_split[2] == 29 && date_split[3] > 30\n        false\n\
    \    elseif date_split[1] == 2 && date_split[2] == 30 && date_split[3] > 31\n\
    \        false\n    elseif date_split[1] == 2 && date_split[2] == 31 && date_split[3]\
    \ > 30\n        false\n    elseif date_split[1] == 2 && date_split[2] == 31 &&\
    \ date_split[3] == 30\n        false\n    elseif date_split[1] == 2 && date_split[2]\
    \ == 31 && date_split[3] == 31\n        false\n    elseif date_split[1] == 3 &&\
    \ date_split[2] > 31\n        false\n    elseif date_split[1] == 3 && date_split[2]\
    \ == 31 && date_split[3] > 30\n        false\n    elseif date_split[1] == 3 &&\
    \ date_split[2] == 31 && date_split[3] == 30\n        false\n    elseif date_split[1]\
    \ == 3 && date_split[2] == 31 && date_split[3] == 31\n        false\n    elseif\
    \ date_split[1] == 4 && date_split[2] > 31\n        false\n    elseif date_split[1]\
    \ == 4 && date_split[2] == 31 && date_split[3] > 30\n        false\n    elseif\
    \ date_split[1] == 4 && date_split[2] == 31 && date_split[3] == 30\n        false\n\
    \    elseif date_split[1] == 4 && date_split[2] == 31 && date_split[3] == 31\n\
    \        false\n    elseif date_split[1] == 4 && date_split[2] == 30 && date_split[3]\
    \ > 31\n        false\n    elseif date_split[1] == 4 && date_split[2] == 30 &&\
    \ date_split[3] == 31\n        false\n    elseif date_split[1] == 4 && date_split[2]\
    \ == 30 && date_split[3] == 30\n        false\n    elseif date_split[1] == 4 &&\
    \ date_split[2] == 30 && date_split[3] > 31\n        false\n    elseif date_split[1]\
    \ == 4 && date_split[2] == 30 && date_split[3] == 31\n        false\n    elseif\
    \ date_split[1] == 4 && date_split[2] == 30 && date_split[3] > 30\n        false\n\
    \    elseif date_split[1] == 4 && date_split[2] == 30 && date_split[3] == 30\n\
    \        false\n    elseif date_split[1] == 4 && date_split[2] == 30 && date_split[3]\
    \ > 31\n        false\n    elseif date_split[1] == 4 && date_split[2] == 30 &&\
    \ date_split[3] == 31\n        false\n", "    \n    date_array = string.split(date,\
    \ \"-\")\n    \n    months = string.split(date_array[1], \"-\")\n    \n    days_array\
    \ = string.split(date_array[2], \"-\")\n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n\
    \        return false\n    end\n    \n    valid_date_str = Date.parse(date)\n\
    \    if valid_date_str == nil\n        return false\n    end\n    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ end\n    \n    valid_date_str = ", "    \n    valid_date::Bool = false\n   \
    \ \n    if date != \"\"\n        \n        days::Int = length(date) - length(replace(date,\
    \ \"-\", \"\"))\n        \n        if days < 1 or days > 31\n            valid_date\
    \ = false\n        elseif days < 30 or days > 29\n            valid_date = false\n\
    \        elseif days < 1 or days > 12\n            valid_date = false\n      \
    \  else\n            valid_date = true\n        end\n    end\n    \n    return\
    \ valid_date\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function that checks if a\
    \ date is valid or not.\nThe date is valid if all of the following rules are satisfied:\n\
    1. The date string is not empty.\n2. The number of days is not less than 1 or\
    \ higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not\
    \ less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days\
    \ is not less than 1 or higher than 29 for the month 2.\n3. The months should\
    \ not be less than 1 or higher than 12.\n4. The date should be in the format:\
    \ mm-dd-yyyy", "    \n    if date == \"\"\n        false\n    elseif length(date)\
    \ < 1 \n        false\n    elseif length(date) > 31 \n        false\n    elseif\
    \ month(date) < 1 \n        false\n    elseif month(date) > 12 \n        false\n\
    \    elseif day(date) < 1 \n        false\n    elseif day(date) > 29 \n      \
    \  false\n    elseif month(date) == 2 \n        false\n    elseif day(date) >\
    \ 29 \n        false\n    elseif day(date) < 1 \n        false\n    elseif day(date)\
    \ > 30 \n        false\n    elseif day(date) < 1 \n        false\n    elseif day(date)\
    \ > 31 \n        false\n    elseif day(date) < 1 \n        false\n    elseif day(date)\
    \ > 31 \n        false\n    elseif day(date) < 1 \n        false\n    elseif day(date)\
    \ > 30 \n        false\n    elseif day(date) < 1 \n        false\n    elseif day(date)\
    \ > 31 \n        false\n    elseif day(date) < 1 \n        false\n    elseif day(date)\
    \ > 31 \n        false\n    elseif day(date) < 1 \n        false\n    elseif day(date)\
    \ > 30 \n        false\n    elseif day(date) < 1 \n        false\n    elseif day(date)\
    \ > 31 \n        false\n    elseif day(date) < 1 \n        false\n    elseif day(date)\
    \ > 31 \n        false\n    elseif day(date) < 1 \n        false\n    elseif day(date)\
    \ > 30 \n        false\n    elseif day(date) < 1 \n        false\n    elseif day(date)\
    \ > 31 \n        false\n    elseif day(date) < 1 \n        false\n    elseif day(date)\
    \ > 31 \n        false\n    elseif day(date) < 1 \n        false\n    elseif day(date)\
    \ > 30 \n        false\n    elseif day(date) < 1 \n        false\n    elseif day(date)\
    \ > 31 \n        false\n    elseif day(date) < 1 \n        false\n    elseif day(date)\
    \ > 30 \n        false\n    elseif day(date) < 1 \n        false\n    elseif day(date)\
    \ > 31 \n        false\n    elseif day(date) < 1 \n        false\n    elseif day(date)\
    \ > 30 \n        false\n    elseif day(date) < 1 \n        false\n    elseif day(date)\
    \ > 31 \n        false\n    elseif day(date) < 1 \n        false\n    elseif day(date)\
    \ > 30 \n        ", "    \n    valid_date::Bool = true \n    \n    if date ==\
    \ \"\"\n        valid_date = false\n    \n    else if length(date) < 1 || length(date)\
    \ > 31\n        valid_date = false\n    \n    else if month(date) < 1 || month(date)\
    \ > 12\n        valid_date = false\n    \n    else if day(date) < 1 || day(date)\
    \ > 30\n        valid_date = false\n    \n    else if month(date) == 2 && day(date)\
    \ > 29\n        valid_date = false\n    \n    else if month(date) == 2 && day(date)\
    \ < 1\n        valid_date = false\n    \n    else if month(date) == 2 && day(date)\
    \ > 30\n        valid_date = false\n    \n    else if month(date) == 3 && day(date)\
    \ > 29\n        valid_date = false\n    \n    else if month(date) == 3 && day(date)\
    \ < 1\n        valid_date = false\n    \n    else if month(date) == 3 && day(date)\
    \ > 30\n        valid_date = false\n    \n    else if month(date) == 4 && day(date)\
    \ > 29\n        valid_date = false\n    \n    else if month(date) == 4 && day(date)\
    \ < 1\n        valid_date = false\n    \n    else if month(date) == 4 && day(date)\
    \ > 30\n        valid_date = false\n    \n    else if month(date) == 6 && day(date)\
    \ > 29\n        valid_date = false\n    \n    else if month(date) == 6 && day(date)\
    \ < 1\n        valid_date = false\n    \n    else if month(date) == 6 && day(date)\
    \ > 30\n        valid_date = false\n    \n    else if month(date) == 9 && day(date)\
    \ > 29\n        valid_date = false\n    \n    else if month(date) == 9 && day(date)\
    \ < 1\n        valid_date = false\n    \n    else if month(date) == 9 && day(date)\
    \ > 30\n        valid_date = false\n    \n    else if month(date) == 11 && day(date)\
    \ > 29\n        valid_date = false\n    \n    else if month(date) == 11 && day(date)\
    \ < 1\n        valid_date = false\n    \n    else if month(date) == 11 && day(date)\
    \ > 30\n        valid_date = false\n    \n    else if month(date) == 12 && day(date)\
    \ > 29\n        valid_date = false\n    \n    else if month(date) == 12 && day(date",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    valid_date_regex\
    \ = r\"^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-[0-9]{4}$\"\n    \n    if date\
    \ == \"\"\n        false\n    else\n        match date with\n            | valid_date_regex\
    \ -> true\n            | _ -> false\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    \n    if\
    \ date == \"\"\n        false\n    else\n        if length(date) < 1 || length(date)\
    \ > 31\n            false\n        elseif length(date) < 1 || length(date) > 30\n\
    \            false\n        elseif length(date) < 1 || length(date) > 29\n   \
    \         false\n        elseif length(date) < 1 || length(date) > 12\n      \
    \      false\n        else\n            true\n        end\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    \n    if date == \"\"\n        false\n    else\n\
    \        if length(date) < 1 || length(date) > 31\n            false\n       \
    \ elseif length(date) < 1 || length(date) > 30\n            false\n        elseif\
    \ length(date) < 1 || length(date) > 29\n            false\n        elseif length(date)\
    \ < 1 || length(date) > 12\n            false\n        else\n            true\n\
    \        end\n    end\nend\n</cell>\n<text>\nExercise 5\nWrite a function that\
    \ takes a date string and returns the number of days between the current date\
    \ and the date string.", "    \n    valid_date::Bool = true \n    \n    if date\
    \ == \"\" then \n        return valid_date \n    \n    days::Int = length(date)\
    \ - length(replace(date, \"-\", \"\")) + 1\n    \n    if days < 1 then \n    \
    \    return valid_date \n    \n    if days > 31 then \n        return valid_date\
    \ \n    \n    months::Int = length(date) - length(replace(date, \"-\", \"\"))\
    \ - length(date) - 2\n    \n    if months < 1 then \n        return valid_date\
    \ \n    \n    if months > 12 then \n        return valid_date \n    \n    years::Int\
    \ = length(date) - length(replace(date, \"-\", \"\")) - length(date) - 3\n   \
    \ \n    if years < 1 then \n        return valid_date \n    \n    if years > 20\
    \ then \n        return valid_date \n    \n    return false \nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that checks if a date is valid or not.", "    \n\
    \    date_split = split(date,\"-\")\n    \n    days_valid = true\n    months_valid\
    \ = true\n    \n    days_valid = days_valid && checklength(date_split[1],1,31)\n\
    \    months_valid = months_valid && checklength(date_split[2],1,12)\n    \n  \
    \  days_valid = days_valid && checklength(date_split[3],1,30)\n    months_valid\
    \ = months_valid && checklength(date_split[4],1,29)\n    \n    days_valid = days_valid\
    \ && checklength(date_split[5],1,29)\n    months_valid = months_valid && checklength(date_split[6],1,12)\n\
    \    \n    days_valid = days_valid && checklength(date_split[7],1,31)\n    months_valid\
    \ = months_valid && checklength(date_split[8],1,12)\n    \n    days_valid = days_valid\
    \ && checklength(date_split[9],1,30)\n    months_valid = months_valid && checklength(date_split[10],1,12)\n\
    \    \n    days_valid = days_valid && checklength(date_split[11],1,31)\n    months_valid\
    \ = months_valid && checklength(date_split[12],1,12)\n    \n    return days_valid\
    \ && months_valid\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function that checks if a\
    \ year is a leap year or not. \nThe function should take in a year and return\
    \ true if the year is a leap year and false otherwise.", "    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \n    valid_date_regex = Regex(\"^((0[1-9]|[12][0-9]|3[01])[\\\
    -](0[1-9]|1[012])[\\-]\\d{4})$\")\n    \n    if valid_date_regex.match(date) ==\
    \ nil then\n        false\n    else\n        true\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    date_split = split(date,\"-\")\n    \n    days_not_less_than_1_or_higher_than_31\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12]\n    days_not_less_than_1_or_higher_than_30 =\
    \ [4,6,9,11]\n    days_not_less_than_1_or_higher_than_29 = [2]\n    months_not_less_than_1_or_higher_than_12\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12]\n    \n    days_not_less_than_1_or_higher_than_31\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12]\n    days_not_less_than_1_or_higher_than_30 =\
    \ [4,6,9,11]\n    days_not_less_than_1_or_higher_than_29 = [2]\n    months_not_less_than_1_or_higher_than_12\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12]\n    \n    days_not_less_than_1_or_higher_than_31\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12]\n    days_not_less_than_1_or_higher_than_30 =\
    \ [4,6,9,11]\n    days_not_less_than_1_or_higher_than_29 = [2]\n    months_not_less_than_1_or_higher_than_12\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12]\n    \n    days_not_less_than_1_or_higher_than_31\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12]\n    days_not_less_than_1_or_higher_than_30 =\
    \ [4,6,9,11]\n    days_not_less_than_1_or_higher_than_29 = [2]\n    months_not_less_than_1_or_higher_than_12\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12]\n    \n    days_not_less_than_1_or_higher_than_31\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12]\n    days_not_less_than_1_or_higher_than_30 =\
    \ [4,6,9,11]\n    days_not_less_than_1_or_higher_than_29 = [2]\n    months_not_less_than_1_or_higher_than_12\
    \ = [1,2,3,4,5,6,7,8,9,10,11,12]\n    \n    days_not_less_than_1_or_higher_than_31\
    \ = [1,2,3,4,5,6,7,8,9,10,11,", "    \n    date_split = split(date, \"-\")\n \
    \   \n    months = date_split[1]\n    days = date_split[2]\n    \n    months_split\
    \ = [months[i:i+2] for i in range(0, len(months), 2)]\n    \n    months_split\
    \ = [month for month in months_split if month != \"\"]\n    \n    months_split\
    \ = [month for month in months_split if month != \" \"]\n    \n    months_split\
    \ = [month for month in months_split if month != \"\"]\n    \n    days_split =\
    \ [days[i:i+2] for i in range(0, len(days), 2)]\n    \n    days_split = [day for\
    \ day in days_split if day != \"\"]\n    \n    days_split = [day for day in days_split\
    \ if day != \" \"]\n    \n    days_split = [day for day in days_split if day !=\
    \ \"\"]\n    \n    days_split = [int(day) for day in days_split]\n    \n    days_split\
    \ = [day for day in days_split if day >= 1 and day <= 31]\n    \n    days_split\
    \ = [day for day in days_split if day >= 1 and day <= 30]\n    \n    days_split\
    \ = [day for day in days_split if day >= 1 and day <= 29]\n    \n    days_split\
    \ = [day for day in days_split if day >= 1 and day <= 31]\n    \n    days_split\
    \ = [day for day in days_split if day >= 1 and day <= 30]\n    \n    days_split\
    \ = [day for day in days_split if day >= 1 and day <= 29]\n    \n    days_split\
    \ = [day for day in days_split if day >= 1 and day <= 31]\n    \n    days_split\
    \ = [day for day in days_split if day >= 1 and day <= 30]\n    \n    days_split\
    \ = [day for day in days_split if day >= 1 and day <= 29]\n    \n    days_split\
    \ = [day for day in days_split if day >= 1 and day <= 31]\n    \n    days_split\
    \ = [day for day in days_split if day >= 1 and day <= 30]\n    \n    days_split\
    \ = [day for day in days_split if day >= 1 and day <= 29]\n    \n    days_split\
    \ = [day for day in days_split if day >= 1 and day <= 31]\n    \n    days_split\
    \ = [day for day in days_split if ", "    \n    valid_date::Bool = true \n   \
    \ \n    if date == \"\" then \n        valid_date = false \n    else \n      \
    \  \n        days::Int = length(date) - length(replace(date, \"-\", \"\")) + 1\n\
    \        \n        if days < 1 or days > 31 then \n            valid_date = false\
    \ \n        else \n            \n            months::Int = length(date) - length(replace(date,\
    \ \"-\", \"\")) - length(replace(date, \"/\", \"\")) + 1\n            \n     \
    \       if months < 1 or months > 12 then \n                valid_date = false\
    \ \n            else \n                \n                years::Int = length(date)\
    \ - length(replace(date, \"-\", \"\")) - length(replace(date, \"/\", \"\")) -\
    \ length(replace(date, \".\", \"\")) + 1\n                \n                if\
    \ years < 1 or years > 20 then \n                    valid_date = false \n   \
    \             else \n                    \n                    if months == 2\
    \ then \n                        \n                        if days == 29 then\
    \ \n                            valid_date = true \n                        else\
    \ \n                            valid_date = false \n                    else\
    \ \n                        \n                        if days == 30 then \n  \
    \                          valid_date = true \n                        else \n\
    \                            valid_date = false \n                    end \n \
    \               end \n            end \n        end \n    end \n    \n    return\
    \ valid_date\nend \n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    06/04/2020\")\n</cell>\n<text>\nExercise 2\nWrite a function that checks if a\
    \ given string is a valid phone number. Valid phone numbers are of the form (xxx)\
    \ xxx-xxxx. Where x is a digit.", "    \n    if date == \"\"\n        return false\n\
    \    \n    days_month = [31,28,31,30,31,30,31,30,31,30,31]\n    days_month[month\
    \ - 1]\n    \n    if days_month[month - 1] < 1 || days_month[month - 1] > 31\n\
    \        return false\n    \n    days_month[month]\n    \n    if days_month[month]\
    \ < 1 || days_month[month] > 30\n        return false\n    \n    days_month[month]\n\
    \    \n    if days_month[month] < 1 || days_month[month] > 29\n        return\
    \ false\n    \n    true\nend\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 3\nWrite a function which\
    \ validates a given date string and returns true if the date is valid otherwise\
    \ false.\nThe date is valid if all of the following rules are satisfied:\n1. The\
    \ date string is not empty.\n2. The number of days is not less than 1 or higher\
    \ than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less\
    \ than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is\
    \ not less than 1 or higher than 29 for the month 2.\n3. The months should not\
    \ be less than 1 or higher than 12.\n4. The date should be in the format: mm-dd-yyyy",
  "    \n    if date == \"\"\n        return false\n    \n    date_array = string.split(date,\
    \ \"-\")\n    \n    if date_array.length != 3\n        return false\n    \n  \
    \  if date_array[1] < 1 || date_array[1] > 12\n        return false\n    \n  \
    \  if date_array[2] < 1 || date_array[2] > 31\n        return false\n    \n  \
    \  return true\nend\n</cell>\n<code language=julia-1.5>", "    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        return false\n   \
    \ else \n        return true\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    \n    date_split = split(date, \"-\")\n    \n    days_valid = check_days(date_split)\n\
    \    \n    months_valid = check_months(date_split)\n    \n    year_valid = check_year(date_split)\n\
    \    \n    return days_valid and months_valid and year_valid\nend\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function to check if a given date string is valid or not.",
  "    \n    if date == \"\"\n        false\n    else\n        if length(date) < 1\
    \ || length(date) > 31\n            false\n        elseif length(date) < 1 ||\
    \ length(date) > 30\n            false\n        elseif length(date) < 1 || length(date)\
    \ > 29\n            false\n        elseif length(date) < 1 || length(date) > 12\n\
    \            false\n        else\n            true\n        end\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that checks if a given date string\
    \ is a valid date or not.", "    \n    if date == \"\"\n        false\n    elseif\
    \ length(date) < 1\n        false\n    elseif length(date) > 31\n        false\n\
    \    elseif month(date) < 1 || month(date) > 12\n        false\n    elseif day(date)\
    \ < 1 || day(date) > 30\n        false\n    elseif month(date) == 2 && day(date)\
    \ > 29\n        false\n    else\n        true\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"04-0-2040\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\nExercise 2\n\
    Write a function that checks if a given date string is valid or not.", "    \n\
    \    valid_date::Bool = false\n    \n    if date == \"\"\n        valid_date =\
    \ true\n    else\n        \n        day::Int = days_in_month(month(date))\n  \
    \      \n        if day < 1 or day > 31\n            valid_date = false\n    \
    \    elseif day < 30 or day > 29\n            valid_date = false\n        else\n\
    \            \n            month::Int = month(date)\n            \n          \
    \  if month < 1 or month > 12\n                valid_date = false\n          \
    \  else\n                \n                year::Int = year(date)\n          \
    \      \n                if year < 1900 or year > 2020\n                    valid_date\
    \ = false\n                else\n                    valid_date = true\n     \
    \           end\n            end\n        end\n    end\n    \n    return valid_date\n\
    end\n</cell>\n<code language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n\
    <code language=julia-1.5>\nvalid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\"\
    )\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function which takes a date string and returns true if the\
    \ date is valid otherwise false.\nThe date is valid if all of the following rules\
    \ are satisfied:\n1. The date string is not empty.\n2. The number of days is not\
    \ less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number\
    \ of days is not less than 1 or higher than 30 days for months 4,6,9,11. And,\
    \ the number of days is not less than 1 or higher than 29 for the month 2.\n3.\
    \ The months should not be less than 1 or higher than 12.\n4. The date should\
    \ be in the format: mm-dd-yyyy", "    \n    if date == \"\"\n        return false\n\
    \    \n    days_months = [31,28,31,30,31,30,31,30,31,30,31]\n    months = [1,2,3,4,5,6,7,8,9,10,11,12]\n\
    \    \n    days_months_months = [31,30,31,30,31,30,31,30,31,30,31]\n    \n   \
    \ days_months_months_months = [31,30,31,30,31,30,31,30,31,30,31]\n    \n    days_months_months_months_months\
    \ = [31,30,31,30,31,30,31,30,31,30,31]\n    \n    days_months_months_months_months_months\
    \ = [31,30,31,30,31,30,31,30,31,30,31]\n    \n    days_months_months_months_months_months_months\
    \ = [31,30,31,30,31,30,31,30,31,30,31]\n    \n    days_months_months_months_months_months_months_months\
    \ = [31,30,31,30,31,30,31,30,31,30,31]\n    \n    days_months_months_months_months_months_months_months_months\
    \ = [31,30,31,30,31,30,31,30,31,30,31]\n    \n    days_months_months_months_months_months_months_months_months_months\
    \ = [31,30,31,30,31,30,31,30,31,30,31]\n    \n    days_months_months_months_months_months_months_months_months_months_months\
    \ = [31,30,31,30,31,30,31,30,31,30,31]\n    \n    days_months_months_months_months_months_months_months_months_months_months_months\
    \ = [31,30,31,30,31,30,31,30,31,30,31]\n    \n    days_months_months_months_months_months_months_months_months_months_months_months_months\
    \ = [31,30,31,30,31,30,31,30,31,30,31]\n    \n    days_months_months_months_months_months_months_months_months_months_months_months_months_months\
    \ = [31,30,31,30,31,30,31,30,31,30,31]\n    \n    days_months_months_months_months_months_months_months_months_months_months_months_months_months_months\
    \ = [31,30,31,30,31,30,31,30,31,30,31]\n    \n    days_months_months_months_months_months_months_months_months_months_months_",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    if date ==\
    \ \"\"\n        false\n    elseif length(date) < 1 || length(date) > 31\n    \
    \    false\n    elseif month(date) < 1 || month(date) > 12\n        false\n  \
    \  elseif day(date) < 1 || day(date) > 30\n        false\n    elseif month(date)\
    \ == 2 && day(date) > 29\n        false\n    elseif month(date) == 2 && day(date)\
    \ < 1\n        false\n    elseif month(date) == 3 && day(date) > 31\n        false\n\
    \    elseif month(date) == 3 && day(date) < 1\n        false\n    elseif month(date)\
    \ == 4 && day(date) > 30\n        false\n    elseif month(date) == 4 && day(date)\
    \ < 1\n        false\n    elseif month(date) == 6 && day(date) > 29\n        false\n\
    \    elseif month(date) == 6 && day(date) < 1\n        false\n    elseif month(date)\
    \ == 9 && day(date) > 29\n        false\n    elseif month(date) == 9 && day(date)\
    \ < 1\n        false\n    elseif month(date) == 11 && day(date) > 30\n       \
    \ false\n    elseif month(date) == 11 && day(date) < 1\n        false\n    elseif\
    \ month(date) == 12 && day(date) > 31\n        false\n    elseif month(date) ==\
    \ 12 && day(date) < 1\n        false\n    else\n        true\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function which takes a date string and returns the\
    \ number of days between the current date and the date given.", "    \n    valid_date_str\
    \ = Date.parse(date)\n    if valid_date_str == nil\n        false\n    else\n\
    \        true\n    end\nend\n</cell>\n<code language=julia-1.5>", "    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    \n    date_split = split(date,\
    \ \"-\")\n    \n    if date_split.length != 3 || date_split[1] < 1 || date_split[2]\
    \ < 1 || date_split[1] > 12 || date_split[2] > 12 || date_split[1] > date_split[2]\
    \ || date_split[1] < 1 || date_split[2] < 1 || date_split[1] > 31 || date_split[2]\
    \ > 31 || date_split[1] > 30 || date_split[2] > 30 || date_split[1] > 29 || date_split[2]\
    \ > 29\n    \n        return false\n    \n    return true\nend\n</cell>\n<code\
    \ language=julia-1.5>\nvalid_date(\"03-11-2000\")\n</cell>\n<code language=julia-1.5>\n\
    valid_date(\"15-01-2012\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"\
    04-0-2040\")\n</cell>\n<code language=julia-1.5>\nvalid_date(\"06-04-2020\")\n\
    </cell>\n<code language=julia-1.5>\nvalid_date(\"06/04/2020\")\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    valid_date_regex = Regex(\"^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-[0-9]{4}$\"\
    )\n    \n    if valid_date_regex.match(date) == nil then\n        false\n    else\n\
    \        true\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that\
    \ validates a given date string and returns true if the date is valid otherwise\
    \ false.\nThe date is valid if all of the following rules are satisfied:\n1. The\
    \ date string is not empty.\n2. The number of days is not less than 1 or higher\
    \ than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less\
    \ than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is\
    \ not less than 1 or higher than 29 for the month 2.\n3. The months should not\
    \ be less than 1 or higher than 12.\n4. The date should be in the format: mm-dd-yyyy",
  "    \n    date_split = split(date, \"-\")\n    \n    months = date_split[1]\n \
    \   days_str = date_split[2]\n    \n    days_split = split(days_str, \"-\")\n\
    \    \n    days_int = days_split[1]\n    \n    months_int = months[1]\n    \n\
    \    if days_int == \"\" or days_int == None or days_int == [] or days_int ==\
    \ [\"\"] or days_int == [None] or days_int == [] or days_int == [\"\"] or days_int\
    \ == [None] or days_int == [] or days_int == [\"\"] or days_int == [None] or days_int\
    \ == [] or days_int == [\"\"] or days_int == [None] or days_int == [] or days_int\
    \ == [\"\"] or days_int == [None] or days_int == [] or days_int == [\"\"] or days_int\
    \ == [None] or days_int == [] or days_int == [\"\"] or days_int == [None] or days_int\
    \ == [] or days_int == [\"\"] or days_int == [None] or days_int == [] or days_int\
    \ == [\"\"] or days_int == [None] or days_int == [] or days_int == [\"\"] or days_int\
    \ == [None] or days_int == [] or days_int == [\"\"] or days_int == [None] or days_int\
    \ == [] or days_int == [\"\"] or days_int == [None] or days_int == [] or days_int\
    \ == [\"\"] or days_int == [None] or days_int == [] or days_int == [\"\"] or days_int\
    \ == [None] or days_int == [] or days_int == [\"\"] or days_int == [None] or days_int\
    \ == [] or days_int == [\"\"] or days_int == [None] or days_int == [] or days_int\
    \ == [\"\"] or days_int == [None] or days_int == [] or days_int == [\"\"] or days_int\
    \ == [None] or days_int == [] or days_int == [\"\"] or days_int == [None] or days_int\
    \ == [] or days_int == [\"\"] or days_int == [None", "    \n    valid_date::Bool\
    \ = true \n    \n    if date == \"\"\n        valid_date = false\n    else \n\
    \        \n        days::Int = count_days(date)\n        \n        if days > 31\n\
    \            valid_date = false\n        else if days > 30\n            valid_date\
    \ = false\n        else if days > 29\n            valid_date = false\n       \
    \ else if days > 28\n            valid_date = false\n        else if days > 27\n\
    \            valid_date = false\n        else if days > 26\n            valid_date\
    \ = false\n        else if days > 25\n            valid_date = false\n       \
    \ else if days > 24\n            valid_date = false\n        else if days > 23\n\
    \            valid_date = false\n        else if days > 22\n            valid_date\
    \ = false\n        else if days > 21\n            valid_date = false\n       \
    \ else if days > 20\n            valid_date = false\n        else if days > 19\n\
    \            valid_date = false\n        else if days > 18\n            valid_date\
    \ = false\n        else if days > 17\n            valid_date = false\n       \
    \ else if days > 16\n            valid_date = false\n        else if days > 15\n\
    \            valid_date = false\n        else if days > 14\n            valid_date\
    \ = false\n        else if days > 13\n            valid_date = false\n       \
    \ else if days > 12\n            valid_date = false\n        else if days > 11\n\
    \            valid_date = false\n        else if days > 10\n            valid_date\
    \ = false\n        else if days > 9\n            valid_date = false\n        else\
    \ if days > 8\n            valid_date = false\n        else if days > 7\n    \
    \        valid_date = false\n        else if days > 6\n            valid_date\
    \ = false\n        else if days > 5\n            valid_date = false\n        else\
    \ if days > 4\n            valid_date = false\n        else if days > 3\n    \
    \        valid_date = false\n        else if days > 2\n            valid_date\
    \ = false\n        else if days > 1\n            valid_date = false\n        else\
    \ if days > 0\n            valid_date = false\n        else if days > 0\n    \
    \        valid_date = false\n        else if days > 0\n            valid_date\
    \ = false\n        else if days > 0\n            valid_date = false\n        else\
    \ if days > 0\n            valid_date = false\n        else if days > 0\n    \
    \        valid_date = false\n        else if days > 0\n            valid_date\
    \ = false\n        else if days > 0\n            valid_date = false\n        else\
    \ if days > 0\n            valid_date = false\n        else if days > 0\n    \
    \        valid_date = false\n        else if days > 0\n            valid_date\
    \ = false\n        else if days > 0\n            valid_date = false\n        else ",
  "    \n    if date == \"\"\n        false\n    elseif length(date) < 1\n       \
    \ false\n    elseif length(date) > 31\n        false\n    elseif month(date) <\
    \ 1 || month(date) > 12\n        false\n    elseif day(date) < 1 || day(date)\
    \ > 30\n        false\n    elseif month(date) == 2 && day(date) > 29\n       \
    \ false\n    else\n        true\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a string and returns the number of characters in the string.",
  "    valid_date_str = Date.parse(date)\n    if valid_date_str == nil\n        return\
    \ false\n    end\n    days_str = valid_date_str.days()\n    if days_str == nil\n\
    \        return false\n    end\n    days_str = days_str[1]\n    if days_str <\
    \ 1 || days_str > 31\n        return false\n    end\n    months_str = valid_date_str.months()\n\
    \    if months_str == nil\n        return false\n    end\n    months_str = months_str[1]\n\
    \    if months_str < 1 || months_str > 12\n        return false\n    end\n   \
    \ years_str = valid_date_str.years()\n    if years_str == nil\n        return\
    \ false\n    end\n    years_str = years_str[1]\n    if years_str < 1 || years_str\
    \ > 9999\n        return false\n    end\n    return true\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    if date == \"\"\n        false\n    else\n\
    \        if length(date) < 1 || length(date) > 31\n            false\n       \
    \ elseif length(date) < 1 || length(date) > 30\n            false\n        elseif\
    \ length(date) < 1 || length(date) > 29\n            false\n        elseif length(date)\
    \ < 1 || length(date) > 12\n            false\n        else\n            true\n\
    \        end\n    end\nend\n</cell>\n<text>\nExercise 3: Write a function that\
    \ validates a given date string and returns true if the date is valid otherwise\
    \ false.\nThe date is valid if all of the following rules are satisfied:\n1. The\
    \ date string is not empty.\n2. The number of days is not less than 1 or higher\
    \ than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less\
    \ than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is\
    \ not less than 1 or higher than 29 for the month 2.\n3. The months should not\
    \ be less than 1 or higher than 12.\n4. The date should be in the format: mm-dd-yyyy",
  "    \n    date_split = split(date, \"-\")\n    \n    days_not_valid = \n      \
    \  if date_split[1] == \"01\" \n        then \"31\" \n        else if date_split[1]\
    \ == \"03\" \n        then \"31\" \n        else if date_split[1] == \"05\" \n\
    \        then \"30\" \n        else if date_split[1] == \"07\" \n        then\
    \ \"31\" \n        else if date_split[1] == \"08\" \n        then \"30\" \n  \
    \      else if date_split[1] == \"10\" \n        then \"31\" \n        else if\
    \ date_split[1] == \"12\" \n        then \"30\" \n        else if date_split[1]\
    \ == \"04\" \n        then \"29\" \n        else if date_split[1] == \"06\" \n\
    \        then \"29\" \n        else if date_split[1] == \"09\" \n        then\
    \ \"29\" \n        else if date_split[1] == \"11\" \n        then \"30\" \n  \
    \      else if date_split[1] == \"13\" \n        then \"31\" \n        else if\
    \ date_split[1] == \"15\" \n        then \"30\" \n        else if date_split[1]\
    \ == \"17\" \n        then \"31\" \n        else if date_split[1] == \"19\" \n\
    \        then \"30\" \n        else if date_split[1] == \"21\" \n        then\
    \ \"31\" \n        else if date_split[1] == \"23\" \n        then \"30\" \n  \
    \      else if date_split[1] == \"25\" \n        then \"31\" \n        else if\
    \ date_split[1] == \"27\" \n        then \"30\" \n        else if date_split[1]\
    \ == \"29\" \n        then \"31\" \n        else if date_split[1] == \"02\" \n\
    \        then \"28\" \n        else if date_split[1] == \"04\" \n        then\
    \ \"31\" \n        else if date_split[1] == \"06\" \n        then \"30\" \n  \
    \      else if date_split[1] == \"09\" \n        then \"31\" \n        else if\
    \ date_split[1] == \"11\" \n        then \"30\" \n        else if date_split[1]\
    \ == \"13\" \n        then \"31\" \n        else if date_split[1] == \"15\" \n\
    \        then \"30\" \n        else if date_split[1] == \"17\" \n        then\
    \ \"31\" \n        else if date_split[1] == \"19\" \n        then \"30\" \n  \
    \      else if date_split[1] == \"21\" \n        then \"31\" \n        else if\
    \ date_split[1] == \"23\" \n        then \"30\" \n        else if date_split[1]\
    \ == \"25\" \n        then \"31\" \n        else if date_split[1] == \"27\" \n\
    \        then \"30\" ", "    valid_date_str = Date.parse(date)\n    if valid_date_str\
    \ == nil\n        return false\n    else\n        return true\n    end\nend\n\
    </cell>\n<code language=julia-1.5>"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

language: jl
name: HumanEval_77_iscube
results:
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then true\n    \
    \    else false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n  \
    \  Write a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk6y1sk6h.jl:21\nin expression starting at /tmp/tmpk6y1sk6h.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    if a==1\
    \ then return true\n    if a==2 then return true\n    if a==3 then return true\n\
    \    if a==4 then return true\n    if a==5 then return true\n    if a==6 then\
    \ return true\n    if a==7 then return true\n    if a==8 then return true\n  \
    \  if a==9 then return true\n    if a==10 then return true\n    if a==11 then\
    \ return true\n    if a==12 then return true\n    if a==13 then return true\n\
    \    if a==14 then return true\n    if a==15 then return true\n    if a==16 then\
    \ return true\n    if a==17 then return true\n    if a==18 then return true\n\
    \    if a==19 then return true\n    if a==20 then return true\n    if a==21 then\
    \ return true\n    if a==22 then return true\n    if a==23 then return true\n\
    \    if a==24 then return true\n    if a==25 then return true\n    if a==26 then\
    \ return true\n    if a==27 then return true\n    if a==28 then return true\n\
    \    if a==29 then return true\n    if a==30 then return true\n    if a==31 then\
    \ return true\n    if a==32 then return true\n    if a==33 then return true\n\
    \    if a==34 then return true\n    if a==35 then return true\n    if a==36 then\
    \ return true\n    if a==37 then return true\n    if a==38 then return true\n\
    \    if a==39 then return true\n    if a==40 then return true\n    if a==41 then\
    \ return true\n    if a==42 then return true\n    if a==43 then return true\n\
    \    if a==44 then return true\n    if a==45 then return true\n    if a==46 then\
    \ return true\n    if a==47 then return true\n    if a==48 then return true\n\
    \    if a==49 then return true\n    if a==50 then return true\n    if a==51 then\
    \ return true\n    if a==52 then return true\n    if a==53 then return true\n\
    \    if a==54 then return true\n    if a==55 then return true\n    if a==56 then\
    \ return true\n    if a==57 then return true\n    if a==58 then return true\n\
    \    if a==59 then return true\n    if a==60 then return true\n    if a==61 \n\
    using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2_r2e7qx.jl:20\nin expression starting at /tmp/tmp2_r2e7qx.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then true\n    \
    \    else false\n    end\nend\n</cell>\n<code language=julia-1.3>\niscube(1)\n\
    </cell>\n<code language=julia-1.3>\niscube(2)\n</cell>\n<code language=julia-1.3>\n\
    iscube(-1)\n</cell>\n<code language=julia-1.3>\niscube(64)\n</cell>\n<code language=julia-1.3>\n\
    iscube(0)\n</cell>\n<code language=julia-1.3>\niscube(180)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an integer a and returns true \n    if\
    \ this ingeger is a cube of some integer number.\n    Note: you may assume the\
    \ input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>>\
    \ iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n   \
    \ true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\"\"\
    \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) ==\
    \ true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp13kuqk62.jl:21\nin expression starting at /tmp/tmp13kuqk62.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        if a==1 \n            then return true\n        else \n  \
    \          if a==2 \n                then return true\n            else \n   \
    \             if a==3 \n                    then return true\n               \
    \ else \n                    if a==4 \n                        then return true\n\
    \                    else \n                        if a==5 \n               \
    \             then return true\n                        else \n              \
    \              if a==6 \n                                then return true\n  \
    \                          else \n                                if a==7 \n \
    \                                   then return true\n                       \
    \         else \n                                    if a==8 \n              \
    \                          then return true\n                                \
    \    else \n                                        if a==9 \n               \
    \                             then return true\n                             \
    \           else \n                                            if a==10 \n   \
    \                                             then return true\n             \
    \                               else \n                                      \
    \          if a==11 \n                                                    then\
    \ return true\n                                                else \n       \
    \                                             if a==12 \n                    \
    \                                    then return true\n                      \
    \                              else \n                                       \
    \                 if a==13 \n                                                \
    \            then return true\n                                              \
    \          else \n                                                           \
    \ if a==14 \n                                                                then\
    \ return true\n                                                            else\
    \ \n                                                                if a==15 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==16 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==17 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==18 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==19 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==20 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==21 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==22 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==23 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==24 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==25 \n                                              \
    \                      then return true\n                                    \
    \                                else \n                                     \
    \                   if a==26 \n                                              \
    \              then return true\n                                            \
    \                else \n                                                     \
    \           if a==27 \n                                                      \
    \              then return true\n                                            \
    \                        else \n                                             \
    \           if a==28 \n                                                      \
    \      then return true\n                                                    \
    \        else \n                                                             \
    \   if a==29 \n                                                              \
    \      then return true\n                                                    \
    \                else \n                                                     \
    \   if a==30 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==31 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==32 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==33 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==34 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==35 \n                      \
    \                                              then return true\n\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2uplh0s0.jl:21\nin expression starting at /tmp/tmp2uplh0s0.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n    then return true\n\
    \    else if a==1 \n    then return true\n    else if a==2 \n    then return true\n\
    \    else if a==3 \n    then return true\n    else if a==4 \n    then return true\n\
    \    else if a==5 \n    then return true\n    else if a==6 \n    then return true\n\
    \    else if a==7 \n    then return true\n    else if a==8 \n    then return true\n\
    \    else if a==9 \n    then return true\n    else if a==10 \n    then return\
    \ true\n    else if a==11 \n    then return true\n    else if a==12 \n    then\
    \ return true\n    else if a==13 \n    then return true\n    else if a==14 \n\
    \    then return true\n    else if a==15 \n    then return true\n    else if a==16\
    \ \n    then return true\n    else if a==17 \n    then return true\n    else if\
    \ a==18 \n    then return true\n    else if a==19 \n    then return true\n   \
    \ else if a==20 \n    then return true\n    else if a==21 \n    then return true\n\
    \    else if a==22 \n    then return true\n    else if a==23 \n    then return\
    \ true\n    else if a==24 \n    then return true\n    else if a==25 \n    then\
    \ return true\n    else if a==26 \n    then return true\n    else if a==27 \n\
    \    then return true\n    else if a==28 \n    then return true\n    else if a==29\
    \ \n    then return true\n    else if a==30 \n    then return true\n    else if\
    \ a==31 \n    then return true\n    else if a==32 \n    then return true\n   \
    \ else if a==33 \n    then return true\n    else if a==34 \n    then return true\n\
    \    else if a==35 \n    then return true\n    else if a==36 \n    then return\
    \ true\n    else if a==37 \n    then return true\n    else if a==38 \n    then\
    \ return true\n    else if a==39 \n    then return true\n    else if a==40 \n\
    \    then return true\n    else if a==41 \n    then return true\n    else if a==42\
    \ \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzlh99vrf.jl:21\nin expression starting at /tmp/tmpzlh99vrf.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    if a==1\
    \ then return true\n    if a==2 then return true\n    if a==3 then return true\n\
    \    if a==4 then return true\n    if a==5 then return true\n    if a==6 then\
    \ return true\n    if a==7 then return true\n    if a==8 then return true\n  \
    \  if a==9 then return true\n    if a==10 then return true\n    if a==11 then\
    \ return true\n    if a==12 then return true\n    if a==13 then return true\n\
    \    if a==14 then return true\n    if a==15 then return true\n    if a==16 then\
    \ return true\n    if a==17 then return true\n    if a==18 then return true\n\
    \    if a==19 then return true\n    if a==20 then return true\n    if a==21 then\
    \ return true\n    if a==22 then return true\n    if a==23 then return true\n\
    \    if a==24 then return true\n    if a==25 then return true\n    if a==26 then\
    \ return true\n    if a==27 then return true\n    if a==28 then return true\n\
    \    if a==29 then return true\n    if a==30 then return true\n    if a==31 then\
    \ return true\n    if a==32 then return true\n    if a==33 then return true\n\
    \    if a==34 then return true\n    if a==35 then return true\n    if a==36 then\
    \ return true\n    if a==37 then return true\n    if a==38 then return true\n\
    \    if a==39 then return true\n    if a==40 then return true\n    if a==41 then\
    \ return true\n    if a==42 then return true\n    if a==43 then return true\n\
    \    if a==44 then return true\n    if a==45 then return true\n    if a==46 then\
    \ return true\n    if a==47 then return true\n    if a==48 then return true\n\
    \    if a==49 then return true\n    if a==50 then return true\n    if a==51 then\
    \ return true\n    if a==52 then return true\n    if a==53 then return true\n\
    \    if a==54 then return true\n    if a==55 then return true\n    if a==56 then\
    \ return true\n    if a==57 then return true\n    if a==58 then return true\n\
    \    if a==59 then return true\n    if a==60 then return true\n    if a==61 \n\
    using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2_r2e7qx.jl:20\nin expression starting at /tmp/tmp2_r2e7qx.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n    then return true\n\
    \    else if a%4 == 0 \n    then return true\n    else return false\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"\n    Write a function that takes an integer\
    \ a and returns true \n    if this ingeger is a cube of some integer number.\n\
    \    Note: you may assume the input is always valid.\n    Examples:\n    >>> iscube(1)\n\
    \    true\n    >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>>\
    \ iscube(64)\n    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n   \
    \ false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplqlvy8za.jl:21\nin expression starting at /tmp/tmplqlvy8za.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then true\n    \
    \    else false\n    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n  \
    \  Write a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjdm1g8g4.jl:21\nin expression starting at /tmp/tmpjdm1g8g4.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        cube::Int64 = 1\n        for i in 1:a\n            cube =\
    \ cube * i\n            if cube > 1 \n                then return false\n    \
    \        end\n        end\n        return true\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    iscube(2)\n</cell>\n<code language=julia-1.5>\niscube(18)\n</cell>\n<code language=julia-1.5>\n\
    iscube(64)\n</cell>\n<code language=julia-1.5>\niscube(180)\n</cell>\n<code language=julia-1.5>\n\
    iscube(181)\n</cell>\n<code language=julia-1.5>\niscube(182)\n</cell>\n<code language=julia-1.5>\n\
    iscube(183)\n</cell>\n<code language=julia-1.5>\niscube(184)\n</cell>\n<code language=julia-1.5>\n\
    iscube(185)\n</cell>\n<code language=julia-1.5>\niscube(186)\n</cell>\n<code language=julia-1.5>\n\
    iscube(187)\n</cell>\n<code language=julia-1.5>\niscube(188)\n</cell>\n<code language=julia-1.5>\n\
    iscube(189)\n</cell>\n<code language=julia-1.5>\niscube(190)\n</cell>\n<code language=julia-1.5>\n\
    iscube(191)\n</cell>\n<code language=julia-1.5>\niscube(192)\n</cell>\n<code language=julia-1.5>\n\
    iscube(193)\n</cell>\n<code language=julia-1.5>\niscube(194)\n</cell>\n<code language=julia-1.5>\n\
    iscube(195)\n</cell>\n<code language=julia-1.5>\niscube(196)\n</cell>\n<code language=julia-1.5>\n\
    iscube(197)\n</cell>\n<code language=julia-1.5>\niscube(198)\n</cell>\n<code language=julia-1.5>\n\
    iscube(199)\n</cell>\n<code language=julia-1.5>\niscube(200)\n</cell>\n<code language=julia-1.5>\n\
    iscube(201)\n</cell>\n<code language=julia-1.5>\niscube(202)\n</cell>\n<code language=julia-1.5>\n\
    iscube(203)\n</cell>\n<code language=julia-1.5>\niscube(204)\n</cell>\n<code language=julia-1.5>\n\
    iscube(20\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpq44vspvk.jl:21\nin expression starting at /tmp/tmpq44vspvk.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    if a==1\
    \ then return true\n    if a==2 then return true\n    if a==3 then return true\n\
    \    if a==4 then return true\n    if a==5 then return true\n    if a==6 then\
    \ return true\n    if a==7 then return true\n    if a==8 then return true\n  \
    \  if a==9 then return true\n    if a==10 then return true\n    if a==11 then\
    \ return true\n    if a==12 then return true\n    if a==13 then return true\n\
    \    if a==14 then return true\n    if a==15 then return true\n    if a==16 then\
    \ return true\n    if a==17 then return true\n    if a==18 then return true\n\
    \    if a==19 then return true\n    if a==20 then return true\n    if a==21 then\
    \ return true\n    if a==22 then return true\n    if a==23 then return true\n\
    \    if a==24 then return true\n    if a==25 then return true\n    if a==26 then\
    \ return true\n    if a==27 then return true\n    if a==28 then return true\n\
    \    if a==29 then return true\n    if a==30 then return true\n    if a==31 then\
    \ return true\n    if a==32 then return true\n    if a==33 then return true\n\
    \    if a==34 then return true\n    if a==35 then return true\n    if a==36 then\
    \ return true\n    if a==37 then return true\n    if a==38 then return true\n\
    \    if a==39 then return true\n    if a==40 then return true\n    if a==41 then\
    \ return true\n    if a==42 then return true\n    if a==43 then return true\n\
    \    if a==44 then return true\n    if a==45 then return true\n    if a==46 then\
    \ return true\n    if a==47 then return true\n    if a==48 then return true\n\
    \    if a==49 then return true\n    if a==50 then return true\n    if a==51 then\
    \ return true\n    if a==52 then return true\n    if a==53 then return true\n\
    \    if a==54 then return true\n    if a==55 then return true\n    if a==56 then\
    \ return true\n    if a==57 then return true\n    if a==58 then return true\n\
    \    if a==59 then return true\n    if a==60 then return true\n    if a==61 \n\
    using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2_r2e7qx.jl:20\nin expression starting at /tmp/tmp2_r2e7qx.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n    then return true\n \
    \   else if a==1 \n    then return true\n    else if a==2 \n    then return true\n\
    \    else if a==3 \n    then return true\n    else if a==4 \n    then return true\n\
    \    else if a==5 \n    then return true\n    else if a==6 \n    then return true\n\
    \    else if a==7 \n    then return true\n    else if a==8 \n    then return true\n\
    \    else if a==9 \n    then return true\n    else if a==10 \n    then return\
    \ true\n    else if a==11 \n    then return true\n    else if a==12 \n    then\
    \ return true\n    else if a==13 \n    then return true\n    else if a==14 \n\
    \    then return true\n    else if a==15 \n    then return true\n    else if a==16\
    \ \n    then return true\n    else if a==17 \n    then return true\n    else if\
    \ a==18 \n    then return true\n    else if a==19 \n    then return true\n   \
    \ else if a==20 \n    then return true\n    else if a==21 \n    then return true\n\
    \    else if a==22 \n    then return true\n    else if a==23 \n    then return\
    \ true\n    else if a==24 \n    then return true\n    else if a==25 \n    then\
    \ return true\n    else if a==26 \n    then return true\n    else if a==27 \n\
    \    then return true\n    else if a==28 \n    then return true\n    else if a==29\
    \ \n    then return true\n    else if a==30 \n    then return true\n    else if\
    \ a==31 \n    then return true\n    else if a==32 \n    then return true\n   \
    \ else if a==33 \n    then return true\n    else if a==34 \n    then return true\n\
    \    else if a==35 \n    then return true\n    else if a==36 \n    then return\
    \ true\n    else if a==37 \n    then return true\n    else if a==38 \n    then\
    \ return true\n    else if a==39 \n    then return true\n    else if a==40 \n\
    \    then return true\n    else if a==41 \n    then return true\n    else if a==4\n\
    using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpym18ocqa.jl:21\nin expression starting at /tmp/tmpym18ocqa.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    if a==1\
    \ then return true\n    if a==2 then return true\n    if a==3 then return true\n\
    \    if a==4 then return true\n    if a==5 then return true\n    if a==6 then\
    \ return true\n    if a==7 then return true\n    if a==8 then return true\n  \
    \  if a==9 then return true\n    if a==10 then return true\n    if a==11 then\
    \ return true\n    if a==12 then return true\n    if a==13 then return true\n\
    \    if a==14 then return true\n    if a==15 then return true\n    if a==16 then\
    \ return true\n    if a==17 then return true\n    if a==18 then return true\n\
    \    if a==19 then return true\n    if a==20 then return true\n    if a==21 then\
    \ return true\n    if a==22 then return true\n    if a==23 then return true\n\
    \    if a==24 then return true\n    if a==25 then return true\n    if a==26 then\
    \ return true\n    if a==27 then return true\n    if a==28 then return true\n\
    \    if a==29 then return true\n    if a==30 then return true\n    if a==31 then\
    \ return true\n    if a==32 then return true\n    if a==33 then return true\n\
    \    if a==34 then return true\n    if a==35 then return true\n    if a==36 then\
    \ return true\n    if a==37 then return true\n    if a==38 then return true\n\
    \    if a==39 then return true\n    if a==40 then return true\n    if a==41 then\
    \ return true\n    if a==42 then return true\n    if a==43 then return true\n\
    \    if a==44 then return true\n    if a==45 then return true\n    if a==46 then\
    \ return true\n    if a==47 then return true\n    if a==48 then return true\n\
    \    if a==49 then return true\n    if a==50 then return true\n    if a==51 then\
    \ return true\n    if a==52 then return true\n    if a==53 then return true\n\
    \    if a==54 then return true\n    if a==55 then return true\n    if a==56 then\
    \ return true\n    if a==57 then return true\n    if a==58 then return true\n\
    \    if a==59 then return true\n    if a==60 then return true\n    if a==61 \n\
    using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2_r2e7qx.jl:20\nin expression starting at /tmp/tmp2_r2e7qx.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        return true\n\
    \    else \n        return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\
    \"\n    Write a function that takes an integer a and returns true \n    if this\
    \ ingeger is a cube of some integer number.\n    Note: you may assume the input\
    \ is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n\
    \    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>>\
    \ iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnl8h_q37.jl:25\nin expression starting at\
    \ /tmp/tmpnl8h_q37.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        return false\n\
    \    if a == 0 \n        return true\n    if a > 0 \n        return iscube(a-1)\
    \ * iscube(a-2)*iscube(a-3)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n\
    Write a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp96prjjf8.jl:27\nin expression starting at\
    \ /tmp/tmp96prjjf8.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    else\
    \ if a==1 then return true\n    else if a==2 then return true\n    else if a==3\
    \ then return true\n    else if a==4 then return true\n    else if a==5 then return\
    \ true\n    else if a==6 then return true\n    else if a==7 then return true\n\
    \    else if a==8 then return true\n    else if a==9 then return true\n    else\
    \ if a==10 then return true\n    else if a==11 then return true\n    else if a==12\
    \ then return true\n    else if a==13 then return true\n    else if a==14 then\
    \ return true\n    else if a==15 then return true\n    else if a==16 then return\
    \ true\n    else if a==17 then return true\n    else if a==18 then return true\n\
    \    else if a==19 then return true\n    else if a==20 then return true\n    else\
    \ if a==21 then return true\n    else if a==22 then return true\n    else if a==23\
    \ then return true\n    else if a==24 then return true\n    else if a==25 then\
    \ return true\n    else if a==26 then return true\n    else if a==27 then return\
    \ true\n    else if a==28 then return true\n    else if a==29 then return true\n\
    \    else if a==30 then return true\n    else if a==31 then return true\n    else\
    \ if a==32 then return true\n    else if a==33 then return true\n    else if a==34\
    \ then return true\n    else if a==35 then return true\n    else if a==36 then\
    \ return true\n    else if a==37 then return true\n    else if a==38 then return\
    \ true\n    else if a==39 then return true\n    else if a==40 then return true\n\
    \    else if a==41 then return true\n    else if a==42 then return true\n    else\
    \ if a==43 then return true\n    else if a==44 then return true\n    else if a==45\
    \ then return true\n    else if a==46 then return true\n    else if a==47 then\
    \ return true\n    else if a==48 then return true\n    else if a==49 then return\
    \ true\n    else if a\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpen0fkwy8.jl:20\nin expression starting at /tmp/tmpen0fkwy8.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        return false\n\
    \    else if a == 0 \n        return true\n    else if a == 1 \n        return\
    \ true\n    else if a == 2 \n        return true\n    else if a == 3 \n      \
    \  return true\n    else if a == 4 \n        return true\n    else if a == 5 \n\
    \        return true\n    else if a == 6 \n        return true\n    else if a\
    \ == 7 \n        return true\n    else if a == 8 \n        return true\n    else\
    \ if a == 9 \n        return true\n    else if a == 10 \n        return true\n\
    \    else if a == 11 \n        return true\n    else if a == 12 \n        return\
    \ true\n    else if a == 13 \n        return true\n    else if a == 14 \n    \
    \    return true\n    else if a == 15 \n        return true\n    else if a ==\
    \ 16 \n        return true\n    else if a == 17 \n        return true\n    else\
    \ if a == 18 \n        return true\n    else if a == 19 \n        return true\n\
    \    else if a == 20 \n        return true\n    else if a == 21 \n        return\
    \ true\n    else if a == 22 \n        return true\n    else if a == 23 \n    \
    \    return true\n    else if a == 24 \n        return true\n    else if a ==\
    \ 25 \n        return true\n    else if a == 26 \n        return true\n    else\
    \ if a == 27 \n        return true\n    else if a == 28 \n        return true\n\
    \    else if a == 29 \n        return true\n    else if a == 30 \n        return\
    \ true\n    else if a == 31 \n        return true\n    else if a == 32 \n    \
    \    return true\n    else if a == 33 \n        return true\n    else if a ==\
    \ 34 \n        return true\n    else if a == 35 \n        return true\n    else\
    \ if a == 36 \n        return true\n    else if a == 37 \n        return true\n\
    \    else if a == 38 \n        return true\n    else if a == 39 \n        return\
    \ true\n    else if a == 40 \n        return true\n    else if a == 41 \n    \
    \    return true\n    else if a == 42 \n        return true\n    else if a ==\
    \ 43 \n        return true\n    else if a == 44 \n        return true\n    else\
    \ if a == 45 \n        return true\n    else if a == 46 \n        return true\n\
    \    else if a == 47 \n        return true\n    else if a == 48 \n        return\
    \ true\n    else if a == 49 \n        return true\n    else if a == 50 \n    \
    \    return true\n    else if a == 51 \n        return true\n    else if a ==\
    \ 52 \n        return true\n    else if a == 53 \n        return true\n    else\
    \ if a == 54\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5wjx142y.jl:22\nin expression starting at\
    \ /tmp/tmp5wjx142y.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        cube=true\n        for i=1:a\n            cube=cube && iscube(i)\n\
    \        end\n        return cube\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    iscube(10)\n</cell>\n<code language=julia-1.5>\niscube(100)\n</cell>\n<code language=julia-1.5>\n\
    iscube(1000)\n</cell>\n<code language=julia-1.5>\niscube(10000)\n</cell>\n<code\
    \ language=julia-1.5>\niscube(100000)\n</cell>\n<code language=julia-1.5>\niscube(1000000)\n\
    </cell>\n<code language=julia-1.5>\niscube(10000000)\n</cell>\n<code language=julia-1.5>\n\
    iscube(100000000)\n</cell>\n<code language=julia-1.5>\niscube(1000000000)\n</cell>\n\
    <code language=julia-1.5>\niscube(10000000000)\n</cell>\n<code language=julia-1.5>\n\
    iscube(100000000000)\n</cell>\n<code language=julia-1.5>\niscube(1000000000000)\n\
    </cell>\n<code language=julia-1.5>\niscube(10000000000000)\n</cell>\n<code language=julia-1.5>\n\
    iscube(100000000000000)\n</cell>\n<code language=julia-1.5>\niscube(1000000000000000)\n\
    </cell>\n<code language=julia-1.5>\niscube(10000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\niscube(100000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    iscube(1000000000000000000)\n</cell>\n<code language=julia-1.5>\niscube(10000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\niscube(100000000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\niscube(1000000000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    iscube(10000000000000000000000)\n</cell>\n<code language=julia-1.5>\niscube(100000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\niscube(1000000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\niscube(10000000000000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\niscube(100000000000000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    iscube(1000000000000000000000000000)\n</cell>\n<code language=julia-1.5>\nis\n\
    using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmmlpvo3r.jl:21\nin expression starting at /tmp/tmpmmlpvo3r.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then true\n    else\
    \ if a==1 \n        then true\n    else if a==2 \n        then true\n    else\
    \ if a==3 \n        then true\n    else if a==4 \n        then true\n    else\
    \ if a==5 \n        then true\n    else if a==6 \n        then true\n    else\
    \ if a==7 \n        then true\n    else if a==8 \n        then true\n    else\
    \ if a==9 \n        then true\n    else if a==10 \n        then true\n    else\
    \ if a==11 \n        then true\n    else if a==12 \n        then true\n    else\
    \ if a==13 \n        then true\n    else if a==14 \n        then true\n    else\
    \ if a==15 \n        then true\n    else if a==16 \n        then true\n    else\
    \ if a==17 \n        then true\n    else if a==18 \n        then true\n    else\
    \ if a==19 \n        then true\n    else if a==20 \n        then true\n    else\
    \ if a==21 \n        then true\n    else if a==22 \n        then true\n    else\
    \ if a==23 \n        then true\n    else if a==24 \n        then true\n    else\
    \ if a==25 \n        then true\n    else if a==26 \n        then true\n    else\
    \ if a==27 \n        then true\n    else if a==28 \n        then true\n    else\
    \ if a==29 \n        then true\n    else if a==30 \n        then true\n    else\
    \ if a==31 \n        then true\n    else if a==32 \n        then true\n    else\
    \ if a==33 \n        then true\n    else if a==34 \n        then true\n    else\
    \ if a==35 \n        then true\n    else if a==36 \n        then true\n    else\
    \ if a==37 \n        then true\n    else if a==38 \n        then true\n    else\
    \ if a==39 \n        then true\n    else if a==40 \n        then true\n    else\
    \ if a==41 \n        then true\n    else if a==42 \n        then true\n    else\
    \ if a==43 \n        then true\n    else if a==44 \n        then true\n    else\
    \ if a==45 \n        then true\n    else \nusing Test\n\n@testset begin\n\ncandidate\
    \ = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t\
    @test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpllh5ncq2.jl:21\nin expression starting at /tmp/tmpllh5ncq2.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        true\n    else\n\
    \        if a==1 \n            true\n        else\n            if a==2 \n    \
    \            true\n            else\n                if a==3 \n              \
    \      true\n                else\n                    if a==4 \n            \
    \            true\n                    else\n                        if a==5 \n\
    \                            true\n                        else\n            \
    \                if a==6 \n                                true\n            \
    \                else\n                                if a==7 \n            \
    \                        true\n                                else\n        \
    \                            if a==8 \n                                      \
    \  true\n                                    else\n                          \
    \              if a==9 \n                                            true\n  \
    \                                      else\n                                \
    \            if a==10 \n                                                true\n\
    \                                            else\n                          \
    \                      if a==11 \n                                           \
    \         true\n                                                else\n       \
    \                                             if a==12 \n                    \
    \                                    true\n                                  \
    \                  else\n                                                    \
    \    if a==13 \n                                                            true\n\
    \                                                        else\n              \
    \                                              if a==14 \n                   \
    \                                             true\n                         \
    \                                   else\n                                   \
    \                             if a==15 \n                                    \
    \                                true\n                                      \
    \                          else\n                                            \
    \                        if a==16 \n                                         \
    \                               true\n                                       \
    \                             else\n                                         \
    \               if a==17 \n                                                  \
    \          true\n                                                        else\n\
    \                                                            if a==18 \n     \
    \                                                           true\n           \
    \                                                 else\n                     \
    \                                           if a==19 \n                      \
    \                                              true\n                        \
    \                                        else\n                              \
    \                                      if a==20 \n                           \
    \                                             true\n                         \
    \                                           else\n                           \
    \                             if a==21 \n                                    \
    \                        true\n                                              \
    \          else\n                                                            if\
    \ a==22 \n                                                                true\n\
    \                                                            else\n          \
    \                                                      if a==23 \n           \
    \                                                         true\n             \
    \                                                   else\n                   \
    \                                                 if a==24 \n                \
    \                                                        true\n              \
    \                                                      else\n                \
    \                                        if a==25 \n                         \
    \                                   true\n                                   \
    \                     else\n                                                 \
    \           if a==26 \n                                                      \
    \          true\n                                                            else\n\
    \                                                                if a==27 \n \
    \                                                                   true\n   \
    \                                                             else\n         \
    \                                                           if a==28 \n      \
    \                                                                  true\n    \
    \                                                                else\n      \
    \                                                  if a==29 \n               \
    \                                             true\n                         \
    \                               else\n                                       \
    \                     if a==30 \n                                            \
    \                    true\n                                                  \
    \          else\n                                                            \
    \    if a==31 \n                                                             \
    \       true\n                                                               \
    \ else\n                                                                    if\
    \ a==32 \n                                                                   \
    \     true\n                                                                 \
    \   else\n                                                        if a==33 \n\
    \                                                            true\n          \
    \                                              else\n                        \
    \                                    if a==34 \n                             \
    \                                   true\n                                   \
    \                         else\n                                             \
    \                   if a==35 \n                                              \
    \                      true\n                                                \
    \                else\n                                                      \
    \              if a==36 \n                                                   \
    \                     true\n                                                 \
    \                   else\n                                                   \
    \     if a==37 \n                                                            true\n\
    \                                                        else\n              \
    \                                              if a==38 \n                   \
    \                                             true\n                         \
    \                                   else\n                                   \
    \                             if a==39 \n                                    \
    \                                true\n                                      \
    \                          else\n                                            \
    \                        if a==40 \n                                         \
    \                               true\n                                       \
    \                             else\nusing Test\n\n@testset begin\n\ncandidate\
    \ = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t\
    @test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpe3zwgokp.jl:140\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpe3zwgokp.jl:1\n\
    in expression starting at /tmp/tmpe3zwgokp.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        error(\"iscube:\
    \ input must be positive\")\n    else if a == 0 \n        true\n    else if a\
    \ == 1 \n        true\n    else if a == 2 \n        true\n    else if a == 3 \n\
    \        true\n    else if a == 4 \n        true\n    else if a == 5 \n      \
    \  true\n    else if a == 6 \n        true\n    else if a == 7 \n        true\n\
    \    else if a == 8 \n        true\n    else if a == 9 \n        true\n    else\
    \ if a == 10 \n        true\n    else if a == 11 \n        true\n    else if a\
    \ == 12 \n        true\n    else if a == 13 \n        true\n    else if a == 14\
    \ \n        true\n    else if a == 15 \n        true\n    else if a == 16 \n \
    \       true\n    else if a == 17 \n        true\n    else if a == 18 \n     \
    \   true\n    else if a == 19 \n        true\n    else if a == 20 \n        true\n\
    \    else if a == 21 \n        true\n    else if a == 22 \n        true\n    else\
    \ if a == 23 \n        true\n    else if a == 24 \n        true\n    else if a\
    \ == 25 \n        true\n    else if a == 26 \n        true\n    else if a == 27\
    \ \n        true\n    else if a == 28 \n        true\n    else if a == 29 \n \
    \       true\n    else if a == 30 \n        true\n    else if a == 31 \n     \
    \   true\n    else if a == 32 \n        true\n    else if a == 33 \n        true\n\
    \    else if a == 34 \n        true\n    else if a == 35 \n        true\n    else\
    \ if a == 36 \n        true\n    else if a == 37 \n        true\n    else if a\
    \ == 38 \n        true\n    else if a == 39 \n        true\n    else if a == 40\
    \ \n        true\n    else if a == 41 \n        true\n    else if a == 42 \n \
    \       true\n    else if a == 43 \n        true\n    else if a == 44 \n     \
    \   true\n    else if a == 45 \n        true\n    else if a == 46 \n        true\n\
    \    else if a == 47 \n        true\n    else if a == 48 \n        true\n    else\
    \ if a == 49 \n        true\n    else if a == 50 \n        true\n    else if a\
    \ == 51 \n        true\n    else if a == 52 \n        true\n    else if a == 53\
    \ \n        \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprui6s782.jl:22\nin expression starting at\
    \ /tmp/tmprui6s782.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then true\n    \
    \    else false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n  \
    \  Write a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk6y1sk6h.jl:21\nin expression starting at /tmp/tmpk6y1sk6h.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        if a==1 \n            then return true\n        else \n  \
    \          if a==2 \n                then return true\n            else \n   \
    \             if a==3 \n                    then return true\n               \
    \ else \n                    if a==4 \n                        then return true\n\
    \                    else \n                        if a==5 \n               \
    \             then return true\n                        else \n              \
    \              if a==6 \n                                then return true\n  \
    \                          else \n                                if a==7 \n \
    \                                   then return true\n                       \
    \         else \n                                    if a==8 \n              \
    \                          then return true\n                                \
    \    else \n                                        if a==9 \n               \
    \                             then return true\n                             \
    \           else \n                                            if a==10 \n   \
    \                                             then return true\n             \
    \                               else \n                                      \
    \          if a==11 \n                                                    then\
    \ return true\n                                                else \n       \
    \                                             if a==12 \n                    \
    \                                    then return true\n                      \
    \                              else \n                                       \
    \                 if a==13 \n                                                \
    \            then return true\n                                              \
    \          else \n                                                           \
    \ if a==14 \n                                                                then\
    \ return true\n                                                            else\
    \ \n                                                                if a==15 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==16 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==17 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==18 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==19 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==20 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==21 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==22 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==23 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==24 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==25 \n                                              \
    \                      then return true\n                                    \
    \                                else \n                                     \
    \                   if a==26 \n                                              \
    \              then return true\n                                            \
    \                else \n                                                     \
    \           if a==27 \n                                                      \
    \              then return true\n                                            \
    \                        else \n                                             \
    \           if a==28 \n                                                      \
    \      then return true\n                                                    \
    \        else \n                                                             \
    \   if a==29 \n                                                              \
    \      then return true\n                                                    \
    \                else \n                                                     \
    \   if a==30 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==31 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==32 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==33 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==34 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==35 \n                      \
    \                                              then return true\n\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2uplh0s0.jl:21\nin expression starting at /tmp/tmp2uplh0s0.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        if a==1 \n            then return true\n        else \n  \
    \          if a==2 \n                then return true\n            else \n   \
    \             if a==3 \n                    then return true\n               \
    \ else \n                    if a==4 \n                        then return true\n\
    \                    else \n                        if a==5 \n               \
    \             then return true\n                        else \n              \
    \              if a==6 \n                                then return true\n  \
    \                          else \n                                if a==7 \n \
    \                                   then return true\n                       \
    \         else \n                                    if a==8 \n              \
    \                          then return true\n                                \
    \    else \n                                        if a==9 \n               \
    \                             then return true\n                             \
    \           else \n                                            if a==10 \n   \
    \                                             then return true\n             \
    \                               else \n                                      \
    \          if a==11 \n                                                    then\
    \ return true\n                                                else \n       \
    \                                             if a==12 \n                    \
    \                                    then return true\n                      \
    \                              else \n                                       \
    \                 if a==13 \n                                                \
    \            then return true\n                                              \
    \          else \n                                                           \
    \ if a==14 \n                                                                then\
    \ return true\n                                                            else\
    \ \n                                                                if a==15 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==16 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==17 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==18 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==19 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==20 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==21 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==22 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==23 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==24 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==25 \n                                              \
    \                      then return true\n                                    \
    \                                else \n                                     \
    \                   if a==26 \n                                              \
    \              then return true\n                                            \
    \                else \n                                                     \
    \           if a==27 \n                                                      \
    \              then return true\n                                            \
    \                        else \n                                             \
    \           if a==28 \n                                                      \
    \      then return true\n                                                    \
    \        else \n                                                             \
    \   if a==29 \n                                                              \
    \      then return true\n                                                    \
    \                else \n                                                     \
    \   if a==30 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==31 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==32 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==33 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==34 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==35 \n                      \
    \                                              then return true\n\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2uplh0s0.jl:21\nin expression starting at /tmp/tmp2uplh0s0.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 return true\n    else if a==1\
    \ return true\n    else if a==2 return true\n    else if a==3 return true\n  \
    \  else if a==4 return true\n    else if a==5 return true\n    else if a==6 return\
    \ true\n    else if a==7 return true\n    else if a==8 return true\n    else if\
    \ a==9 return true\n    else return false\nend\n</code>\n<|/ a dscore=2 |>\n<|\
    \ a dscore=2 |>\n<code>\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq3lmsgh1.jl:21\nin expression starting at\
    \ /tmp/tmpq3lmsgh1.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 return true\n    if a==1 return\
    \ true\n    if a==2 return true\n    if a==3 return true\n    if a==4 return true\n\
    \    if a==5 return true\n    if a==6 return true\n    if a==7 return true\n \
    \   if a==8 return true\n    if a==9 return true\n    if a==10 return true\n \
    \   if a==11 return true\n    if a==12 return true\n    if a==13 return true\n\
    \    if a==14 return true\n    if a==15 return true\n    if a==16 return true\n\
    \    if a==17 return true\n    if a==18 return true\n    if a==19 return true\n\
    \    if a==20 return true\n    if a==21 return true\n    if a==22 return true\n\
    \    if a==23 return true\n    if a==24 return true\n    if a==25 return true\n\
    \    if a==26 return true\n    if a==27 return true\n    if a==28 return true\n\
    \    if a==29 return true\n    if a==30 return true\n    if a==31 return true\n\
    \    if a==32 return true\n    if a==33 return true\n    if a==34 return true\n\
    \    if a==35 return true\n    if a==36 return true\n    if a==37 return true\n\
    \    if a==38 return true\n    if a==39 return true\n    if a==40 return true\n\
    \    if a==41 return true\n    if a==42 return true\n    if a==43 return true\n\
    \    if a==44 return true\n    if a==45 return true\n    if a==46 return true\n\
    \    if a==47 return true\n    if a==48 return true\n    if a==49 return true\n\
    \    if a==50 return true\n    if a==51 return true\n    if a==52 return true\n\
    \    if a==53 return true\n    if a==54 return true\n    if a==55 return true\n\
    \    if a==56 return true\n    if a==57 return true\n    if a==58 return true\n\
    \    if a==59 return true\n    if a==60 return true\n    if a==61 return true\n\
    \    if a==62 return true\n    if a==63 return true\n    if a==64 return true\n\
    \    if a==65 return true\n    if a==66 return true\n    if a==67 return true\n\
    \    if a==68 return true\n    if a==69 return true\n    if a==70 return true\n\
    \    if a==71 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsn8lb1bx.jl:1\nin expression starting at /tmp/tmpsn8lb1bx.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        then return true\n\
    \    else if a%1 == 0 \n        then return false\n    else \n        return iscube(a/1)\n\
    end\n</code>\n<|/ a tags=julia,recursion |>\n<| c |>\nI like the `iscube` function\
    \ but I think it would be better to return `true` instead of `false` at the end.\
    \ `iscube` should return `true` if the number is a cube and `false` otherwise.\n\
    <|/ c |>\n<| c |>\nI agree, that would be better. Thanks for the suggestion.\n\
    <|/ c |>\n<| a dscore=2 |>\nI like using an if statement to test if a number is\
    \ even or odd. \n<code>\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsbgo1o3p.jl:21\nin expression starting at /tmp/tmpsbgo1o3p.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0\n        error(\"iscube expects\
    \ a positive integer\")\n    else if a == 0\n        true\n    else\n        a\
    \ == cuberange(a)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n\
    \    Write a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz2c348p7.jl:22\nin expression starting at\
    \ /tmp/tmpz2c348p7.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    else\
    \ if a==1 then return true\n    else if a==2 then return true\n    else if a==3\
    \ then return true\n    else if a==4 then return true\n    else if a==5 then return\
    \ true\n    else if a==6 then return true\n    else if a==7 then return true\n\
    \    else if a==8 then return true\n    else if a==9 then return true\n    else\
    \ if a==10 then return true\n    else if a==11 then return true\n    else if a==12\
    \ then return true\n    else if a==13 then return true\n    else if a==14 then\
    \ return true\n    else if a==15 then return true\n    else if a==16 then return\
    \ true\n    else if a==17 then return true\n    else if a==18 then return true\n\
    \    else if a==19 then return true\n    else if a==20 then return true\n    else\
    \ if a==21 then return true\n    else if a==22 then return true\n    else if a==23\
    \ then return true\n    else if a==24 then return true\n    else if a==25 then\
    \ return true\n    else if a==26 then return true\n    else if a==27 then return\
    \ true\n    else if a==28 then return true\n    else if a==29 then return true\n\
    \    else if a==30 then return true\n    else if a==31 then return true\n    else\
    \ if a==32 then return true\n    else if a==33 then return true\n    else if a==34\
    \ then return true\n    else if a==35 then return true\n    else if a==36 then\
    \ return true\n    else if a==37 then return true\n    else if a==38 then return\
    \ true\n    else if a==39 then return true\n    else if a==40 then return true\n\
    \    else if a==41 then return true\n    else if a==42 then return true\n    else\
    \ if a==43 then return true\n    else if a==44 then return true\n    else if a==45\
    \ then return true\n    else if a==46 then return true\n    else if a==47 then\
    \ return true\n    else if a==48 then return true\n    else if a==49 then return\
    \ true\n    else if a\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpen0fkwy8.jl:20\nin expression starting at /tmp/tmpen0fkwy8.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        return true\n  \
    \  else \n        return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\
    \nWrite a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1jqw1gk7.jl:25\nin expression starting at\
    \ /tmp/tmp1jqw1gk7.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        return true\n\
    \    else \n        return iscube(a-1) or iscube(a*a) or iscube(a*a*a)\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert iscube(2) == true\n@assert iscube(-1)\
    \ == true\n@assert iscube(0) == true\n@assert iscube(64) == true\n@assert iscube(180)\
    \ == false\n</cell>\n<text>\nProblem 7: Write a function that takes an integer\
    \ a and returns true \n    if this ingeger is a cube of some integer number.\n\
    \    Note: you may assume the input is always valid.\n    Examples:\n    >>> iscube(1)\n\
    \    true\n    >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>>\
    \ iscube(64)\n    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n   \
    \ false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"if\" at /tmp/tmpp4jt40jb.jl:20 expected \"\
    end\", got \"or\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpp4jt40jb.jl:23\n\
    in expression starting at /tmp/tmpp4jt40jb.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n    then return true\n \
    \   else return false\n    end\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\
    \n    Write a function that takes an integer a and returns true \n    if this\
    \ ingeger is a cube of some integer number.\n    Note: you may assume the input\
    \ is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n\
    \    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>>\
    \ iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpse4vunyg.jl:21\nin expression starting at /tmp/tmpse4vunyg.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 return true\n    if a==1 return\
    \ true\n    if a==2 return true\n    if a==3 return true\n    if a==4 return true\n\
    \    if a==5 return true\n    if a==6 return true\n    if a==7 return true\n \
    \   if a==8 return true\n    if a==9 return true\n    if a==10 return true\n \
    \   if a==11 return true\n    if a==12 return true\n    if a==13 return true\n\
    \    if a==14 return true\n    if a==15 return true\n    if a==16 return true\n\
    \    if a==17 return true\n    if a==18 return true\n    if a==19 return true\n\
    \    if a==20 return true\n    if a==21 return true\n    if a==22 return true\n\
    \    if a==23 return true\n    if a==24 return true\n    if a==25 return true\n\
    \    if a==26 return true\n    if a==27 return true\n    if a==28 return true\n\
    \    if a==29 return true\n    if a==30 return true\n    if a==31 return true\n\
    \    if a==32 return true\n    if a==33 return true\n    if a==34 return true\n\
    \    if a==35 return true\n    if a==36 return true\n    if a==37 return true\n\
    \    if a==38 return true\n    if a==39 return true\n    if a==40 return true\n\
    \    if a==41 return true\n    if a==42 return true\n    if a==43 return true\n\
    \    if a==44 return true\n    if a==45 return true\n    if a==46 return true\n\
    \    if a==47 return true\n    if a==48 return true\n    if a==49 return true\n\
    \    if a==50 return true\n    if a==51 return true\n    if a==52 return true\n\
    \    if a==53 return true\n    if a==54 return true\n    if a==55 return true\n\
    \    if a==56 return true\n    if a==57 return true\n    if a==58 return true\n\
    \    if a==59 return true\n    if a==60 return true\n    if a==61 return true\n\
    \    if a==62 return true\n    if a==63 return true\n    if a==64 return true\n\
    \    if a==65 return true\n    if a==66 return true\n    if a==67 return true\n\
    \    if a==68 return true\n    if a==69 return true\n    if a==70 return true\n\
    \    if a==71 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsn8lb1bx.jl:1\nin expression starting at /tmp/tmpsn8lb1bx.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        cube::Int64 = 1\n        for n in (-3,-2,-1,1,2,3) \n    \
    \        if a^n==cube \n                then return false\n            else\n\
    \                cube = cube * n\n        end\n        return true\n    end\n\
    end\n</cell>\n<code language=julia-1.3>\niscube(1)\n</cell>\n<code language=julia-1.3>\n\
    iscube(2)\n</cell>\n<code language=julia-1.3>\niscube(-1)\n</cell>\n<code language=julia-1.3>\n\
    iscube(64)\n</cell>\n<code language=julia-1.3>\niscube(0)\n</cell>\n<code language=julia-1.3>\n\
    iscube(180)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an integer\
    \ a and returns true \n    if this ingeger is a cube of some integer number.\n\
    \    Note: you may assume the input is always valid.\n    Examples:\n    >>> iscube(1)\n\
    \    true\n    >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>>\
    \ iscube(64)\n    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n   \
    \ false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfy9oxyyl.jl:21\nin expression starting at /tmp/tmpfy9oxyyl.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0\n        error(\"iscube:\
    \ input must be positive\")\n    else if a == 0\n        true\n    else if a ==\
    \ 1\n        true\n    else if a == 2\n        true\n    else if a == 3\n    \
    \    true\n    else if a == 4\n        true\n    else if a == 5\n        true\n\
    \    else if a == 6\n        true\n    else if a == 7\n        true\n    else\
    \ if a == 8\n        true\n    else if a == 9\n        true\n    else if a ==\
    \ 10\n        true\n    else if a == 11\n        true\n    else if a == 12\n \
    \       true\n    else if a == 13\n        true\n    else if a == 14\n       \
    \ true\n    else if a == 15\n        true\n    else if a == 16\n        true\n\
    \    else if a == 17\n        true\n    else if a == 18\n        true\n    else\
    \ if a == 19\n        true\n    else if a == 20\n        true\n    else if a ==\
    \ 21\n        true\n    else if a == 22\n        true\n    else if a == 23\n \
    \       true\n    else if a == 24\n        true\n    else if a == 25\n       \
    \ true\n    else if a == 26\n        true\n    else if a == 27\n        true\n\
    \    else if a == 28\n        true\n    else if a == 29\n        true\n    else\
    \ if a == 30\n        true\n    else if a == 31\n        true\n    else if a ==\
    \ 32\n        true\n    else if a == 33\n        true\n    else if a == 34\n \
    \       true\n    else if a == 35\n        true\n    else if a == 36\n       \
    \ true\n    else if a == 37\n        true\n    else if a == 38\n        true\n\
    \    else if a == 39\n        true\n    else if a == 40\n        true\n    else\
    \ if a == 41\n        true\n    else if a == 42\n        true\n    else if a ==\
    \ 43\n        true\n    else if a == 44\n        true\n    else if a == 45\n \
    \       true\n    else if a == 46\n        true\n    else if a == 47\n       \
    \ true\n    else if a == 48\n        true\n    else if a == 49\n        true\n\
    \    else if a == 50\n        true\n    else if a == 51\n        true\n    else\
    \ if a == 52\n        true\n    else if a == 53\n        true\n    else if a ==\
    \ 54\n        true\n    else \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkdin0ebf.jl:22\nin expression starting at\
    \ /tmp/tmpkdin0ebf.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 return true\n    if a==1 return\
    \ true\n    if a==2 return true\n    if a==3 return true\n    if a==4 return true\n\
    \    if a==5 return true\n    if a==6 return true\n    if a==7 return true\n \
    \   if a==8 return true\n    if a==9 return true\n    return false\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\nWrite a function that takes an integer a and\
    \ returns true \n    if this ingeger is a cube of some integer number.\n    Note:\
    \ you may assume the input is always valid.\n    Examples:\n    >>> iscube(1)\n\
    \    true\n    >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>>\
    \ iscube(64)\n    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n   \
    \ false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl1mjrs3v.jl:32\nin expression starting at\
    \ /tmp/tmpl1mjrs3v.jl:32\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then true\n    \
    \    else false\n    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\nWrite\
    \ a function that takes an integer a and returns true \n    if this ingeger is\
    \ a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgmxi6y8g.jl:21\nin expression starting at /tmp/tmpgmxi6y8g.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        return true\n  \
    \  else if a==1 \n        return true\n    else if a==2 \n        return true\n\
    \    else if a==3 \n        return true\n    else if a==4 \n        return true\n\
    \    else if a==5 \n        return true\n    else if a==6 \n        return true\n\
    \    else if a==7 \n        return true\n    else if a==8 \n        return true\n\
    \    else if a==9 \n        return true\n    else if a==10 \n        return true\n\
    \    else if a==11 \n        return true\n    else if a==12 \n        return true\n\
    \    else if a==13 \n        return true\n    else if a==14 \n        return true\n\
    \    else if a==15 \n        return true\n    else if a==16 \n        return true\n\
    \    else if a==17 \n        return true\n    else if a==18 \n        return true\n\
    \    else if a==19 \n        return true\n    else if a==20 \n        return true\n\
    \    else if a==21 \n        return true\n    else if a==22 \n        return true\n\
    \    else if a==23 \n        return true\n    else if a==24 \n        return true\n\
    \    else if a==25 \n        return true\n    else if a==26 \n        return true\n\
    \    else if a==27 \n        return true\n    else if a==28 \n        return true\n\
    \    else if a==29 \n        return true\n    else if a==30 \n        return true\n\
    \    else if a==31 \n        return true\n    else if a==32 \n        return true\n\
    \    else if a==33 \n        return true\n    else if a==34 \n        return true\n\
    \    else if a==35 \n        return true\n    else if a==36 \n        return true\n\
    \    else if a==37 \n        return true\n    else if a==38 \n        return true\n\
    \    else if a==39 \n        return true\n    else if a==40 \n        return true\n\
    \    else if a==41 \n        return true\n    else if a==42 \n        return true\n\
    \    else if a==43 \n        return true\n    else if a==44 \n        return true\n\
    \    else if a==45 \n        return true\n    else if a==46 \n        return true\n\
    \    else if a==47 \n        return true\n    else if a==48 \n        return true\n\
    \    else if a==49 \n        return true\n    else if a\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp46ng1y2s.jl:22\nin expression starting at\
    \ /tmp/tmp46ng1y2s.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    else\
    \ if a==1 then return true\n    else if a==2 then return true\n    else if a==3\
    \ then return true\n    else if a==4 then return true\n    else if a==5 then return\
    \ true\n    else if a==6 then return true\n    else if a==7 then return true\n\
    \    else if a==8 then return true\n    else if a==9 then return true\n    else\
    \ if a==10 then return true\n    else if a==11 then return true\n    else if a==12\
    \ then return true\n    else if a==13 then return true\n    else if a==14 then\
    \ return true\n    else if a==15 then return true\n    else if a==16 then return\
    \ true\n    else if a==17 then return true\n    else if a==18 then return true\n\
    \    else if a==19 then return true\n    else if a==20 then return true\n    else\
    \ if a==21 then return true\n    else if a==22 then return true\n    else if a==23\
    \ then return true\n    else if a==24 then return true\n    else if a==25 then\
    \ return true\n    else if a==26 then return true\n    else if a==27 then return\
    \ true\n    else if a==28 then return true\n    else if a==29 then return true\n\
    \    else if a==30 then return true\n    else if a==31 then return true\n    else\
    \ if a==32 then return true\n    else if a==33 then return true\n    else if a==34\
    \ then return true\n    else if a==35 then return true\n    else if a==36 then\
    \ return true\n    else if a==37 then return true\n    else if a==38 then return\
    \ true\n    else if a==39 then return true\n    else if a==40 then return true\n\
    \    else if a==41 then return true\n    else if a==42 then return true\n    else\
    \ if a==43 then return true\n    else if a==44 then return true\n    else if a==45\
    \ then return true\n    else if a==46 then return true\n    else if a==47 then\
    \ return true\n    else if a==48 then return true\n    else if a==49 then return\
    \ true\n    else if a\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpen0fkwy8.jl:20\nin expression starting at /tmp/tmpen0fkwy8.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    else\
    \ if a==1 then return true\n    else if a==2 then return true\n    else if a==3\
    \ then return true\n    else if a==4 then return true\n    else if a==5 then return\
    \ true\n    else if a==6 then return true\n    else if a==7 then return true\n\
    \    else if a==8 then return true\n    else if a==9 then return true\n    else\
    \ if a==10 then return true\n    else if a==11 then return true\n    else if a==12\
    \ then return true\n    else if a==13 then return true\n    else if a==14 then\
    \ return true\n    else if a==15 then return true\n    else if a==16 then return\
    \ true\n    else if a==17 then return true\n    else if a==18 then return true\n\
    \    else if a==19 then return true\n    else if a==20 then return true\n    else\
    \ if a==21 then return true\n    else if a==22 then return true\n    else if a==23\
    \ then return true\n    else if a==24 then return true\n    else if a==25 then\
    \ return true\n    else if a==26 then return true\n    else if a==27 then return\
    \ true\n    else if a==28 then return true\n    else if a==29 then return true\n\
    \    else if a==30 then return true\n    else if a==31 then return true\n    else\
    \ if a==32 then return true\n    else if a==33 then return true\n    else if a==34\
    \ then return true\n    else if a==35 then return true\n    else if a==36 then\
    \ return true\n    else if a==37 then return true\n    else if a==38 then return\
    \ true\n    else if a==39 then return true\n    else if a==40 then return true\n\
    \    else if a==41 then return true\n    else if a==42 then return true\n    else\
    \ if a==43 then return true\n    else if a==44 then return true\n    else if a==45\
    \ then return true\n    else if a==46 then return true\n    else if a==47 then\
    \ return true\n    else if a==48 then return true\n    else if a==49 then return\
    \ true\n    else if a\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpen0fkwy8.jl:20\nin expression starting at /tmp/tmpen0fkwy8.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    else\
    \ if a==1 then return true\n    else if a==2 then return true\n    else if a==3\
    \ then return true\n    else if a==4 then return true\n    else if a==5 then return\
    \ true\n    else if a==6 then return true\n    else if a==7 then return true\n\
    \    else if a==8 then return true\n    else if a==9 then return true\n    else\
    \ if a==10 then return true\n    else if a==11 then return true\n    else if a==12\
    \ then return true\n    else if a==13 then return true\n    else if a==14 then\
    \ return true\n    else if a==15 then return true\n    else if a==16 then return\
    \ true\n    else if a==17 then return true\n    else if a==18 then return true\n\
    \    else if a==19 then return true\n    else if a==20 then return true\n    else\
    \ if a==21 then return true\n    else if a==22 then return true\n    else if a==23\
    \ then return true\n    else if a==24 then return true\n    else if a==25 then\
    \ return true\n    else if a==26 then return true\n    else if a==27 then return\
    \ true\n    else if a==28 then return true\n    else if a==29 then return true\n\
    \    else if a==30 then return true\n    else if a==31 then return true\n    else\
    \ if a==32 then return true\n    else if a==33 then return true\n    else if a==34\
    \ then return true\n    else if a==35 then return true\n    else if a==36 then\
    \ return true\n    else if a==37 then return true\n    else if a==38 then return\
    \ true\n    else if a==39 then return true\n    else if a==40 then return true\n\
    \    else if a==41 then return true\n    else if a==42 then return true\n    else\
    \ if a==43 then return true\n    else if a==44 then return true\n    else if a==45\
    \ then return true\n    else if a==46 then return true\n    else if a==47 then\
    \ return true\n    else if a==48 then return true\n    else if a==49 then return\
    \ true\n    else if a\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpen0fkwy8.jl:20\nin expression starting at /tmp/tmpen0fkwy8.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n    then return true\n \
    \   else return false\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    Write\
    \ a function that takes an integer a and returns true \n    if this ingeger is\
    \ a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcwf1zdxs.jl:21\nin expression starting at /tmp/tmpcwf1zdxs.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 return true\n    else if a==1\
    \ return true\n    else if a==2 return true\n    else if a==3 return true\n  \
    \  else if a==4 return true\n    else if a==5 return true\n    else if a==6 return\
    \ true\n    else if a==7 return true\n    else if a==8 return true\n    else if\
    \ a==9 return true\n    else return false\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nWrite a function that takes an integer a and returns true \n    if this\
    \ ingeger is a cube of some integer number.\n    Note: you may assume the input\
    \ is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n\
    \    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>>\
    \ iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpudux3_mb.jl:21\nin expression starting at\
    \ /tmp/tmpudux3_mb.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        if a==1 \n            then return true\n        else \n  \
    \          if a==2 \n                then return true\n            else \n   \
    \             if a==3 \n                    then return true\n               \
    \ else \n                    if a==4 \n                        then return true\n\
    \                    else \n                        if a==5 \n               \
    \             then return true\n                        else \n              \
    \              if a==6 \n                                then return true\n  \
    \                          else \n                                if a==7 \n \
    \                                   then return true\n                       \
    \         else \n                                    if a==8 \n              \
    \                          then return true\n                                \
    \    else \n                                        if a==9 \n               \
    \                             then return true\n                             \
    \           else \n                                            if a==10 \n   \
    \                                             then return true\n             \
    \                               else \n                                      \
    \          if a==11 \n                                                    then\
    \ return true\n                                                else \n       \
    \                                             if a==12 \n                    \
    \                                    then return true\n                      \
    \                              else \n                                       \
    \                 if a==13 \n                                                \
    \            then return true\n                                              \
    \          else \n                                                           \
    \ if a==14 \n                                                                then\
    \ return true\n                                                            else\
    \ \n                                                                if a==15 \n\
    \                                                                    then return\
    \ true\n                                                                else \n\
    \                                                                    if a==16\
    \ \n                                                                        then\
    \ return true\n                                                              \
    \      else \n                                                        if a==17\
    \ \n                                                            then return true\n\
    \                                                        else \n             \
    \                                               if a==18 \n                  \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==19 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==20 \n                      \
    \                                      then return true\n                    \
    \                                    else \n                                 \
    \                           if a==21 \n                                      \
    \                          then return true\n                                \
    \                            else \n                                         \
    \                       if a==22 \n                                          \
    \                          then return true\n                                \
    \                                    else \n                                 \
    \                       if a==23 \n                                          \
    \                  then return true\n                                        \
    \                else \n                                                     \
    \       if a==24 \n                                                          \
    \      then return true\n                                                    \
    \        else \n                                                             \
    \   if a==25 \n                                                              \
    \      then return true\n                                                    \
    \                else \n                                                     \
    \   if a==26 \n                                                            then\
    \ return true\n                                                        else \n\
    \                                                            if a==27 \n     \
    \                                                           then return true\n\
    \                                                            else \n         \
    \                                                       if a==28 \n          \
    \                                                          then return true\n\
    \                                                                    else \n \
    \                                                       if a==29 \n          \
    \                                                  then return true\n        \
    \                                                else \n                     \
    \                                       if a==30 \n                          \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==31 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==32 \n                              \
    \                              then return true\n                            \
    \                            else \n                                         \
    \                   if a==33 \n                                              \
    \                  then return true\n                                        \
    \                    else \n                                                 \
    \               if a==34 \n                                                  \
    \                  then return true\n                                        \
    \                            else \n                                         \
    \               if a==35 \n                                                  \
    \          then return true\n                                                \
    \        else \n                                                            if\
    \ \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyxkhf1ef.jl:21\nin expression starting at /tmp/tmpyxkhf1ef.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        then true\n  \
    \      else false\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\nWrite a function\
    \ that takes an integer a and returns true \n    if this ingeger is a cube of\
    \ some integer number.\n    Note: you may assume the input is always valid.\n\
    \    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n  \
    \  >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy9zpz0f7.jl:21\nin expression starting at /tmp/tmpy9zpz0f7.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    if a==1\
    \ then return true\n    if a==2 then return true\n    if a==3 then return true\n\
    \    if a==4 then return true\n    if a==5 then return true\n    if a==6 then\
    \ return true\n    if a==7 then return true\n    if a==8 then return true\n  \
    \  if a==9 then return true\n    if a==10 then return true\n    if a==11 then\
    \ return true\n    if a==12 then return true\n    if a==13 then return true\n\
    \    if a==14 then return true\n    if a==15 then return true\n    if a==16 then\
    \ return true\n    if a==17 then return true\n    if a==18 then return true\n\
    \    if a==19 then return true\n    if a==20 then return true\n    if a==21 then\
    \ return true\n    if a==22 then return true\n    if a==23 then return true\n\
    \    if a==24 then return true\n    if a==25 then return true\n    if a==26 then\
    \ return true\n    if a==27 then return true\n    if a==28 then return true\n\
    \    if a==29 then return true\n    if a==30 then return true\n    if a==31 then\
    \ return true\n    if a==32 then return true\n    if a==33 then return true\n\
    \    if a==34 then return true\n    if a==35 then return true\n    if a==36 then\
    \ return true\n    if a==37 then return true\n    if a==38 then return true\n\
    \    if a==39 then return true\n    if a==40 then return true\n    if a==41 then\
    \ return true\n    if a==42 then return true\n    if a==43 then return true\n\
    \    if a==44 then return true\n    if a==45 then return true\n    if a==46 then\
    \ return true\n    if a==47 then return true\n    if a==48 then return true\n\
    \    if a==49 then return true\n    if a==50 then return true\n    if a==51 then\
    \ return true\n    if a==52 then return true\n    if a==53 then return true\n\
    \    if a==54 then return true\n    if a==55 then return true\n    if a==56 then\
    \ return true\n    if a==57 then return true\n    if a==58 then return true\n\
    \    if a==59 then return true\n    if a==60 then return true\n    if a==61 \n\
    using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2_r2e7qx.jl:20\nin expression starting at /tmp/tmp2_r2e7qx.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    if a==1\
    \ then return true\n    if a==2 then return true\n    if a==3 then return true\n\
    \    if a==4 then return true\n    if a==5 then return true\n    if a==6 then\
    \ return true\n    if a==7 then return true\n    if a==8 then return true\n  \
    \  if a==9 then return true\n    if a==10 then return true\n    if a==11 then\
    \ return true\n    if a==12 then return true\n    if a==13 then return true\n\
    \    if a==14 then return true\n    if a==15 then return true\n    if a==16 then\
    \ return true\n    if a==17 then return true\n    if a==18 then return true\n\
    \    if a==19 then return true\n    if a==20 then return true\n    if a==21 then\
    \ return true\n    if a==22 then return true\n    if a==23 then return true\n\
    \    if a==24 then return true\n    if a==25 then return true\n    if a==26 then\
    \ return true\n    if a==27 then return true\n    if a==28 then return true\n\
    \    if a==29 then return true\n    if a==30 then return true\n    if a==31 then\
    \ return true\n    if a==32 then return true\n    if a==33 then return true\n\
    \    if a==34 then return true\n    if a==35 then return true\n    if a==36 then\
    \ return true\n    if a==37 then return true\n    if a==38 then return true\n\
    \    if a==39 then return true\n    if a==40 then return true\n    if a==41 then\
    \ return true\n    if a==42 then return true\n    if a==43 then return true\n\
    \    if a==44 then return true\n    if a==45 then return true\n    if a==46 then\
    \ return true\n    if a==47 then return true\n    if a==48 then return true\n\
    \    if a==49 then return true\n    if a==50 then return true\n    if a==51 then\
    \ return true\n    if a==52 then return true\n    if a==53 then return true\n\
    \    if a==54 then return true\n    if a==55 then return true\n    if a==56 then\
    \ return true\n    if a==57 then return true\n    if a==58 then return true\n\
    \    if a==59 then return true\n    if a==60 then return true\n    if a==61 \n\
    using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2_r2e7qx.jl:20\nin expression starting at /tmp/tmp2_r2e7qx.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 return true\n    else if a==1\
    \ return true\n    else if a==2 return true\n    else if a==3 return true\n  \
    \  else if a==4 return true\n    else if a==5 return true\n    else if a==6 return\
    \ true\n    else if a==7 return true\n    else if a==8 return true\n    else if\
    \ a==9 return true\n    else if a==10 return true\n    else if a==11 return true\n\
    \    else if a==12 return true\n    else if a==13 return true\n    else if a==14\
    \ return true\n    else if a==15 return true\n    else if a==16 return true\n\
    \    else if a==17 return true\n    else if a==18 return true\n    else if a==19\
    \ return true\n    else if a==20 return true\n    else if a==21 return true\n\
    \    else if a==22 return true\n    else if a==23 return true\n    else if a==24\
    \ return true\n    else if a==25 return true\n    else if a==26 return true\n\
    \    else if a==27 return true\n    else if a==28 return true\n    else if a==29\
    \ return true\n    else if a==30 return true\n    else if a==31 return true\n\
    \    else if a==32 return true\n    else if a==33 return true\n    else if a==34\
    \ return true\n    else if a==35 return true\n    else if a==36 return true\n\
    \    else if a==37 return true\n    else if a==38 return true\n    else if a==39\
    \ return true\n    else if a==40 return true\n    else if a==41 return true\n\
    \    else if a==42 return true\n    else if a==43 return true\n    else if a==44\
    \ return true\n    else if a==45 return true\n    else if a==46 return true\n\
    \    else if a==47 return true\n    else if a==48 return true\n    else if a==49\
    \ return true\n    else if a==50 return true\n    else if a==51 return true\n\
    \    else if a==52 return true\n    else if a==53 return true\n    else if a==54\
    \ return true\n    else if a==55 return true\n    else if a\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppons6ru5.jl:21\nin expression starting at\
    \ /tmp/tmppons6ru5.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        error(\"iscube:\
    \ input must be positive\")\n    else if a == 0 \n        true\n    else if a\
    \ == 1 \n        true\n    else if a == 2 \n        true\n    else if a == 3 \n\
    \        true\n    else if a == 4 \n        true\n    else if a == 5 \n      \
    \  true\n    else if a == 6 \n        true\n    else if a == 7 \n        true\n\
    \    else if a == 8 \n        true\n    else if a == 9 \n        true\n    else\
    \ if a == 10 \n        true\n    else if a == 11 \n        true\n    else if a\
    \ == 12 \n        true\n    else if a == 13 \n        true\n    else if a == 14\
    \ \n        true\n    else if a == 15 \n        true\n    else if a == 16 \n \
    \       true\n    else if a == 17 \n        true\n    else if a == 18 \n     \
    \   true\n    else if a == 19 \n        true\n    else if a == 20 \n        true\n\
    \    else if a == 21 \n        true\n    else if a == 22 \n        true\n    else\
    \ if a == 23 \n        true\n    else if a == 24 \n        true\n    else if a\
    \ == 25 \n        true\n    else if a == 26 \n        true\n    else if a == 27\
    \ \n        true\n    else if a == 28 \n        true\n    else if a == 29 \n \
    \       true\n    else if a == 30 \n        true\n    else if a == 31 \n     \
    \   true\n    else if a == 32 \n        true\n    else if a == 33 \n        true\n\
    \    else if a == 34 \n        true\n    else if a == 35 \n        true\n    else\
    \ if a == 36 \n        true\n    else if a == 37 \n        true\n    else if a\
    \ == 38 \n        true\n    else if a == 39 \n        true\n    else if a == 40\
    \ \n        true\n    else if a == 41 \n        true\n    else if a == 42 \n \
    \       true\n    else if a == 43 \n        true\n    else if a == 44 \n     \
    \   true\n    else if a == 45 \n        true\n    else if a == 46 \n        true\n\
    \    else if a == 47 \n        true\n    else if a == 48 \n        true\n    else\
    \ if a == 49 \n        true\n    else if a == 50 \n        true\n    else if a\
    \ == 51 \n        true\n    else if a == 52 \n        true\n    else if a == 53\
    \ \n        \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprui6s782.jl:22\nin expression starting at\
    \ /tmp/tmprui6s782.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then true\n    else\
    \ if a==1 \n        then true\n    else if a==2 \n        then true\n    else\
    \ if a==3 \n        then true\n    else if a==4 \n        then true\n    else\
    \ if a==5 \n        then true\n    else if a==6 \n        then true\n    else\
    \ if a==7 \n        then true\n    else if a==8 \n        then true\n    else\
    \ if a==9 \n        then true\n    else if a==10 \n        then true\n    else\
    \ if a==11 \n        then true\n    else if a==12 \n        then true\n    else\
    \ if a==13 \n        then true\n    else if a==14 \n        then true\n    else\
    \ if a==15 \n        then true\n    else if a==16 \n        then true\n    else\
    \ if a==17 \n        then true\n    else if a==18 \n        then true\n    else\
    \ if a==19 \n        then true\n    else if a==20 \n        then true\n    else\
    \ if a==21 \n        then true\n    else if a==22 \n        then true\n    else\
    \ if a==23 \n        then true\n    else if a==24 \n        then true\n    else\
    \ if a==25 \n        then true\n    else if a==26 \n        then true\n    else\
    \ if a==27 \n        then true\n    else if a==28 \n        then true\n    else\
    \ if a==29 \n        then true\n    else if a==30 \n        then true\n    else\
    \ if a==31 \n        then true\n    else if a==32 \n        then true\n    else\
    \ if a==33 \n        then true\n    else if a==34 \n        then true\n    else\
    \ if a==35 \n        then true\n    else if a==36 \n        then true\n    else\
    \ if a==37 \n        then true\n    else if a==38 \n        then true\n    else\
    \ if a==39 \n        then true\n    else if a==40 \n        then true\n    else\
    \ if a==41 \n        then true\n    else if a==42 \n        then true\n    else\
    \ if a==43 \n        then true\n    else if a==44 \n        then true\n    else\
    \ if a==45 \n        then true\n    else \nusing Test\n\n@testset begin\n\ncandidate\
    \ = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t\
    @test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpllh5ncq2.jl:21\nin expression starting at /tmp/tmpllh5ncq2.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n    then return true\n \
    \   else return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t\
    @test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9d0vgc84.jl:21\nin expression starting at /tmp/tmp9d0vgc84.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        return true\n\
    \    else \n        return false\nend\n</cell>\n<code language=julia-1.0>\n@assert\
    \ iscube(2) == false\n@assert iscube(-1) == true\n@assert iscube(64) == true\n\
    @assert iscube(0) == true\n@assert iscube(180) == false\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6veiwlmc.jl:25\nin expression starting at\
    \ /tmp/tmp6veiwlmc.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1\n        then return true\n    else if a==2\n        then return\
    \ true\n    else if a==3\n        then return true\n    else if a==4\n       \
    \ then return true\n    else if a==5\n        then return true\n    else if a==6\n\
    \        then return true\n    else if a==7\n        then return true\n    else\
    \ if a==8\n        then return true\n    else if a==9\n        then return true\n\
    \    else if a==10\n        then return true\n    else if a==11\n        then\
    \ return true\n    else if a==12\n        then return true\n    else if a==13\n\
    \        then return true\n    else if a==14\n        then return true\n    else\
    \ if a==15\n        then return true\n    else if a==16\n        then return true\n\
    \    else if a==17\n        then return true\n    else if a==18\n        then\
    \ return true\n    else if a==19\n        then return true\n    else if a==20\n\
    \        then return true\n    else if a==21\n        then return true\n    else\
    \ if a==22\n        then return true\n    else if a==23\n        then return true\n\
    \    else if a==24\n        then return true\n    else if a==25\n        then\
    \ return true\n    else if a==26\n        then return true\n    else if a==27\n\
    \        then return true\n    else if a==28\n        then return true\n    else\
    \ if a==29\n        then return true\n    else if a==30\n        then return true\n\
    \    else if a==31\n        then return true\n    else if a==32\n        then\
    \ return true\n    else if a==33\n        then return true\n    else if a==34\n\
    \        then return true\n    else if a==35\n        then return true\n    else\
    \ if a==36\n        then return true\n    else if a==37\n        then return true\n\
    \    else if a==38\n        then return true\n    else if a==39\n        then\
    \ return true\n    else if a==40\n        then return true\n    else if a==41\n\
    \        then return true\n    else if a==42\n        then return \nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbrcs3rvd.jl:21\nin expression starting at /tmp/tmpbrcs3rvd.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        error(\"iscube:\
    \ input must be positive\")\n    else if a == 0 \n        true\n    else if a\
    \ == 1 \n        true\n    else if a == 2 \n        true\n    else if a == 3 \n\
    \        true\n    else if a == 4 \n        true\n    else if a == 5 \n      \
    \  true\n    else if a == 6 \n        true\n    else if a == 7 \n        true\n\
    \    else if a == 8 \n        true\n    else if a == 9 \n        true\n    else\
    \ if a == 10 \n        true\n    else if a == 11 \n        true\n    else if a\
    \ == 12 \n        true\n    else if a == 13 \n        true\n    else if a == 14\
    \ \n        true\n    else if a == 15 \n        true\n    else if a == 16 \n \
    \       true\n    else if a == 17 \n        true\n    else if a == 18 \n     \
    \   true\n    else if a == 19 \n        true\n    else if a == 20 \n        true\n\
    \    else if a == 21 \n        true\n    else if a == 22 \n        true\n    else\
    \ if a == 23 \n        true\n    else if a == 24 \n        true\n    else if a\
    \ == 25 \n        true\n    else if a == 26 \n        true\n    else if a == 27\
    \ \n        true\n    else if a == 28 \n        true\n    else if a == 29 \n \
    \       true\n    else if a == 30 \n        true\n    else if a == 31 \n     \
    \   true\n    else if a == 32 \n        true\n    else if a == 33 \n        true\n\
    \    else if a == 34 \n        true\n    else if a == 35 \n        true\n    else\
    \ if a == 36 \n        true\n    else if a == 37 \n        true\n    else if a\
    \ == 38 \n        true\n    else if a == 39 \n        true\n    else if a == 40\
    \ \n        true\n    else if a == 41 \n        true\n    else if a == 42 \n \
    \       true\n    else if a == 43 \n        true\n    else if a == 44 \n     \
    \   true\n    else if a == 45 \n        true\n    else if a == 46 \n        true\n\
    \    else if a == 47 \n        true\n    else if a == 48 \n        true\n    else\
    \ if a == 49 \n        true\n    else if a == 50 \n        true\n    else if a\
    \ == 51 \n        true\n    else if a == 52 \n        true\n    else if a == 53\
    \ \n        \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprui6s782.jl:22\nin expression starting at\
    \ /tmp/tmprui6s782.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        error(\"iscube\
    \ called with negative number\")\n    else if a == 0 \n        true\n    else\
    \ if a == 1 \n        true\n    else if a == 2 \n        true\n    else if a ==\
    \ 3 \n        true\n    else if a == 4 \n        true\n    else if a == 5 \n \
    \       true\n    else if a == 6 \n        true\n    else if a == 7 \n       \
    \ true\n    else if a == 8 \n        true\n    else if a == 9 \n        true\n\
    \    else if a == 10 \n        true\n    else if a == 11 \n        true\n    else\
    \ if a == 12 \n        true\n    else if a == 13 \n        true\n    else if a\
    \ == 14 \n        true\n    else if a == 15 \n        true\n    else if a == 16\
    \ \n        true\n    else if a == 17 \n        true\n    else if a == 18 \n \
    \       true\n    else if a == 19 \n        true\n    else if a == 20 \n     \
    \   true\n    else if a == 21 \n        true\n    else if a == 22 \n        true\n\
    \    else if a == 23 \n        true\n    else if a == 24 \n        true\n    else\
    \ if a == 25 \n        true\n    else if a == 26 \n        true\n    else if a\
    \ == 27 \n        true\n    else if a == 28 \n        true\n    else if a == 29\
    \ \n        true\n    else if a == 30 \n        true\n    else if a == 31 \n \
    \       true\n    else if a == 32 \n        true\n    else if a == 33 \n     \
    \   true\n    else if a == 34 \n        true\n    else if a == 35 \n        true\n\
    \    else if a == 36 \n        true\n    else if a == 37 \n        true\n    else\
    \ if a == 38 \n        true\n    else if a == 39 \n        true\n    else if a\
    \ == 40 \n        true\n    else if a == 41 \n        true\n    else if a == 42\
    \ \n        true\n    else if a == 43 \n        true\n    else if a == 44 \n \
    \       true\n    else if a == 45 \n        true\n    else if a == 46 \n     \
    \   true\n    else if a == 47 \n        true\n    else if a == 48 \n        true\n\
    \    else if a == 49 \n        true\n    else if a == 50 \n        true\n    else\
    \ if a == 51 \n        true\n    else if a == 52 \n        true\n    else if a\
    \ == 53 \n\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0k2kq26_.jl:22\nin expression starting at\
    \ /tmp/tmp0k2kq26_.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        if a==1 \n            then return true\n        else \n  \
    \          if a==2 \n                then return true\n            else \n   \
    \             if a==3 \n                    then return true\n               \
    \ else \n                    if a==4 \n                        then return true\n\
    \                    else \n                        if a==5 \n               \
    \             then return true\n                        else \n              \
    \              if a==6 \n                                then return true\n  \
    \                          else \n                                if a==7 \n \
    \                                   then return true\n                       \
    \         else \n                                    if a==8 \n              \
    \                          then return true\n                                \
    \    else \n                                        if a==9 \n               \
    \                             then return true\n                             \
    \           else \n                                            if a==10 \n   \
    \                                             then return true\n             \
    \                               else \n                                      \
    \          if a==11 \n                                                    then\
    \ return true\n                                                else \n       \
    \                                             if a==12 \n                    \
    \                                    then return true\n                      \
    \                              else \n                                       \
    \                 if a==13 \n                                                \
    \            then return true\n                                              \
    \          else \n                                                           \
    \ if a==14 \n                                                                then\
    \ return true\n                                                            else\
    \ \n                                                                if a==15 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==16 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==17 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==18 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==19 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==20 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==21 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==22 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==23 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==24 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==25 \n                                              \
    \                      then return true\n                                    \
    \                                else \n                                     \
    \                   if a==26 \n                                              \
    \              then return true\n                                            \
    \                else \n                                                     \
    \           if a==27 \n                                                      \
    \              then return true\n                                            \
    \                        else \n                                             \
    \           if a==28 \n                                                      \
    \      then return true\n                                                    \
    \        else \n                                                             \
    \   if a==29 \n                                                              \
    \      then return true\n                                                    \
    \                else \n                                                     \
    \   if a==30 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==31 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==32 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==33 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==34 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==35 \n                      \
    \                                              then return true\n\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2uplh0s0.jl:21\nin expression starting at /tmp/tmp2uplh0s0.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==42 \nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp68a0p3ys.jl:21\nin expression starting at /tmp/tmp68a0p3ys.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        return true\n\
    \    else if a == 1\n        return true\n    else if a == 2\n        return true\n\
    \    else if a == 3\n        return true\n    else if a == 4\n        return true\n\
    \    else if a == 5\n        return true\n    else if a == 6\n        return true\n\
    \    else if a == 7\n        return true\n    else if a == 8\n        return true\n\
    \    else if a == 9\n        return true\n    else if a == 10\n        return\
    \ true\n    else if a == 11\n        return true\n    else if a == 12\n      \
    \  return true\n    else if a == 13\n        return true\n    else if a == 14\n\
    \        return true\n    else if a == 15\n        return true\n    else if a\
    \ == 16\n        return true\n    else if a == 17\n        return true\n    else\
    \ if a == 18\n        return true\n    else if a == 19\n        return true\n\
    \    else if a == 20\n        return true\n    else if a == 21\n        return\
    \ true\n    else if a == 22\n        return true\n    else if a == 23\n      \
    \  return true\n    else if a == 24\n        return true\n    else if a == 25\n\
    \        return true\n    else if a == 26\n        return true\n    else if a\
    \ == 27\n        return true\n    else if a == 28\n        return true\n    else\
    \ if a == 29\n        return true\n    else if a == 30\n        return true\n\
    \    else if a == 31\n        return true\n    else if a == 32\n        return\
    \ true\n    else if a == 33\n        return true\n    else if a == 34\n      \
    \  return true\n    else if a == 35\n        return true\n    else if a == 36\n\
    \        return true\n    else if a == 37\n        return true\n    else if a\
    \ == 38\n        return true\n    else if a == 39\n        return true\n    else\
    \ if a == 40\n        return true\n    else if a == 41\n        return true\n\
    \    else if a == 42\n        return true\n    else if a == 43\n        return\
    \ true\n    else if a == 44\n        return true\n    else if a == 45\n      \
    \  return true\n    else if a == 46\n        return true\n    else if a == 47\n\
    \        return true\n    else if a == 48\n        return true\n    else if a\
    \ == 49\n        return true\n    else if a == 50\n        return true\n    else\
    \ if a == 51\n        return true\n    else if a == 52\n        return true\n\
    \    else if a == 53\n        return true\n    else if a == 54\n        return\
    \ true\n    else if a == 55\n        return true\n    else if a == 56\n      \
    \  return true\n    \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprghp837_.jl:22\nin expression starting at\
    \ /tmp/tmprghp837_.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        then return true\n\
    \    else if a%1 == 0 \n        then return false\n    else \n        return iscube(a/1)\n\
    end\n</cell>\n<code language=julia-1.5>\niscube(10)\n</cell>\n<code language=julia-1.5>\n\
    iscube(100)\n</cell>\n<code language=julia-1.5>\niscube(1000)\n</cell>\n<code\
    \ language=julia-1.5>\niscube(10000)\n</cell>\n<code language=julia-1.5>\niscube(100000)\n\
    </cell>\n<code language=julia-1.5>\niscube(1000000)\n</cell>\n<code language=julia-1.5>\n\
    iscube(10000000)\n</cell>\n<code language=julia-1.5>\niscube(100000000)\n</cell>\n\
    <code language=julia-1.5>\niscube(1000000000)\n</cell>\n<code language=julia-1.5>\n\
    iscube(10000000000)\n</cell>\n<code language=julia-1.5>\niscube(100000000000)\n\
    </cell>\n<code language=julia-1.5>\niscube(1000000000000)\n</cell>\n<code language=julia-1.5>\n\
    iscube(10000000000000)\n</cell>\n<code language=julia-1.5>\niscube(100000000000000)\n\
    </cell>\n<code language=julia-1.5>\niscube(1000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    iscube(10000000000000000)\n</cell>\n<code language=julia-1.5>\niscube(100000000000000000)\n\
    </cell>\n<code language=julia-1.5>\niscube(1000000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\niscube(10000000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    iscube(100000000000000000000)\n</cell>\n<code language=julia-1.5>\niscube(1000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\niscube(10000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\niscube(100000000000000000000000)\n</cell>\n<code language=julia-1.5>\n\
    iscube(1000000000000000000000000)\n</cell>\n<code language=julia-1.5>\niscube(10000000000000000000000000)\n\
    </cell>\n<code language=julia-1.5>\niscube(100000000000000000000000000)\n</cell>\n\
    <code language=julia-1.5>\niscube(1000000000000000000000000000)\n</cell>\n<code\
    \ language=julia-1.5>\niscube(10000000000000000000000000000)\n</\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpngluze6m.jl:21\nin expression starting at /tmp/tmpngluze6m.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    else\
    \ if a==1 then return true\n    else if a==2 then return true\n    else if a==3\
    \ then return true\n    else if a==4 then return true\n    else if a==5 then return\
    \ true\n    else if a==6 then return true\n    else if a==7 then return true\n\
    \    else if a==8 then return true\n    else if a==9 then return true\n    else\
    \ if a==10 then return true\n    else if a==11 then return true\n    else if a==12\
    \ then return true\n    else if a==13 then return true\n    else if a==14 then\
    \ return true\n    else if a==15 then return true\n    else if a==16 then return\
    \ true\n    else if a==17 then return true\n    else if a==18 then return true\n\
    \    else if a==19 then return true\n    else if a==20 then return true\n    else\
    \ if a==21 then return true\n    else if a==22 then return true\n    else if a==23\
    \ then return true\n    else if a==24 then return true\n    else if a==25 then\
    \ return true\n    else if a==26 then return true\n    else if a==27 then return\
    \ true\n    else if a==28 then return true\n    else if a==29 then return true\n\
    \    else if a==30 then return true\n    else if a==31 then return true\n    else\
    \ if a==32 then return true\n    else if a==33 then return true\n    else if a==34\
    \ then return true\n    else if a==35 then return true\n    else if a==36 then\
    \ return true\n    else if a==37 then return true\n    else if a==38 then return\
    \ true\n    else if a==39 then return true\n    else if a==40 then return true\n\
    \    else if a==41 then return true\n    else if a==42 then return true\n    else\
    \ if a==43 then return true\n    else if a==44 then return true\n    else if a==45\
    \ then return true\n    else if a==46 then return true\n    else if a==47 then\
    \ return true\n    else if a==48 then return true\n    else if a==49 then return\
    \ true\n    else if a\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpen0fkwy8.jl:20\nin expression starting at /tmp/tmpen0fkwy8.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1\n        then return true\n    else if a==2\n        then return\
    \ true\n    else if a==3\n        then return true\n    else if a==4\n       \
    \ then return true\n    else if a==5\n        then return true\n    else if a==6\n\
    \        then return true\n    else if a==7\n        then return true\n    else\
    \ if a==8\n        then return true\n    else if a==9\n        then return true\n\
    \    else if a==10\n        then return true\n    else if a==11\n        then\
    \ return true\n    else if a==12\n        then return true\n    else if a==13\n\
    \        then return true\n    else if a==14\n        then return true\n    else\
    \ if a==15\n        then return true\n    else if a==16\n        then return true\n\
    \    else if a==17\n        then return true\n    else if a==18\n        then\
    \ return true\n    else if a==19\n        then return true\n    else if a==20\n\
    \        then return true\n    else if a==21\n        then return true\n    else\
    \ if a==22\n        then return true\n    else if a==23\n        then return true\n\
    \    else if a==24\n        then return true\n    else if a==25\n        then\
    \ return true\n    else if a==26\n        then return true\n    else if a==27\n\
    \        then return true\n    else if a==28\n        then return true\n    else\
    \ if a==29\n        then return true\n    else if a==30\n        then return true\n\
    \    else if a==31\n        then return true\n    else if a==32\n        then\
    \ return true\n    else if a==33\n        then return true\n    else if a==34\n\
    \        then return true\n    else if a==35\n        then return true\n    else\
    \ if a==36\n        then return true\n    else if a==37\n        then return true\n\
    \    else if a==38\n        then return true\n    else if a==39\n        then\
    \ return true\n    else if a==40\n        then return true\n    else if a==41\n\
    \        then return true\n    else if a==42\n        then return \nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbrcs3rvd.jl:21\nin expression starting at /tmp/tmpbrcs3rvd.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        error(\"iscube:\
    \ negative number\")\n    else if a == 0 \n        true\n    else if a == 1 \n\
    \        true\n    else if a == 2 \n        true\n    else if a == 3 \n      \
    \  true\n    else if a == 4 \n        true\n    else if a == 5 \n        true\n\
    \    else if a == 6 \n        true\n    else if a == 7 \n        true\n    else\
    \ if a == 8 \n        true\n    else if a == 9 \n        true\n    else if a ==\
    \ 10 \n        true\n    else if a == 11 \n        true\n    else if a == 12 \n\
    \        true\n    else if a == 13 \n        true\n    else if a == 14 \n    \
    \    true\n    else if a == 15 \n        true\n    else if a == 16 \n        true\n\
    \    else if a == 17 \n        true\n    else if a == 18 \n        true\n    else\
    \ if a == 19 \n        true\n    else if a == 20 \n        true\n    else if a\
    \ == 21 \n        true\n    else if a == 22 \n        true\n    else if a == 23\
    \ \n        true\n    else if a == 24 \n        true\n    else if a == 25 \n \
    \       true\n    else if a == 26 \n        true\n    else if a == 27 \n     \
    \   true\n    else if a == 28 \n        true\n    else if a == 29 \n        true\n\
    \    else if a == 30 \n        true\n    else if a == 31 \n        true\n    else\
    \ if a == 32 \n        true\n    else if a == 33 \n        true\n    else if a\
    \ == 34 \n        true\n    else if a == 35 \n        true\n    else if a == 36\
    \ \n        true\n    else if a == 37 \n        true\n    else if a == 38 \n \
    \       true\n    else if a == 39 \n        true\n    else if a == 40 \n     \
    \   true\n    else if a == 41 \n        true\n    else if a == 42 \n        true\n\
    \    else if a == 43 \n        true\n    else if a == 44 \n        true\n    else\
    \ if a == 45 \n        true\n    else if a == 46 \n        true\n    else if a\
    \ == 47 \n        true\n    else if a == 48 \n        true\n    else if a == 49\
    \ \n        true\n    else if a == 50 \n        true\n    else if a == 51 \n \
    \       true\n    else if a == 52 \n        true\n    else if a == 53 \n     \
    \   true\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpspe9znxa.jl:22\nin expression starting at\
    \ /tmp/tmpspe9znxa.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n    then return true\n \
    \   else return false\n    end\nend\n</cell>\n<code language=julia-1.5>\niscube(1)\n\
    </cell>\n<code language=julia-1.5>\niscube(2)\n</cell>\n<code language=julia-1.5>\n\
    iscube(-1)\n</cell>\n<code language=julia-1.5>\niscube(64)\n</cell>\n<code language=julia-1.5>\n\
    iscube(0)\n</cell>\n<code language=julia-1.5>\niscube(180)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an integer a and returns true \n    if\
    \ this ingeger is a cube of some integer number.\n    Note: you may assume the\
    \ input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>>\
    \ iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n   \
    \ true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\"\"\
    \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) ==\
    \ true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpd4777si0.jl:21\nin expression starting at /tmp/tmpd4777si0.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 return true\n    if a==1 return\
    \ true\n    if a==2 return true\n    if a==3 return true\n    if a==4 return true\n\
    \    if a==5 return true\n    if a==6 return true\n    if a==7 return true\n \
    \   if a==8 return true\n    if a==9 return true\n    if a==10 return true\n \
    \   if a==11 return true\n    if a==12 return true\n    if a==13 return true\n\
    \    if a==14 return true\n    if a==15 return true\n    if a==16 return true\n\
    \    if a==17 return true\n    if a==18 return true\n    if a==19 return true\n\
    \    if a==20 return true\n    if a==21 return true\n    if a==22 return true\n\
    \    if a==23 return true\n    if a==24 return true\n    if a==25 return true\n\
    \    if a==26 return true\n    if a==27 return true\n    if a==28 return true\n\
    \    if a==29 return true\n    if a==30 return true\n    if a==31 return true\n\
    \    if a==32 return true\n    if a==33 return true\n    if a==34 return true\n\
    \    if a==35 return true\n    if a==36 return true\n    if a==37 return true\n\
    \    if a==38 return true\n    if a==39 return true\n    if a==40 return true\n\
    \    if a==41 return true\n    if a==42 return true\n    if a==43 return true\n\
    \    if a==44 return true\n    if a==45 return true\n    if a==46 return true\n\
    \    if a==47 return true\n    if a==48 return true\n    if a==49 return true\n\
    \    if a==50 return true\n    if a==51 return true\n    if a==52 return true\n\
    \    if a==53 return true\n    if a==54 return true\n    if a==55 return true\n\
    \    if a==56 return true\n    if a==57 return true\n    if a==58 return true\n\
    \    if a==59 return true\n    if a==60 return true\n    if a==61 return true\n\
    \    if a==62 return true\n    if a==63 return true\n    if a==64 return true\n\
    \    if a==65 return true\n    if a==66 return true\n    if a==67 return true\n\
    \    if a==68 return true\n    if a==69 return true\n    if a==70 return true\n\
    \    if a==71 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsn8lb1bx.jl:1\nin expression starting at /tmp/tmpsn8lb1bx.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        if a==1 \n            then return true\n        else \n  \
    \          if a==2 \n                then return true\n            else \n   \
    \             if a==3 \n                    then return true\n               \
    \ else \n                    if a==4 \n                        then return true\n\
    \                    else \n                        if a==5 \n               \
    \             then return true\n                        else \n              \
    \              if a==6 \n                                then return true\n  \
    \                          else \n                                if a==7 \n \
    \                                   then return true\n                       \
    \         else \n                                    if a==8 \n              \
    \                          then return true\n                                \
    \    else \n                                        if a==9 \n               \
    \                             then return true\n                             \
    \           else \n                                            if a==10 \n   \
    \                                             then return true\n             \
    \                               else \n                                      \
    \          if a==11 \n                                                    then\
    \ return true\n                                                else \n       \
    \                                             if a==12 \n                    \
    \                                    then return true\n                      \
    \                              else \n                                       \
    \                 if a==13 \n                                                \
    \            then return true\n                                              \
    \          else \n                                                           \
    \ if a==14 \n                                                                then\
    \ return true\n                                                            else\
    \ \n                                                                if a==15 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==16 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==17 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==18 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==19 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==20 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==21 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==22 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==23 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==24 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==25 \n                                              \
    \                      then return true\n                                    \
    \                                else \n                                     \
    \                   if a==26 \n                                              \
    \              then return true\n                                            \
    \                else \n                                                     \
    \           if a==27 \n                                                      \
    \              then return true\n                                            \
    \                        else \n                                             \
    \           if a==28 \n                                                      \
    \      then return true\n                                                    \
    \        else \n                                                             \
    \   if a==29 \n                                                              \
    \      then return true\n                                                    \
    \                else \n                                                     \
    \   if a==30 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==31 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==32 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==33 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==34 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==35 \n                      \
    \                                              then return true\n\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2uplh0s0.jl:21\nin expression starting at /tmp/tmp2uplh0s0.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then true\n    \
    \    else false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n  \
    \  Write a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk6y1sk6h.jl:21\nin expression starting at /tmp/tmpk6y1sk6h.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        return true\n \
    \   else if a == 0 \n        return true\n    else if a == 1 \n        return\
    \ true\n    else if a == 2 \n        return true\n    else if a == 3 \n      \
    \  return true\n    else if a == 4 \n        return true\n    else if a == 5 \n\
    \        return true\n    else if a == 6 \n        return true\n    else if a\
    \ == 7 \n        return true\n    else if a == 8 \n        return true\n    else\
    \ if a == 9 \n        return true\n    else if a == 10 \n        return true\n\
    \    else if a == 11 \n        return true\n    else if a == 12 \n        return\
    \ true\n    else if a == 13 \n        return true\n    else if a == 14 \n    \
    \    return true\n    else if a == 15 \n        return true\n    else if a ==\
    \ 16 \n        return true\n    else if a == 17 \n        return true\n    else\
    \ if a == 18 \n        return true\n    else if a == 19 \n        return true\n\
    \    else if a == 20 \n        return true\n    else if a == 21 \n        return\
    \ true\n    else if a == 22 \n        return true\n    else if a == 23 \n    \
    \    return true\n    else if a == 24 \n        return true\n    else if a ==\
    \ 25 \n        return true\n    else if a == 26 \n        return true\n    else\
    \ if a == 27 \n        return true\n    else if a == 28 \n        return true\n\
    \    else if a == 29 \n        return true\n    else if a == 30 \n        return\
    \ true\n    else if a == 31 \n        return true\n    else if a == 32 \n    \
    \    return true\n    else if a == 33 \n        return true\n    else if a ==\
    \ 34 \n        return true\n    else if a == 35 \n        return true\n    else\
    \ if a == 36 \n        return true\n    else if a == 37 \n        return true\n\
    \    else if a == 38 \n        return true\n    else if a == 39 \n        return\
    \ true\n    else if a == 40 \n        return true\n    else if a == 41 \n    \
    \    return true\n    else if a == 42 \n        return true\n    else if a ==\
    \ 43 \n        return true\n    else if a == 44 \n        return true\n    else\
    \ if a == 45 \n        return true\n    else if a == 46 \n        return true\n\
    \    else if a == 47 \n        return true\n    else if a == 48 \n        return\
    \ true\n    else if a == 49 \n        return true\n    else if a == 50 \n    \
    \    return true\n    else if a == 51 \n        return true\n    else if a ==\
    \ 52 \n        return true\n    else if a == 53 \n        return true\n    else\
    \ if a == 54\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe8a7onzs.jl:22\nin expression starting at\
    \ /tmp/tmpe8a7onzs.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n    then return true\n \
    \   else if a==1 \n    then return true\n    else if a==2 \n    then return true\n\
    \    else if a==3 \n    then return true\n    else if a==4 \n    then return true\n\
    \    else if a==5 \n    then return true\n    else if a==6 \n    then return true\n\
    \    else if a==7 \n    then return true\n    else if a==8 \n    then return true\n\
    \    else if a==9 \n    then return true\n    else if a==10 \n    then return\
    \ true\n    else if a==11 \n    then return true\n    else if a==12 \n    then\
    \ return true\n    else if a==13 \n    then return true\n    else if a==14 \n\
    \    then return true\n    else if a==15 \n    then return true\n    else if a==16\
    \ \n    then return true\n    else if a==17 \n    then return true\n    else if\
    \ a==18 \n    then return true\n    else if a==19 \n    then return true\n   \
    \ else if a==20 \n    then return true\n    else if a==21 \n    then return true\n\
    \    else if a==22 \n    then return true\n    else if a==23 \n    then return\
    \ true\n    else if a==24 \n    then return true\n    else if a==25 \n    then\
    \ return true\n    else if a==26 \n    then return true\n    else if a==27 \n\
    \    then return true\n    else if a==28 \n    then return true\n    else if a==29\
    \ \n    then return true\n    else if a==30 \n    then return true\n    else if\
    \ a==31 \n    then return true\n    else if a==32 \n    then return true\n   \
    \ else if a==33 \n    then return true\n    else if a==34 \n    then return true\n\
    \    else if a==35 \n    then return true\n    else if a==36 \n    then return\
    \ true\n    else if a==37 \n    then return true\n    else if a==38 \n    then\
    \ return true\n    else if a==39 \n    then return true\n    else if a==40 \n\
    \    then return true\n    else if a==41 \n    then return true\n    else if a==4\n\
    using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpym18ocqa.jl:21\nin expression starting at /tmp/tmpym18ocqa.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1\n        then return true\n    else if a==2\n        then return\
    \ true\n    else if a==3\n        then return true\n    else if a==4\n       \
    \ then return true\n    else if a==5\n        then return true\n    else if a==6\n\
    \        then return true\n    else if a==7\n        then return true\n    else\
    \ if a==8\n        then return true\n    else if a==9\n        then return true\n\
    \    else if a==10\n        then return true\n    else if a==11\n        then\
    \ return true\n    else if a==12\n        then return true\n    else if a==13\n\
    \        then return true\n    else if a==14\n        then return true\n    else\
    \ if a==15\n        then return true\n    else if a==16\n        then return true\n\
    \    else if a==17\n        then return true\n    else if a==18\n        then\
    \ return true\n    else if a==19\n        then return true\n    else if a==20\n\
    \        then return true\n    else if a==21\n        then return true\n    else\
    \ if a==22\n        then return true\n    else if a==23\n        then return true\n\
    \    else if a==24\n        then return true\n    else if a==25\n        then\
    \ return true\n    else if a==26\n        then return true\n    else if a==27\n\
    \        then return true\n    else if a==28\n        then return true\n    else\
    \ if a==29\n        then return true\n    else if a==30\n        then return true\n\
    \    else if a==31\n        then return true\n    else if a==32\n        then\
    \ return true\n    else if a==33\n        then return true\n    else if a==34\n\
    \        then return true\n    else if a==35\n        then return true\n    else\
    \ if a==36\n        then return true\n    else if a==37\n        then return true\n\
    \    else if a==38\n        then return true\n    else if a==39\n        then\
    \ return true\n    else if a==40\n        then return true\n    else if a==41\n\
    \        then return true\n    else if a==42\n        then return \nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbrcs3rvd.jl:21\nin expression starting at /tmp/tmpbrcs3rvd.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        return false\n\
    \    if a == 0 \n        return true\n    if a > 0 \n        return iscube(a-1)\
    \ * iscube(a-2)*iscube(a-3)\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ iscube(2) == false\n@assert iscube(-1) == true\n@assert iscube(64) == true\n\
    @assert iscube(0) == true\n@assert iscube(180) == false\n</cell>\n<text>\nProblem\
    \ 7: Write a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpff6fbgje.jl:27\nin expression starting at\
    \ /tmp/tmpff6fbgje.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        return true\n  \
    \  else \n        return false\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t\
    @test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpow4z8uxa.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpow4z8uxa.jl:1\n\
    in expression starting at /tmp/tmpow4z8uxa.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    else\
    \ if a==1 then return true\n    else if a==2 then return true\n    else if a==3\
    \ then return true\n    else if a==4 then return true\n    else if a==5 then return\
    \ true\n    else if a==6 then return true\n    else if a==7 then return true\n\
    \    else if a==8 then return true\n    else if a==9 then return true\n    else\
    \ if a==10 then return true\n    else if a==11 then return true\n    else if a==12\
    \ then return true\n    else if a==13 then return true\n    else if a==14 then\
    \ return true\n    else if a==15 then return true\n    else if a==16 then return\
    \ true\n    else if a==17 then return true\n    else if a==18 then return true\n\
    \    else if a==19 then return true\n    else if a==20 then return true\n    else\
    \ if a==21 then return true\n    else if a==22 then return true\n    else if a==23\
    \ then return true\n    else if a==24 then return true\n    else if a==25 then\
    \ return true\n    else if a==26 then return true\n    else if a==27 then return\
    \ true\n    else if a==28 then return true\n    else if a==29 then return true\n\
    \    else if a==30 then return true\n    else if a==31 then return true\n    else\
    \ if a==32 then return true\n    else if a==33 then return true\n    else if a==34\
    \ then return true\n    else if a==35 then return true\n    else if a==36 then\
    \ return true\n    else if a==37 then return true\n    else if a==38 then return\
    \ true\n    else if a==39 then return true\n    else if a==40 then return true\n\
    \    else if a==41 then return true\n    else if a==42 then return true\n    else\
    \ if a==43 then return true\n    else if a==44 then return true\n    else if a==45\
    \ then return true\n    else if a==46 then return true\n    else if a==47 then\
    \ return true\n    else if a==48 then return true\n    else if a==49 then return\
    \ true\n    else if a\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpen0fkwy8.jl:20\nin expression starting at /tmp/tmpen0fkwy8.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0\n        error(\"iscube expects\
    \ an integer >= 0\")\n    end\n    if a == 0\n        true\n    elseif a==1\n\
    \        true\n    elseif a==2\n        true\n    elseif a==3\n        true\n\
    \    elseif a==4\n        true\n    elseif a==5\n        true\n    elseif a==6\n\
    \        true\n    elseif a==7\n        true\n    elseif a==8\n        true\n\
    \    elseif a==9\n        true\n    elseif a==10\n        true\n    elseif a==11\n\
    \        true\n    elseif a==12\n        true\n    elseif a==13\n        true\n\
    \    elseif a==14\n        true\n    elseif a==15\n        true\n    elseif a==16\n\
    \        true\n    elseif a==17\n        true\n    elseif a==18\n        true\n\
    \    elseif a==19\n        true\n    elseif a==20\n        true\n    elseif a==21\n\
    \        true\n    elseif a==22\n        true\n    elseif a==23\n        true\n\
    \    elseif a==24\n        true\n    elseif a==25\n        true\n    elseif a==26\n\
    \        true\n    elseif a==27\n        true\n    elseif a==28\n        true\n\
    \    elseif a==29\n        true\n    elseif a==30\n        true\n    elseif a==31\n\
    \        true\n    elseif a==32\n        true\n    elseif a==33\n        true\n\
    \    elseif a==34\n        true\n    elseif a==35\n        true\n    elseif a==36\n\
    \        true\n    elseif a==37\n        true\n    elseif a==38\n        true\n\
    \    elseif a==39\n        true\n    elseif a==40\n        true\n    elseif a==41\n\
    \        true\n    elseif a==42\n        true\n    elseif a==43\n        true\n\
    \    elseif a==44\n        true\n    elseif a==45\n        true\n    elseif a==46\n\
    \        true\n    elseif a==47\n        true\n    elseif a==48\n        true\n\
    \    elseif a==49\n        true\n    elseif a==50\n        true\n    elseif a==51\n\
    \        true\n    elseif a==52\n        true\n    elseif a==53\n        true\n\
    \    elseif a==54\n        true\n    else\nusing Test\n\n@testset begin\n\ncandidate\
    \ = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t\
    @test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmp9wub8ff3.jl:131\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9wub8ff3.jl:1\n\
    in expression starting at /tmp/tmp9wub8ff3.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        return false\n\
    \    else if a == 0 \n        return true\n    else if a == 1 \n        return\
    \ true\n    else if a == 2 \n        return true\n    else if a == 3 \n      \
    \  return true\n    else if a == 4 \n        return true\n    else if a == 5 \n\
    \        return true\n    else if a == 6 \n        return true\n    else if a\
    \ == 7 \n        return true\n    else if a == 8 \n        return true\n    else\
    \ if a == 9 \n        return true\n    else if a == 10 \n        return true\n\
    \    else if a == 11 \n        return true\n    else if a == 12 \n        return\
    \ true\n    else if a == 13 \n        return true\n    else if a == 14 \n    \
    \    return true\n    else if a == 15 \n        return true\n    else if a ==\
    \ 16 \n        return true\n    else if a == 17 \n        return true\n    else\
    \ if a == 18 \n        return true\n    else if a == 19 \n        return true\n\
    \    else if a == 20 \n        return true\n    else if a == 21 \n        return\
    \ true\n    else if a == 22 \n        return true\n    else if a == 23 \n    \
    \    return true\n    else if a == 24 \n        return true\n    else if a ==\
    \ 25 \n        return true\n    else if a == 26 \n        return true\n    else\
    \ if a == 27 \n        return true\n    else if a == 28 \n        return true\n\
    \    else if a == 29 \n        return true\n    else if a == 30 \n        return\
    \ true\n    else if a == 31 \n        return true\n    else if a == 32 \n    \
    \    return true\n    else if a == 33 \n        return true\n    else if a ==\
    \ 34 \n        return true\n    else if a == 35 \n        return true\n    else\
    \ if a == 36 \n        return true\n    else if a == 37 \n        return true\n\
    \    else if a == 38 \n        return true\n    else if a == 39 \n        return\
    \ true\n    else if a == 40 \n        return true\n    else if a == 41 \n    \
    \    return true\n    else if a == 42 \n        return true\n    else if a ==\
    \ 43 \n        return true\n    else if a == 44 \n        return true\n    else\
    \ if a == 45 \n        return true\n    else if a == 46 \n        return true\n\
    \    else if a == 47 \n        return true\n    else if a == 48 \n        return\
    \ true\n    else if a == 49 \n        return true\n    else if a == 50 \n    \
    \    return true\n    else if a == 51 \n        return true\n    else if a ==\
    \ 52 \n        return true\n    else if a == 53 \n        return true\n    else\
    \ if a == 54\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5wjx142y.jl:22\nin expression starting at\
    \ /tmp/tmp5wjx142y.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        cube=true\n        for i=1:a\n            cube=cube && iscube(i*i)\n\
    \        end\n        return cube\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\nWrite a function that takes an integer a and returns true \n    if this\
    \ ingeger is a cube of some integer number.\n    Note: you may assume the input\
    \ is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n\
    \    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>>\
    \ iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc4ajusdf.jl:21\nin expression starting at /tmp/tmpc4ajusdf.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        if a==1 \n            then return true\n        else \n  \
    \          if a==2 \n                then return true\n            else \n   \
    \             if a==3 \n                    then return true\n               \
    \ else \n                    if a==4 \n                        then return true\n\
    \                    else \n                        if a==5 \n               \
    \             then return true\n                        else \n              \
    \              if a==6 \n                                then return true\n  \
    \                          else \n                                if a==7 \n \
    \                                   then return true\n                       \
    \         else \n                                    if a==8 \n              \
    \                          then return true\n                                \
    \    else \n                                        if a==9 \n               \
    \                             then return true\n                             \
    \           else \n                                            if a==10 \n   \
    \                                             then return true\n             \
    \                               else \n                                      \
    \          if a==11 \n                                                    then\
    \ return true\n                                                else \n       \
    \                                             if a==12 \n                    \
    \                                    then return true\n                      \
    \                              else \n                                       \
    \                 if a==13 \n                                                \
    \            then return true\n                                              \
    \          else \n                                                           \
    \ if a==14 \n                                                                then\
    \ return true\n                                                            else\
    \ \n                                                                if a==15 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==16 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==17 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==18 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==19 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==20 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==21 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==22 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==23 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==24 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==25 \n                                              \
    \                      then return true\n                                    \
    \                                else \n                                     \
    \                   if a==26 \n                                              \
    \              then return true\n                                            \
    \                else \n                                                     \
    \           if a==27 \n                                                      \
    \              then return true\n                                            \
    \                        else \n                                             \
    \           if a==28 \n                                                      \
    \      then return true\n                                                    \
    \        else \n                                                             \
    \   if a==29 \n                                                              \
    \      then return true\n                                                    \
    \                else \n                                                     \
    \   if a==30 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==31 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==32 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==33 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==34 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==35 \n                      \
    \                                              then return true\n\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2uplh0s0.jl:21\nin expression starting at /tmp/tmp2uplh0s0.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then true\n    \
    \    else false\n    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n  \
    \  Write a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjdm1g8g4.jl:21\nin expression starting at /tmp/tmpjdm1g8g4.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        true\n    else \n\
    \        if a==1 \n            true\n        else \n            if a==2 \n   \
    \             true\n            else \n                if a==3 \n            \
    \        true\n                else \n                    if a==4 \n         \
    \               true\n                    else \n                        if a==5\
    \ \n                            true\n                        else \n        \
    \                    if a==6 \n                                true\n        \
    \                    else \n                                if a==7 \n       \
    \                             true\n                                else \n  \
    \                                  if a==8 \n                                \
    \        true\n                                    else \n                   \
    \                     if a==9 \n                                            true\n\
    \                                        else \n                             \
    \               if a==10 \n                                                true\n\
    \                                            else \n                         \
    \                       if a==11 \n                                          \
    \          true\n                                                else \n     \
    \                                               if a==12 \n                  \
    \                                      true\n                                \
    \                    else \n                                                 \
    \       if a==13 \n                                                          \
    \  true\n                                                        else \n     \
    \                                                       if a==14 \n          \
    \                                                      true\n                \
    \                                            else \n                         \
    \                                       if a==15 \n                          \
    \                                          true\n                            \
    \                                    else \n                                 \
    \                                   if a==16 \n                              \
    \                                          true\n                            \
    \                                        else \n                             \
    \                           if a==17 \n                                      \
    \                      true\n                                                \
    \        else \n                                                            if\
    \ a==18 \n                                                                true\n\
    \                                                            else \n         \
    \                                                       if a==19 \n          \
    \                                                          true\n            \
    \                                                    else \n                 \
    \                                                   if a==20 \n              \
    \                                                          true\n            \
    \                                                        else \n             \
    \                                           if a==21 \n                      \
    \                                      true\n                                \
    \                        else \n                                             \
    \               if a==22 \n                                                  \
    \              true\n                                                        \
    \    else \n                                                                if\
    \ a==23 \n                                                                   \
    \ true\n                                                                else \n\
    \                                                                    if a==24\
    \ \n                                                                        true\n\
    \                                                                    else \n \
    \                                                       if a==25 \n          \
    \                                                  true\n                    \
    \                                    else \n                                 \
    \                           if a==26 \n                                      \
    \                          true\n                                            \
    \                else \n                                                     \
    \           if a==27 \n                                                      \
    \              true\n                                                        \
    \        else \n                                                             \
    \       if a==28 \n                                                          \
    \              true\n                                                        \
    \            else \n                                                        if\
    \ a==29 \n                                                            true\n \
    \                                                       else \n              \
    \                                              if a==30 \n                   \
    \                                             true\n                         \
    \                                   else \n                                  \
    \                              if a==31 \n                                   \
    \                                 true\n                                     \
    \                           else \n                                          \
    \                          if a==32 \n                                       \
    \                                 true\n                                     \
    \                               else \n                                      \
    \                  if a==33 \n                                               \
    \             true\n                                                        else\
    \ \n                                                            if a==34 \n  \
    \                                                              true\n        \
    \                                                    else \n                 \
    \                                               if a==35 \n                  \
    \                                                  true\n                    \
    \                                            else \n                         \
    \                                           if a==36 \n                      \
    \                                                  true\n                    \
    \                                                else \n                     \
    \                                   if a==37 \n                              \
    \                              true\n                                        \
    \                else \n                                                     \
    \       if a==38 \n                                                          \
    \      true\n                                                            else\
    \ \n                                                                if a==39 \n\
    \                                                                    true\n  \
    \                                                              else \n       \
    \                                                             if a==40 \n    \
    \                                                                    true\n  \
    \                                                                  else \n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpb0qvrwga.jl:140\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpb0qvrwga.jl:1\n\
    in expression starting at /tmp/tmpb0qvrwga.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        error(\"iscube:\
    \ input must be positive\")\n    else if a == 0 \n        true\n    else if a\
    \ == 1 \n        true\n    else if a == 2 \n        true\n    else if a == 3 \n\
    \        true\n    else if a == 4 \n        true\n    else if a == 5 \n      \
    \  true\n    else if a == 6 \n        true\n    else if a == 7 \n        true\n\
    \    else if a == 8 \n        true\n    else if a == 9 \n        true\n    else\
    \ if a == 10 \n        true\n    else if a == 11 \n        true\n    else if a\
    \ == 12 \n        true\n    else if a == 13 \n        true\n    else if a == 14\
    \ \n        true\n    else if a == 15 \n        true\n    else if a == 16 \n \
    \       true\n    else if a == 17 \n        true\n    else if a == 18 \n     \
    \   true\n    else if a == 19 \n        true\n    else if a == 20 \n        true\n\
    \    else if a == 21 \n        true\n    else if a == 22 \n        true\n    else\
    \ if a == 23 \n        true\n    else if a == 24 \n        true\n    else if a\
    \ == 25 \n        true\n    else if a == 26 \n        true\n    else if a == 27\
    \ \n        true\n    else if a == 28 \n        true\n    else if a == 29 \n \
    \       true\n    else if a == 30 \n        true\n    else if a == 31 \n     \
    \   true\n    else if a == 32 \n        true\n    else if a == 33 \n        true\n\
    \    else if a == 34 \n        true\n    else if a == 35 \n        true\n    else\
    \ if a == 36 \n        true\n    else if a == 37 \n        true\n    else if a\
    \ == 38 \n        true\n    else if a == 39 \n        true\n    else if a == 40\
    \ \n        true\n    else if a == 41 \n        true\n    else if a == 42 \n \
    \       true\n    else if a == 43 \n        true\n    else if a == 44 \n     \
    \   true\n    else if a == 45 \n        true\n    else if a == 46 \n        true\n\
    \    else if a == 47 \n        true\n    else if a == 48 \n        true\n    else\
    \ if a == 49 \n        true\n    else if a == 50 \n        true\n    else if a\
    \ == 51 \n        true\n    else if a == 52 \n        true\n    else if a == 53\
    \ \n        \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprui6s782.jl:22\nin expression starting at\
    \ /tmp/tmprui6s782.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        return true\n  \
    \  else \n        return false\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\
    \nWrite a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5hhim6l5.jl:25\nin expression starting at\
    \ /tmp/tmp5hhim6l5.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        error(\"iscube:\
    \ input must be positive\")\n    else if a == 0 \n        true\n    else if a\
    \ == 1\n        true\n    else if a == 2\n        true\n    else if a == 3\n \
    \       true\n    else if a == 4\n        true\n    else if a == 5\n        true\n\
    \    else if a == 6\n        true\n    else if a == 7\n        true\n    else\
    \ if a == 8\n        true\n    else if a == 9\n        true\n    else if a ==\
    \ 10\n        true\n    else if a == 11\n        true\n    else if a == 12\n \
    \       true\n    else if a == 13\n        true\n    else if a == 14\n       \
    \ true\n    else if a == 15\n        true\n    else if a == 16\n        true\n\
    \    else if a == 17\n        true\n    else if a == 18\n        true\n    else\
    \ if a == 19\n        true\n    else if a == 20\n        true\n    else if a ==\
    \ 21\n        true\n    else if a == 22\n        true\n    else if a == 23\n \
    \       true\n    else if a == 24\n        true\n    else if a == 25\n       \
    \ true\n    else if a == 26\n        true\n    else if a == 27\n        true\n\
    \    else if a == 28\n        true\n    else if a == 29\n        true\n    else\
    \ if a == 30\n        true\n    else if a == 31\n        true\n    else if a ==\
    \ 32\n        true\n    else if a == 33\n        true\n    else if a == 34\n \
    \       true\n    else if a == 35\n        true\n    else if a == 36\n       \
    \ true\n    else if a == 37\n        true\n    else if a == 38\n        true\n\
    \    else if a == 39\n        true\n    else if a == 40\n        true\n    else\
    \ if a == 41\n        true\n    else if a == 42\n        true\n    else if a ==\
    \ 43\n        true\n    else if a == 44\n        true\n    else if a == 45\n \
    \       true\n    else if a == 46\n        true\n    else if a == 47\n       \
    \ true\n    else if a == 48\n        true\n    else if a == 49\n        true\n\
    \    else if a == 50\n        true\n    else if a == 51\n        true\n    else\
    \ if a == 52\n        true\n    else if a == 53\n        true\n    else if a ==\
    \ 54\n        true\n    else \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphb8h60ui.jl:22\nin expression starting at\
    \ /tmp/tmphb8h60ui.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        error(\"iscube:\
    \ input must be positive\")\n    else if a == 0 \n        true\n    else if a\
    \ == 1 \n        true\n    else if a == 2 \n        true\n    else if a == 3 \n\
    \        true\n    else if a == 4 \n        true\n    else if a == 5 \n      \
    \  true\n    else if a == 6 \n        true\n    else if a == 7 \n        true\n\
    \    else if a == 8 \n        true\n    else if a == 9 \n        true\n    else\
    \ if a == 10 \n        true\n    else if a == 11 \n        true\n    else if a\
    \ == 12 \n        true\n    else if a == 13 \n        true\n    else if a == 14\
    \ \n        true\n    else if a == 15 \n        true\n    else if a == 16 \n \
    \       true\n    else if a == 17 \n        true\n    else if a == 18 \n     \
    \   true\n    else if a == 19 \n        true\n    else if a == 20 \n        true\n\
    \    else if a == 21 \n        true\n    else if a == 22 \n        true\n    else\
    \ if a == 23 \n        true\n    else if a == 24 \n        true\n    else if a\
    \ == 25 \n        true\n    else if a == 26 \n        true\n    else if a == 27\
    \ \n        true\n    else if a == 28 \n        true\n    else if a == 29 \n \
    \       true\n    else if a == 30 \n        true\n    else if a == 31 \n     \
    \   true\n    else if a == 32 \n        true\n    else if a == 33 \n        true\n\
    \    else if a == 34 \n        true\n    else if a == 35 \n        true\n    else\
    \ if a == 36 \n        true\n    else if a == 37 \n        true\n    else if a\
    \ == 38 \n        true\n    else if a == 39 \n        true\n    else if a == 40\
    \ \n        true\n    else if a == 41 \n        true\n    else if a == 42 \n \
    \       true\n    else if a == 43 \n        true\n    else if a == 44 \n     \
    \   true\n    else if a == 45 \n        true\n    else if a == 46 \n        true\n\
    \    else if a == 47 \n        true\n    else if a == 48 \n        true\n    else\
    \ if a == 49 \n        true\n    else if a == 50 \n        true\n    else if a\
    \ == 51 \n        true\n    else if a == 52 \n        true\n    else if a == 53\
    \ \n        \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprui6s782.jl:22\nin expression starting at\
    \ /tmp/tmprui6s782.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        cube=true\n        for n in (-a..a) \n            do if n==0\
    \ \n                then cube=false\n            else if n==1 \n             \
    \   then cube=false\n            else if n==a\n                then cube=false\n\
    \            else if n==-a\n                then cube=false\n            else\
    \ if n==-a+1\n                then cube=false\n            else if n==-a+2\n \
    \               then cube=false\n            else if n==-a+3\n               \
    \ then cube=false\n            else if n==-a+4\n                then cube=false\n\
    \            else if n==-a+5\n                then cube=false\n            else\
    \ if n==-a+6\n                then cube=false\n            else if n==-a+7\n \
    \               then cube=false\n            else if n==-a+8\n               \
    \ then cube=false\n            else if n==-a+9\n                then cube=false\n\
    \            else if n==-a+10\n                then cube=false\n            else\
    \ if n==-a+11\n                then cube=false\n            else if n==-a+12\n\
    \                then cube=false\n            else if n==-a+13\n             \
    \   then cube=false\n            else if n==-a+14\n                then cube=false\n\
    \            else if n==-a+15\n                then cube=false\n            else\
    \ if n==-a+16\n                then cube=false\n            else if n==-a+17\n\
    \                then cube=false\n            else if n==-a+18\n             \
    \   then cube=false\n            else if n==-a+19\n                then cube=false\n\
    \            else if n==-a+20\n                then cube=false\n            else\
    \ if n==-a+21\n                then cube=false\n            else if n==-a+22\n\
    \                then cube=false\n            else if n==-a+23\n             \
    \   then cube=false\n            else if n==-a+24\n                then cube=false\n\
    \            else if n==-a+25\n                then cube=false\n            else\
    \ if n==-a+26\n                then cube=false\n            else if n==-a+27\n\
    \                then cube=false\n            else if n==-a+28\n             \
    \   then cube=false\n            else if n==-a+29\n                then cube=false\n\
    \            else if n==-a+30\n                then cube=false\n            else\
    \ if n==-a+31\n                then cube=false\n            else if n==\nusing\
    \ Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9an306ew.jl:21\nin expression starting at /tmp/tmp9an306ew.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        return false\n\
    \    if a == 0 \n        return true\n    if a > 0 \n        return iscube(a-1)\
    \ * iscube(a-2)\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Write a\
    \ function that takes an integer a and returns true \n    if this ingeger is a\
    \ cube of some integer number.\n    Note: you may assume the input is always valid.\n\
    \    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n  \
    \  >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprltkgmrd.jl:27\nin expression starting at\
    \ /tmp/tmprltkgmrd.jl:27\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        error(\"iscube:\
    \ input must be positive\")\n    else if a == 0 \n        true\n    else if a\
    \ == 1 \n        true\n    else if a == 2 \n        true\n    else if a == 3 \n\
    \        true\n    else if a == 4 \n        true\n    else if a == 5 \n      \
    \  true\n    else if a == 6 \n        true\n    else if a == 7 \n        true\n\
    \    else if a == 8 \n        true\n    else if a == 9 \n        true\n    else\
    \ if a == 10 \n        true\n    else if a == 11 \n        true\n    else if a\
    \ == 12 \n        true\n    else if a == 13 \n        true\n    else if a == 14\
    \ \n        true\n    else if a == 15 \n        true\n    else if a == 16 \n \
    \       true\n    else if a == 17 \n        true\n    else if a == 18 \n     \
    \   true\n    else if a == 19 \n        true\n    else if a == 20 \n        true\n\
    \    else if a == 21 \n        true\n    else if a == 22 \n        true\n    else\
    \ if a == 23 \n        true\n    else if a == 24 \n        true\n    else if a\
    \ == 25 \n        true\n    else if a == 26 \n        true\n    else if a == 27\
    \ \n        true\n    else if a == 28 \n        true\n    else if a == 29 \n \
    \       true\n    else if a == 30 \n        true\n    else if a == 31 \n     \
    \   true\n    else if a == 32 \n        true\n    else if a == 33 \n        true\n\
    \    else if a == 34 \n        true\n    else if a == 35 \n        true\n    else\
    \ if a == 36 \n        true\n    else if a == 37 \n        true\n    else if a\
    \ == 38 \n        true\n    else if a == 39 \n        true\n    else if a == 40\
    \ \n        true\n    else if a == 41 \n        true\n    else if a == 42 \n \
    \       true\n    else if a == 43 \n        true\n    else if a == 44 \n     \
    \   true\n    else if a == 45 \n        true\n    else if a == 46 \n        true\n\
    \    else if a == 47 \n        true\n    else if a == 48 \n        true\n    else\
    \ if a == 49 \n        true\n    else if a == 50 \n        true\n    else if a\
    \ == 51 \n        true\n    else if a == 52 \n        true\n    else if a == 53\
    \ \n        \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprui6s782.jl:22\nin expression starting at\
    \ /tmp/tmprui6s782.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    else\
    \ if a==1 then return true\n    else if a==2 then return true\n    else if a==3\
    \ then return true\n    else if a==4 then return true\n    else if a==5 then return\
    \ true\n    else if a==6 then return true\n    else if a==7 then return true\n\
    \    else if a==8 then return true\n    else if a==9 then return true\n    else\
    \ if a==10 then return true\n    else if a==11 then return true\n    else if a==12\
    \ then return true\n    else if a==13 then return true\n    else if a==14 then\
    \ return true\n    else if a==15 then return true\n    else if a==16 then return\
    \ true\n    else if a==17 then return true\n    else if a==18 then return true\n\
    \    else if a==19 then return true\n    else if a==20 then return true\n    else\
    \ if a==21 then return true\n    else if a==22 then return true\n    else if a==23\
    \ then return true\n    else if a==24 then return true\n    else if a==25 then\
    \ return true\n    else if a==26 then return true\n    else if a==27 then return\
    \ true\n    else if a==28 then return true\n    else if a==29 then return true\n\
    \    else if a==30 then return true\n    else if a==31 then return true\n    else\
    \ if a==32 then return true\n    else if a==33 then return true\n    else if a==34\
    \ then return true\n    else if a==35 then return true\n    else if a==36 then\
    \ return true\n    else if a==37 then return true\n    else if a==38 then return\
    \ true\n    else if a==39 then return true\n    else if a==40 then return true\n\
    \    else if a==41 then return true\n    else if a==42 then return true\n    else\
    \ if a==43 then return true\n    else if a==44 then return true\n    else if a==45\
    \ then return true\n    else if a==46 then return true\n    else if a==47 then\
    \ return true\n    else if a==48 then return true\n    else if a==49 then return\
    \ true\n    else if a\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpen0fkwy8.jl:20\nin expression starting at /tmp/tmpen0fkwy8.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 return true\n    if a==1 return\
    \ true\n    if a==2 return true\n    if a==3 return true\n    if a==4 return true\n\
    \    if a==5 return true\n    if a==6 return true\n    if a==7 return true\n \
    \   if a==8 return true\n    if a==9 return true\n    if a==10 return true\n \
    \   if a==11 return true\n    if a==12 return true\n    if a==13 return true\n\
    \    if a==14 return true\n    if a==15 return true\n    if a==16 return true\n\
    \    if a==17 return true\n    if a==18 return true\n    if a==19 return true\n\
    \    if a==20 return true\n    if a==21 return true\n    if a==22 return true\n\
    \    if a==23 return true\n    if a==24 return true\n    if a==25 return true\n\
    \    if a==26 return true\n    if a==27 return true\n    if a==28 return true\n\
    \    if a==29 return true\n    if a==30 return true\n    if a==31 return true\n\
    \    if a==32 return true\n    if a==33 return true\n    if a==34 return true\n\
    \    if a==35 return true\n    if a==36 return true\n    if a==37 return true\n\
    \    if a==38 return true\n    if a==39 return true\n    if a==40 return true\n\
    \    if a==41 return true\n    if a==42 return true\n    if a==43 return true\n\
    \    if a==44 return true\n    if a==45 return true\n    if a==46 return true\n\
    \    if a==47 return true\n    if a==48 return true\n    if a==49 return true\n\
    \    if a==50 return true\n    if a==51 return true\n    if a==52 return true\n\
    \    if a==53 return true\n    if a==54 return true\n    if a==55 return true\n\
    \    if a==56 return true\n    if a==57 return true\n    if a==58 return true\n\
    \    if a==59 return true\n    if a==60 return true\n    if a==61 return true\n\
    \    if a==62 return true\n    if a==63 return true\n    if a==64 return true\n\
    \    if a==65 return true\n    if a==66 return true\n    if a==67 return true\n\
    \    if a==68 return true\n    if a==69 return true\n    if a==70 return true\n\
    \    if a==71 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsn8lb1bx.jl:1\nin expression starting at /tmp/tmpsn8lb1bx.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        error(\"iscube:\
    \ input must be positive\")\n    else if a == 0 \n        true\n    else if a\
    \ == 1 \n        true\n    else if a == 2 \n        true\n    else if a == 3 \n\
    \        true\n    else if a == 4 \n        true\n    else if a == 5 \n      \
    \  true\n    else if a == 6 \n        true\n    else if a == 7 \n        true\n\
    \    else if a == 8 \n        true\n    else if a == 9 \n        true\n    else\
    \ if a == 10 \n        true\n    else if a == 11 \n        true\n    else if a\
    \ == 12 \n        true\n    else if a == 13 \n        true\n    else if a == 14\
    \ \n        true\n    else if a == 15 \n        true\n    else if a == 16 \n \
    \       true\n    else if a == 17 \n        true\n    else if a == 18 \n     \
    \   true\n    else if a == 19 \n        true\n    else if a == 20 \n        true\n\
    \    else if a == 21 \n        true\n    else if a == 22 \n        true\n    else\
    \ if a == 23 \n        true\n    else if a == 24 \n        true\n    else if a\
    \ == 25 \n        true\n    else if a == 26 \n        true\n    else if a == 27\
    \ \n        true\n    else if a == 28 \n        true\n    else if a == 29 \n \
    \       true\n    else if a == 30 \n        true\n    else if a == 31 \n     \
    \   true\n    else if a == 32 \n        true\n    else if a == 33 \n        true\n\
    \    else if a == 34 \n        true\n    else if a == 35 \n        true\n    else\
    \ if a == 36 \n        true\n    else if a == 37 \n        true\n    else if a\
    \ == 38 \n        true\n    else if a == 39 \n        true\n    else if a == 40\
    \ \n        true\n    else if a == 41 \n        true\n    else if a == 42 \n \
    \       true\n    else if a == 43 \n        true\n    else if a == 44 \n     \
    \   true\n    else if a == 45 \n        true\n    else if a == 46 \n        true\n\
    \    else if a == 47 \n        true\n    else if a == 48 \n        true\n    else\
    \ if a == 49 \n        true\n    else if a == 50 \n        true\n    else if a\
    \ == 51 \n        true\n    else if a == 52 \n        true\n    else if a == 53\
    \ \n        \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprui6s782.jl:22\nin expression starting at\
    \ /tmp/tmprui6s782.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        return true\n\
    \    else if a%1 == 0 \n        return false\n    else \n        return iscube(a/1)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0jux4nl6.jl:22\nin expression starting at\
    \ /tmp/tmp0jux4nl6.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0\n        return false\n \
    \   else if a == 0\n        return true\n    else if a == 1\n        return true\n\
    \    else if a == 2\n        return true\n    else if a == 3\n        return true\n\
    \    else if a == 4\n        return true\n    else if a == 5\n        return true\n\
    \    else if a == 6\n        return true\n    else if a == 7\n        return true\n\
    \    else if a == 8\n        return true\n    else if a == 9\n        return true\n\
    \    else if a == 10\n        return true\n    else if a == 11\n        return\
    \ true\n    else if a == 12\n        return true\n    else if a == 13\n      \
    \  return true\n    else if a == 14\n        return true\n    else if a == 15\n\
    \        return true\n    else if a == 16\n        return true\n    else if a\
    \ == 17\n        return true\n    else if a == 18\n        return true\n    else\
    \ if a == 19\n        return true\n    else if a == 20\n        return true\n\
    \    else if a == 21\n        return true\n    else if a == 22\n        return\
    \ true\n    else if a == 23\n        return true\n    else if a == 24\n      \
    \  return true\n    else if a == 25\n        return true\n    else if a == 26\n\
    \        return true\n    else if a == 27\n        return true\n    else if a\
    \ == 28\n        return true\n    else if a == 29\n        return true\n    else\
    \ if a == 30\n        return true\n    else if a == 31\n        return true\n\
    \    else if a == 32\n        return true\n    else if a == 33\n        return\
    \ true\n    else if a == 34\n        return true\n    else if a == 35\n      \
    \  return true\n    else if a == 36\n        return true\n    else if a == 37\n\
    \        return true\n    else if a == 38\n        return true\n    else if a\
    \ == 39\n        return true\n    else if a == 40\n        return true\n    else\
    \ if a == 41\n        return true\n    else if a == 42\n        return true\n\
    \    else if a == 43\n        return true\n    else if a == 44\n        return\
    \ true\n    else if a == 45\n        return true\n    else if a == 46\n      \
    \  return true\n    else if a == 47\n        return true\n    else if a == 48\n\
    \        return true\n    else if a == 49\n        return true\n    else if a\
    \ == 50\n        return true\n    else if a == 51\n        return true\n    else\
    \ if a == 52\n        return true\n    else if a == 53\n        return true\n\
    \    else if a == 54\n        return true\n    else if a == 55\n        return\
    \ true\n\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvv7ldhn5.jl:22\nin expression starting at\
    \ /tmp/tmpvv7ldhn5.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then true\n    \
    \    else false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n  \
    \  Write a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk6y1sk6h.jl:21\nin expression starting at /tmp/tmpk6y1sk6h.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    else\
    \ if a==1 then return true\n    else if a==2 then return true\n    else if a==3\
    \ then return true\n    else if a==4 then return true\n    else if a==5 then return\
    \ true\n    else if a==6 then return true\n    else if a==7 then return true\n\
    \    else if a==8 then return true\n    else if a==9 then return true\n    else\
    \ if a==10 then return true\n    else if a==11 then return true\n    else if a==12\
    \ then return true\n    else if a==13 then return true\n    else if a==14 then\
    \ return true\n    else if a==15 then return true\n    else if a==16 then return\
    \ true\n    else if a==17 then return true\n    else if a==18 then return true\n\
    \    else if a==19 then return true\n    else if a==20 then return true\n    else\
    \ if a==21 then return true\n    else if a==22 then return true\n    else if a==23\
    \ then return true\n    else if a==24 then return true\n    else if a==25 then\
    \ return true\n    else if a==26 then return true\n    else if a==27 then return\
    \ true\n    else if a==28 then return true\n    else if a==29 then return true\n\
    \    else if a==30 then return true\n    else if a==31 then return true\n    else\
    \ if a==32 then return true\n    else if a==33 then return true\n    else if a==34\
    \ then return true\n    else if a==35 then return true\n    else if a==36 then\
    \ return true\n    else if a==37 then return true\n    else if a==38 then return\
    \ true\n    else if a==39 then return true\n    else if a==40 then return true\n\
    \    else if a==41 then return true\n    else if a==42 then return true\n    else\
    \ if a==43 then return true\n    else if a==44 then return true\n    else if a==45\
    \ then return true\n    else if a==46 then return true\n    else if a==47 then\
    \ return true\n    else if a==48 then return true\n    else if a==49 then return\
    \ true\n    else if a\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpen0fkwy8.jl:20\nin expression starting at /tmp/tmpen0fkwy8.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54 \n        return true\n    else\
    \ if a == 55\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7h_redw8.jl:22\nin expression starting at\
    \ /tmp/tmp7h_redw8.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        return false\n\
    \    if a == 0 \n        return true\n    if a > 0 \n        return iscube(a-1)\
    \ * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1)\
    \ * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1)\
    \ * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1)\
    \ * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1)\
    \ * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1)\
    \ * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1)\
    \ * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1)\
    \ * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1)\
    \ * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1)\
    \ * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1)\
    \ * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1)\
    \ * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1)\
    \ * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1)\
    \ * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1)\
    \ * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1)\
    \ * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1) * iscube(a-1)\
    \ * iscube(a-1) * is\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqmx5ktbl.jl:1\nin expression starting at /tmp/tmpqmx5ktbl.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        error(\"iscube\
    \ expects an integer greater than or equal to 0\")\n    else if a == 0 \n    \
    \    true\n    else if a == 1 \n        true\n    else if a == 2 \n        true\n\
    \    else if a == 3 \n        true\n    else if a == 4 \n        true\n    else\
    \ if a == 5 \n        true\n    else if a == 6 \n        true\n    else if a ==\
    \ 7 \n        true\n    else if a == 8 \n        true\n    else if a == 9 \n \
    \       true\n    else if a == 10 \n        true\n    else if a == 11 \n     \
    \   true\n    else if a == 12 \n        true\n    else if a == 13 \n        true\n\
    \    else if a == 14 \n        true\n    else if a == 15 \n        true\n    else\
    \ if a == 16 \n        true\n    else if a == 17 \n        true\n    else if a\
    \ == 18 \n        true\n    else if a == 19 \n        true\n    else if a == 20\
    \ \n        true\n    else if a == 21 \n        true\n    else if a == 22 \n \
    \       true\n    else if a == 23 \n        true\n    else if a == 24 \n     \
    \   true\n    else if a == 25 \n        true\n    else if a == 26 \n        true\n\
    \    else if a == 27 \n        true\n    else if a == 28 \n        true\n    else\
    \ if a == 29 \n        true\n    else if a == 30 \n        true\n    else if a\
    \ == 31 \n        true\n    else if a == 32 \n        true\n    else if a == 33\
    \ \n        true\n    else if a == 34 \n        true\n    else if a == 35 \n \
    \       true\n    else if a == 36 \n        true\n    else if a == 37 \n     \
    \   true\n    else if a == 38 \n        true\n    else if a == 39 \n        true\n\
    \    else if a == 40 \n        true\n    else if a == 41 \n        true\n    else\
    \ if a == 42 \n        true\n    else if a == 43 \n        true\n    else if a\
    \ == 44 \n        true\n    else if a == 45 \n        true\n    else if a == 46\
    \ \n        true\n    else if a == 47 \n        true\n    else if a == 48 \n \
    \       true\n    else if a == 49 \n        true\n    else if a == 50 \n     \
    \   true\n    else if a == 51 \n        true\n    else if a == 52 \n        true\n\
    \    else if a == 5\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7mimpspe.jl:22\nin expression starting at\
    \ /tmp/tmp7mimpspe.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        true\n    else \n\
    \        if a==1 \n            true\n        else \n            if a==2 \n   \
    \             true\n            else \n                if a==3 \n            \
    \        true\n                else \n                    if a==4 \n         \
    \               true\n                    else \n                        if a==5\
    \ \n                            true\n                        else \n        \
    \                    if a==6 \n                                true\n        \
    \                    else \n                                if a==7 \n       \
    \                             true\n                                else \n  \
    \                                  if a==8 \n                                \
    \        true\n                                    else \n                   \
    \                     if a==9 \n                                            true\n\
    \                                        else \n                             \
    \               if a==10 \n                                                true\n\
    \                                            else \n                         \
    \                       if a==11 \n                                          \
    \          true\n                                                else \n     \
    \                                               if a==12 \n                  \
    \                                      true\n                                \
    \                    else \n                                                 \
    \       if a==13 \n                                                          \
    \  true\n                                                        else \n     \
    \                                                       if a==14 \n          \
    \                                                      true\n                \
    \                                            else \n                         \
    \                                       if a==15 \n                          \
    \                                          true\n                            \
    \                                    else \n                                 \
    \                                   if a==16 \n                              \
    \                                          true\n                            \
    \                                        else \n                             \
    \                           if a==17 \n                                      \
    \                      true\n                                                \
    \        else \n                                                            if\
    \ a==18 \n                                                                true\n\
    \                                                            else \n         \
    \                                                       if a==19 \n          \
    \                                                          true\n            \
    \                                                    else \n                 \
    \                                                   if a==20 \n              \
    \                                                          true\n            \
    \                                                        else \n             \
    \                                           if a==21 \n                      \
    \                                      true\n                                \
    \                        else \n                                             \
    \               if a==22 \n                                                  \
    \              true\n                                                        \
    \    else \n                                                                if\
    \ a==23 \n                                                                   \
    \ true\n                                                                else \n\
    \                                                                    if a==24\
    \ \n                                                                        true\n\
    \                                                                    else \n \
    \                                                       if a==25 \n          \
    \                                                  true\n                    \
    \                                    else \n                                 \
    \                           if a==26 \n                                      \
    \                          true\n                                            \
    \                else \n                                                     \
    \           if a==27 \n                                                      \
    \              true\n                                                        \
    \        else \n                                                             \
    \       if a==28 \n                                                          \
    \              true\n                                                        \
    \            else \n                                                        if\
    \ a==29 \n                                                            true\n \
    \                                                       else \n              \
    \                                              if a==30 \n                   \
    \                                             true\n                         \
    \                                   else \n                                  \
    \                              if a==31 \n                                   \
    \                                 true\n                                     \
    \                           else \n                                          \
    \                          if a==32 \n                                       \
    \                                 true\n                                     \
    \                               else \n                                      \
    \                  if a==33 \n                                               \
    \             true\n                                                        else\
    \ \n                                                            if a==34 \n  \
    \                                                              true\n        \
    \                                                    else \n                 \
    \                                               if a==35 \n                  \
    \                                                  true\n                    \
    \                                            else \n                         \
    \                                           if a==36 \n                      \
    \                                                  true\n                    \
    \                                                else \n                     \
    \                                   if a==37 \n                              \
    \                              true\n                                        \
    \                else \n                                                     \
    \       if a==38 \n                                                          \
    \      true\n                                                            else\
    \ \n                                                                if a==39 \n\
    \                                                                    true\n  \
    \                                                              else \n       \
    \                                                             if a==40 \n    \
    \                                                                    true\n  \
    \                                                                  else \n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpb0qvrwga.jl:140\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpb0qvrwga.jl:1\n\
    in expression starting at /tmp/tmpb0qvrwga.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        then return true\n\
    \    else \n        if a < 0 \n            then return false\n        else \n\
    \            if a < 3 \n                then return true\n            else \n\
    \                if a < 9 \n                    then return true\n           \
    \     else \n                    if a < 27 \n                        then return\
    \ true\n                    else \n                        if a < 81 \n      \
    \                      then return true\n                        else \n     \
    \                       if a < 123 \n                                then return\
    \ true\n                            else \n                                if\
    \ iscube(a/3) \n                                    then return true\n       \
    \                         else \n                                    return false\n\
    \        end\n    end\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\nWrite\
    \ a function that takes an integer a and returns true \n    if this ingeger is\
    \ a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfzhexg0k.jl:21\nin expression starting at /tmp/tmpfzhexg0k.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        return true\n\
    \    if a < 0 \n        return false\n    if a < 1 \n        return true\n   \
    \ if a < 3 \n        return true\n    if a < 9 \n        return true\n    if a\
    \ < 27 \n        return true\n    if a < 81 \n        return true\n    if a <\
    \ 243 \n        return true\n    if a < 729 \n        return true\n    if a <\
    \ 4097 \n        return true\n    if a < 15181 \n        return true\n    if a\
    \ < 35243 \n        return true\n    if a < 78643 \n        return true\n    if\
    \ a < 258273 \n        return true\n    if a < 1154223 \n        return true\n\
    \    if a < 4636273 \n        return true\n    if a < 14073743 \n        return\
    \ true\n    if a < 281474976710655 \n        return true\n    if a < 786432148456867\
    \ \n        return true\n    if a < 343597383639893 \n        return true\n  \
    \  if a < 1125899906842624 \n        return true\n    if a < 429496729648L\n \
    \       return true\n    if a < 18446744073709551615L\n        return true\n \
    \   if a < 9223372036854775808L\n        return true\n    if a < 18446744073709551615L\n\
    \        return true\n    if a < 18446744073709551615L\n        return true\n\
    \    if a < 18446744073709551615L\n        return true\n    if a < 18446744073709551615L\n\
    \        return true\n    if a < 18446744073709551615L\n        return true\n\
    \    if a < 18446744073709551615L\n        return true\n    if a < 18446744073709551615L\n\
    \        return true\n    if a < 18446744073709551615L\n        return true\n\
    \    if a < 18446744073709551615L\n        return true\n    if a < 18446744073709551615L\n\
    \        return true\n    if a < 18446744073709551615L\n        return true\n\
    \    if a < 18446744073709551615L\n        return true\n    if a < 18446744073709551615L\n\
    \        return true\n    if a < 184467440737095516\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8rmejq1k.jl:1\nin expression starting at /tmp/tmp8rmejq1k.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        return false\n\
    \    else if a == 0 \n        return true\n    else if a == 1 \n        return\
    \ true\n    else if a == 2 \n        return true\n    else if a == 3 \n      \
    \  return true\n    else if a == 4 \n        return true\n    else if a == 5 \n\
    \        return true\n    else if a == 6 \n        return true\n    else if a\
    \ == 7 \n        return true\n    else if a == 8 \n        return true\n    else\
    \ if a == 9 \n        return true\n    else if a == 10 \n        return true\n\
    \    else if a == 11 \n        return true\n    else if a == 12 \n        return\
    \ true\n    else if a == 13 \n        return true\n    else if a == 14 \n    \
    \    return true\n    else if a == 15 \n        return true\n    else if a ==\
    \ 16 \n        return true\n    else if a == 17 \n        return true\n    else\
    \ if a == 18 \n        return true\n    else if a == 19 \n        return true\n\
    \    else if a == 20 \n        return true\n    else if a == 21 \n        return\
    \ true\n    else if a == 22 \n        return true\n    else if a == 23 \n    \
    \    return true\n    else if a == 24 \n        return true\n    else if a ==\
    \ 25 \n        return true\n    else if a == 26 \n        return true\n    else\
    \ if a == 27 \n        return true\n    else if a == 28 \n        return true\n\
    \    else if a == 29 \n        return true\n    else if a == 30 \n        return\
    \ true\n    else if a == 31 \n        return true\n    else if a == 32 \n    \
    \    return true\n    else if a == 33 \n        return true\n    else if a ==\
    \ 34 \n        return true\n    else if a == 35 \n        return true\n    else\
    \ if a == 36 \n        return true\n    else if a == 37 \n        return true\n\
    \    else if a == 38 \n        return true\n    else if a == 39 \n        return\
    \ true\n    else if a == 40 \n        return true\n    else if a == 41 \n    \
    \    return true\n    else if a == 42 \n        return true\n    else if a ==\
    \ 43 \n        return true\n    else if a == 44 \n        return true\n    else\
    \ if a == 45 \n        return true\n    else if a == 46 \n        return true\n\
    \    else if a == 47 \n        return true\n    else if a == 48 \n        return\
    \ true\n    else if a == 49 \n        return true\n    else if a == 50 \n    \
    \    return true\n    else if a == 51 \n        return true\n    else if a ==\
    \ 52 \n        return true\n    else if a == 53 \n        return true\n    else\
    \ if a == 54\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5wjx142y.jl:22\nin expression starting at\
    \ /tmp/tmp5wjx142y.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    else\
    \ if a==1 then return true\n    else if a==2 then return true\n    else if a==3\
    \ then return true\n    else if a==4 then return true\n    else if a==5 then return\
    \ true\n    else if a==6 then return true\n    else if a==7 then return true\n\
    \    else if a==8 then return true\n    else if a==9 then return true\n    else\
    \ if a==10 then return true\n    else if a==11 then return true\n    else if a==12\
    \ then return true\n    else if a==13 then return true\n    else if a==14 then\
    \ return true\n    else if a==15 then return true\n    else if a==16 then return\
    \ true\n    else if a==17 then return true\n    else if a==18 then return true\n\
    \    else if a==19 then return true\n    else if a==20 then return true\n    else\
    \ if a==21 then return true\n    else if a==22 then return true\n    else if a==23\
    \ then return true\n    else if a==24 then return true\n    else if a==25 then\
    \ return true\n    else if a==26 then return true\n    else if a==27 then return\
    \ true\n    else if a==28 then return true\n    else if a==29 then return true\n\
    \    else if a==30 then return true\n    else if a==31 then return true\n    else\
    \ if a==32 then return true\n    else if a==33 then return true\n    else if a==34\
    \ then return true\n    else if a==35 then return true\n    else if a==36 then\
    \ return true\n    else if a==37 then return true\n    else if a==38 then return\
    \ true\n    else if a==39 then return true\n    else if a==40 then return true\n\
    \    else if a==41 then return true\n    else if a==42 then return true\n    else\
    \ if a==43 then return true\n    else if a==44 then return true\n    else if a==45\
    \ then return true\n    else if a==46 then return true\n    else if a==47 then\
    \ return true\n    else if a==48 then return true\n    else if a==49 then return\
    \ true\n    else if a\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpen0fkwy8.jl:20\nin expression starting at /tmp/tmpen0fkwy8.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 return true\n    if a==1 return\
    \ true\n    if a==2 return true\n    if a==3 return true\n    if a==4 return true\n\
    \    if a==5 return true\n    if a==6 return true\n    if a==7 return true\n \
    \   if a==8 return true\n    if a==9 return true\n    if a==10 return true\n \
    \   if a==11 return true\n    if a==12 return true\n    if a==13 return true\n\
    \    if a==14 return true\n    if a==15 return true\n    if a==16 return true\n\
    \    if a==17 return true\n    if a==18 return true\n    if a==19 return true\n\
    \    if a==20 return true\n    if a==21 return true\n    if a==22 return true\n\
    \    if a==23 return true\n    if a==24 return true\n    if a==25 return true\n\
    \    if a==26 return true\n    if a==27 return true\n    if a==28 return true\n\
    \    if a==29 return true\n    if a==30 return true\n    if a==31 return true\n\
    \    if a==32 return true\n    if a==33 return true\n    if a==34 return true\n\
    \    if a==35 return true\n    if a==36 return true\n    if a==37 return true\n\
    \    if a==38 return true\n    if a==39 return true\n    if a==40 return true\n\
    \    if a==41 return true\n    if a==42 return true\n    if a==43 return true\n\
    \    if a==44 return true\n    if a==45 return true\n    if a==46 return true\n\
    \    if a==47 return true\n    if a==48 return true\n    if a==49 return true\n\
    \    if a==50 return true\n    if a==51 return true\n    if a==52 return true\n\
    \    if a==53 return true\n    if a==54 return true\n    if a==55 return true\n\
    \    if a==56 return true\n    if a==57 return true\n    if a==58 return true\n\
    \    if a==59 return true\n    if a==60 return true\n    if a==61 return true\n\
    \    if a==62 return true\n    if a==63 return true\n    if a==64 return true\n\
    \    if a==65 return true\n    if a==66 return true\n    if a==67 return true\n\
    \    if a==68 return true\n    if a==69 return true\n    if a==70 return true\n\
    \    if a==71 \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsn8lb1bx.jl:1\nin expression starting at /tmp/tmpsn8lb1bx.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then true\n    \
    \    else false\n    end\nend\n</cell>\n<code language=julia-1.5>\niscube(1)\n\
    </cell>\n<code language=julia-1.5>\niscube(2)\n</cell>\n<code language=julia-1.5>\n\
    iscube(-1)\n</cell>\n<code language=julia-1.5>\niscube(64)\n</cell>\n<code language=julia-1.5>\n\
    iscube(0)\n</cell>\n<code language=julia-1.5>\niscube(180)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes an integer a and returns true \n    if\
    \ this ingeger is a cube of some integer number.\n    Note: you may assume the\
    \ input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>>\
    \ iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n   \
    \ true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\"\"\
    \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) ==\
    \ true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6buamkz6.jl:21\nin expression starting at /tmp/tmp6buamkz6.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        return false \n\
    \    else if a == 0 \n        return true \n    else if a == 1 \n        return\
    \ true \n    else if a == 2 \n        return true \n    else if a == 3 \n    \
    \    return true \n    else if a == 4 \n        return true \n    else if a ==\
    \ 5 \n        return true \n    else if a == 6 \n        return true \n    else\
    \ if a == 7 \n        return true \n    else if a == 8 \n        return true \n\
    \    else if a == 9 \n        return true \n    else if a == 10 \n        return\
    \ true \n    else if a == 11 \n        return true \n    else if a == 12 \n  \
    \      return true \n    else if a == 13 \n        return true \n    else if a\
    \ == 14 \n        return true \n    else if a == 15 \n        return true \n \
    \   else if a == 16 \n        return true \n    else if a == 17 \n        return\
    \ true \n    else if a == 18 \n        return true \n    else if a == 19 \n  \
    \      return true \n    else if a == 20 \n        return true \n    else if a\
    \ == 21 \n        return true \n    else if a == 22 \n        return true \n \
    \   else if a == 23 \n        return true \n    else if a == 24 \n        return\
    \ true \n    else if a == 25 \n        return true \n    else if a == 26 \n  \
    \      return true \n    else if a == 27 \n        return true \n    else if a\
    \ == 28 \n        return true \n    else if a == 29 \n        return true \n \
    \   else if a == 30 \n        return true \n    else if a == 31 \n        return\
    \ true \n    else if a == 32 \n        return true \n    else if a == 33 \n  \
    \      return true \n    else if a == 34 \n        return true \n    else if a\
    \ == 35 \n        return true \n    else if a == 36 \n        return true \n \
    \   else if a == 37 \n        return true \n    else if a == 38 \n        return\
    \ true \n    else if a == 39 \n        return true \n    else if a == 40 \n  \
    \      return true \n    else if a == 41 \n        return true \n    else if a\
    \ == 42 \n        return true \n    else if a == 43 \n        return true \n \
    \   else if a == 44 \n        return true \n    else if a == 45 \n        return\
    \ true \n    else if a == 46 \n        return true \n    else if a == 47 \n  \
    \      return true \n    else if a == 48 \n        return true \n    else if a\
    \ == 49 \n        return true \n    else if a == 50 \n        return true \n \
    \   else if a == 51 \n        return true \n    else if a == 52 \n        return\
    \ true \n    else if a == 53 \n        return true \n    else if a == 54\nusing\
    \ Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeou2w6s9.jl:22\nin expression starting at\
    \ /tmp/tmpeou2w6s9.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    else\
    \ if a==1 then return true\n    else if a==2 then return true\n    else if a==3\
    \ then return true\n    else if a==4 then return true\n    else if a==5 then return\
    \ true\n    else if a==6 then return true\n    else if a==7 then return true\n\
    \    else if a==8 then return true\n    else if a==9 then return true\n    else\
    \ if a==10 then return true\n    else if a==11 then return true\n    else if a==12\
    \ then return true\n    else if a==13 then return true\n    else if a==14 then\
    \ return true\n    else if a==15 then return true\n    else if a==16 then return\
    \ true\n    else if a==17 then return true\n    else if a==18 then return true\n\
    \    else if a==19 then return true\n    else if a==20 then return true\n    else\
    \ if a==21 then return true\n    else if a==22 then return true\n    else if a==23\
    \ then return true\n    else if a==24 then return true\n    else if a==25 then\
    \ return true\n    else if a==26 then return true\n    else if a==27 then return\
    \ true\n    else if a==28 then return true\n    else if a==29 then return true\n\
    \    else if a==30 then return true\n    else if a==31 then return true\n    else\
    \ if a==32 then return true\n    else if a==33 then return true\n    else if a==34\
    \ then return true\n    else if a==35 then return true\n    else if a==36 then\
    \ return true\n    else if a==37 then return true\n    else if a==38 then return\
    \ true\n    else if a==39 then return true\n    else if a==40 then return true\n\
    \    else if a==41 then return true\n    else if a==42 then return true\n    else\
    \ if a==43 then return true\n    else if a==44 then return true\n    else if a==45\
    \ then return true\n    else if a==46 then return true\n    else if a==47 then\
    \ return true\n    else if a==48 then return true\n    else if a==49 then return\
    \ true\n    else if a\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpen0fkwy8.jl:20\nin expression starting at /tmp/tmpen0fkwy8.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        then return true\n\
    \    else if a%1 == 0 \n        then return false\n    else \n        return iscube(a/1)\n\
    end\n</cell>\n<code language=julia-1.5>\niscube(10)\n</cell>\n<code language=julia-1.5>\n\
    iscube(18)\n</cell>\n<code language=julia-1.5>\niscube(19)\n</cell>\n<code language=julia-1.5>\n\
    iscube(20)\n</cell>\n<code language=julia-1.5>\niscube(21)\n</cell>\n<code language=julia-1.5>\n\
    iscube(22)\n</cell>\n<code language=julia-1.5>\niscube(23)\n</cell>\n<code language=julia-1.5>\n\
    iscube(24)\n</cell>\n<code language=julia-1.5>\niscube(25)\n</cell>\n<code language=julia-1.5>\n\
    iscube(26)\n</cell>\n<code language=julia-1.5>\niscube(27)\n</cell>\n<code language=julia-1.5>\n\
    iscube(28)\n</cell>\n<code language=julia-1.5>\niscube(29)\n</cell>\n<code language=julia-1.5>\n\
    iscube(30)\n</cell>\n<code language=julia-1.5>\niscube(31)\n</cell>\n<code language=julia-1.5>\n\
    iscube(32)\n</cell>\n<code language=julia-1.5>\niscube(33)\n</cell>\n<code language=julia-1.5>\n\
    iscube(34)\n</cell>\n<code language=julia-1.5>\niscube(35)\n</cell>\n<code language=julia-1.5>\n\
    iscube(36)\n</cell>\n<code language=julia-1.5>\niscube(37)\n</cell>\n<code language=julia-1.5>\n\
    iscube(38)\n</cell>\n<code language=julia-1.5>\niscube(39)\n</cell>\n<code language=julia-1.5>\n\
    iscube(40)\n</cell>\n<code language=julia-1.5>\niscube(41)\n</cell>\n<code language=julia-1.5>\n\
    iscube(42)\n</cell>\n<code language=julia-1.5>\niscube(43)\n</cell>\n<code language=julia-1.5>\n\
    iscube(44)\n</cell>\n<code language=julia-1.5>\niscube(45)\n</cell>\n<code language=julia-1.5>\n\
    iscube(46)\n</cell>\n<code language=julia-1.5>\niscube\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzjsrxyz0.jl:21\nin expression starting at /tmp/tmpzjsrxyz0.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        return true\n  \
    \  else \n        return false\nend\n</cell>\n<code language=julia-1.1>\n\"\"\"\
    \nWrite a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpui34ob9x.jl:25\nin expression starting at\
    \ /tmp/tmpui34ob9x.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1\n        then return true\n    else if a==2\n        then return\
    \ true\n    else if a==3\n        then return true\n    else if a==4\n       \
    \ then return true\n    else if a==5\n        then return true\n    else if a==6\n\
    \        then return true\n    else if a==7\n        then return true\n    else\
    \ if a==8\n        then return true\n    else if a==9\n        then return true\n\
    \    else if a==10\n        then return true\n    else if a==11\n        then\
    \ return true\n    else if a==12\n        then return true\n    else if a==13\n\
    \        then return true\n    else if a==14\n        then return true\n    else\
    \ if a==15\n        then return true\n    else if a==16\n        then return true\n\
    \    else if a==17\n        then return true\n    else if a==18\n        then\
    \ return true\n    else if a==19\n        then return true\n    else if a==20\n\
    \        then return true\n    else if a==21\n        then return true\n    else\
    \ if a==22\n        then return true\n    else if a==23\n        then return true\n\
    \    else if a==24\n        then return true\n    else if a==25\n        then\
    \ return true\n    else if a==26\n        then return true\n    else if a==27\n\
    \        then return true\n    else if a==28\n        then return true\n    else\
    \ if a==29\n        then return true\n    else if a==30\n        then return true\n\
    \    else if a==31\n        then return true\n    else if a==32\n        then\
    \ return true\n    else if a==33\n        then return true\n    else if a==34\n\
    \        then return true\n    else if a==35\n        then return true\n    else\
    \ if a==36\n        then return true\n    else if a==37\n        then return true\n\
    \    else if a==38\n        then return true\n    else if a==39\n        then\
    \ return true\n    else if a==40\n        then return true\n    else if a==41\n\
    \        then return true\n    else if a==42\n        then return \nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbrcs3rvd.jl:21\nin expression starting at /tmp/tmpbrcs3rvd.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    else\
    \ if a==1 then return true\n    else if a==2 then return true\n    else if a==3\
    \ then return true\n    else if a==4 then return true\n    else if a==5 then return\
    \ true\n    else if a==6 then return true\n    else if a==7 then return true\n\
    \    else if a==8 then return true\n    else if a==9 then return true\n    else\
    \ if a==10 then return true\n    else if a==11 then return true\n    else if a==12\
    \ then return true\n    else if a==13 then return true\n    else if a==14 then\
    \ return true\n    else if a==15 then return true\n    else if a==16 then return\
    \ true\n    else if a==17 then return true\n    else if a==18 then return true\n\
    \    else if a==19 then return true\n    else if a==20 then return true\n    else\
    \ if a==21 then return true\n    else if a==22 then return true\n    else if a==23\
    \ then return true\n    else if a==24 then return true\n    else if a==25 then\
    \ return true\n    else if a==26 then return true\n    else if a==27 then return\
    \ true\n    else if a==28 then return true\n    else if a==29 then return true\n\
    \    else if a==30 then return true\n    else if a==31 then return true\n    else\
    \ if a==32 then return true\n    else if a==33 then return true\n    else if a==34\
    \ then return true\n    else if a==35 then return true\n    else if a==36 then\
    \ return true\n    else if a==37 then return true\n    else if a==38 then return\
    \ true\n    else if a==39 then return true\n    else if a==40 then return true\n\
    \    else if a==41 then return true\n    else if a==42 then return true\n    else\
    \ if a==43 then return true\n    else if a==44 then return true\n    else if a==45\
    \ then return true\n    else if a==46 then return true\n    else if a==47 then\
    \ return true\n    else if a==48 then return true\n    else if a==49 then return\
    \ true\n    else if a\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpen0fkwy8.jl:20\nin expression starting at /tmp/tmpen0fkwy8.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then true\n    \
    \    else false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n  \
    \  Write a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk6y1sk6h.jl:21\nin expression starting at /tmp/tmpk6y1sk6h.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    else\
    \ if a==1 then return true\n    else if a==2 then return true\n    else if a==3\
    \ then return true\n    else if a==4 then return true\n    else if a==5 then return\
    \ true\n    else if a==6 then return true\n    else if a==7 then return true\n\
    \    else if a==8 then return true\n    else if a==9 then return true\n    else\
    \ if a==10 then return true\n    else if a==11 then return true\n    else if a==12\
    \ then return true\n    else if a==13 then return true\n    else if a==14 then\
    \ return true\n    else if a==15 then return true\n    else if a==16 then return\
    \ true\n    else if a==17 then return true\n    else if a==18 then return true\n\
    \    else if a==19 then return true\n    else if a==20 then return true\n    else\
    \ if a==21 then return true\n    else if a==22 then return true\n    else if a==23\
    \ then return true\n    else if a==24 then return true\n    else if a==25 then\
    \ return true\n    else if a==26 then return true\n    else if a==27 then return\
    \ true\n    else if a==28 then return true\n    else if a==29 then return true\n\
    \    else if a==30 then return true\n    else if a==31 then return true\n    else\
    \ if a==32 then return true\n    else if a==33 then return true\n    else if a==34\
    \ then return true\n    else if a==35 then return true\n    else if a==36 then\
    \ return true\n    else if a==37 then return true\n    else if a==38 then return\
    \ true\n    else if a==39 then return true\n    else if a==40 then return true\n\
    \    else if a==41 then return true\n    else if a==42 then return true\n    else\
    \ if a==43 then return true\n    else if a==44 then return true\n    else if a==45\
    \ then return true\n    else if a==46 then return true\n    else if a==47 then\
    \ return true\n    else if a==48 then return true\n    else if a==49 then return\
    \ true\n    else if a\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpen0fkwy8.jl:20\nin expression starting at /tmp/tmpen0fkwy8.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then true\n    \
    \    else false\n    end\nend\n</cell>\n<code language=julia-1.5>\n@assert iscube(2)\
    \ == false\n@assert iscube(-1) == true\n@assert iscube(64) == true\n@assert iscube(0)\
    \ == true\n@assert iscube(180) == false\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes an integer a and returns true \n    if this ingeger is a\
    \ cube of some integer number.\n    Note: you may assume the input is always valid.\n\
    \    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n  \
    \  >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpx00277ov.jl:21\nin expression starting at /tmp/tmpx00277ov.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        error(\"iscube:\
    \ negative number\")\n    else if a == 0 \n        true\n    else if a == 1 \n\
    \        true\n    else if a == 2 \n        true\n    else if a == 3 \n      \
    \  true\n    else if a == 4 \n        true\n    else if a == 5 \n        true\n\
    \    else if a == 6 \n        true\n    else if a == 7 \n        true\n    else\
    \ if a == 8 \n        true\n    else if a == 9 \n        true\n    else if a ==\
    \ 10 \n        true\n    else if a == 11 \n        true\n    else if a == 12 \n\
    \        true\n    else if a == 13 \n        true\n    else if a == 14 \n    \
    \    true\n    else if a == 15 \n        true\n    else if a == 16 \n        true\n\
    \    else if a == 17 \n        true\n    else if a == 18 \n        true\n    else\
    \ if a == 19 \n        true\n    else if a == 20 \n        true\n    else if a\
    \ == 21 \n        true\n    else if a == 22 \n        true\n    else if a == 23\
    \ \n        true\n    else if a == 24 \n        true\n    else if a == 25 \n \
    \       true\n    else if a == 26 \n        true\n    else if a == 27 \n     \
    \   true\n    else if a == 28 \n        true\n    else if a == 29 \n        true\n\
    \    else if a == 30 \n        true\n    else if a == 31 \n        true\n    else\
    \ if a == 32 \n        true\n    else if a == 33 \n        true\n    else if a\
    \ == 34 \n        true\n    else if a == 35 \n        true\n    else if a == 36\
    \ \n        true\n    else if a == 37 \n        true\n    else if a == 38 \n \
    \       true\n    else if a == 39 \n        true\n    else if a == 40 \n     \
    \   true\n    else if a == 41 \n        true\n    else if a == 42 \n        true\n\
    \    else if a == 43 \n        true\n    else if a == 44 \n        true\n    else\
    \ if a == 45 \n        true\n    else if a == 46 \n        true\n    else if a\
    \ == 47 \n        true\n    else if a == 48 \n        true\n    else if a == 49\
    \ \n        true\n    else if a == 50 \n        true\n    else if a == 51 \n \
    \       true\n    else if a == 52 \n        true\n    else if a == 53 \n     \
    \   true\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpspe9znxa.jl:22\nin expression starting at\
    \ /tmp/tmpspe9znxa.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n    then return true\n \
    \   else \n        if a==1 \n        then return true\n        else \n       \
    \     if a==2 \n            then return true\n            else \n            \
    \    if a==3 \n                then return true\n                else \n     \
    \               if a==4 \n                    then return true\n             \
    \       else \n                        if a==5 \n                        then\
    \ return true\n                        else \n                            if a==6\
    \ \n                            then return true\n                           \
    \ else \n                                if a==7 \n                          \
    \      then return true\n                                else \n             \
    \                       if a==8 \n                                    then return\
    \ true\n                                    else \n                          \
    \              if a==9 \n                                        then return true\n\
    \                                        else \n                             \
    \               if a==10 \n                                            then return\
    \ true\n                                            else \n                  \
    \                              if a==11 \n                                   \
    \             then return true\n                                             \
    \   else \n                                                    if a==12 \n   \
    \                                                 then return true\n         \
    \                                           else \n                          \
    \                              if a==13 \n                                   \
    \                     then return true\n                                     \
    \                   else \n                                                  \
    \          if a==14 \n                                                       \
    \     then return true\n                                                     \
    \       else \n                                                              \
    \  if a==15 \n                                                               \
    \ then return true\n                                                         \
    \       else \n                                                              \
    \      if a==16 \n                                                           \
    \         then return true\n                                                 \
    \                   else \n                                                  \
    \      if a==17 \n                                                        then\
    \ return true\n                                                        else \n\
    \                                                            if a==18 \n     \
    \                                                       then return true\n   \
    \                                                         else \n            \
    \                                                    if a==19 \n             \
    \                                                   then return true\n       \
    \                                                         else \n            \
    \                                                        if a==20 \n         \
    \                                                           then return true\n\
    \                                                                    else \n \
    \                                                       if a==21 \n          \
    \                                              then return true\n            \
    \                                            else \n                         \
    \                                   if a==22 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==23 \n                                      \
    \                          then return true\n                                \
    \                                else \n                                     \
    \                               if a==24 \n                                  \
    \                                  then return true\n                        \
    \                                            else \n                         \
    \                               if a==25 \n                                  \
    \                      then return true\n                                    \
    \                    else \n                                                 \
    \           if a==26 \n                                                      \
    \      then return true\n                                                    \
    \        else \n                                                             \
    \   if a==27 \n                                                              \
    \  then return true\n                                                        \
    \        else \n                                                             \
    \       if a==28 \n                                                          \
    \          then return true\n                                                \
    \                    else \n                                                 \
    \       if a==29 \n                                                        then\
    \ return true\n                                                        else \n\
    \                                                            if a==30 \n     \
    \                                                       then return true\n   \
    \                                                         else \n            \
    \                                                    if a==31 \n             \
    \                                                   then return true\n       \
    \                                                         else \n            \
    \                                                        if a==32 \n         \
    \                                                           then return true\n\
    \                                                                    else \n \
    \                                                       if a==33 \n          \
    \                                              then return true\n            \
    \                                            else \n                         \
    \                                   if a==34 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==35 \n                                      \
    \                          then return true\n                                \
    \                                else \n                                     \
    \                               if \nusing Test\n\n@testset begin\n\ncandidate\
    \ = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t\
    @test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkkcuoij8.jl:21\nin expression starting at /tmp/tmpkkcuoij8.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then true\n    \
    \    else false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n  \
    \  Write a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk6y1sk6h.jl:21\nin expression starting at /tmp/tmpk6y1sk6h.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0\n        error(\"iscube expects\
    \ a positive integer\")\n    else if a == 0\n        true\n    else\n        false\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\niscube(2)\n</cell>\n<code language=julia-1.5>\n\
    iscube(-1)\n</cell>\n<code language=julia-1.5>\niscube(64)\n</cell>\n<code language=julia-1.5>\n\
    iscube(0)\n</cell>\n<code language=julia-1.5>\niscube(180)\n</cell>\n<text>\n\
    Exercise: Write a function that takes an integer a and returns true \n    if this\
    \ ingeger is a cube of some integer number.\n    Note: you may assume the input\
    \ is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n\
    \    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>>\
    \ iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3d0w9797.jl:22\nin expression starting at\
    \ /tmp/tmp3d0w9797.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        return true\n  \
    \  else \n        return false\nend\n</cell>\n<code language=julia-1.1>\n\"\"\"\
    \nWrite a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpui34ob9x.jl:25\nin expression starting at\
    \ /tmp/tmpui34ob9x.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    else\
    \ if a==1 then return true\n    else if a==2 then return true\n    else if a==3\
    \ then return true\n    else if a==4 then return true\n    else if a==5 then return\
    \ true\n    else if a==6 then return true\n    else if a==7 then return true\n\
    \    else if a==8 then return true\n    else if a==9 then return true\n    else\
    \ if a==10 then return true\n    else if a==11 then return true\n    else if a==12\
    \ then return true\n    else if a==13 then return true\n    else if a==14 then\
    \ return true\n    else if a==15 then return true\n    else if a==16 then return\
    \ true\n    else if a==17 then return true\n    else if a==18 then return true\n\
    \    else if a==19 then return true\n    else if a==20 then return true\n    else\
    \ if a==21 then return true\n    else if a==22 then return true\n    else if a==23\
    \ then return true\n    else if a==24 then return true\n    else if a==25 then\
    \ return true\n    else if a==26 then return true\n    else if a==27 then return\
    \ true\n    else if a==28 then return true\n    else if a==29 then return true\n\
    \    else if a==30 then return true\n    else if a==31 then return true\n    else\
    \ if a==32 then return true\n    else if a==33 then return true\n    else if a==34\
    \ then return true\n    else if a==35 then return true\n    else if a==36 then\
    \ return true\n    else if a==37 then return true\n    else if a==38 then return\
    \ true\n    else if a==39 then return true\n    else if a==40 then return true\n\
    \    else if a==41 then return true\n    else if a==42 then return true\n    else\
    \ if a==43 then return true\n    else if a==44 then return true\n    else if a==45\
    \ then return true\n    else if a==46 then return true\n    else if a==47 then\
    \ return true\n    else if a==48 then return true\n    else if a==49 then return\
    \ true\n    else if a\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpen0fkwy8.jl:20\nin expression starting at /tmp/tmpen0fkwy8.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 return true\n    else if a==1\
    \ return true\n    else if a==2 return true\n    else if a==3 return true\n  \
    \  else if a==4 return true\n    else if a==5 return true\n    else if a==6 return\
    \ true\n    else if a==7 return true\n    else if a==8 return true\n    else if\
    \ a==9 return true\n    else if a==10 return true\n    else if a==11 return true\n\
    \    else if a==12 return true\n    else if a==13 return true\n    else if a==14\
    \ return true\n    else if a==15 return true\n    else if a==16 return true\n\
    \    else if a==17 return true\n    else if a==18 return true\n    else if a==19\
    \ return true\n    else if a==20 return true\n    else if a==21 return true\n\
    \    else if a==22 return true\n    else if a==23 return true\n    else if a==24\
    \ return true\n    else if a==25 return true\n    else if a==26 return true\n\
    \    else if a==27 return true\n    else if a==28 return true\n    else if a==29\
    \ return true\n    else if a==30 return true\n    else if a==31 return true\n\
    \    else if a==32 return true\n    else if a==33 return true\n    else if a==34\
    \ return true\n    else if a==35 return true\n    else if a==36 return true\n\
    \    else if a==37 return true\n    else if a==38 return true\n    else if a==39\
    \ return true\n    else if a==40 return true\n    else if a==41 return true\n\
    \    else if a==42 return true\n    else if a==43 return true\n    else if a==44\
    \ return true\n    else if a==45 return true\n    else if a==46 return true\n\
    \    else if a==47 return true\n    else if a==48 return true\n    else if a==49\
    \ return true\n    else if a==50 return true\n    else if a==51 return true\n\
    \    else if a==52 return true\n    else if a==53 return true\n    else if a==54\
    \ return true\n    else if a==55 return true\n    else if a\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppons6ru5.jl:21\nin expression starting at\
    \ /tmp/tmppons6ru5.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        if a==1 \n            then return true\n        else \n  \
    \          if a==2 \n                then return true\n            else \n   \
    \             if a==3 \n                    then return true\n               \
    \ else \n                    if a==4 \n                        then return true\n\
    \                    else \n                        if a==5 \n               \
    \             then return true\n                        else \n              \
    \              if a==6 \n                                then return true\n  \
    \                          else \n                                if a==7 \n \
    \                                   then return true\n                       \
    \         else \n                                    if a==8 \n              \
    \                          then return true\n                                \
    \    else \n                                        if a==9 \n               \
    \                             then return true\n                             \
    \           else \n                                            if a==10 \n   \
    \                                             then return true\n             \
    \                               else \n                                      \
    \          if a==11 \n                                                    then\
    \ return true\n                                                else \n       \
    \                                             if a==12 \n                    \
    \                                    then return true\n                      \
    \                              else \n                                       \
    \                 if a==13 \n                                                \
    \            then return true\n                                              \
    \          else \n                                                           \
    \ if a==14 \n                                                                then\
    \ return true\n                                                            else\
    \ \n                                                                if a==15 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==16 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==17 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==18 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==19 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==20 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==21 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==22 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==23 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==24 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==25 \n                                              \
    \                      then return true\n                                    \
    \                                else \n                                     \
    \                   if a==26 \n                                              \
    \              then return true\n                                            \
    \                else \n                                                     \
    \           if a==27 \n                                                      \
    \              then return true\n                                            \
    \                        else \n                                             \
    \           if a==28 \n                                                      \
    \      then return true\n                                                    \
    \        else \n                                                             \
    \   if a==29 \n                                                              \
    \      then return true\n                                                    \
    \                else \n                                                     \
    \   if a==30 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==31 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==32 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==33 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==34 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==35 \n                      \
    \                                              then return true\n\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2uplh0s0.jl:21\nin expression starting at /tmp/tmp2uplh0s0.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==42 \nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp68a0p3ys.jl:21\nin expression starting at /tmp/tmp68a0p3ys.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then true\n    \
    \    else false\n    end\nend\n</cell>\n<code language=julia-1.5>\niscube(64)\n\
    </cell>\n<code language=julia-1.5>\niscube(180)\n</cell>\n<text>\nExercise 2\n\
    Write a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplxhtr6al.jl:21\nin expression starting at /tmp/tmplxhtr6al.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n    then return true\n \
    \   else if a==1 \n    then return true\n    else if a==2 \n    then return true\n\
    \    else if a==3 \n    then return true\n    else if a==4 \n    then return true\n\
    \    else if a==5 \n    then return true\n    else if a==6 \n    then return true\n\
    \    else if a==7 \n    then return true\n    else if a==8 \n    then return true\n\
    \    else if a==9 \n    then return true\n    else if a==10 \n    then return\
    \ true\n    else if a==11 \n    then return true\n    else if a==12 \n    then\
    \ return true\n    else if a==13 \n    then return true\n    else if a==14 \n\
    \    then return true\n    else if a==15 \n    then return true\n    else if a==16\
    \ \n    then return true\n    else if a==17 \n    then return true\n    else if\
    \ a==18 \n    then return true\n    else if a==19 \n    then return true\n   \
    \ else if a==20 \n    then return true\n    else if a==21 \n    then return true\n\
    \    else if a==22 \n    then return true\n    else if a==23 \n    then return\
    \ true\n    else if a==24 \n    then return true\n    else if a==25 \n    then\
    \ return true\n    else if a==26 \n    then return true\n    else if a==27 \n\
    \    then return true\n    else if a==28 \n    then return true\n    else if a==29\
    \ \n    then return true\n    else if a==30 \n    then return true\n    else if\
    \ a==31 \n    then return true\n    else if a==32 \n    then return true\n   \
    \ else if a==33 \n    then return true\n    else if a==34 \n    then return true\n\
    \    else if a==35 \n    then return true\n    else if a==36 \n    then return\
    \ true\n    else if a==37 \n    then return true\n    else if a==38 \n    then\
    \ return true\n    else if a==39 \n    then return true\n    else if a==40 \n\
    \    then return true\n    else if a==41 \n    then return true\n    else if a==4\n\
    using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpym18ocqa.jl:21\nin expression starting at /tmp/tmpym18ocqa.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        if a==1 \n            then return true\n        else \n  \
    \          if a==2 \n                then return true\n            else \n   \
    \             if a==3 \n                    then return true\n               \
    \ else \n                    if a==4 \n                        then return true\n\
    \                    else \n                        if a==5 \n               \
    \             then return true\n                        else \n              \
    \              if a==6 \n                                then return true\n  \
    \                          else \n                                if a==7 \n \
    \                                   then return true\n                       \
    \         else \n                                    if a==8 \n              \
    \                          then return true\n                                \
    \    else \n                                        if a==9 \n               \
    \                             then return true\n                             \
    \           else \n                                            if a==10 \n   \
    \                                             then return true\n             \
    \                               else \n                                      \
    \          if a==11 \n                                                    then\
    \ return true\n                                                else \n       \
    \                                             if a==12 \n                    \
    \                                    then return true\n                      \
    \                              else \n                                       \
    \                 if a==13 \n                                                \
    \            then return true\n                                              \
    \          else \n                                                           \
    \ if a==14 \n                                                                then\
    \ return true\n                                                            else\
    \ \n                                                                if a==15 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==16 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==17 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==18 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==19 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==20 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==21 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==22 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==23 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==24 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==25 \n                                              \
    \                      then return true\n                                    \
    \                                else \n                                     \
    \                   if a==26 \n                                              \
    \              then return true\n                                            \
    \                else \n                                                     \
    \           if a==27 \n                                                      \
    \              then return true\n                                            \
    \                        else \n                                             \
    \           if a==28 \n                                                      \
    \      then return true\n                                                    \
    \        else \n                                                             \
    \   if a==29 \n                                                              \
    \      then return true\n                                                    \
    \                else \n                                                     \
    \   if a==30 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==31 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==32 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==33 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==34 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==35 \n                      \
    \                                              then return true\n\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2uplh0s0.jl:21\nin expression starting at /tmp/tmp2uplh0s0.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        true\n    else \n\
    \        if a==1 \n            true\n        else \n            if a==2 \n   \
    \             true\n            else \n                if a==3 \n            \
    \        true\n                else \n                    if a==4 \n         \
    \               true\n                    else \n                        if a==5\
    \ \n                            true\n                        else \n        \
    \                    if a==6 \n                                true\n        \
    \                    else \n                                if a==7 \n       \
    \                             true\n                                else \n  \
    \                                  if a==8 \n                                \
    \        true\n                                    else \n                   \
    \                     if a==9 \n                                            true\n\
    \                                        else \n                             \
    \               if a==10 \n                                                true\n\
    \                                            else \n                         \
    \                       if a==11 \n                                          \
    \          true\n                                                else \n     \
    \                                               if a==12 \n                  \
    \                                      true\n                                \
    \                    else \n                                                 \
    \       if a==13 \n                                                          \
    \  true\n                                                        else \n     \
    \                                                       if a==14 \n          \
    \                                                      true\n                \
    \                                            else \n                         \
    \                                       if a==15 \n                          \
    \                                          true\n                            \
    \                                    else \n                                 \
    \                                   if a==16 \n                              \
    \                                          true\n                            \
    \                                        else \n                             \
    \                           if a==17 \n                                      \
    \                      true\n                                                \
    \        else \n                                                            if\
    \ a==18 \n                                                                true\n\
    \                                                            else \n         \
    \                                                       if a==19 \n          \
    \                                                          true\n            \
    \                                                    else \n                 \
    \                                                   if a==20 \n              \
    \                                                          true\n            \
    \                                                        else \n             \
    \                                           if a==21 \n                      \
    \                                      true\n                                \
    \                        else \n                                             \
    \               if a==22 \n                                                  \
    \              true\n                                                        \
    \    else \n                                                                if\
    \ a==23 \n                                                                   \
    \ true\n                                                                else \n\
    \                                                                    if a==24\
    \ \n                                                                        true\n\
    \                                                                    else \n \
    \                                                       if a==25 \n          \
    \                                                  true\n                    \
    \                                    else \n                                 \
    \                           if a==26 \n                                      \
    \                          true\n                                            \
    \                else \n                                                     \
    \           if a==27 \n                                                      \
    \              true\n                                                        \
    \        else \n                                                             \
    \       if a==28 \n                                                          \
    \              true\n                                                        \
    \            else \n                                                        if\
    \ a==29 \n                                                            true\n \
    \                                                       else \n              \
    \                                              if a==30 \n                   \
    \                                             true\n                         \
    \                                   else \n                                  \
    \                              if a==31 \n                                   \
    \                                 true\n                                     \
    \                           else \n                                          \
    \                          if a==32 \n                                       \
    \                                 true\n                                     \
    \                               else \n                                      \
    \                  if a==33 \n                                               \
    \             true\n                                                        else\
    \ \n                                                            if a==34 \n  \
    \                                                              true\n        \
    \                                                    else \n                 \
    \                                               if a==35 \n                  \
    \                                                  true\n                    \
    \                                            else \n                         \
    \                                           if a==36 \n                      \
    \                                                  true\n                    \
    \                                                else \n                     \
    \                                   if a==37 \n                              \
    \                              true\n                                        \
    \                else \n                                                     \
    \       if a==38 \n                                                          \
    \      true\n                                                            else\
    \ \n                                                                if a==39 \n\
    \                                                                    true\n  \
    \                                                              else \n       \
    \                                                             if a==40 \n    \
    \                                                                    true\n  \
    \                                                                  else \n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpb0qvrwga.jl:140\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpb0qvrwga.jl:1\n\
    in expression starting at /tmp/tmpb0qvrwga.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        if a==1 \n            then return true\n        else \n  \
    \          if a==2 \n                then return true\n            else \n   \
    \             if a==3 \n                    then return true\n               \
    \ else \n                    if a==4 \n                        then return true\n\
    \                    else \n                        if a==5 \n               \
    \             then return true\n                        else \n              \
    \              if a==6 \n                                then return true\n  \
    \                          else \n                                if a==7 \n \
    \                                   then return true\n                       \
    \         else \n                                    if a==8 \n              \
    \                          then return true\n                                \
    \    else \n                                        if a==9 \n               \
    \                             then return true\n                             \
    \           else \n                                            if a==10 \n   \
    \                                             then return true\n             \
    \                               else \n                                      \
    \          if a==11 \n                                                    then\
    \ return true\n                                                else \n       \
    \                                             if a==12 \n                    \
    \                                    then return true\n                      \
    \                              else \n                                       \
    \                 if a==13 \n                                                \
    \            then return true\n                                              \
    \          else \n                                                           \
    \ if a==14 \n                                                                then\
    \ return true\n                                                            else\
    \ \n                                                                if a==15 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==16 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==17 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==18 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==19 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==20 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==21 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==22 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==23 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==24 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==25 \n                                              \
    \                      then return true\n                                    \
    \                                else \n                                     \
    \                   if a==26 \n                                              \
    \              then return true\n                                            \
    \                else \n                                                     \
    \           if a==27 \n                                                      \
    \              then return true\n                                            \
    \                        else \n                                             \
    \           if a==28 \n                                                      \
    \      then return true\n                                                    \
    \        else \n                                                             \
    \   if a==29 \n                                                              \
    \      then return true\n                                                    \
    \                else \n                                                     \
    \   if a==30 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==31 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==32 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==33 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==34 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==35 \n                      \
    \                                              then return true\n\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2uplh0s0.jl:21\nin expression starting at /tmp/tmp2uplh0s0.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then true\n    \
    \    else false\n    end\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n  \
    \  Write a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpk6y1sk6h.jl:21\nin expression starting at /tmp/tmpk6y1sk6h.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    else\
    \ if a==1 then return true\n    else if a==2 then return true\n    else if a==3\
    \ then return true\n    else if a==4 then return true\n    else if a==5 then return\
    \ true\n    else if a==6 then return true\n    else if a==7 then return true\n\
    \    else if a==8 then return true\n    else if a==9 then return true\n    else\
    \ return false\nend\n</code>\n<|/ a |>\n<| c |>\nThis does not provide an answer\
    \ to the question. To critique or request clarification from an author, leave\
    \ a comment below their post. - [From Review](/review/low-quality-posts/27829874)\n\
    <|/ c |>\n<| c |>\nThis does provide an answer to the question, which is \"how\
    \ do I write this function?\" It doesn't say \"how do I write this function?\"\
    \ It says \"how do I write this function?\" It doesn't say \"how do I write this\
    \ function?\" It says \"how do I write this function?\" It doesn't say \"how do\
    \ I write this function?\" It says \"how do I write this function?\" It doesn't\
    \ say \"how do I write this function?\" It says \"how do I write this function?\"\
    \ It doesn't say \"how do I write this function?\" It says \"how do I write this\
    \ function?\" It doesn't say \"how do I write this function?\" It says \"how do\
    \ I write this function?\" It doesn't say \"how do I write this function?\" It\
    \ says \"how do I write this function?\" It doesn't say \"how do I write this\
    \ function?\" It says \"how do I write this function?\" It doesn't say \"how do\
    \ I write this function?\" It says \"how do I write this function?\" It doesn't\
    \ say \"how do I write this function?\" It says \"how do I write this function?\"\
    \ It doesn't say \"how do I write this function?\" It says \"how do I write this\
    \ function?\" It doesn't say \"how do I write this function?\" It says \"how do\
    \ I write this function?\" It doesn't say \"how do I write this function?\" It\
    \ says \"how do I write this function?\" It doesn't say \"how do I write this\
    \ function?\" It says \"how do I write this function?\" It doesn't say \"how do\
    \ I write this function?\" It says \"how do I write this function?\" It doesn't\
    \ say \"how do I write \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\
    \t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphjwnu7b9.jl:20\nin expression starting at /tmp/tmphjwnu7b9.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        if a==1 \n            then return true\n        else \n  \
    \          if a==2 \n                then return true\n            else \n   \
    \             if a==3 \n                    then return true\n               \
    \ else \n                    if a==4 \n                        then return true\n\
    \                    else \n                        if a==5 \n               \
    \             then return true\n                        else \n              \
    \              if a==6 \n                                then return true\n  \
    \                          else \n                                if a==7 \n \
    \                                   then return true\n                       \
    \         else \n                                    if a==8 \n              \
    \                          then return true\n                                \
    \    else \n                                        if a==9 \n               \
    \                             then return true\n                             \
    \           else \n                                            if a==10 \n   \
    \                                             then return true\n             \
    \                               else \n                                      \
    \          if a==11 \n                                                    then\
    \ return true\n                                                else \n       \
    \                                             if a==12 \n                    \
    \                                    then return true\n                      \
    \                              else \n                                       \
    \                 if a==13 \n                                                \
    \            then return true\n                                              \
    \          else \n                                                           \
    \ if a==14 \n                                                                then\
    \ return true\n                                                            else\
    \ \n                                                                if a==15 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==16 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==17 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==18 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==19 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==20 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==21 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==22 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==23 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==24 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==25 \n                                              \
    \                      then return true\n                                    \
    \                                else \n                                     \
    \                   if a==26 \n                                              \
    \              then return true\n                                            \
    \                else \n                                                     \
    \           if a==27 \n                                                      \
    \              then return true\n                                            \
    \                        else \n                                             \
    \           if a==28 \n                                                      \
    \      then return true\n                                                    \
    \        else \n                                                             \
    \   if a==29 \n                                                              \
    \      then return true\n                                                    \
    \                else \n                                                     \
    \   if a==30 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==31 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==32 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==33 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==34 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==35 \n                      \
    \                                              then return true\n\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2uplh0s0.jl:21\nin expression starting at /tmp/tmp2uplh0s0.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    if a==1\
    \ then return true\n    if a==2 then return true\n    if a==3 then return true\n\
    \    if a==4 then return true\n    if a==5 then return true\n    if a==6 then\
    \ return true\n    if a==7 then return true\n    if a==8 then return true\n  \
    \  if a==9 then return true\n    if a==10 then return true\n    if a==11 then\
    \ return true\n    if a==12 then return true\n    if a==13 then return true\n\
    \    if a==14 then return true\n    if a==15 then return true\n    if a==16 then\
    \ return true\n    if a==17 then return true\n    if a==18 then return true\n\
    \    if a==19 then return true\n    if a==20 then return true\n    if a==21 then\
    \ return true\n    if a==22 then return true\n    if a==23 then return true\n\
    \    if a==24 then return true\n    if a==25 then return true\n    if a==26 then\
    \ return true\n    if a==27 then return true\n    if a==28 then return true\n\
    \    if a==29 then return true\n    if a==30 then return true\n    if a==31 then\
    \ return true\n    if a==32 then return true\n    if a==33 then return true\n\
    \    if a==34 then return true\n    if a==35 then return true\n    if a==36 then\
    \ return true\n    if a==37 then return true\n    if a==38 then return true\n\
    \    if a==39 then return true\n    if a==40 then return true\n    if a==41 then\
    \ return true\n    if a==42 then return true\n    if a==43 then return true\n\
    \    if a==44 then return true\n    if a==45 then return true\n    if a==46 then\
    \ return true\n    if a==47 then return true\n    if a==48 then return true\n\
    \    if a==49 then return true\n    if a==50 then return true\n    if a==51 then\
    \ return true\n    if a==52 then return true\n    if a==53 then return true\n\
    \    if a==54 then return true\n    if a==55 then return true\n    if a==56 then\
    \ return true\n    if a==57 then return true\n    if a==58 then return true\n\
    \    if a==59 then return true\n    if a==60 then return true\n    if a==61 \n\
    using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2_r2e7qx.jl:20\nin expression starting at /tmp/tmp2_r2e7qx.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        return true\n \
    \   else if a == 0 \n        return true\n    else if a == 1 \n        return\
    \ true\n    else if a == 2 \n        return true\n    else if a == 3 \n      \
    \  return true\n    else if a == 4 \n        return true\n    else if a == 5 \n\
    \        return true\n    else if a == 6 \n        return true\n    else if a\
    \ == 7 \n        return true\n    else if a == 8 \n        return true\n    else\
    \ if a == 9 \n        return true\n    else if a == 10 \n        return true\n\
    \    else if a == 11 \n        return true\n    else if a == 12 \n        return\
    \ true\n    else if a == 13 \n        return true\n    else if a == 14 \n    \
    \    return true\n    else if a == 15 \n        return true\n    else if a ==\
    \ 16 \n        return true\n    else if a == 17 \n        return true\n    else\
    \ if a == 18 \n        return true\n    else if a == 19 \n        return true\n\
    \    else if a == 20 \n        return true\n    else if a == 21 \n        return\
    \ true\n    else if a == 22 \n        return true\n    else if a == 23 \n    \
    \    return true\n    else if a == 24 \n        return true\n    else if a ==\
    \ 25 \n        return true\n    else if a == 26 \n        return true\n    else\
    \ if a == 27 \n        return true\n    else if a == 28 \n        return true\n\
    \    else if a == 29 \n        return true\n    else if a == 30 \n        return\
    \ true\n    else if a == 31 \n        return true\n    else if a == 32 \n    \
    \    return true\n    else if a == 33 \n        return true\n    else if a ==\
    \ 34 \n        return true\n    else if a == 35 \n        return true\n    else\
    \ if a == 36 \n        return true\n    else if a == 37 \n        return true\n\
    \    else if a == 38 \n        return true\n    else if a == 39 \n        return\
    \ true\n    else if a == 40 \n        return true\n    else if a == 41 \n    \
    \    return true\n    else if a == 42 \n        return true\n    else if a ==\
    \ 43 \n        return true\n    else if a == 44 \n        return true\n    else\
    \ if a == 45 \n        return true\n    else if a == 46 \n        return true\n\
    \    else if a == 47 \n        return true\n    else if a == 48 \n        return\
    \ true\n    else if a == 49 \n        return true\n    else if a == 50 \n    \
    \    return true\n    else if a == 51 \n        return true\n    else if a ==\
    \ 52 \n        return true\n    else if a == 53 \n        return true\n    else\
    \ if a == 54\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe8a7onzs.jl:22\nin expression starting at\
    \ /tmp/tmpe8a7onzs.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0\n        error(\"iscube:\
    \ input must be positive\")\n    else if a == 0\n        true\n    else\n    \
    \    a == (a^3)*(a^3)\n    end\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\
    \nWrite a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxd7iu5pi.jl:22\nin expression starting at\
    \ /tmp/tmpxd7iu5pi.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        return true\n  \
    \  else \n        return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\
    \n    Write a function that takes an integer a and returns true \n    if this\
    \ ingeger is a cube of some integer number.\n    Note: you may assume the input\
    \ is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n\
    \    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>>\
    \ iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2o_4ndb0.jl:25\nin expression starting at\
    \ /tmp/tmp2o_4ndb0.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        if a==1 \n            then return true\n        else \n  \
    \          if a==2 \n                then return true\n            else \n   \
    \             if a==3 \n                    then return true\n               \
    \ else \n                    if a==4 \n                        then return true\n\
    \                    else \n                        if a==5 \n               \
    \             then return true\n                        else \n              \
    \              if a==6 \n                                then return true\n  \
    \                          else \n                                if a==7 \n \
    \                                   then return true\n                       \
    \         else \n                                    if a==8 \n              \
    \                          then return true\n                                \
    \    else \n                                        if a==9 \n               \
    \                             then return true\n                             \
    \           else \n                                            if a==10 \n   \
    \                                             then return true\n             \
    \                               else \n                                      \
    \          if a==11 \n                                                    then\
    \ return true\n                                                else \n       \
    \                                             if a==12 \n                    \
    \                                    then return true\n                      \
    \                              else \n                                       \
    \                 if a==13 \n                                                \
    \            then return true\n                                              \
    \          else \n                                                           \
    \ if a==14 \n                                                                then\
    \ return true\n                                                            else\
    \ \n                                                                if a==15 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==16 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==17 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==18 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==19 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==20 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==21 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==22 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==23 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==24 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==25 \n                                              \
    \                      then return true\n                                    \
    \                                else \n                                     \
    \                   if a==26 \n                                              \
    \              then return true\n                                            \
    \                else \n                                                     \
    \           if a==27 \n                                                      \
    \              then return true\n                                            \
    \                        else \n                                             \
    \           if a==28 \n                                                      \
    \      then return true\n                                                    \
    \        else \n                                                             \
    \   if a==29 \n                                                              \
    \      then return true\n                                                    \
    \                else \n                                                     \
    \   if a==30 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==31 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==32 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==33 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==34 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==35 \n                      \
    \                                              then return true\n\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2uplh0s0.jl:21\nin expression starting at /tmp/tmp2uplh0s0.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        then return true\n\
    \    else if a%4 == 0 \n        then return true\n    else if a%8 == 0 \n    \
    \    then return true\n    else if a%16 == 0 \n        then return true\n    else\
    \ if a%32 == 0 \n        then return true\n    else if a%64 == 0 \n        then\
    \ return true\n    else return false\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\nWrite a function that takes an integer a and returns true \n    if this\
    \ ingeger is a cube of some integer number.\n    Note: you may assume the input\
    \ is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n\
    \    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>>\
    \ iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyp2u6cze.jl:21\nin expression starting at /tmp/tmpyp2u6cze.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    else\
    \ if a==1 then return true\n    else if a==2 then return true\n    else if a==3\
    \ then return true\n    else if a==4 then return true\n    else if a==5 then return\
    \ true\n    else if a==6 then return true\n    else if a==7 then return true\n\
    \    else if a==8 then return true\n    else if a==9 then return true\n    else\
    \ if a==10 then return true\n    else if a==11 then return true\n    else if a==12\
    \ then return true\n    else if a==13 then return true\n    else if a==14 then\
    \ return true\n    else if a==15 then return true\n    else if a==16 then return\
    \ true\n    else if a==17 then return true\n    else if a==18 then return true\n\
    \    else if a==19 then return true\n    else if a==20 then return true\n    else\
    \ if a==21 then return true\n    else if a==22 then return true\n    else if a==23\
    \ then return true\n    else if a==24 then return true\n    else if a==25 then\
    \ return true\n    else if a==26 then return true\n    else if a==27 then return\
    \ true\n    else if a==28 then return true\n    else if a==29 then return true\n\
    \    else if a==30 then return true\n    else if a==31 then return true\n    else\
    \ if a==32 then return true\n    else if a==33 then return true\n    else if a==34\
    \ then return true\n    else if a==35 then return true\n    else if a==36 then\
    \ return true\n    else if a==37 then return true\n    else if a==38 then return\
    \ true\n    else if a==39 then return true\n    else if a==40 then return true\n\
    \    else if a==41 then return true\n    else if a==42 then return true\n    else\
    \ if a==43 then return true\n    else if a==44 then return true\n    else if a==45\
    \ then return true\n    else if a==46 then return true\n    else if a==47 then\
    \ return true\n    else if a==48 then return true\n    else if a==49 then return\
    \ true\n    else if a\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpen0fkwy8.jl:20\nin expression starting at /tmp/tmpen0fkwy8.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54 \n        return true\n    else\
    \ if a == 55\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7h_redw8.jl:22\nin expression starting at\
    \ /tmp/tmp7h_redw8.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n    then return true\n\
    \    else if a%4 == 0 \n    then return true\n    else return false\nend\n</cell>\n\
    <code language=julia-1.0>\n@assert iscube(2) == false\n@assert iscube(-1) == true\n\
    @assert iscube(64) == true\n@assert iscube(0) == true\n@assert iscube(180) ==\
    \ false\n</cell>\n<text>\nExercise 3\nWrite a function that takes an integer a\
    \ and returns true \n    if this ingeger is a cube of some integer number.\n \
    \   Note: you may assume the input is always valid.\n    Examples:\n    >>> iscube(1)\n\
    \    true\n    >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>>\
    \ iscube(64)\n    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n   \
    \ false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpadbfe35u.jl:21\nin expression starting at /tmp/tmpadbfe35u.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        return true\n  \
    \  else \n        return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\
    \n    Write a function that takes an integer a and returns true \n    if this\
    \ ingeger is a cube of some integer number.\n    Note: you may assume the input\
    \ is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n\
    \    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>>\
    \ iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2o_4ndb0.jl:25\nin expression starting at\
    \ /tmp/tmp2o_4ndb0.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 return true\n    else if a==1\
    \ return true\n    else if a==2 return true\n    else if a==3 return true\n  \
    \  else if a==4 return true\n    else if a==5 return true\n    else if a==6 return\
    \ true\n    else if a==7 return true\n    else if a==8 return true\n    else if\
    \ a==9 return true\n    else return false\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Write a function that takes an integer a and returns true \n    if\
    \ this ingeger is a cube of some integer number.\n    Note: you may assume the\
    \ input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>>\
    \ iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n   \
    \ true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\"\"\
    \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) ==\
    \ true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpin1x_zo9.jl:21\nin expression starting at\
    \ /tmp/tmpin1x_zo9.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        if a==1 \n            then return true\n        else \n  \
    \          if a==2 \n                then return true\n            else \n   \
    \             if a==3 \n                    then return true\n               \
    \ else \n                    if a==4 \n                        then return true\n\
    \                    else \n                        if a==5 \n               \
    \             then return true\n                        else \n              \
    \              if a==6 \n                                then return true\n  \
    \                          else \n                                if a==7 \n \
    \                                   then return true\n                       \
    \         else \n                                    if a==8 \n              \
    \                          then return true\n                                \
    \    else \n                                        if a==9 \n               \
    \                             then return true\n                             \
    \           else \n                                            if a==10 \n   \
    \                                             then return true\n             \
    \                               else \n                                      \
    \          if a==11 \n                                                    then\
    \ return true\n                                                else \n       \
    \                                             if a==12 \n                    \
    \                                    then return true\n                      \
    \                              else \n                                       \
    \                 if a==13 \n                                                \
    \            then return true\n                                              \
    \          else \n                                                           \
    \ if a==14 \n                                                                then\
    \ return true\n                                                            else\
    \ \n                                                                if a==15 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==16 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==17 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==18 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==19 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==20 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==21 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==22 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==23 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==24 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==25 \n                                              \
    \                      then return true\n                                    \
    \                                else \n                                     \
    \                   if a==26 \n                                              \
    \              then return true\n                                            \
    \                else \n                                                     \
    \           if a==27 \n                                                      \
    \              then return true\n                                            \
    \                        else \n                                             \
    \           if a==28 \n                                                      \
    \      then return true\n                                                    \
    \        else \n                                                             \
    \   if a==29 \n                                                              \
    \      then return true\n                                                    \
    \                else \n                                                     \
    \   if a==30 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==31 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==32 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==33 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==34 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==35 \n                      \
    \                                              then return true\n\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2uplh0s0.jl:21\nin expression starting at /tmp/tmp2uplh0s0.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        true\n    else\n\
    \        if a==1 \n            true\n        else\n            if a==2 \n    \
    \            true\n            else\n                if a==3 \n              \
    \      true\n                else\n                    if a==4 \n            \
    \            true\n                    else\n                        if a==5 \n\
    \                            true\n                        else\n            \
    \                if a==6 \n                                true\n            \
    \                else\n                                if a==7 \n            \
    \                        true\n                                else\n        \
    \                            if a==8 \n                                      \
    \  true\n                                    else\n                          \
    \              if a==9 \n                                            true\n  \
    \                                      else\n                            if a==10\
    \ \n                                true\n                            else\n \
    \                               if a==11 \n                                  \
    \  true\n                                else\n                              \
    \      if a==12 \n                                        true\n             \
    \                       else\n                                        if a==13\
    \ \n                                            true\n                       \
    \                 else\n                                            if a==14 \n\
    \                                                true\n                      \
    \                      else\n                                                if\
    \ a==15 \n                                                    true\n         \
    \                                       else\n                               \
    \                     if a==16 \n                                            \
    \            true\n                                                    else\n\
    \                                                        if a==17 \n         \
    \                                                   true\n                   \
    \                                     else\n                                 \
    \                           if a==18 \n                                      \
    \                          true\n                                            \
    \                else\n                                                      \
    \          if a==19 \n                                                       \
    \             true\n                                                         \
    \       else\n                                                               \
    \     if a==20 \n                                                            \
    \            true\n                                                          \
    \          else\n                                                        if a==21\
    \ \n                                                            true\n       \
    \                                                 else\n                     \
    \                                       if a==22 \n                          \
    \                                      true\n                                \
    \                            else\n                                          \
    \                      if a==23 \n                                           \
    \                         true\n                                             \
    \                   else\n                                                   \
    \                 if a==24 \n                                                \
    \                        true\n                                              \
    \                      else\n                                                \
    \        if a==25 \n                                                         \
    \   true\n                                                        else\n     \
    \                                                       if a==26 \n          \
    \                                                      true\n                \
    \                                            else\n                          \
    \                                      if a==27 \n                           \
    \                                         true\n                             \
    \                                   else\n                                   \
    \                                 if a==28 \n                                \
    \                                        true\n                              \
    \                                      else\n                                \
    \                        if a==29 \n                                         \
    \                   true\n                                                   \
    \     else\n                                                            if a==30\
    \ \n                                                                true\n   \
    \                                                         else\n             \
    \                                                   if a==31 \n              \
    \                                                      true\n                \
    \                                                else\n                      \
    \                                              if a==32 \n                   \
    \                                                     true\n                 \
    \                                                   else\n                   \
    \                                     if a==33 \n                            \
    \                                true\n                                      \
    \                  else\n                                                    \
    \        if a==34 \n                                                         \
    \       true\n                                                            else\n\
    \                                                                if a==35 \n \
    \                                                                   true\n   \
    \                                                             else\n         \
    \                                                           if a==36 \n      \
    \                                                                  true\n    \
    \                                                                else\n      \
    \                                                  if a==37 \n               \
    \                                             true\n                         \
    \                               else\n                                       \
    \                     if a==38 \n                                            \
    \                    true\n                                                  \
    \          else\n                                                            \
    \    if a==39 \n                                                             \
    \       true\n                                                               \
    \ else\n                                                                    if\
    \ a==40 \n                                                                   \
    \     true\n                                                                 \
    \   else\n                                                        if a==4\nusing\
    \ Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmqqhtzqw.jl:1\nin expression starting at /tmp/tmpmqqhtzqw.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0\n        error(\"iscube called\
    \ with negative number\")\n    end\n    if a == 0\n        true\n    end\n   \
    \ if a < 3\n        false\n    end\n    if a == 3\n        true\n    end\n   \
    \ if a < 6\n        false\n    end\n    if a == 6\n        true\n    end\n   \
    \ if a < 9\n        false\n    end\n    if a == 9\n        true\n    end\n   \
    \ if a < 12\n        false\n    end\n    if a == 12\n        true\n    end\n \
    \   if a < 15\n        false\n    end\n    if a == 15\n        true\n    end\n\
    \    if a < 18\n        false\n    end\n    if a == 18\n        true\n    end\n\
    \    if a < 21\n        false\n    end\n    if a == 21\n        true\n    end\n\
    \    if a < 24\n        false\n    end\n    if a == 24\n        true\n    end\n\
    \    if a < 27\n        false\n    end\n    if a == 27\n        true\n    end\n\
    \    if a < 30\n        false\n    end\n    if a == 30\n        true\n    end\n\
    \    if a < 33\n        false\n    end\n    if a == 33\n        true\n    end\n\
    \    if a < 36\n        false\n    end\n    if a == 36\n        true\n    end\n\
    \    if a < 39\n        false\n    end\n    if a == 39\n        true\n    end\n\
    \    if a < 42\n        false\n    end\n    if a == 42\n        true\n    end\n\
    \    if a < 45\n        false\n    end\n    if a == 45\n        true\n    end\n\
    \    if a < 48\n        false\n    end\n    if a == 48\n        true\n    end\n\
    \    if a < 51\n        false\n    end\n    if a == 51\n        true\n    end\n\
    \    if a < 54\n        false\n    end\n    if a == 54\n        true\n    end\n\
    \    if a < 57\n        false\n    end\n    if a == 57\n        true\n    end\n\
    \    if a < 60\n        false\n    end\n    if a == 60\n        true\n    end\n\
    \    if a < 63\n        false\n    end\n    if a == 63\n        true\n    end\n\
    \    if a < 66\n        false\n    end\n    if a == 66\n        true\n    end\n\
    \    if a < 69\n        false\n    end\n    if a == 69\n        true\n    end\n\
    \    if a < 72\n        false\n    end\n    if a == 72\n        true\n    end\n\
    \    if a < 75\n        false\n    end\n    if a == 75\n        true\n    end\n\
    \    if a < 78\n        false\n    end\n\nusing Test\n\n@testset begin\n\ncandidate\
    \ = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t\
    @test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpkilavfkg.jl:19\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkilavfkg.jl:1\n\
    in expression starting at /tmp/tmpkilavfkg.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        return true\n\
    \    else if a == 1 \n        return true\n    else if a == 2 \n        return\
    \ true\n    else if a == 3 \n        return true\n    else if a == 4 \n      \
    \  return true\n    else if a == 5 \n        return true\n    else if a == 6 \n\
    \        return true\n    else if a == 7 \n        return true\n    else if a\
    \ == 8 \n        return true\n    else if a == 9 \n        return true\n    else\
    \ if a == 10 \n        return true\n    else if a == 11 \n        return true\n\
    \    else if a == 12 \n        return true\n    else if a == 13 \n        return\
    \ true\n    else if a == 14 \n        return true\n    else if a == 15 \n    \
    \    return true\n    else if a == 16 \n        return true\n    else if a ==\
    \ 17 \n        return true\n    else if a == 18 \n        return true\n    else\
    \ if a == 19 \n        return true\n    else if a == 20 \n        return true\n\
    \    else if a == 21 \n        return true\n    else if a == 22 \n        return\
    \ true\n    else if a == 23 \n        return true\n    else if a == 24 \n    \
    \    return true\n    else if a == 25 \n        return true\n    else if a ==\
    \ 26 \n        return true\n    else if a == 27 \n        return true\n    else\
    \ if a == 28 \n        return true\n    else if a == 29 \n        return true\n\
    \    else if a == 30 \n        return true\n    else if a == 31 \n        return\
    \ true\n    else if a == 32 \n        return true\n    else if a == 33 \n    \
    \    return true\n    else if a == 34 \n        return true\n    else if a ==\
    \ 35 \n        return true\n    else if a == 36 \n        return true\n    else\
    \ if a == 37 \n        return true\n    else if a == 38 \n        return true\n\
    \    else if a == 39 \n        return true\n    else if a == 40 \n        return\
    \ true\n    else if a == 41 \n        return true\n    else if a == 42 \n    \
    \    return true\n    else if a == 43 \n        return true\n    else if a ==\
    \ 44 \n        return true\n    else if a == 45 \n        return true\n    else\
    \ if a == 46 \n        return true\n    else if a == 47 \n        return true\n\
    \    else if a == 48 \n        return true\n    else if a == 49 \n        return\
    \ true\n    else if a == 50 \n        return true\n    else if a == 51 \n    \
    \    return true\n    else if a == 52 \n        return true\n    else if a ==\
    \ 53 \n        return true\n    else if a == 54 \n        return true\n    else\
    \ if a == 55\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7h_redw8.jl:22\nin expression starting at\
    \ /tmp/tmp7h_redw8.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        if a==1 \n            then return true\n        else \n  \
    \          if a==2 \n                then return true\n            else \n   \
    \             if a==3 \n                    then return true\n               \
    \ else \n                    if a==4 \n                        then return true\n\
    \                    else \n                        if a==5 \n               \
    \             then return true\n                        else \n              \
    \              if a==6 \n                                then return true\n  \
    \                          else \n                                if a==7 \n \
    \                                   then return true\n                       \
    \         else \n                                    if a==8 \n              \
    \                          then return true\n                                \
    \    else \n                                        if a==9 \n               \
    \                             then return true\n                             \
    \           else \n                                            if a==10 \n   \
    \                                             then return true\n             \
    \                               else \n                                      \
    \          if a==11 \n                                                    then\
    \ return true\n                                                else \n       \
    \                                             if a==12 \n                    \
    \                                    then return true\n                      \
    \                              else \n                                       \
    \                 if a==13 \n                                                \
    \            then return true\n                                              \
    \          else \n                                                           \
    \ if a==14 \n                                                                then\
    \ return true\n                                                            else\
    \ \n                                                                if a==15 \n\
    \                                                                    then return\
    \ true\n                                                                else \n\
    \                                                                    if a==16\
    \ \n                                                                        then\
    \ return true\n                                                              \
    \      else \n                                                        if a==17\
    \ \n                                                            then return true\n\
    \                                                        else \n             \
    \                                               if a==18 \n                  \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==19 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==20 \n                      \
    \                                      then return true\n                    \
    \                                    else \n                                 \
    \                           if a==21 \n                                      \
    \                          then return true\n                                \
    \                            else \n                                         \
    \                       if a==22 \n                                          \
    \                          then return true\n                                \
    \                                    else \n                                 \
    \                       if a==23 \n                                          \
    \                  then return true\n                                        \
    \                else \n                                                     \
    \       if a==24 \n                                                          \
    \      then return true\n                                                    \
    \        else \n                                                             \
    \   if a==25 \n                                                              \
    \      then return true\n                                                    \
    \                else \n                                                     \
    \   if a==26 \n                                                            then\
    \ return true\n                                                        else \n\
    \                                                            if a==27 \n     \
    \                                                           then return true\n\
    \                                                            else \n         \
    \                                                       if a==28 \n          \
    \                                                          then return true\n\
    \                                                                    else \n \
    \                                                       if a==29 \n          \
    \                                                  then return true\n        \
    \                                                else \n                     \
    \                                       if a==30 \n                          \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==31 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==32 \n                              \
    \                              then return true\n                            \
    \                            else \n                                         \
    \                   if a==33 \n                                              \
    \                  then return true\n                                        \
    \                    else \n                                                 \
    \               if a==34 \n                                                  \
    \                  then return true\n                                        \
    \                            else \n                                         \
    \               if a==35 \n                                                  \
    \          then return true\n                                                \
    \        else \n                                                            if\
    \ \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyxkhf1ef.jl:21\nin expression starting at /tmp/tmpyxkhf1ef.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        return true\n  \
    \  else \n        return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\
    \nWrite a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1jqw1gk7.jl:25\nin expression starting at\
    \ /tmp/tmp1jqw1gk7.jl:25\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 return true\n    if a==1 return\
    \ true\n    if a==2 return true\n    if a==3 return true\n    if a==4 return true\n\
    \    if a==5 return true\n    if a==6 return true\n    if a==7 return true\n \
    \   if a==8 return true\n    if a==9 return true\n    if a==10 return true\n \
    \   if a==11 return true\n    if a==12 return true\n    if a==13 return true\n\
    \    if a==14 return true\n    if a==15 return true\n    if a==16 return true\n\
    \    if a==17 return true\n    if a==18 return true\n    if a==19 return true\n\
    \    if a==20 return true\n    if a==21 return true\n    if a==22 return true\n\
    \    if a==23 return true\n    if a==24 return true\n    if a==25 return true\n\
    \    if a==26 return true\n    if a==27 return true\n    if a==28 return true\n\
    \    if a==29 return true\n    if a==30 return true\n    if a==31 return true\n\
    \    if a==32 return true\n    if a==33 return true\n    if a==34 return true\n\
    \    if a==35 return true\n    if a==36 return true\n    if a==37 return true\n\
    \    if a==38 return true\n    if a==39 return true\n    if a==40 return true\n\
    \    if a==41 return true\n    if a==42 return true\n    if a==43 return true\n\
    \    if a==44 return true\n    if a==45 return true\n    if a==46 return true\n\
    \    if a==47 return true\n    if a==48 return true\n    if a==49 return true\n\
    \    if a==50 return true\n    if a==51 return true\n    if a==52 return true\n\
    \    if a==53 return true\n    if a==54 return true\n    if a==55 return true\n\
    \    if a==56 return true\n    if a==57 return true\n    if a==58 return true\n\
    \    if a==59 return true\n    if a==60 return true\n    if a==61 return true\n\
    \    if a==62 return true\n    if a==63 return true\n    if a==64 return true\n\
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1fmtgpz9.jl:1\nin expression starting at /tmp/tmp1fmtgpz9.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        if a==1\n            then return true\n        else \n   \
    \         if a==2\n                then return true\n            else \n     \
    \           if a==3\n                    then return true\n                else\
    \ \n                    if a==4\n                        then return true\n  \
    \                  else \n                        if a==5\n                  \
    \          then return true\n                        else \n                 \
    \           if a==6\n                                then return true\n      \
    \                      else \n                                if a==7\n      \
    \                              then return true\n                            \
    \    else \n                                    if a==8\n                    \
    \                    then return true\n                                    else\
    \ \n                                        if a==9\n                        \
    \                    then return true\n                                      \
    \  else \n                                            if a==10\n             \
    \                                   then return true\n                       \
    \                     else \n                                                if\
    \ a==11\n                                                    then return true\n\
    \                                                else \n                     \
    \                               if a==12\n                                   \
    \                     then return true\n                                     \
    \               else \n                                                      \
    \  if a==13\n                                                            then\
    \ return true\n                                                        else \n\
    \                                                            if a==14\n      \
    \                                                          then return true\n\
    \                                                            else \n         \
    \                                                       if a==15\n           \
    \                                                         then return true\n \
    \                                                                   else \n  \
    \                                                      if a==16\n            \
    \                                                then return true\n          \
    \                                                  else \n                   \
    \                                             if a==17\n                     \
    \                                               then return true\n           \
    \                                                         else \n            \
    \                                            if a==18\n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==19\n                               \
    \                                     then return true\n                     \
    \                                               else \n                      \
    \                                  if a==20\n                                \
    \                            then return true\n                              \
    \                              else \n                                       \
    \                         if a==21\n                                         \
    \                           then return true\n                               \
    \                                     else \n                                \
    \                        if a==22\n                                          \
    \                  then return true\n                                        \
    \                    else \n                                                 \
    \               if a==23\n                                                   \
    \                 then return true\n                                         \
    \                           else \n                                          \
    \              if a==24\n                                                    \
    \        then return true\n                                                  \
    \          else \n                                                           \
    \     if a==25\n                                                             \
    \       then return true\n                                                   \
    \                 else \n                                                    \
    \    if a==26\n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==27\n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==28\n       \
    \                                                     then return true\n     \
    \                                                       else \n              \
    \                                                  if a==29\n                \
    \                                                    then return true\n      \
    \                                                              else \n       \
    \                                                 if a==30\n                 \
    \                                           then return true\n               \
    \                                             else \n                        \
    \                                        if a==31\n                          \
    \                                          then return true\n                \
    \                                                    else \n                 \
    \                                       if a==32\n                           \
    \                                 then return true\n                         \
    \                                   else \n                                  \
    \                              if a==33\n                                    \
    \                                then return true\n                          \
    \                                          else \n                           \
    \                             if a==34\n                                     \
    \                       then return true\n                                   \
    \                         else \n                                            \
    \                    if a==35\n                                              \
    \                      then return true\n                                \nusing\
    \ Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxs0zhypv.jl:21\nin expression starting at /tmp/tmpxs0zhypv.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 return true\n    else if a==1\
    \ return true\n    else if a==2 return true\n    else if a==3 return true\n  \
    \  else if a==4 return true\n    else if a==5 return true\n    else if a==6 return\
    \ true\n    else if a==7 return true\n    else if a==8 return true\n    else if\
    \ a==9 return true\n    else return false\nend\n</code>\n<|/ a tags=julia,if-statement\
    \ |>\n<| c |>\n`iscube` can be written as `return a==1 || a==3 || a==5 || a==7\
    \ || a==9 || a==11 || a==13 || a==15 || a==17 || a==19 || a==21 || a==23 || a==25\
    \ || a==27 || a==29 || a==31 || a==33 || a==35 || a==37 || a==39 || a==41 || a==43\
    \ || a==45 || a==47 || a==49 || a==51 || a==53 || a==55 || a==57 || a==59 || a==61\
    \ || a==63 || a==65 || a==67 || a==69 || a==71 || a==73 || a==75 || a==77 || a==79\
    \ || a==81 || a==83 || a==85 || a==87 || a==89 || a==91 || a==93 || a==95 || a==97\
    \ || a==99 || a==101 || a==103 || a==105 || a==107 || a==109 || a==111 || a==113\
    \ || a==115 || a==117 || a==119 || a==121 || a==123 || a==125 || a==127 || a==129\
    \ || a==131 || a==133 || a==135 || a==137 || a==139 || a==141 || a==143 || a==145\
    \ || a==147 || a==149 || a==151 || a==153 || a==155 || a==157 || a==159 || a==161\
    \ || a==163 || a==165 || a==167 || a==169 || a==171 || a==173 || a==175 || a==177\
    \ || a==179 || a==18\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb_so4tap.jl:21\nin expression starting at\
    \ /tmp/tmpb_so4tap.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 return true\n    else if a==1\
    \ return true\n    else if a==2 return true\n    else if a==3 return true\n  \
    \  else if a==4 return true\n    else if a==5 return true\n    else if a==6 return\
    \ true\n    else if a==7 return true\n    else if a==8 return true\n    else if\
    \ a==9 return true\n    else if a==10 return true\n    else if a==11 return true\n\
    \    else if a==12 return true\n    else if a==13 return true\n    else if a==14\
    \ return true\n    else if a==15 return true\n    else if a==16 return true\n\
    \    else if a==17 return true\n    else if a==18 return true\n    else if a==19\
    \ return true\n    else if a==20 return true\n    else if a==21 return true\n\
    \    else if a==22 return true\n    else if a==23 return true\n    else if a==24\
    \ return true\n    else if a==25 return true\n    else if a==26 return true\n\
    \    else if a==27 return true\n    else if a==28 return true\n    else if a==29\
    \ return true\n    else if a==30 return true\n    else if a==31 return true\n\
    \    else if a==32 return true\n    else if a==33 return true\n    else if a==34\
    \ return true\n    else if a==35 return true\n    else if a==36 return true\n\
    \    else if a==37 return true\n    else if a==38 return true\n    else if a==39\
    \ return true\n    else if a==40 return true\n    else if a==41 return true\n\
    \    else if a==42 return true\n    else if a==43 return true\n    else if a==44\
    \ return true\n    else if a==45 return true\n    else if a==46 return true\n\
    \    else if a==47 return true\n    else if a==48 return true\n    else if a==49\
    \ return true\n    else if a==50 return true\n    else if a==51 return true\n\
    \    else if a==52 return true\n    else if a==53 return true\n    else if a==54\
    \ return true\n    else if a==55 return true\n    else if a\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppons6ru5.jl:21\nin expression starting at\
    \ /tmp/tmppons6ru5.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 then return true\n    if a==1\
    \ then return true\n    if a==2 then return true\n    if a==3 then return true\n\
    \    if a==4 then return true\n    if a==5 then return true\n    if a==6 then\
    \ return true\n    if a==7 then return true\n    if a==8 then return true\n  \
    \  if a==9 then return true\n    if a==10 then return true\n    if a==11 then\
    \ return true\n    if a==12 then return true\n    if a==13 then return true\n\
    \    if a==14 then return true\n    if a==15 then return true\n    if a==16 then\
    \ return true\n    if a==17 then return true\n    if a==18 then return true\n\
    \    if a==19 then return true\n    if a==20 then return true\n    if a==21 then\
    \ return true\n    if a==22 then return true\n    if a==23 then return true\n\
    \    if a==24 then return true\n    if a==25 then return true\n    if a==26 then\
    \ return true\n    if a==27 then return true\n    if a==28 then return true\n\
    \    if a==29 then return true\n    if a==30 then return true\n    if a==31 then\
    \ return true\n    if a==32 then return true\n    if a==33 then return true\n\
    \    if a==34 then return true\n    if a==35 then return true\n    if a==36 then\
    \ return true\n    if a==37 then return true\n    if a==38 then return true\n\
    \    if a==39 then return true\n    if a==40 then return true\n    if a==41 then\
    \ return true\n    if a==42 then return true\n    if a==43 then return true\n\
    \    if a==44 then return true\n    if a==45 then return true\n    if a==46 then\
    \ return true\n    if a==47 then return true\n    if a==48 then return true\n\
    \    if a==49 then return true\n    if a==50 then return true\n    if a==51 then\
    \ return true\n    if a==52 then return true\n    if a==53 then return true\n\
    \    if a==54 then return true\n    if a==55 then return true\n    if a==56 then\
    \ return true\n    if a==57 then return true\n    if a==58 then return true\n\
    \    if a==59 then return true\n    if a==60 then return true\n    if a==61 \n\
    using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2_r2e7qx.jl:20\nin expression starting at /tmp/tmp2_r2e7qx.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        then return true\n\
    \    else \n        if a < 0 \n            then return false\n        else \n\
    \            if a < 9 \n                then return true\n            else \n\
    \                if a < 99 \n                    then return true\n          \
    \      else \n                    if a < 999 \n                        then return\
    \ true\n                    else \n                        if a < 9999 \n    \
    \                        then return true\n                        else \n   \
    \                         if a < 99999 \n                                then\
    \ return true\n                            else \n                           \
    \     if a < 999999 \n                                    then return true\n \
    \                               else \n                                    if\
    \ a < 9999999 \n                                        then return true\n   \
    \                                 else \n                                    \
    \    if a < 999999999 \n                                            then return\
    \ true\n                                        else \n                      \
    \                      if a < 99999999999 \n                                 \
    \               then return true\n                                           \
    \ else \n                                                if a < 999999999999999\
    \ \n                                                    then return true\n   \
    \                                             else \n                        \
    \                            if a < 9999999999999999999 \n                   \
    \                                     then return true\n                     \
    \                               else \n                                      \
    \                  if a < 99999999999999999999999 \n                         \
    \                                   then return true\n                       \
    \                                 else \n                                    \
    \                        if a < 999999999999999999999999999 \n               \
    \                                                 then return true\n         \
    \                                                   else \n                  \
    \                                              if a < 9999999999999999999999999999999\
    \ \n                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a < 9999999999999999999999999999999\
    \ \n                                                            then return true\n\
    \                                                            else \n         \
    \                                                       if a < 99999999999999999999999999999999999\
    \ \n                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a < 99999999999999999999999999999999999\
    \ \n                                                            then return true\n\
    \                                                            else \n         \
    \                                                       if a < 999999999999999999999999999999999999999\
    \ \n                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a < 999999999999999999999999999999999999999\
    \ \n                                                            then return true\n\
    \                                                            else \n         \
    \                                                       if a < 9999999999999999999999999999999999999999999\
    \ \n                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a < 9999999999999999999999999999999999999999999\
    \ \n                                                            then return true\n\
    \                                                            else \n         \
    \                                                       if a < 99999999999999999999999999999999999999999999999\
    \ \n                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a < 99999999999999999999999999999999999999999999999\
    \ \n                                                            then return true\n\
    \                                                            else \n         \
    \                                                       if a < 999999999999999999999999999999999999999999999999999\
    \ \n                                                                    then return\
    \ true\n                                                                    else\
    \ \n\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpocgr51mn.jl:21\nin expression starting at /tmp/tmpocgr51mn.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else if a==1 \n        then return true\n    else if a==2 \n        then\
    \ return true\n    else if a==3 \n        then return true\n    else if a==4 \n\
    \        then return true\n    else if a==5 \n        then return true\n    else\
    \ if a==6 \n        then return true\n    else if a==7 \n        then return true\n\
    \    else if a==8 \n        then return true\n    else if a==9 \n        then\
    \ return true\n    else if a==10 \n        then return true\n    else if a==11\
    \ \n        then return true\n    else if a==12 \n        then return true\n \
    \   else if a==13 \n        then return true\n    else if a==14 \n        then\
    \ return true\n    else if a==15 \n        then return true\n    else if a==16\
    \ \n        then return true\n    else if a==17 \n        then return true\n \
    \   else if a==18 \n        then return true\n    else if a==19 \n        then\
    \ return true\n    else if a==20 \n        then return true\n    else if a==21\
    \ \n        then return true\n    else if a==22 \n        then return true\n \
    \   else if a==23 \n        then return true\n    else if a==24 \n        then\
    \ return true\n    else if a==25 \n        then return true\n    else if a==26\
    \ \n        then return true\n    else if a==27 \n        then return true\n \
    \   else if a==28 \n        then return true\n    else if a==29 \n        then\
    \ return true\n    else if a==30 \n        then return true\n    else if a==31\
    \ \n        then return true\n    else if a==32 \n        then return true\n \
    \   else if a==33 \n        then return true\n    else if a==34 \n        then\
    \ return true\n    else if a==35 \n        then return true\n    else if a==36\
    \ \n        then return true\n    else if a==37 \n        then return true\n \
    \   else if a==38 \n        then return true\n    else if a==39 \n        then\
    \ return true\n    else if a==40 \n        then return true\n    else if a==41\
    \ \n        then return true\n    else if a==4\nusing Test\n\n@testset begin\n\
    \ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2) ==\
    \ false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180)\
    \ == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\
    \t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm6zk46yw.jl:21\nin expression starting at /tmp/tmpm6zk46yw.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        return true\n\
    \    else \n        return iscube(a-1) or iscube(a*a) or iscube(a*a*a)\nend\n\
    </cell>\n<code language=julia-1.5>\n\"\"\"\nWrite a function that takes an integer\
    \ a and returns true \n    if this ingeger is a cube of some integer number.\n\
    \    Note: you may assume the input is always valid.\n    Examples:\n    >>> iscube(1)\n\
    \    true\n    >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>>\
    \ iscube(64)\n    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n   \
    \ false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"if\" at /tmp/tmpdkvaosi0.jl:20 expected \"\
    end\", got \"or\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdkvaosi0.jl:23\n\
    in expression starting at /tmp/tmpdkvaosi0.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        if a==1 \n            then return true\n        else \n  \
    \          if a==2 \n                then return true\n            else \n   \
    \             if a==3 \n                    then return true\n               \
    \ else \n                    if a==4 \n                        then return true\n\
    \                    else \n                        if a==5 \n               \
    \             then return true\n                        else \n              \
    \              if a==6 \n                                then return true\n  \
    \                          else \n                                if a==7 \n \
    \                                   then return true\n                       \
    \         else \n                                    if a==8 \n              \
    \                          then return true\n                                \
    \    else \n                                        if a==9 \n               \
    \                             then return true\n                             \
    \           else \n                                            if a==10 \n   \
    \                                             then return true\n             \
    \                               else \n                                      \
    \          if a==11 \n                                                    then\
    \ return true\n                                                else \n       \
    \                                             if a==12 \n                    \
    \                                    then return true\n                      \
    \                              else \n                                       \
    \                 if a==13 \n                                                \
    \            then return true\n                                              \
    \          else \n                                                           \
    \ if a==14 \n                                                                then\
    \ return true\n                                                            else\
    \ \n                                                                if a==15 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==16 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==17 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==18 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==19 \n                      \
    \                                              then return true\n            \
    \                                                        else \n             \
    \                                           if a==20 \n                      \
    \                                      then return true\n                    \
    \                                        else \n                             \
    \                                   if a==21 \n                              \
    \                                      then return true\n                    \
    \                                                else \n                     \
    \                                   if a==22 \n                              \
    \                              then return true\n                            \
    \                                else \n                                     \
    \                           if a==23 \n                                      \
    \                              then return true\n                            \
    \                                        else \n                             \
    \                           if a==24 \n                                      \
    \                      then return true\n                                    \
    \                        else \n                                             \
    \                   if a==25 \n                                              \
    \                      then return true\n                                    \
    \                                else \n                                     \
    \                   if a==26 \n                                              \
    \              then return true\n                                            \
    \                else \n                                                     \
    \           if a==27 \n                                                      \
    \              then return true\n                                            \
    \                        else \n                                             \
    \           if a==28 \n                                                      \
    \      then return true\n                                                    \
    \        else \n                                                             \
    \   if a==29 \n                                                              \
    \      then return true\n                                                    \
    \                else \n                                                     \
    \   if a==30 \n                                                            then\
    \ return true\n                                                            else\
    \ \n                                                                if a==31 \n\
    \                                                                    then return\
    \ true\n                                                                    else\
    \ \n                                                        if a==32 \n      \
    \                                                      then return true\n    \
    \                                                        else \n             \
    \                                                   if a==33 \n              \
    \                                                      then return true\n    \
    \                                                                else \n     \
    \                                                   if a==34 \n              \
    \                                              then return true\n            \
    \                                                else \n                     \
    \                                           if a==35 \n                      \
    \                                              then return true\n\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2uplh0s0.jl:21\nin expression starting at /tmp/tmp2uplh0s0.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        return true\n\
    \    else \n        return iscube(a-1) or iscube(a*a)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"if\" at /tmp/tmpb0dg538_.jl:20 expected \"\
    end\", got \"or\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpb0dg538_.jl:23\n\
    in expression starting at /tmp/tmpb0dg538_.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        return true\n\
    \    else if a == 1\n        return true\n    else if a == 2\n        return true\n\
    \    else if a == 3\n        return true\n    else if a == 4\n        return true\n\
    \    else if a == 5\n        return true\n    else if a == 6\n        return true\n\
    \    else if a == 7\n        return true\n    else if a == 8\n        return true\n\
    \    else if a == 9\n        return true\n    else if a == 10\n        return\
    \ true\n    else if a == 11\n        return true\n    else if a == 12\n      \
    \  return true\n    else if a == 13\n        return true\n    else if a == 14\n\
    \        return true\n    else if a == 15\n        return true\n    else if a\
    \ == 16\n        return true\n    else if a == 17\n        return true\n    else\
    \ if a == 18\n        return true\n    else if a == 19\n        return true\n\
    \    else if a == 20\n        return true\n    else if a == 21\n        return\
    \ true\n    else if a == 22\n        return true\n    else if a == 23\n      \
    \  return true\n    else if a == 24\n        return true\n    else if a == 25\n\
    \        return true\n    else if a == 26\n        return true\n    else if a\
    \ == 27\n        return true\n    else if a == 28\n        return true\n    else\
    \ if a == 29\n        return true\n    else if a == 30\n        return true\n\
    \    else if a == 31\n        return true\n    else if a == 32\n        return\
    \ true\n    else if a == 33\n        return true\n    else if a == 34\n      \
    \  return true\n    else if a == 35\n        return true\n    else if a == 36\n\
    \        return true\n    else if a == 37\n        return true\n    else if a\
    \ == 38\n        return true\n    else if a == 39\n        return true\n    else\
    \ if a == 40\n        return true\n    else if a == 41\n        return true\n\
    \    else if a == 42\n        return true\n    else if a == 43\n        return\
    \ true\n    else if a == 44\n        return true\n    else if a == 45\n      \
    \  return true\n    else if a == 46\n        return true\n    else if a == 47\n\
    \        return true\n    else if a == 48\n        return true\n    else if a\
    \ == 49\n        return true\n    else if a == 50\n        return true\n    else\
    \ if a == 51\n        return true\n    else if a == 52\n        return true\n\
    \    else if a == 53\n        return true\n    else if a == 54\n        return\
    \ true\n    else if a == 55\n        return true\n    else if a == 56\n      \
    \  return true\n    \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t\
    @test(candidate(1) == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1)\
    \ == true)\n\t@test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\
    \t@test(candidate(1000) == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729)\
    \ == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprghp837_.jl:22\nin expression starting at\
    \ /tmp/tmprghp837_.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n    then return true\n \
    \   else if a==1 \n    then return true\n    else if a==2 \n    then return true\n\
    \    else if a==3 \n    then return true\n    else if a==4 \n    then return true\n\
    \    else if a==5 \n    then return true\n    else if a==6 \n    then return true\n\
    \    else if a==7 \n    then return true\n    else if a==8 \n    then return true\n\
    \    else if a==9 \n    then return true\n    else if a==10 \n    then return\
    \ true\n    else if a==11 \n    then return true\n    else if a==12 \n    then\
    \ return true\n    else if a==13 \n    then return true\n    else if a==14 \n\
    \    then return true\n    else if a==15 \n    then return true\n    else if a==16\
    \ \n    then return true\n    else if a==17 \n    then return true\n    else if\
    \ a==18 \n    then return true\n    else if a==19 \n    then return true\n   \
    \ else if a==20 \n    then return true\n    else if a==21 \n    then return true\n\
    \    else if a==22 \n    then return true\n    else if a==23 \n    then return\
    \ true\n    else if a==24 \n    then return true\n    else if a==25 \n    then\
    \ return true\n    else if a==26 \n    then return true\n    else if a==27 \n\
    \    then return true\n    else if a==28 \n    then return true\n    else if a==29\
    \ \n    then return true\n    else if a==30 \n    then return true\n    else if\
    \ a==31 \n    then return true\n    else if a==32 \n    then return true\n   \
    \ else if a==33 \n    then return true\n    else if a==34 \n    then return true\n\
    \    else if a==35 \n    then return true\n    else if a==36 \n    then return\
    \ true\n    else if a==37 \n    then return true\n    else if a==38 \n    then\
    \ return true\n    else if a==39 \n    then return true\n    else if a==40 \n\
    \    then return true\n    else if a==41 \n    then return true\n    else if a==4\n\
    using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpym18ocqa.jl:21\nin expression starting at /tmp/tmpym18ocqa.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        then return true\n\
    \    else if a == 1 \n        then return true\n    else if a == 2 \n        then\
    \ return true\n    else if a == 3 \n        then return true\n    else if a ==\
    \ 4 \n        then return true\n    else if a == 5 \n        then return true\n\
    \    else if a == 6 \n        then return true\n    else if a == 7 \n        then\
    \ return true\n    else if a == 8 \n        then return true\n    else if a ==\
    \ 9 \n        then return true\n    else if a == 10 \n        then return true\n\
    \    else if a == 11 \n        then return true\n    else if a == 12 \n      \
    \  then return true\n    else if a == 13 \n        then return true\n    else\
    \ if a == 14 \n        then return true\n    else if a == 15 \n        then return\
    \ true\n    else if a == 16 \n        then return true\n    else if a == 17 \n\
    \        then return true\n    else if a == 18 \n        then return true\n  \
    \  else if a == 19 \n        then return true\n    else if a == 20 \n        then\
    \ return true\n    else if a == 21 \n        then return true\n    else if a ==\
    \ 22 \n        then return true\n    else if a == 23 \n        then return true\n\
    \    else if a == 24 \n        then return true\n    else if a == 25 \n      \
    \  then return true\n    else if a == 26 \n        then return true\n    else\
    \ if a == 27 \n        then return true\n    else if a == 28 \n        then return\
    \ true\n    else if a == 29 \n        then return true\n    else if a == 30 \n\
    \        then return true\n    else if a == 31 \n        then return true\n  \
    \  else if a == 32 \n        then return true\n    else if a == 33 \n        then\
    \ return true\n    else if a == 34 \n        then return true\n    else if a ==\
    \ 35 \n        then return true\n    else if a == 36 \n        then return true\n\
    \    else if a == 37 \n        then return true\n    else if a == 38 \n      \
    \  then return true\n    else if a == 39 \n        then return true\n    else\
    \ if a == 40 \n        then return true\n    else if a == 41 \n        then return\
    \ true\n    else if a == 42 \n        then return true\n    else if a == 43 \n\
    \        then return true\n    else if a == 44 \n        then return true\n  \
    \  else if a == 45 \n        then return true\n    else \nusing Test\n\n@testset\
    \ begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4m96krzu.jl:21\nin expression starting at /tmp/tmp4m96krzu.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a == 0 \n        return true\n\
    \    if a < 0 \n        return false\n    if a > 9223372036854775807 \n      \
    \  return false\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\
    \"\n    Write a function that takes an integer a and returns true \n    if this\
    \ ingeger is a cube of some integer number.\n    Note: you may assume the input\
    \ is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n\
    \    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>>\
    \ iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\t@test(candidate(2)\
    \ == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64) == true)\n\t\
    @test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\t@test(candidate(0)\
    \ == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3xtwup48.jl:28\nin expression starting at\
    \ /tmp/tmp3xtwup48.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        then return true\n\
    \    else \n        cube=true\n        for i=1:a\n            cube=cube && iscube(i*i)\n\
    \        end\n        return cube\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    iscube(2)\n</cell>\n<code language=julia-1.4>\niscube(18)\n</cell>\n<code language=julia-1.4>\n\
    iscube(64)\n</cell>\n<code language=julia-1.4>\niscube(0)\n</cell>\n<code language=julia-1.4>\n\
    iscube(180)\n</cell>\n<code language=julia-1.4>\niscube(100)\n</cell>\n<code language=julia-1.4>\n\
    iscube(1000)\n</cell>\n<code language=julia-1.4>\niscube(10000)\n</cell>\n<code\
    \ language=julia-1.4>\niscube(100000)\n</cell>\n<code language=julia-1.4>\niscube(1000000)\n\
    </cell>\n<code language=julia-1.4>\niscube(10000000)\n</cell>\n<code language=julia-1.4>\n\
    iscube(100000000)\n</cell>\n<code language=julia-1.4>\niscube(1000000000)\n</cell>\n\
    <code language=julia-1.4>\niscube(10000000000)\n</cell>\n<code language=julia-1.4>\n\
    iscube(100000000000)\n</cell>\n<code language=julia-1.4>\niscube(1000000000000)\n\
    </cell>\n<code language=julia-1.4>\niscube(10000000000000)\n</cell>\n<code language=julia-1.4>\n\
    iscube(100000000000000)\n</cell>\n<code language=julia-1.4>\niscube(1000000000000000)\n\
    </cell>\n<code language=julia-1.4>\niscube(10000000000000000)\n</cell>\n<code\
    \ language=julia-1.4>\niscube(100000000000000000)\n</cell>\n<code language=julia-1.4>\n\
    iscube(1000000000000000000)\n</cell>\n<code language=julia-1.4>\niscube(10000000000000000000)\n\
    </cell>\n<code language=julia-1.4>\niscube(100000000000000000000)\n</cell>\n<code\
    \ language=julia-1.4>\niscube(1000000000000000000000)\n</cell>\n<code language=julia-1.4>\n\
    iscube(10000000000000000000000)\n</cell>\n<code language=julia-1.4>\niscube(100000000000000000000000)\n\
    </cell>\n<code language=julia-1.4>\niscube(1000000000000000000000000)\n</cell>\n\
    \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) ==\
    \ true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpyfrx7l4e.jl:21\nin expression starting at /tmp/tmpyfrx7l4e.jl:21\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a < 0 \n        error(\"iscube:\
    \ input must be positive\")\n    else if a == 0 \n        true\n    else if a\
    \ == 1 \n        true\n    else if a == 2 \n        true\n    else if a == 3 \n\
    \        true\n    else if a == 4 \n        true\n    else if a == 5 \n      \
    \  true\n    else if a == 6 \n        true\n    else if a == 7 \n        true\n\
    \    else if a == 8 \n        true\n    else if a == 9 \n        true\n    else\
    \ if a == 10 \n        true\n    else if a == 11 \n        true\n    else if a\
    \ == 12 \n        true\n    else if a == 13 \n        true\n    else if a == 14\
    \ \n        true\n    else if a == 15 \n        true\n    else if a == 16 \n \
    \       true\n    else if a == 17 \n        true\n    else if a == 18 \n     \
    \   true\n    else if a == 19 \n        true\n    else if a == 20 \n        true\n\
    \    else if a == 21 \n        true\n    else if a == 22 \n        true\n    else\
    \ if a == 23 \n        true\n    else if a == 24 \n        true\n    else if a\
    \ == 25 \n        true\n    else if a == 26 \n        true\n    else if a == 27\
    \ \n        true\n    else if a == 28 \n        true\n    else if a == 29 \n \
    \       true\n    else if a == 30 \n        true\n    else if a == 31 \n     \
    \   true\n    else if a == 32 \n        true\n    else if a == 33 \n        true\n\
    \    else if a == 34 \n        true\n    else if a == 35 \n        true\n    else\
    \ if a == 36 \n        true\n    else if a == 37 \n        true\n    else if a\
    \ == 38 \n        true\n    else if a == 39 \n        true\n    else if a == 40\
    \ \n        true\n    else if a == 41 \n        true\n    else if a == 42 \n \
    \       true\n    else if a == 43 \n        true\n    else if a == 44 \n     \
    \   true\n    else if a == 45 \n        true\n    else if a == 46 \n        true\n\
    \    else if a == 47 \n        true\n    else if a == 48 \n        true\n    else\
    \ if a == 49 \n        true\n    else if a == 50 \n        true\n    else if a\
    \ == 51 \n        true\n    else if a == 52 \n        true\n    else if a == 53\
    \ \n        \nusing Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
    \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t\
    @test(candidate(64) == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000)\
    \ == true)\n\t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprui6s782.jl:22\nin expression starting at\
    \ /tmp/tmprui6s782.jl:22\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes an integer a and returns true\
    \ \n    if this ingeger is a cube of some integer number.\n    Note: you may assume\
    \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n   \
    \ >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\
    \"\"\nfunction iscube(a::Int64)::Bool \n    if a==0 \n        true\n    else \n\
    \        if a==1 \n            true\n        else \n            if a==2 \n   \
    \             true\n            else \n                if a==3 \n            \
    \        true\n                else \n                    if a==4 \n         \
    \               true\n                    else \n                        if a==5\
    \ \n                            true\n                        else \n        \
    \                    if a==6 \n                                true\n        \
    \                    else \n                                if a==7 \n       \
    \                             true\n                                else \n  \
    \                                  if a==8 \n                                \
    \        true\n                                    else \n                   \
    \                     if a==9 \n                                            true\n\
    \                                        else \n                             \
    \               if a==10 \n                                                true\n\
    \                                            else \n                         \
    \                       if a==11 \n                                          \
    \          true\n                                                else \n     \
    \                                               if a==12 \n                  \
    \                                      true\n                                \
    \                    else \n                                                 \
    \       if a==13 \n                                                          \
    \  true\n                                                        else \n     \
    \                                                       if a==14 \n          \
    \                                                      true\n                \
    \                                            else \n                         \
    \                                       if a==15 \n                          \
    \                                          true\n                            \
    \                                    else \n                                 \
    \                                   if a==16 \n                              \
    \                                          true\n                            \
    \                                        else \n                             \
    \                           if a==17 \n                                      \
    \                      true\n                                                \
    \        else \n                                                            if\
    \ a==18 \n                                                                true\n\
    \                                                            else \n         \
    \                                                       if a==19 \n          \
    \                                                          true\n            \
    \                                                    else \n                 \
    \                                                   if a==20 \n              \
    \                                                          true\n            \
    \                                                        else \n             \
    \                                           if a==21 \n                      \
    \                                      true\n                                \
    \                        else \n                                             \
    \               if a==22 \n                                                  \
    \              true\n                                                        \
    \    else \n                                                                if\
    \ a==23 \n                                                                   \
    \ true\n                                                                else \n\
    \                                                                    if a==24\
    \ \n                                                                        true\n\
    \                                                                    else \n \
    \                                                       if a==25 \n          \
    \                                                  true\n                    \
    \                                    else \n                                 \
    \                           if a==26 \n                                      \
    \                          true\n                                            \
    \                else \n                                                     \
    \           if a==27 \n                                                      \
    \              true\n                                                        \
    \        else \n                                                             \
    \       if a==28 \n                                                          \
    \              true\n                                                        \
    \            else \n                                                        if\
    \ a==29 \n                                                            true\n \
    \                                                       else \n              \
    \                                              if a==30 \n                   \
    \                                             true\n                         \
    \                                   else \n                                  \
    \                              if a==31 \n                                   \
    \                                 true\n                                     \
    \                           else \n                                          \
    \                          if a==32 \n                                       \
    \                                 true\n                                     \
    \                               else \n                                      \
    \                  if a==33 \n                                               \
    \             true\n                                                        else\
    \ \n                                                            if a==34 \n  \
    \                                                              true\n        \
    \                                                    else \n                 \
    \                                               if a==35 \n                  \
    \                                                  true\n                    \
    \                                            else \n                         \
    \                                           if a==36 \n                      \
    \                                                  true\n                    \
    \                                                else \n                     \
    \                                   if a==37 \n                              \
    \                              true\n                                        \
    \                else \n                                                     \
    \       if a==38 \n                                                          \
    \      true\n                                                            else\
    \ \n                                                                if a==39 \n\
    \                                                                    true\n  \
    \                                                              else \n       \
    \                                                             if a==40 \n    \
    \                                                                    true\n  \
    \                                                                  else \n\nusing\
    \ Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1) == true)\n\
    \t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
    \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
    \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmpb0qvrwga.jl:140\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpb0qvrwga.jl:1\n\
    in expression starting at /tmp/tmpb0qvrwga.jl:1\n"
  stdout: ''

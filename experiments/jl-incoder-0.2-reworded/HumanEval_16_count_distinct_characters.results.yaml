language: jl
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmph4ykutmk.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmph4ykutmk.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktra"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \"\"\n    for character in string\n        count_distinct_characters = count_distinct_characters\
    \ + character\n    end\n    return count_distinct_characters\nend\n</cell>\n<code\
    \ language=julia-1.4>\ncount_distinct_characters(\"xyzXYZ\")\n</cell>\n<code language=julia-1.4>\n\
    count_distinct_characters(\"Jerry\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of times each character appears in\
    \ the string.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqyd2xdtv.jl:14\nin expression starting at\
    \ /tmp/tmpqyd2xdtv.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isUpper():\n          \
    \  count += 1\n        elif c.isLower():\n            count += 1\n        else:\n\
    \            count += 1\n    return count\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a string and returns the number of times the string \"\
    abc\" appears in the string.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa0hoy06p.jl:11\nin expression starting at\
    \ /tmp/tmpa0hoy06p.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmph4ykutmk.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmph4ykutmk.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktra"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of distinct characters in it.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptymbf991.jl:10\nin expression starting at\
    \ /tmp/tmptymbf991.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\" then\
    \ return 0\n    \n    chars = string.chars()\n    \n    chars = chars.filter(|c|\
    \ c !~ Char.IsUpper(c))\n    \n    chars = chars.filter(|c| c !~ Char.IsLower(c))\n\
    \    \n    chars = chars.filter(|c| c !~ Char.IsDigit(c))\n    \n    chars = chars.filter(|c|\
    \ c !~ Char.IsControl(c))\n    \n    chars = chars.filter(|c| c !~ Char.IsWhiteSpace(c))\n\
    \    \n    return chars.count\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    xyzXYZ\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\"\
    )\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of distinct characters (regardless of case) does it consist of. For\
    \ example, the string \"xyzXYZ\" has 3 distinct characters (regardless of case).\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp87es6tzk.jl:8\nin expression starting at /tmp/tmp87es6tzk.jl:8\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\n\
    candidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp68ivldm.jl:10\nin expression starting at\
    \ /tmp/tmpp68ivldm.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmph4ykutmk.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmph4ykutmk.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktra"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\" then\
    \ return 0\n    else if string.length == 0 then return 0\n    else if string.length\
    \ == 1 then return 1\n    else if string.length == 2 then return 2\n    else if\
    \ string.length == 3 then return 3\n    else if string.length == 4 then return\
    \ 4\n    else if string.length == 5 then return 5\n    else if string.length ==\
    \ 6 then return 6\n    else if string.length == 7 then return 7\n    else if string.length\
    \ == 8 then return 8\n    else if string.length == 9 then return 9\n    else if\
    \ string.length == 10 then return 10\n    else if string.length == 11 then return\
    \ 11\n    else if string.length == 12 then return 12\n    else if string.length\
    \ == 13 then return 13\n    else if string.length == 14 then return 14\n    else\
    \ if string.length == 15 then return 15\n    else if string.length == 16 then\
    \ return 16\n    else if string.length == 17 then return 17\n    else if string.length\
    \ == 18 then return 18\n    else if string.length == 19 then return 19\n    else\
    \ if string.length == 20 then return 20\n    else if string.length == 21 then\
    \ return 21\n    else if string.length == 22 then return 22\n    else if string.length\
    \ == 23 then return 23\n    else if string.length == 24 then return 24\n    else\
    \ if string.length == 25 then return 25\n    else if string.length == 26 then\
    \ return 26\n    else if string.length == 27 then return 27\n    else if string.length\
    \ == 28 then return 28\n    else if string.length == 29 then return 29\n    else\
    \ if string.length == 30 then return 30\n    else if string.length == 31 then\
    \ return 31\n    else if string.length == 32 then return 32\n    else if string.length\
    \ == 33 then return 33\n    else if string.length == 34 then return 34\n    else\
    \ if string.length == 35 or string.length == 36 or string.length == 37 or string.length\
    \ == 38 or string.length == 39 or string.length == 40 or string.length == 41 or\
    \ string.length == 42 or string.length == 43\n    then return 35\n    else if\
    \ string.length == 44 or string.length == 45 or string.length == 46 or string.length\
    \ == 47 or string.length == 48 or string.length == 49 or string.length == 50 or\
    \ string.length == 51 or string.length == 52 or string.length == 53 or string.length\
    \ == 54 or string.length == 55 or string.length == 56 or string.length == 57 or\
    \ string.length == 58 or string.length == 59\nusing Test\n\n@testset begin\n\n\
    candidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgb6mqy80.jl:8\nin expression starting at /tmp/tmpgb6mqy80.jl:8\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(\"\
    \", string)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp2n0t7zc7.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2n0t7zc7.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2n0t7zc7.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp2n0t7zc7.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2n0t7zc7.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2n0t7zc7.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2n0t7zc7.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2n0t7zc7.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp2n0t7zc7.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2n0t7zc7.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2n0t7zc7.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2n0t7zc7.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2n0t7zc7.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp2n0t7zc7.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2n0t7zc7.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /sha"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \n        count_distinct_characters(string.to_lowercase())\n        +count_distinct_characters(string.to_uppercase())\n\
    \        +count_distinct_characters(string.to_titlecase())\n        +count_distinct_characters(string.to_lowercase(string))\n\
    \        +count_distinct_characters(string.to_uppercase(string))\n        +count_distinct_characters(string.to_titlecase(string))\n\
    \        \n    return count_distinct_characters\n</code>\n<|/ a dscore=1 |>\n\
    <| a dscore=0 |>\n<code>\ndef count_distinct_characters(string::String)::Int64\n\
    \    count_distinct_characters = \n        count_distinct_characters(string.to_lowercase())\n\
    \        +count_distinct_characters(string.to_uppercase())\n        +count_distinct_characters(string.to_titlecase())\n\
    \        +count_distinct_characters(string.to_lowercase(string))\n        +count_distinct_characters(string.to_uppercase(string))\n\
    \        +count_distinct_characters(string.to_titlecase(string))\n        \n \
    \   return count_distinct_characters\n</code>\n<|/ a tags=string,haskell |>\n\
    <| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding why and/or how this code answers the question improves its long-term\
    \ value.\n<|/ c |>\n<| a tags=string,haskell |>\n<code>\nimport Data.List\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpaev3j663.jl:18\nin expression starting at\
    \ /tmp/tmpaev3j663.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n    return count\n</cell>\n<text>\nExercise 3: Write a function\
    \ that counts the number of unique characters in a given string. For example,\
    \ given \"abcde\", it should return 4.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7diu7dkq.jl:11\nin expression starting at\
    \ /tmp/tmp7diu7dkq.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpocny05gz.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpocny05gz.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpocny05gz.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpocny05gz.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpocny05gz.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpocny05gz.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpocny05gz.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpocny05gz.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpocny05gz.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpocny05gz.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpocny05gz.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpocny05gz.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpocny05gz.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpocny05gz.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpocny05gz.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \n        count_distinct_characters(string, 0, \"\")\n    \n    return count_distinct_characters\n\
    end count_distinct_characters\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: extra token \"count_distinct_characters\" after\
    \ end of expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpti8v1dzm.jl:13\n\
    in expression starting at /tmp/tmpti8v1dzm.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = foldl(add,0,map(tolower,string))\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a string and returns the number of times each character\
    \ appears in the string. For example, the string \"abracadabra\" has 4 a's and\
    \ 2 b's, and the string \"aba\" has 1 a, 1 b, and 1 c.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpngat7v4m.jl:10\nin expression starting at\
    \ /tmp/tmpngat7v4m.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n        else:\n\
    \            count += 1\n    return count\n</code>\n<|/ a tags=string,haskell,count,character\
    \ |>\n<| c |>\nI like this solution, but I wonder if there's a way to avoid the\
    \ duplicated `if` statements.\n<|/ c |>\n<| c |>\nI agree with you, there might\
    \ be a way to avoid the duplicated `if` statements, but I haven't thought about\
    \ it yet. Maybe someone else will come up with a better solution.\n<|/ c |>\n\
    <| c |>\nI added a solution without `if` statements.\n<|/ c |>\n<| c |>\nI like\
    \ your solution, but I wonder if there's a way to avoid the duplicated `if` statements.\n\
    <|/ c |>\n<| c |>\nI added a solution without `if` statements.\n<|/ c |>\n<| a\
    \ tags=string,haskell,count,character |>\nHere's a solution without if-statements:\n\
    <code>\nimport Data.Char\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdagrq_id.jl:11\nin expression starting at\
    \ /tmp/tmpdagrq_id.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = String.length(string)\n    for character in string\n        count_distinct_characters\
    \ = count_distinct_characters - String.length(String.lower(character))\n     \
    \   count_distinct_characters = count_distinct_characters - String.length(String.upper(character))\n\
    \    end\n    return count_distinct_characters\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0o_3ih_3.jl:16\nin expression starting at\
    \ /tmp/tmp0o_3ih_3.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = count(map(toLower, string))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp_iuh10tv.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp_iuh10tv.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: toLower not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmp_iuh10tv.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_iuh10tv.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_iuh10tv.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp_iuh10tv.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: toLower not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmp_iuh10tv.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_iuh10tv.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_iuh10tv.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp_iuh10tv.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: toLower not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmp_iuh10tv.jl:8\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_iuh10tv.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_iuh10tv.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp_iuh10tv.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: toLower not defined\n  Stacktrace:\n\
    \   [1] count_distinct_characters(string::String)\n     @ Main /tmp/tmp_iuh10tv.jl:8\n\
    \   [2] macro "
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmph4ykutmk.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmph4ykutmk.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktra"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise\nWrite a function that takes a string and returns the\
    \ number of distinct characters (regardless of case) does it consist of. For example,\
    \ given \"xyzXYZ\", it should return 3.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3us21het.jl:10\nin expression starting at\
    \ /tmp/tmp3us21het.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        count_distinct_characters_impl(string)\n    return count_distinct_characters\n\
    end count_distinct_characters\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: extra token \"count_distinct_characters\" after\
    \ end of expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp58ougt7h.jl:11\n\
    in expression starting at /tmp/tmp58ougt7h.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ \n    for c in string:\n        if c.isUpper():\n            count += 1\n  \
    \      elif c.isLower():\n            count += 1\n        elif c.isUpper():\n\
    \            count += 1\n        elif c.isLower():\n            count += 1\n \
    \       elif c.isDigit():\n            count += 1\n        elif c.isSpace():\n\
    \            count += 1\n        elif c.isAlpha():\n            count += 1\n \
    \       elif c.isAlphaNumeric():\n            count += 1\n        elif c.isPunctuation():\n\
    \            count += 1\n        elif c.isSymbol():\n            count += 1\n\
    \        elif c.isPunctChar():\n            count += 1\n        elif c.isPunctChar():\n\
    \            count += 1\n        elif c.isPunctChar():\n            count += 1\n\
    \        elif c.isPunctChar():\n            count += 1\n        elif c.isPunctChar():\n\
    \            count += 1\n        elif c.isPunctChar():\n            count += 1\n\
    \        elif c.isPunctChar():\n            count += 1\n        elif c.isPunctChar():\n\
    \            count += 1\n        elif c.isPunctChar():\n            count += 1\n\
    \        elif c.isPunctChar():\n            count += 1\n        elif c.isPunctChar():\n\
    \            count += 1\n        elif c.isPunctChar():\n            count += 1\n\
    \        elif c.isPunctChar():\n            count += 1\n        elif c.isPunctChar():\n\
    \            count += 1\n        elif c.isPunctChar():\n            count += 1\n\
    \        elif c.isPunctChar():\n            count += 1\n        elif c.isPunctChar():\n\
    \            count += 1\n        elif c.isPunctChar():\n            count += 1\n\
    \        elif c.isPunctChar():\n            count += 1\n        elif c.isPunctChar():\n\
    \            count += 1\n        elif c.isPunctChar():\n            count += 1\n\
    \        elif c.isPunctChar():\n            count += 1\n        elif c.isPunctChar():\n\
    \            count += 1\n        elif c.isPunctChar():\n            count += 1\n\
    \        elif c.isPunctChar():\n            count += 1\n        elif c.isPunctChar():\n\
    \            count += 1\n        elif c.isPunctChar():\n            count += 1\n\
    \        elif c.isPunctChar():\n            count += 1\n        elif c.isPunctChar():\n\
    \            count += 1\n        elif c.isPunctChar():\n            count += 1\n\
    \        elif c.isPunctChar():\n            count += 1\n        elif c.isPunctChar():\n\
    \            count += 1\n        elif c.isPunctChar():\n            count += 1\n\
    \        elif c.isPunctChar():\n            count += 1\n        elif c.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph6u8nkf9.jl:12\nin expression starting at\
    \ /tmp/tmph6u8nkf9.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpocny05gz.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpocny05gz.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpocny05gz.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpocny05gz.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpocny05gz.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpocny05gz.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpocny05gz.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpocny05gz.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpocny05gz.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpocny05gz.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpocny05gz.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpocny05gz.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpocny05gz.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpocny05gz.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpocny05gz.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    end\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of distinct characters in that string.\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi4w4gpkx.jl:13\nin expression starting at\
    \ /tmp/tmpi4w4gpkx.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of distinct characters in that string.\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptzjaugzy.jl:10\nin expression starting at\
    \ /tmp/tmptzjaugzy.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = string.count{char}\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    xyzXYZ\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\"\
    )\n</cell>\n<text>\nExercise: Write a function that returns the number of distinct\
    \ characters in a string. \nHint: Use count_distinct_characters()\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp28t9923q.jl:10\nin expression starting at\
    \ /tmp/tmp28t9923q.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c not in string.ascii_lowercase:\n            count\
    \ += 1\n    return count\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis answer doesn't\
    \ take into account the fact that `count_distinct_characters` should return `0`\
    \ for `\"Jerry\"`.\n<|/ c |>\n<| c |>\nI agree. My answer was meant to be a guide\
    \ to the OP's solution, not an exact solution. I'll edit my answer to include\
    \ a solution that does take into account the fact that `count_distinct_characters`\
    \ should return `0` for `\"Jerry\"`.\n<|/ c |>\n<| a dscore=1 |>\n<code>\ndef\
    \ count_distinct_characters(string::String)::Int64\n    count = 0\n    for c in\
    \ string.chars\n        if c not in string.ascii_lowercase\n            count\
    \ += 1\n    return count\n</code>\n<|/ a tags=string,haskell |>\n<| a dscore=1\
    \ |>\n<code>\nimport Data.List\nimport Data.Char\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6g8_nhsp.jl:11\nin expression starting at\
    \ /tmp/tmp6g8_nhsp.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,\
    \ \"\", \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7ndbkfpg.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7ndbkfpg.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7ndbkfpg.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7ndbkfpg.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7ndbkfpg.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7ndbkfpg.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7ndbkfpg.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7ndbkfpg.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7ndbkfpg.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7ndbkfpg.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7ndbkfpg.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7ndbkfpg.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7ndbkfpg.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7ndbkfpg.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktra"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \"\"\n    for i in string.chars\n        count_distinct_characters = count_distinct_characters\
    \ + i\n    return count_distinct_characters.length\n</code>\n<|/ a tags=string,haskell,count\
    \ |>\n<| c |>\nThe `count_distinct_characters` function can be written more concisely\
    \ as `length . toLower` . map toLower`.\n<|/ c |>\n<| c |>\n`toLower` will convert\
    \ all characters to lower case. `map toLower` will apply `toLower` to each character\
    \ in the string. `length . toLower` will apply `toLower` to each character in\
    \ the string and count the characters. `length . map toLower` will apply `toLower`\
    \ to each character in the string and count the characters. `length . map toLower`\
    \ will apply `toLower` to each character in the string and count the characters.\
    \ `length . map toLower` will apply `toLower` to each character in the string\
    \ and count the characters.\n<|/ c |>\n<| c |>\n`length . map toLower` will apply\
    \ `toLower` to each character in the string and count the characters. `length\
    \ . map toLower` will apply `toLower` to each character in the string and count\
    \ the characters. `length . map toLower` will apply `toLower` to each character\
    \ in the string and count the characters. `length . map toLower` will apply `toLower`\
    \ to each character in the string and count the characters.\n<|/ c |>\n<| c |>\n\
    `length . map toLower` will apply `toLower` to each character in the string and\
    \ count the characters. `length . map toLower` will apply `toLower` to each character\
    \ in the string and count the characters. `length . map toLower` will apply `toLower`\
    \ to each character in the string and count the characters. `length . map toLower`\
    \ will apply `toLower` to each character in the string and count the characters.\n\
    <|/ c |>\n<| c |>\n`length . map toLower` will apply `toLower` to each character\
    \ in the string and count the characters. `length . map toLower` will apply `toLower`\
    \ to each character in the string and count the characters. `length . map toLower`\
    \ will apply `toLower` to each character in the string and count the characters.\
    \ `length . map toLower` will apply `toLower` to each character in the string\
    \ and count the characters.\n<|/ c |>\n<| a tags=string,haskell\nusing Test\n\n\
    @testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsrf5p1rb.jl:12\nin expression starting at\
    \ /tmp/tmpsrf5p1rb.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise 2\nWrite a function that counts the number of distinct\
    \ characters in a string that begin with a given prefix.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6hrfavvl.jl:10\nin expression starting at\
    \ /tmp/tmp6hrfavvl.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = HashSet()\n    for char in string:\n        count_distinct_characters.add(char)\n\
    \    return count_distinct_characters.length\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp80w1kmk3.jl:11\nin expression starting at\
    \ /tmp/tmp80w1kmk3.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of distinct characters in it (regardless of case).\nusing Test\n\n\
    @testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpraohq2su.jl:10\nin expression starting at\
    \ /tmp/tmpraohq2su.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = foldl(\n        count_distinct_characters_helper,\n        0,\n        string.chars\n\
    \    )\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp9i7d7tpd.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmp9i7d7tpd.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  type String has no field chars\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp9i7d7tpd.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9i7d7tpd.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9i7d7tpd.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp9i7d7tpd.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  type String has no field chars\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp9i7d7tpd.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9i7d7tpd.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9i7d7tpd.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp9i7d7tpd.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  type String has no field chars\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp9i7d7tpd.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9i7d7tpd.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9i7d7tpd.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp9i7d7tpd.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  type Strin"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nWrite a function that counts the number of distinct characters\
    \ in a string ignoring case.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcmzz47it.jl:10\nin expression starting at\
    \ /tmp/tmpcmzz47it.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\" then\
    \ return 0\n    \n    chars = string.to_lowercase().chars()\n    \n    distinct\
    \ = 0\n    for c in chars do\n        if c != chars.next() then\n            distinct\
    \ += 1\n        end\n    end\n    \n    return distinct\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqm9ezwzm.jl:8\nin expression starting at /tmp/tmpqm9ezwzm.jl:8\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = String.length(string)\n    \n    for char in string\n        count_distinct_characters\
    \ = count_distinct_characters - String.length(String.lower(char))\n        count_distinct_characters\
    \ = count_distinct_characters - String.length(String.upper(char))\n    end\n \
    \   \n    return count_distinct_characters\nend\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"xyzXYZ\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    Jerry\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and\
    \ returns the number of times the string \"Jerry\" occurs in the string. \nFor\
    \ example, given the string \"JerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJerryJ\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn7b9_1f9.jl:18\nin expression starting at\
    \ /tmp/tmpn7b9_1f9.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise 2\nWrite a function that counts the number of times\
    \ a character appears in a string. For example, count_chars(\"xyzXYZ\", \"z\"\
    ) should return 3.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvb7kgyrt.jl:10\nin expression starting at\
    \ /tmp/tmpvb7kgyrt.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \"\"\n    \n    for i in string:\n        if count_distinct_characters ==\
    \ \"\":\n            count_distinct_characters = i\n        else:\n          \
    \  if count_distinct_characters != i:\n                count_distinct_characters\
    \ = count_distinct_characters + 1\n    \n    return count_distinct_characters\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\")\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n</cell>\n<text>\n\
    Write a function that takes a string and returns the number of times each character\
    \ appears in the string. Case is ignored.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoa0j5z69.jl:12\nin expression starting at\
    \ /tmp/tmpoa0j5z69.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of characters in the string that are not in the alphabet \"abc\"\
    .\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5aa9lena.jl:13\nin expression starting at\
    \ /tmp/tmp5aa9lena.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.0>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.0>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise 3\nWrite a function that counts the number of times\
    \ a character appears in a string. For example, count_characters(\"abcabc\") should\
    \ return 3.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb4sbk1zl.jl:10\nin expression starting at\
    \ /tmp/tmpb4sbk1zl.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,\
    \ \"\", \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7ndbkfpg.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7ndbkfpg.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7ndbkfpg.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7ndbkfpg.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7ndbkfpg.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7ndbkfpg.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7ndbkfpg.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7ndbkfpg.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7ndbkfpg.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7ndbkfpg.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7ndbkfpg.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7ndbkfpg.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7ndbkfpg.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7ndbkfpg.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktra"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \n        count_distinct_characters_helper(\n            string\n        )\n\
    \    \n    return count_distinct_characters\nend count_distinct_characters\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: extra token \"count_distinct_characters\" after\
    \ end of expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyypz18im.jl:15\n\
    in expression starting at /tmp/tmpyypz18im.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = String.length(string)\n    return count_distinct_characters\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string and returns the number of distinct\
    \ characters in that string. For example, count_distinct_characters(\"xyzXYZ\"\
    ) should return 3.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvnump7zi.jl:11\nin expression starting at\
    \ /tmp/tmpvnump7zi.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of characters in that string that appear more than once.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbeffgpko.jl:13\nin expression starting at\
    \ /tmp/tmpbeffgpko.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = foldl(count_distinct_characters_helper, 0::Int64, string)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpdw2_iyxt.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpdw2_iyxt.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpdw2_iyxt.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdw2_iyxt.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdw2_iyxt.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpdw2_iyxt.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpdw2_iyxt.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdw2_iyxt.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdw2_iyxt.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpdw2_iyxt.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpdw2_iyxt.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdw2_iyxt.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdw2_iyxt.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpdw2_iyxt.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktra"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that counts the number\
    \ of distinct characters in a string ignoring case.\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd_z1z5lj.jl:10\nin expression starting at\
    \ /tmp/tmpd_z1z5lj.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n    return count\n</code>\n<|/ a dscore=0 |>\n<| a tags=string,haskell\
    \ |>\n<code>\nimport Data.List\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph__ju0j7.jl:11\nin expression starting at\
    \ /tmp/tmph__ju0j7.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \"\"\n    for character in string\n        count_distinct_characters = count_distinct_characters\
    \ + character\n    end\n    count_distinct_characters = count_distinct_characters.toInt64()\n\
    \    return count_distinct_characters\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6k1g_nf5.jl:15\nin expression starting at\
    \ /tmp/tmp6k1g_nf5.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = foldl(count_distinct_characters_helper, 0::Int64, string)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpdw2_iyxt.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpdw2_iyxt.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpdw2_iyxt.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdw2_iyxt.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdw2_iyxt.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpdw2_iyxt.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpdw2_iyxt.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdw2_iyxt.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdw2_iyxt.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpdw2_iyxt.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpdw2_iyxt.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdw2_iyxt.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdw2_iyxt.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpdw2_iyxt.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktra"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        count_distinct_characters(string.chars)\nend\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"xyzXYZ\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    Jerry\")\n</cell>\n<text>\nExercise: Write a function that takes a string and\
    \ returns the number of distinct characters in that string.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3sxpd8uu.jl:11\nin expression starting at\
    \ /tmp/tmp3sxpd8uu.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        foldl(\n            fn (count, char) -> count + count_distinct_characters(char),\n\
    \            0,\n            string.chars\n        )\nend\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"xyzXYZ\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    Jerry\")\n</cell>\n<text>\nExercise: Write a function that counts the number of\
    \ distinct characters in a string that only consists of uppercase letters.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: space before \"(\" not allowed in \"fn (\" at\
    \ /tmp/tmpm5249dhb.jl:10\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpm5249dhb.jl:10\n\
    in expression starting at /tmp/tmpm5249dhb.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprfg5pieh.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprfg5pieh.jl:1\n\
    in expression starting at /tmp/tmprfg5pieh.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = String.length(string)\n    \n    for i in 0..(count_distinct_characters -\
    \ 1)\n        \n        if string.charAt(i) == string.charAt(i+1)\n          \
    \  count_distinct_characters = count_distinct_characters - 1\n        end\n  \
    \  end\n    \n    return count_distinct_characters\nend\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"xyzXYZ\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    Jerry\")\n</cell>\n<text>\nExercise 3\nWrite a function that returns the number\
    \ of times a substring appears in a given string.\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc4vuh66i.jl:20\nin expression starting at\
    \ /tmp/tmpc4vuh66i.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(\"\
    \", string)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    xyzXYZ\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\"\
    )\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of times each character appears in the string. \nFor example, if\
    \ the string were \"Jerry\", the function would return Dict(J=>1, e=>1, a=>1,\
    \ r=>1, y=>1, =>1)\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzcbb1qvf.jl:10\nin expression starting at\
    \ /tmp/tmpzcbb1qvf.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    \    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string\
    \ and returns the number of characters in the string that are not in the alphabet\
    \ \"abc\".\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkq0pwopn.jl:14\nin expression starting at\
    \ /tmp/tmpkq0pwopn.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    \    end\nend\n</cell>\n<code language=julia-1.1>\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp44kpw8ec.jl:14\nin expression starting at\
    \ /tmp/tmp44kpw8ec.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpocny05gz.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpocny05gz.jl:16\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpocny05gz.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpocny05gz.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpocny05gz.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpocny05gz.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpocny05gz.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpocny05gz.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpocny05gz.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpocny05gz.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpocny05gz.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpocny05gz.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmpocny05gz.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpocny05gz.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpocny05gz.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of distinct characters in it.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3zdr6y9d.jl:10\nin expression starting at\
    \ /tmp/tmp3zdr6y9d.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.1>\nusing Test\n\n@testset begin\n\n\
    candidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkjzrb5of.jl:10\nin expression starting at\
    \ /tmp/tmpkjzrb5of.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ the number of characters in the string that are not in the alphabet of our alphabet.\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp40iera6f.jl:10\nin expression starting at\
    \ /tmp/tmp40iera6f.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\n\
    candidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp68ivldm.jl:10\nin expression starting at\
    \ /tmp/tmpp68ivldm.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = string.len()\n    for c in string.chars()\n        count_distinct_characters\
    \ = count_distinct_characters - 1\n    end\n    return count_distinct_characters\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpk2yhadjv.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpk2yhadjv.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  type String has no field len\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpk2yhadjv.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpk2yhadjv.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpk2yhadjv.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpk2yhadjv.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  type String has no field len\n  Stacktrace:\n \
    \  [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpk2yhadjv.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpk2yhadjv.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpk2yhadjv.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpk2yhadjv.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  type String has no field len\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpk2yhadjv.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpk2yhadjv.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpk2yhadjv.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpk2yhadjv.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  type String has "
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters(\"\
    \", string)\n    \nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf_1o5eln.jl:12\nin expression starting at\
    \ /tmp/tmpf_1o5eln.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmph4ykutmk.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmph4ykutmk.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktra"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = HashSet()\n    for c in string:\n        count_distinct_characters.add(c)\n\
    \    return count_distinct_characters.length\n</code>\n<|/ a tags=string,haskell,functional-programming\
    \ |>\n<| c |>\nThis doesn't work. `count_distinct_characters` returns a `HashSet`,\
    \ which doesn't have a `length` method.\n<|/ c |>\n<| c |>\nI didn't know that.\
    \ Thanks for the heads up. I'll update the answer.\n<|/ c |>\n<| a dscore=2 |>\n\
    <code>\nimport Data.List\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsj2bvul1.jl:10\nin expression starting at\
    \ /tmp/tmpsj2bvul1.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \"\"\n    for character in string\n        count_distinct_characters += character\n\
    \    end\n    return count_distinct_characters.length\nend\n</cell>\n<code language=julia-1.3>\n\
    count_distinct_characters(\"xyzXYZ\")\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters(\"\
    Jerry\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and\
    \ returns the number of characters in the string that are not in the alphabet\
    \ (including uppercase and lowercase).\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb09x56pa.jl:15\nin expression starting at\
    \ /tmp/tmpb09x56pa.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = count(string.chars)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpx6zpp0dq.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpx6zpp0dq.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  type String has no field chars\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpx6zpp0dq.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpx6zpp0dq.jl:15 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpx6zpp0dq.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpx6zpp0dq.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  type String has no field chars\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpx6zpp0dq.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpx6zpp0dq.jl:16 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpx6zpp0dq.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpx6zpp0dq.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  type String has no field chars\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpx6zpp0dq.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpx6zpp0dq.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpx6zpp0dq.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpx6zpp0dq.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  type Strin"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        string.map(x => x.toLowerCase |> String.length |> Int64) |> \n \
    \       foldl(add, 0L)\n</code>\n<|/ a |>\n<| c |>\nThe `foldl` function was new\
    \ to me, and it looks like it could be very useful in other situations. Thanks\
    \ for sharing!\n<|/ c |>\n<| c |>\nI added a version that doesn't require `foldl`.\n\
    <|/ c |>\n<| a dscore=2 |>\nI like using foldl for these kinds of problems. It's\
    \ a little bit more concise than a for loop, but it's also more flexible (you\
    \ can do more complicated things with it).\n<code>\nlet count_distinct_characters(string::String)::Int64\
    \ = \n    string.foldl(fun acc c -> if c.ToLower() = c then acc + 1 else acc)\
    \ 0\n</code>\n<|/ a tags=string,f# |>\n<| c |>\nI like it, but I wonder if this\
    \ is actually more efficient than a for loop. I'm guessing it's not, but I'd like\
    \ to know for sure.\n<|/ c |>\n<| c |>\nI doubt it would be more efficient, but\
    \ I guess it would be more readable. `foldl` also has some nice properties that\
    \ make it very useful for other things.\n<|/ c |>\n<| c |>\nI added a version\
    \ that doesn't require `foldl`.\n<|/ c |>\n<| a dscore=2 |>\n<code>\nlet count_distinct_characters(string::String)::Int64\
    \ = \n    string |> Seq.countBy (fun c -> c.ToLower()) |> Seq.length\n</code>\n\
    <|/ a tags=string,f# |>\n<| a tags=string,f# |>\n<code>\nlet count_distinct_characters(string::String)::Int64\
    \ = \n    string |> Seq.countBy (fun c -> c.ToLower()) |> Seq.length\n</code>\n\
    <|/ a dscore=2 |>\n<| a tags=string,f# |>\n<code>\nlet count_distinct_characters(string::String)::Int64\
    \ = \n    string |> Seq.countBy (fun c -> c.ToLower()) |> Seq.length\n</code>\n\
    <|/ a dscore=1 |>\n<| a dscore=1 |>\n<code>\nlet count_distinct_characters(string::String)::Int64\
    \ = \n    string |> Seq.countBy (fun \nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiz3m78ta.jl:11\nin expression starting at\
    \ /tmp/tmpiz3m78ta.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \"\"\n    for character in string\n        count_distinct_characters = count_distinct_characters\
    \ + character\n    end\n    \n    return count_distinct_characters.length\nend\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpkfd1g4du.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmpkfd1g4du.jl:21\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  type String has no field length\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpkfd1g4du.jl:14\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpkfd1g4du.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpkfd1g4du.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpkfd1g4du.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching +(::String, ::Char)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::Integer,\
    \ ::AbstractChar) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:247\n\
    \  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmpkfd1g4du.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkfd1g4du.jl:22 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkfd1g4du.jl:20\ntest set:\
    \ Error During Test at /tmp/tmpkfd1g4du.jl:23\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching +(::String,\
    \ ::Char)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::Integer,\
    \ ::AbstractChar) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:247\n\
    \  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmpkfd1g4du.jl:11\n   [2] macro expansion\n     @ /shared/c"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.0>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.0>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise: Write a function that takes a string and returns the\
    \ number of distinct characters in that string in upper case. For example, count_distinct_characters(\"\
    xyzXYZ\") should return 3.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8qzbk0x7.jl:10\nin expression starting at\
    \ /tmp/tmp8qzbk0x7.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \"\"\n    for char in string\n        count_distinct_characters = count_distinct_characters\
    \ + char\n    end\n    return count_distinct_characters.length\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpb1h_rgfx.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpb1h_rgfx.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  type String has no field length\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpb1h_rgfx.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpb1h_rgfx.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpb1h_rgfx.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpb1h_rgfx.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching +(::String, ::Char)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::Integer,\
    \ ::AbstractChar) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:247\n\
    \  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmpb1h_rgfx.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb1h_rgfx.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb1h_rgfx.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpb1h_rgfx.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching +(::String,\
    \ ::Char)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::Integer,\
    \ ::AbstractChar) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:247\n\
    \  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmpb1h_rgfx.jl:10\n   [2] macro expansion\n     @ /shared/c"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.4>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.4>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the number of distinct\
    \ characters in a given string. \nThe function should take a string as input,\
    \ and output a number.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplt_r7369.jl:10\nin expression starting at\
    \ /tmp/tmplt_r7369.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \n        count_distinct_characters(string::String)::Int64\n    \n    if string\
    \ == \"\"\n        count_distinct_characters = 1\n    else\n        count_distinct_characters\
    \ = \n            count_distinct_characters(string::String)::Int64 + \n      \
    \      count_distinct_characters(string::String)::Int64\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n</cell>\n<text>\n\
    Exercise\nWrite a function that counts the number of unique characters in a given\
    \ string.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi6papf84.jl:20\nin expression starting at\
    \ /tmp/tmpi6papf84.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \"\"\n    for character in string\n        count_distinct_characters = count_distinct_characters\
    \ + character\n    end\n    return count_distinct_characters.length\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"Jerry\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    Jerry\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"Jerry\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    Jerry\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"Jerry\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    Jerry\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"Jerry\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    Jerry\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp22v6tr5i.jl:15\nin expression starting at\
    \ /tmp/tmp22v6tr5i.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \n        count_distinct_characters(\n            string\n            |> String.to_lowercase\n\
    \        )\n    \n    count_distinct_characters = \n        count_distinct_characters\
    \ + \n        count_distinct_characters(\n            string\n            |> String.to_uppercase\n\
    \        )\n    \n    count_distinct_characters\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp4psayimn.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmp4psayimn.jl:29\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  type DataType has no field to_lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:37 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp4psayimn.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4psayimn.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp4psayimn.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp4psayimn.jl:30\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  type DataType has no field to_lowercase\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:37 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp4psayimn.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4psayimn.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp4psayimn.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp4psayimn.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  type DataType has no field to_lowercase\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:37 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp4psayimn.jl:9\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4psayimn.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp4psayimn.jl:28\ntest set:\
    \ Error During Test at /tmp/tmp4psayimn.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaA"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n        elif\
    \ c.isAlpha():\n            count += 1\n        elif c.isAlphaNumeric():\n   \
    \         count += 1\n        elif c.isPunct():\n            count += 1\n    \
    \    else:\n            count += 1\n    return count\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a string and returns the number of uppercase\
    \ letters, lowercase letters, digits, spaces, and punctuation marks does it consist\
    \ of. For example, given \"xyzXYZ\", it should return 3.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpik3mrd49.jl:11\nin expression starting at\
    \ /tmp/tmpik3mrd49.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \"\"\n    for i in string\n        count_distinct_characters = count_distinct_characters\
    \ + i\n    end\n    return count_distinct_characters\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpkwql03k3.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpkwql03k3.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: Cannot `convert` an object\
    \ of type String to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::T) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/number.jl:7\n\
    \    convert(::Type{T}, !Matched::Base.TwicePrecision) where T<:Number at /shared/centos7/julia/1.7.3/share/julia/base/twiceprecision.jl:262\n\
    \    ...\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n  \
    \   @ Main /tmp/tmpkwql03k3.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkwql03k3.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkwql03k3.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpkwql03k3.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching +(::String, ::Char)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::Integer,\
    \ ::AbstractChar) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:247\n\
    \  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmpkwql03k3.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkwql03k3.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkwql03k3.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpkwql03k3.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matchin"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise: Write a function that counts the number of distinct\
    \ characters in a string ignoring case.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2xx1u0kp.jl:10\nin expression starting at\
    \ /tmp/tmp2xx1u0kp.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \"\"\n    for i in string\n        count_distinct_characters += i\n    return\
    \ count_distinct_characters.length\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp2a9dx3wx.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2a9dx3wx.jl:1\n\
    in expression starting at /tmp/tmp2a9dx3wx.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = Set.new()\n    for c in string:\n        if c not in count_distinct_characters:\n\
    \            count_distinct_characters.add(c)\n    return count_distinct_characters.length\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=string,haskell,algorithm |>\n<code>\nimport\
    \ Data.List\nimport Data.Maybe\nimport Data.Char\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2oxb79tw.jl:10\nin expression starting at\
    \ /tmp/tmp2oxb79tw.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\n@code_native count_distinct_characters(\"\
    xyzXYZ\")\n</cell>\n<code language=julia-1.5>\n@code_native count_distinct_characters(\"\
    Jerry\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and\
    \ returns the number of distinct characters in that string. \nFor example, given\
    \ the string \"Jerry\", it should return 4.\nusing Test\n\n@testset begin\n\n\
    candidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw5ts_3yr.jl:10\nin expression starting at\
    \ /tmp/tmpw5ts_3yr.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.4>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<text>\nExercise 3\nWrite a function that counts the number of characters\
    \ in a string that appears more than once.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqnylfaem.jl:10\nin expression starting at\
    \ /tmp/tmpqnylfaem.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.0>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.0>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise: Write a function that counts the number of distinct\
    \ characters in a string that start with a given character. For example, count_distinct_characters(\"\
    xyzXYZ\", \"x\") should return 3.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkodr5e0e.jl:10\nin expression starting at\
    \ /tmp/tmpkodr5e0e.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \"\"\n    for character in string\n        count_distinct_characters += character\n\
    \    end\n    return count_distinct_characters.length\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpg6m3ugc2.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpg6m3ugc2.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  type String has no field length\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpg6m3ugc2.jl:12\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpg6m3ugc2.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpg6m3ugc2.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpg6m3ugc2.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching +(::String, ::Char)\n\
    \  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::Integer,\
    \ ::AbstractChar) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:247\n\
    \  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmpg6m3ugc2.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpg6m3ugc2.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpg6m3ugc2.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpg6m3ugc2.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching +(::String,\
    \ ::Char)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/operators.jl:655\n    +(!Matched::Integer,\
    \ ::AbstractChar) at /shared/centos7/julia/1.7.3/share/julia/base/char.jl:247\n\
    \  Stacktrace:\n   [1] count_distinct_characters(string::String)\n     @ Main\
    \ /tmp/tmpg6m3ugc2.jl:10\n   [2] macro expansion\n     @ /shared/c"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.0>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.0>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of distinct characters in that string. \nWrite a function that takes\
    \ a string and returns the number of distinct characters in that string ignoring\
    \ case.\nWrite a function that takes a string and returns the number of distinct\
    \ characters in that string ignoring case.\nWrite a function that takes a string\
    \ and returns the number of distinct characters in that string ignoring case.\n\
    Write a function that takes a string and returns the number of distinct characters\
    \ in that string ignoring case.\nWrite a function that takes a string and returns\
    \ the number of distinct characters in that string ignoring case.\nWrite a function\
    \ that takes a string and returns the number of distinct characters in that string\
    \ ignoring case.\nWrite a function that takes a string and returns the number\
    \ of distinct characters in that string ignoring case.\nWrite a function that\
    \ takes a string and returns the number of distinct characters in that string\
    \ ignoring case.\nWrite a function that takes a string and returns the number\
    \ of distinct characters in that string ignoring case.\nWrite a function that\
    \ takes a string and returns the number of distinct characters in that string\
    \ ignoring case.\nWrite a function that takes a string and returns the number\
    \ of distinct characters in that string ignoring case.\nWrite a function that\
    \ takes a string and returns the number of distinct characters in that string\
    \ ignoring case.\nWrite a function that takes a string and returns the number\
    \ of distinct characters in that string ignoring case.\nWrite a function that\
    \ takes a string and returns the number of distinct characters in that string\
    \ ignoring case.\nWrite a function that takes a string and returns the number\
    \ of distinct characters in that string ignoring case.\nWrite a function that\
    \ takes a string and returns the number of distinct characters in that string\
    \ ignoring case.\nWrite a function that takes a string and returns the number\
    \ of distinct characters in that string ignoring case.\nWrite a function that\
    \ takes a string and returns the number of distinct characters in that string\
    \ ignoring case.\nWrite a function that takes a string and returns the number\
    \ of distinct characters in that string ignoring case.\nWrite a function that\
    \ takes a string and returns the number of distinct characters in that string\
    \ ignoring case.\nWrite a function that takes a string and returns the number\
    \ of distinct characters in that string ignoring case.\nWrite a function that\
    \ takes a string and returns the number of distinct characters in that string\
    \ ignoring case.\nWrite a function that takes a string and returns the number\
    \ of distinct characters in that string ignoring case.\nWrite a function that\
    \ takes a string and returns the number of distinct characters in that string\
    \ ignoring case.\nWrite a function that takes a string and returns the number\
    \ of distinct characters in that string ignoring case.\nWrite a function that\
    \ takes a string and returns the number of distinct characters in that string\
    \ \nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc6b_n38z.jl:10\nin expression starting at\
    \ /tmp/tmpc6b_n38z.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\n@time count_distinct_characters(\"\
    xyzXYZ\")\n</cell>\n<code language=julia-1.5>\n@time count_distinct_characters(\"\
    Jerry\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and\
    \ returns the number of distinct characters in it (regardless of case).\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2yqtltno.jl:10\nin expression starting at\
    \ /tmp/tmp2yqtltno.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nWrite a function that counts the number of distinct characters\
    \ in a string ignoring case.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptk0nyw57.jl:10\nin expression starting at\
    \ /tmp/tmptk0nyw57.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise: Write a function that counts the number of distinct\
    \ characters in a string ignoring case.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2xx1u0kp.jl:10\nin expression starting at\
    \ /tmp/tmp2xx1u0kp.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmph4ykutmk.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmph4ykutmk.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktra"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmph4ykutmk.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmph4ykutmk.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktra"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of distinct characters (regardless of case) in the string. For example,\
    \ count_distinct_characters(\"xyzXYZ\") should return 3.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz0y78f4g.jl:10\nin expression starting at\
    \ /tmp/tmpz0y78f4g.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = foldl(\n        count_distinct_characters_helper,\n        0,\n        string.chars\n\
    \    )\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp9i7d7tpd.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmp9i7d7tpd.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  type String has no field chars\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp9i7d7tpd.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9i7d7tpd.jl:19 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9i7d7tpd.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp9i7d7tpd.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  type String has no field chars\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp9i7d7tpd.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9i7d7tpd.jl:20 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9i7d7tpd.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp9i7d7tpd.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  type String has no field chars\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp9i7d7tpd.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp9i7d7tpd.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp9i7d7tpd.jl:18\ntest set:\
    \ Error During Test at /tmp/tmp9i7d7tpd.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  type Strin"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n    return count\n\
    </cell>\n<cell>\ncount_distinct_characters(\"xyzXYZ\")\n</cell>\n<cell>\ncount_distinct_characters(\"\
    Jerry\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and\
    \ returns the number of characters in the string that are not digits. For example,\
    \ given the string \"Jerry\", your function should return 3.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp39yh85og.jl:11\nin expression starting at\
    \ /tmp/tmp39yh85og.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\n@code_native count_distinct_characters(\"\
    xyzXYZ\")\n</cell>\n<code language=julia-1.5>\n@code_native count_distinct_characters(\"\
    Jerry\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and\
    \ returns the number of distinct characters in that string.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwy7vnwvv.jl:10\nin expression starting at\
    \ /tmp/tmpwy7vnwvv.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \"\"\n    \n    for character in string:\n        if character in count_distinct_characters:\n\
    \            count_distinct_characters = count_distinct_characters + character\n\
    \        else:\n            count_distinct_characters = count_distinct_characters\
    \ + 1\n    \n    return count_distinct_characters\n</code>\n<|/ a tags=string,haskell\
    \ |>\n<| c |>\n`count_distinct_characters = foldl (\\acc x -> if x `elem` acc\
    \ then acc else (acc ++ [x])) [] string`\n<|/ c |>\n<| c |>\n`foldl` isn't a good\
    \ choice here because `foldl` will traverse the entire list before returning the\
    \ result. `foldl'` will traverse the list lazily and return the result immediately.\n\
    <|/ c |>\n<| c |>\n`foldl'` will traverse the list lazily and return the result\
    \ immediately. `foldl` will traverse the entire list before returning the result.\
    \ `foldl` will traverse the list lazily and return the result immediately. `foldl'`\
    \ will traverse the list lazily and return the result immediately. `foldl` will\
    \ traverse the list lazily and return the result immediately. `foldl'` will traverse\
    \ the list lazily and return the result immediately. `foldl` will traverse the\
    \ list lazily and return the result immediately. `foldl'` will traverse the list\
    \ lazily and return the result immediately. `foldl` will traverse the list lazily\
    \ and return the result immediately. `foldl'` will traverse the list lazily and\
    \ return the result immediately. `foldl` will traverse the list lazily and return\
    \ the result immediately. `foldl'` will traverse the list lazily and return the\
    \ result immediately. `foldl` will traverse the list lazily and return the result\
    \ immediately. `foldl'` will traverse the list lazily and return the result immediately.\
    \ `foldl` will traverse the list lazily and return the result immediately. `foldl'`\
    \ will traverse the list lazily and return the result immediately. `foldl` will\
    \ traverse the list lazily and return the result immediately. `foldl'` will traverse\
    \ the list lazily and return the result immediately. `foldl` will traverse the\
    \ list lazily and return the result immediately. `foldl'` will traverse the list\
    \ lazily and return the result immediately. \nusing Test\n\n@testset begin\n\n\
    candidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjtu12fhf.jl:12\nin expression starting at\
    \ /tmp/tmpjtu12fhf.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \"\"\n    for character in string\n        count_distinct_characters = count_distinct_characters\
    \ + character\n    end\n    \n    return count_distinct_characters\nend\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\")\n</cell>\n<code\
    \ language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string and returns the number of characters\
    \ in the string that are not in the alphabet (case insensitive).\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpboenhjk0.jl:16\nin expression starting at\
    \ /tmp/tmpboenhjk0.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkxo709r2.jl:13\nin expression starting at\
    \ /tmp/tmpkxo709r2.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    end\n</cell>\n<code language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuizzzmxi.jl:13\nin expression starting at\
    \ /tmp/tmpuizzzmxi.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = HashSet()\n    for c in string:\n        if c in count_distinct_characters:\n\
    \            count_distinct_characters.add(c)\n        else:\n            count_distinct_characters.add(c+c.upper())\n\
    \            count_distinct_characters.add(c+c.lower())\n            count_distinct_characters.add(c+c.title())\n\
    \            count_distinct_characters.add(c+c.capitalize())\n            count_distinct_characters.add(c+c.swapcase())\n\
    \            count_distinct_characters.add(c+c.title())\n            count_distinct_characters.add(c+c.swapcase())\n\
    \            count_distinct_characters.add(c+c.lower())\n            count_distinct_characters.add(c+c.upper())\n\
    \            count_distinct_characters.add(c+c.title())\n            count_distinct_characters.add(c+c.swapcase())\n\
    \            count_distinct_characters.add(c+c.lower())\n            count_distinct_characters.add(c+c.upper())\n\
    \            count_distinct_characters.add(c+c.title())\n            count_distinct_characters.add(c+c.swapcase())\n\
    \            count_distinct_characters.add(c+c.lower())\n            count_distinct_characters.add(c+c.upper())\n\
    \            count_distinct_characters.add(c+c.title())\n            count_distinct_characters.add(c+c.swapcase())\n\
    \            count_distinct_characters.add(c+c.lower())\n            count_distinct_characters.add(c+c.upper())\n\
    \            count_distinct_characters.add(c+c.title())\n            count_distinct_characters.add(c+c.swapcase())\n\
    \            count_distinct_characters.add(c+c.lower())\n            count_distinct_characters.add(c+c.upper())\n\
    \            count_distinct_characters.add(c+c.title())\n            count_distinct_characters.add(c+c.swapcase())\n\
    \            count_distinct_characters.add(c+c.lower())\n            count_distinct_characters.add(c+c.upper())\n\
    \            count_distinct_characters.add(c+c.title())\n            count_distinct_characters.add(c+c.swapcase())\n\
    \            count_distinct_characters.add(c+c.lower())\n            count_distinct_characters.add(c+c.upper())\n\
    \            count_distinct_characters.add(c+c.title())\n            count_distinct_characters.add(c+c.swapcase())\n\
    \            count_distinct_characters.add(c+c.lower())\n            count_distinct_characters.add(c+c.upper())\n\
    \            count_distinct_characters.add(c+c.title())\n            count_distinct_characters.add(c+c.swapcase())\n\
    \            count_distinct_characters.add(c+c.\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuv9sbcln.jl:11\nin expression starting at\
    \ /tmp/tmpuv9sbcln.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmplrmt4mpx.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmplrmt4mpx.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmplrmt4mpx.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplrmt4mpx.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplrmt4mpx.jl:14\ntest set:\
    \ Error During Test at /tmp/tmplrmt4mpx.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmplrmt4mpx.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplrmt4mpx.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplrmt4mpx.jl:14\ntest set:\
    \ Error During Test at /tmp/tmplrmt4mpx.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmplrmt4mpx.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplrmt4mpx.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplrmt4mpx.jl:14\ntest set:\
    \ Error During Test at /tmp/tmplrmt4mpx.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktra"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\n\
    candidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp68ivldm.jl:10\nin expression starting at\
    \ /tmp/tmpp68ivldm.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \n        count_distinct_characters(string::String)::Int64\n    \n    if string\
    \ == \"\"\n        count_distinct_characters = 1\n    else\n        count_distinct_characters\
    \ = \n            count_distinct_characters(string::String)::Int64 + \n      \
    \      count_distinct_characters(string::String)::Int64\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string and returns the number\
    \ of distinct characters in that string. \nFor example, given the string \"xyzXYZ\"\
    , the function should return 3.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprk_x964_.jl:20\nin expression starting at\
    \ /tmp/tmprk_x964_.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n    return count\n\
    </code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't work. `count_distinct_characters(\"\
    Jerry\")` returns `4` instead of `3`.\n<|/ c |>\n<| c |>\nYes, it does. I tested\
    \ it before posting. What is your input? What is your expected output? What is\
    \ your actual output?\n<|/ c |>\n<| c |>\nI tested it again and it works now.\
    \ Thanks for pointing that out.\n<|/ c |>\n<| a dscore=1 |>\n<code>\ndef count_distinct_characters(string::String)::Int64\
    \ \n    \n    count = 0\n    for c in string:\n        if c.isUpper():\n     \
    \       count += 1\n        elif c.isLower():\n            count += 1\n      \
    \  elif c.isDigit():\n            count += 1\n        elif c.isSpace():\n    \
    \        count += 1\n    return count\n</code>\n<|/ a tags=haskell,string |>\n\
    <| c |>\nWhile this code may answer the question, providing additional context\
    \ regarding how and/or why it solves the problem would improve the answer's long-term\
    \ value.\n<|/ c |>\n<| a |>\n<code>\nimport Data.Char\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl3gpls67.jl:11\nin expression starting at\
    \ /tmp/tmpl3gpls67.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,\
    \ 0, \"\")\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpvs62dktf.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpvs62dktf.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpvs62dktf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvs62dktf.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvs62dktf.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpvs62dktf.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpvs62dktf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvs62dktf.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvs62dktf.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpvs62dktf.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmpvs62dktf.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvs62dktf.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvs62dktf.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpvs62dktf.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktra"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       0\n    else\n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkxo709r2.jl:13\nin expression starting at\
    \ /tmp/tmpkxo709r2.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        count_distinct_characters_impl(string)\nend\n</cell>\n<code language=julia-1.4>\n\
    count_distinct_characters(\"xyzXYZ\")\n</cell>\n<code language=julia-1.4>\ncount_distinct_characters(\"\
    Jerry\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and\
    \ returns the number of characters in that string that are not in the alphabet\
    \ (including spaces). For example, if the input string is \"Jerry\", the output\
    \ should be 4.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7n3wqme3.jl:11\nin expression starting at\
    \ /tmp/tmp7n3wqme3.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(\"\
    \", string)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp2n0t7zc7.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2n0t7zc7.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2n0t7zc7.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp2n0t7zc7.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2n0t7zc7.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2n0t7zc7.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2n0t7zc7.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2n0t7zc7.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp2n0t7zc7.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2n0t7zc7.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2n0t7zc7.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2n0t7zc7.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2n0t7zc7.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp2n0t7zc7.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2n0t7zc7.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /sha"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\" then\
    \ return 0\n    else if string[0] == string[1] then return 1\n    else if string[0]\
    \ == string[2] then return 2\n    else if string[0] == string[3] then return 3\n\
    \    else if string[0] == string[4] then return 4\n    else if string[0] == string[5]\
    \ then return 5\n    else if string[0] == string[6] then return 6\n    else if\
    \ string[0] == string[7] then return 7\n    else if string[0] == string[8] then\
    \ return 8\n    else if string[0] == string[9] then return 9\n    else if string[0]\
    \ == string[10] then return 10\n    else if string[0] == string[11] then return\
    \ 11\n    else if string[0] == string[12] then return 12\n    else if string[0]\
    \ == string[13] then return 13\n    else if string[0] == string[14] then return\
    \ 14\n    else if string[0] == string[15] then return 15\n    else if string[0]\
    \ == string[16] then return 16\n    else if string[0] == string[17] then return\
    \ 17\n    else if string[0] == string[18] then return 18\n    else if string[0]\
    \ == string[19] then return 19\n    else if string[0] == string[20] then return\
    \ 20\n    else if string[0] == string[21] then return 21\n    else if string[0]\
    \ == string[22] then return 22\n    else if string[0] == string[23] then return\
    \ 23\n    else if string[0] == string[24] then return 24\n    else if string[0]\
    \ == string[25] then return 25\n    else if string[0] == string[26] then return\
    \ 26\n    else if string[0] == string[27] then return 27\n    else if string[0]\
    \ == string[28] then return 28\n    else if string[0] == string[29] then return\
    \ 29\n    else if string[0] == string[30] then return 30\n    else if string[0]\
    \ == string[31] then return 31\n    else if string[0] == string[32] then return\
    \ 32\n    else if string[0] == string[33] then return 33\n    else if string[0]\
    \ == string[34] then return 34\n    else if string[0] == string[35] then return\
    \ 35\n    else if string[0] == string[36] then return 36\n    else if string[0]\
    \ == string[37] then return 37\n    else if string[0] == string[38] then return\
    \ 38\n    else if string[0] == string[39] then return 39\n    else if string[0]\
    \ == string[40] then return 40\n\nusing Test\n\n@testset begin\n\ncandidate =\
    \ count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpziny8ei1.jl:8\nin expression starting at /tmp/tmpziny8ei1.jl:8\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        foldl(\n            count_distinct_characters_helper,\n        \
    \    0,\n            string.chars()\n        )\n    return count_distinct_characters\n\
    </code>\n<|/ a dscore=2 |>\n<| a tags=haskell,string |>\n<code>\nimport Data.List\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6v2dlr1w.jl:15\nin expression starting at\
    \ /tmp/tmp6v2dlr1w.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\" then\
    \ return 0 \n    else \n        count_distinct_characters(string[1:end-1]) + count_distinct_characters(string[end])\n\
    \    end\nend\n</cell>\n<code language=julia-1.4>\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpagq9yah8.jl:8\nin expression starting at /tmp/tmpagq9yah8.jl:8\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.3>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the number of distinct\
    \ characters in a given string. For example, given \"xyzXYZ\", it should return\
    \ 3.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwepldkiy.jl:10\nin expression starting at\
    \ /tmp/tmpwepldkiy.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \"\"\n    for character in string\n        count_distinct_characters += character\n\
    \    end\n    return count_distinct_characters.length\nend\n</cell>\n<code language=julia-1.5>\n\
    count_distinct_characters(\"xyzXYZ\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    Jerry\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and\
    \ returns the number of times each character appears in the string. \nFor example,\
    \ given the string \"Jerry\" it should return {\"J\" = 1, \"y\" = 1, \"r\" = 1,\
    \ \"e\" = 2}.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn4nwo0af.jl:15\nin expression starting at\
    \ /tmp/tmpn4nwo0af.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters(\"\
    \", string)\n    \nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxll_vchi.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxll_vchi.jl:1\n\
    in expression starting at /tmp/tmpxll_vchi.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \n        string.map(x => x.toLowerCase |> String.length |> Int64) |> \n \
    \       foldl(add, 0L)\n    \nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"\
    xyzXYZ\")\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\"\
    )\n</cell>\n<text>\nExercise: Write a function that counts the number of characters\
    \ in a string that appears more than once.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdng5_33o.jl:14\nin expression starting at\
    \ /tmp/tmpdng5_33o.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n    return count\n\
    </code>\n<|/ a tags=string,haskell |>\n<| c |>\n`countDistinctChars \"\" = 0`\
    \ should be `countDistinctChars \"\" = 1` since `\"\"` is an empty string. Also\
    \ `countDistinctChars \"\" = 1` should be `countDistinctChars \"\" = 0` since\
    \ `\"\"` is an empty string. Also `countDistinctChars \"\" = 1` should be `countDistinctChars\
    \ \"\" = 1` since `\"\"` is an empty string. Also `countDistinctChars \"\" = 1`\
    \ should be `countDistinctChars \"\" = 1` since `\"\"` is an empty string. Also\
    \ `countDistinctChars \"\" = 1` should be `countDistinctChars \"\" = 1` since\
    \ `\"\"` is an empty string. Also `countDistinctChars \"\" = 1` should be `countDistinctChars\
    \ \"\" = 1` since `\"\"` is an empty string. Also `countDistinctChars \"\" = 1`\
    \ should be `countDistinctChars \"\" = 1` since `\"\"` is an empty string. Also\
    \ `countDistinctChars \"\" = 1` should be `countDistinctChars \"\" = 1` since\
    \ `\"\"` is an empty string. Also `countDistinctChars \"\" = 1` should be `countDistinctChars\
    \ \"\" = 1` since `\"\"` is an empty string. Also `countDistinctChars \"\" = 1`\
    \ should be `countDistinctChars \"\" = 1` since `\"\"` is an empty string. Also\
    \ `countDistinctChars \"\" = 1` should be `countDistinctChars \"\" = 1` since\
    \ `\"\"` is an empty string. Also `countDistinctChars \"\" = 1` should be `countDistinctChars\
    \ \"\" = 1` since `\"\"` is an empty string. Also `countDistinctChars \"\" = 1`\
    \ should be `countDistinctChars \"\" = 1` since `\"\"` is an empty string. Also\
    \ `countDistinctChars \"\" = 1` should be `countDistinctChars \"\" = 1` since\
    \ `\"\"` is an empty string. Also `countDistinctChars \"\" = 1` should be `countDistinctChars\
    \ \"\" = 1` since `\"\"` is an empty string. Also `countDistinctChars \"\" = 1`\
    \ should be \nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnjjxygvx.jl:11\nin expression starting at\
    \ /tmp/tmpnjjxygvx.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \"\"\n    for character in string\n        count_distinct_characters = count_distinct_characters\
    \ + character\n    end\n    return count_distinct_characters.length\nend\n</cell>\n\
    <code language=julia-1.1>\ncount_distinct_characters(\"xyzXYZ\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string and returns the number of characters\
    \ in the string that are not in the alphabet (including spaces). For example,\
    \ the string \"Jerry\" has 4 characters that are not in the alphabet, namely \"\
    J\", \"e\", \"y\", and \"r\". Write a function that takes a string and returns\
    \ the number of characters in the string that are not in the alphabet (including\
    \ spaces). For example, the string \"Jerry\" has 4 characters that are not in\
    \ the alphabet, namely \"J\", \"e\", \"y\", and \"r\". Write a function that takes\
    \ a string and returns the number of characters in the string that are not in\
    \ the alphabet (including spaces). For example, the string \"Jerry\" has 4 characters\
    \ that are not in the alphabet, namely \"J\", \"e\", \"y\", and \"r\". Write a\
    \ function that takes a string and returns the number of characters in the string\
    \ that are not in the alphabet (including spaces). For example, the string \"\
    Jerry\" has 4 characters that are not in the alphabet, namely \"J\", \"e\", \"\
    y\", and \"r\". Write a function that takes a string and returns the number of\
    \ characters in the string that are not in the alphabet (including spaces). For\
    \ example, the string \"Jerry\" has 4 characters that are not in the alphabet,\
    \ namely \"J\", \"e\", \"y\", and \"r\". Write a function that takes a string\
    \ and returns the number of characters in the string that are not in the alphabet\
    \ (including spaces). For example, the string \"Jerry\" has 4 characters that\
    \ are not in the alphabet, namely \"J\", \"e\", \"y\", and \"r\". Write a function\
    \ that takes a string and returns the number of characters in the string that\
    \ are not in the alphabet (including spaces). For example, the string \"Jerry\"\
    \ has 4 characters that are not in the alphabet, namely \"J\", \"e\", \"y\", and\
    \ \"r\". Write a function that takes a string and returns the number of characters\
    \ in the string that are not in the alphabet (including spaces). For example,\
    \ the string \"Jerry\" has 4 characters that are not in the alphabet, namely \"\
    J\", \"e\", \"y\", and \"r\". Write a function that takes a string and returns\
    \ the number of characters in the string that are not in the alphabet (including\
    \ spaces). For example, the string \"Jerry\" has 4 characters that are not in\
    \ the alphabet, namely \"J\", \"e\", \"y\", and \"r\". Write a function that takes\
    \ a string and returns the number of characters in the string that are not in\
    \ the alphabet (including spaces). For example, the \nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkcqhdmf3.jl:14\nin expression starting at\
    \ /tmp/tmpkcqhdmf3.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \n        string.map(x => x.toLowercase()).map(x => x.toUpperCase()).map(x\
    \ => x.toUpperCase()).distinct().length\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that counts the number of times a character appears in a string.\
    \ For example, count_characters(\"abracadabra\") should return 5 because 'a' appears\
    \ 5 times, 'b' appears 4 times, and 'r' appears 1 time.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkhm6gp13.jl:11\nin expression starting at\
    \ /tmp/tmpkhm6gp13.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count_distinct_characters\
    \ = \n        string.map(x => x.toLowerCase |> String.length |> Int64).distinct\n\
    \    \nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise: Write a function that takes a string and returns the\
    \ number of unique characters in that string. \nHint: Use count_distinct_characters\
    \ to solve this exercise.\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuh7p23d3.jl:13\nin expression starting at\
    \ /tmp/tmpuh7p23d3.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\" then\
    \ return 0 \n    else if string[0] == string[1] then return count_distinct_characters(string[2:])\
    \ + 1 \n    else if string[0] == string[2] then return count_distinct_characters(string[1:])\
    \ + 1 \n    else if string[1] == string[2] then return count_distinct_characters(string[2:])\
    \ + 1 \n    else if string[0] == string[3] then return count_distinct_characters(string[2:])\
    \ + 1 \n    else if string[1] == string[3] then return count_distinct_characters(string[1:])\
    \ + 1 \n    else if string[2] == string[3] then return count_distinct_characters(string[2:])\
    \ + 1 \n    else return count_distinct_characters(string[1:]) + 1 \nend \n</cell>\n\
    <code language=julia-1.0>\ncount_distinct_characters(\"xyzXYZ\")\n</cell>\n<code\
    \ language=julia-1.0>\ncount_distinct_characters(\"Jerry\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string as input and returns the number\
    \ of distinct characters in that string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdy5jobi_.jl:8\nin expression starting at /tmp/tmpdy5jobi_.jl:8\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n    return count\n\
    </cell>\n<cell>\ncount_distinct_characters(\"xyzXYZ\")\n</cell>\n<cell>\ncount_distinct_characters(\"\
    Jerry\")\n</cell>\n<text>\nExercise\nWrite a function that takes a string and\
    \ returns the number of distinct characters in it.\nusing Test\n\n@testset begin\n\
    \ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprcxyplp_.jl:11\nin expression starting at\
    \ /tmp/tmprcxyplp_.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\n@code_native count_distinct_characters(\"\
    xyzXYZ\")\n</cell>\n<code language=julia-1.5>\n@code_native count_distinct_characters(\"\
    Jerry\")\n</cell>\n<text>\nExercise 2\nWrite a function that counts the number\
    \ of distinct characters in a string that start with a given letter.\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9cx8upkk.jl:10\nin expression starting at\
    \ /tmp/tmp9cx8upkk.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprfg5pieh.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprfg5pieh.jl:1\n\
    in expression starting at /tmp/tmprfg5pieh.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise: Write a function that counts how many distinct characters\
    \ (regardless of case) does it consist of\n    >>> count_distinct_characters(\"\
    xyzXYZ\")\n    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcna15wpp.jl:10\nin expression starting at\
    \ /tmp/tmpcna15wpp.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = \"\"\n    for character in string\n        count_distinct_characters = count_distinct_characters\
    \ + character\n    end\n    return count_distinct_characters.length\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpww193vfs.jl:14\nin expression starting at\
    \ /tmp/tmpww193vfs.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n    return count\n\
    </code>\n<|/ a tags=string,haskell,count,character |>\n<| c |>\nThis doesn't work\
    \ if you have a string like \"aBcD\" where \"B\" is a space. You'll get \"2\"\
    \ instead of \"3\".\n<|/ c |>\n<| c |>\nThis doesn't work if you have a string\
    \ like \"aBcD\" where \"B\" is a space. You'll get \"2\" instead of \"3\".\n<|/\
    \ c |>\n<| a dscore=2 |>\nHere's a solution using Data.List.\n<code>\nimport Data.List\n\
    using Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpd3g7csy1.jl:11\nin expression starting at\
    \ /tmp/tmpd3g7csy1.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isAlpha():\n          \
    \  count += 1\n    return count\n</cell>\n<cell>\ncount_distinct_characters(\"\
    xyzXYZ\")\n</cell>\n<cell>\ncount_distinct_characters(\"Jerry\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string and returns the number of characters\
    \ in the string that are uppercase letters.\nusing Test\n\n@testset begin\n\n\
    candidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjigfpb9s.jl:11\nin expression starting at\
    \ /tmp/tmpjigfpb9s.jl:11\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.5>\n@code_native count_distinct_characters(\"\
    xyzXYZ\")\n</cell>\n<code language=julia-1.5>\n@code_native count_distinct_characters(\"\
    Jerry\")\n</cell>\n<text>\nExercise 2\nWrite a function that counts the number\
    \ of distinct characters in a given string ignoring case.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\") ==\
    \ 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8t83kkkd.jl:10\nin expression starting at\
    \ /tmp/tmp8t83kkkd.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = count(string.chars())\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp0lncpkca.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp0lncpkca.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  type String has no field chars\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp0lncpkca.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0lncpkca.jl:15 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0lncpkca.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp0lncpkca.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  type String has no field chars\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp0lncpkca.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0lncpkca.jl:16 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0lncpkca.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp0lncpkca.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  type String has no field chars\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp0lncpkca.jl:8\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0lncpkca.jl:17 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0lncpkca.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp0lncpkca.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  type Strin"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\n</cell>\n<code language=julia-1.4>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.4>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise\nWrite a function that counts the number of distinct\
    \ characters in a string ignoring case.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv53it92n.jl:10\nin expression starting at\
    \ /tmp/tmpv53it92n.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t\
    @test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmph4ykutmk.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmph4ykutmk.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmph4ykutmk.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmph4ykutmk.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmph4ykutmk.jl:14\ntest set:\
    \ Error During Test at /tmp/tmph4ykutmk.jl:18\n  Test threw exception\n  Expression:\
    \ candidate(\"aaaaAAAAaaaa\") == 1\n  UndefVarError: count_distinct_characters_helper\
    \ not defined\n  Stacktra"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    if string == \"\"\n \
    \       return 0\n    \n    chars = string.chars()\n    \n    chars = chars.filter(|c|c.isUppercase())\n\
    \    chars = chars.filter(|c|c.isLowercase())\n    chars = chars.filter(|c|c.isDigit())\n\
    \    chars = chars.filter(|c|c.isAlpha())\n    chars = chars.filter(|c|c.isSpace())\n\
    \    chars = chars.filter(|c|c.isPunctuation())\n    chars = chars.filter(|c|c.isSymbol())\n\
    \    chars = chars.filter(|c|c.isControl())\n    \n    chars = chars.map(|c|c.to_lowercase())\n\
    \    chars = chars.map(|c|c.to_uppercase())\n    chars = chars.map(|c|c.to_digit())\n\
    \    chars = chars.map(|c|c.to_alpha())\n    chars = chars.map(|c|c.to_space())\n\
    \    chars = chars.map(|c|c.to_punctuation())\n    chars = chars.map(|c|c.to_symbol())\n\
    \    chars = chars.map(|c|c.to_control())\n    \n    chars = chars.distinct()\n\
    \    \n    return chars.len()\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"|\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxg65d75d.jl:13\nin expression starting at\
    \ /tmp/tmpxg65d75d.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(\"\
    \", string)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp2n0t7zc7.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2n0t7zc7.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2n0t7zc7.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp2n0t7zc7.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2n0t7zc7.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2n0t7zc7.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2n0t7zc7.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2n0t7zc7.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp2n0t7zc7.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2n0t7zc7.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2n0t7zc7.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2n0t7zc7.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2n0t7zc7.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp2n0t7zc7.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2n0t7zc7.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /sha"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(\"\
    \", string)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp2n0t7zc7.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2n0t7zc7.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2n0t7zc7.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp2n0t7zc7.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2n0t7zc7.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2n0t7zc7.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2n0t7zc7.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2n0t7zc7.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp2n0t7zc7.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2n0t7zc7.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2n0t7zc7.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2n0t7zc7.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::String)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp2n0t7zc7.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp2n0t7zc7.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2n0t7zc7.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /sha"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters_helper(string,0,0)\n\
    end\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\"\
    )\n</cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of characters\
    \ in a string that occur more than once.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7_g_5el9.jl:10\nin expression starting at\
    \ /tmp/tmp7_g_5el9.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters(string,\
    \ 0)\nend\nusing Test\n\n@testset begin\n\ncandidate = count_distinct_characters;\n\
    \t@test(candidate(\"\") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"\
    abcdecadeCADE\") == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"\
    Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp7qvtwwen.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp7qvtwwen.jl:15\n  Test threw exception\n\
    \  Expression: candidate(\"\") == 0\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:15 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:16\n  Test threw exception\n  Expression:\
    \ candidate(\"abcde\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7qvtwwen.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp7qvtwwen.jl:17\n  Test threw exception\n  Expression:\
    \ candidate(\"abcdecadeCADE\") == 5\n  MethodError: no method matching count_distinct_characters(::String,\
    \ ::Int64)\n  Closest candidates are:\n    count_distinct_characters(::String)\
    \ at /tmp/tmp7qvtwwen.jl:7\n  Stacktrace:\n   [1] count_distinct_characters(string::String)\n\
    \     @ Main /tmp/tmp7qvtwwen.jl:8\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7qvtwwen.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared"
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    count_distinct_characters\
    \ = count(string)\n    return count_distinct_characters\nend count_distinct_characters\n\
    </cell>\n<code language=julia-1.5>\ncount_distinct_characters(\"xyzXYZ\")\n</cell>\n\
    <code language=julia-1.5>\ncount_distinct_characters(\"Jerry\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string and returns the number of times\
    \ the string \"Jerry\" appears in the string.\nusing Test\n\n@testset begin\n\n\
    candidate = count_distinct_characters;\n\t@test(candidate(\"\") == 0)\n\t@test(candidate(\"\
    abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\") == 5)\n\t@test(candidate(\"\
    aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: extra token \"count_distinct_characters\" after\
    \ end of expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3lsya1ei.jl:10\n\
    in expression starting at /tmp/tmp3lsya1ei.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" Given a string, find out how many distinct characters (regardless\
    \ of case) does it consist of\n    >>> count_distinct_characters(\"xyzXYZ\")\n\
    \    3\n    >>> count_distinct_characters(\"Jerry\")\n    4\n    \"\"\"\nfunction\
    \ count_distinct_characters(string::String)::Int64 \n    \n    count = 0\n   \
    \ for c in string:\n        if c.isUpper():\n            count += 1\n        elif\
    \ c.isLower():\n            count += 1\n        elif c.isDigit():\n          \
    \  count += 1\n        elif c.isSpace():\n            count += 1\n    return count\n\
    </code>\n<|/ a tags=string,haskell |>\n<| c |>\nThis doesn't work if there are\
    \ spaces in the string. Try `count_distinct_characters(\"a b\")`.\n<|/ c |>\n\
    <| c |>\nYes, I see that now. Thanks for pointing that out. I've updated my answer\
    \ to account for spaces.\n<|/ c |>\n<| c |>\nThis doesn't work if there are spaces\
    \ in the string. Try `count_distinct_characters(\"a b\")`.\n<|/ c |>\n<| c |>\n\
    Yes, I see that now. Thanks for pointing that out. I've updated my answer to account\
    \ for spaces.\n<|/ c |>\n<| a dscore=2 |>\n<code>\nimport Data.List\nusing Test\n\
    \n@testset begin\n\ncandidate = count_distinct_characters;\n\t@test(candidate(\"\
    \") == 0)\n\t@test(candidate(\"abcde\") == 5)\n\t@test(candidate(\"abcdecadeCADE\"\
    ) == 5)\n\t@test(candidate(\"aaaaAAAAaaaa\") == 1)\n\t@test(candidate(\"Jerry\
    \ jERRY JeRRRY\") == 5)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkpl753j1.jl:11\nin expression starting at\
    \ /tmp/tmpkpl753j1.jl:11\n"
  stdout: ''

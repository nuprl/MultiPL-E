language: jl
name: HumanEval_59_largest_prime_factor
results:
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1) * prime_factor(n-1)\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the greatest common\
    \ divisor of two positive integers. Assume that both integers are positive.\n\
    Hint: use the gcd function from the Base package.\nHint: use @code_native to check\
    \ your code.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpunu546gd.jl:13\nin expression starting at\
    \ /tmp/tmpunu546gd.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n-1) * n \nend\n\
    </cell>\n<code language=julia-1.1>\nlargest_prime_factor(13195)\n</cell>\n<code\
    \ language=julia-1.1>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo8topmut.jl:13\nin expression starting at\
    \ /tmp/tmpo8topmut.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else if n % 2 == 0 \n        largest_prime_factor(n /\
    \ 2)\n    else \n        largest_prime_factor(3 * n + 1) \nend\n</cell>\n<code\
    \ language=julia-1.3>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise: Write a function that returns\
    \ the smallest prime factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvpdh72ir.jl:10\nin expression starting at\
    \ /tmp/tmpvpdh72ir.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2xxqxu7i.jl:14\nin expression starting at\
    \ /tmp/tmp2xxqxu7i.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n % 2 == 0 \n        then return 2\n\
    \    else \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\nHint: Use a while loop and a prime number sieve.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1ge3w6u4.jl:9\nin expression starting at /tmp/tmp1ge3w6u4.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ \n        largest_prime_factor(n / 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    2\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpea3woihu.jl:9\nin expression starting at /tmp/tmpea3woihu.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        return n\n    \n    p :: Int64 = 1\n    \n    while p*p <= n \n\
    \        p :: Int64 = p +1\n    \n    if p*p > n \n        return n\n    \n  \
    \  p :: Int64 = p\n    \n    while p*p <= n \n        p :: Int64 = p +1\n    \n\
    \    if p*p > n \n        return n\n    \n    p :: Int64 = p\n    \n    while\
    \ p*p <= n \n        p :: Int64 = p +1\n    \n    if p*p > n \n        return\
    \ n\n    \n    p :: Int64 = p\n    \n    while p*p <= n \n        p :: Int64 =\
    \ p +1\n    \n    if p*p > n \n        return n\n    \n    p :: Int64 = p\n  \
    \  \n    while p*p <= n \n        p :: Int64 = p +1\n    \n    if p*p > n \n \
    \       return n\n    \n    p :: Int64 = p\n    \n    while p*p <= n \n      \
    \  p :: Int64 = p +1\n    \n    if p*p > n \n        return n\n    \n    p ::\
    \ Int64 = p\n    \n    while p*p <= n \n        p :: Int64 = p +1\n    \n    if\
    \ p*p > n \n        return n\n    \n    p :: Int64 = p\n    \n    while p*p <=\
    \ n \n        p :: Int64 = p +1\n    \n    if p*p > n \n        return n\n   \
    \ \n    p :: Int64 = p\n    \n    while p*p <= n \n        p :: Int64 = p +1\n\
    \    \n    if p*p > n \n        return n\n    \n    p :: Int64 = p\n    \n   \
    \ while p*p <= n \n        p :: Int64 = p +1\n    \n    if p*p > n \n        return\
    \ n\n    \n    p :: Int64 = p\n    \n    while p*p <= n \n        p :: Int64 =\
    \ p +1\n    \n    if p*p > n \n        return n\n    \n    p :: Int64 = p\n  \
    \  \n    while p*p <= n \n        p :: Int64 = p +1\n    \n    if p*p > n \n \
    \       return n\n    \n    p :: Int64 = p\n    \n    while p*p <= n \n      \
    \  p :: Int64 = p +1\n    \n    if p*p > n \n        return \nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgcmg2lta.jl:1\nin expression starting at /tmp/tmpgcmg2lta.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return n\n    else if n % 3 == 0 \n     \
    \   then return n\n    else if n % 5 == 0 \n        then return n\n    else if\
    \ n % 7 == 0 \n        then return n\n    else \n        largest_prime_factor(n\
    \ / 2)\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n  \
    \  >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp7p_zj5m.jl:9\nin expression starting at /tmp/tmpp7p_zj5m.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else \n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n</cell>\n\
    <text>\nExercise: Write a function that returns the smallest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nHint: Use a while loop and a primality test.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprzrgoif3.jl:14\nin expression starting at\
    \ /tmp/tmprzrgoif3.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n/2)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpguxgv6nn.jl:14\nin expression starting at\
    \ /tmp/tmpguxgv6nn.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else if n % 2 == 0 \n        largest_prime_factor(n /\
    \ 2) \n    else \n        largest_prime_factor(3 * n + 1) / 2 \nend\n</cell>\n\
    <code language=julia-1.3>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n \
    \   >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1s7xkltz.jl:10\nin expression starting at\
    \ /tmp/tmp1s7xkltz.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n / 2) \n    end\n\
    end\n</cell>\n<code language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl28wss2l.jl:14\nin expression starting at\
    \ /tmp/tmpl28wss2l.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        return 1 \n    else \n        largest_prime_factor(n-1) // largest_prime_factor(n)\
    \ \nend\n</cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: Use a while loop and a prime number\
    \ checker function.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp97mk1yea.jl:13\nin expression starting at\
    \ /tmp/tmp97mk1yea.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.1>\nlargest_prime_factor(101)\n</cell>\n<code\
    \ language=julia-1.1>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplanqj858.jl:14\nin expression starting at\
    \ /tmp/tmplanqj858.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        return n\n    \n    p :: Int64 = 1\n    i :: Int64 = 2\n    while\
    \ i*i <= n \n        p :: Int64 = i\n        i += 1\n    \n    while i*i <= n\
    \ \n        p :: Int64 = i\n        i += 1\n        if n % i == 0 \n         \
    \   return i\n    return n\nend\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: Use a while loop to iterate from\
    \ 2 to sqrt(n).\nHint: Use a variable i to keep track of the smallest prime factor\
    \ so far.\nHint: Use a variable p to keep track of the current largest prime factor\
    \ so far.\nHint: Use a variable n to keep track of the number being tested.\n\
    Hint: Use a variable m to keep track of the number of times the while loop has\
    \ iterated so far.\nHint: Use a variable c to keep track of the current number\
    \ of times the while loop has iterated so far.\nHint: Use a variable a to keep\
    \ track of the current largest prime factor so far.\nHint: Use a variable b to\
    \ keep track of the current smallest prime factor so far.\nHint: Use a variable\
    \ d to keep track of the current number of times the while loop has iterated so\
    \ far.\nHint: Use a variable e to keep track of the current smallest prime factor\
    \ so far.\nHint: Use a variable f to keep track of the current largest prime factor\
    \ so far.\nHint: Use a variable g to keep track of the current smallest prime\
    \ factor so far.\nHint: Use a variable h to keep track of the current number of\
    \ times the while loop has iterated so far.\nHint: Use a variable i to keep track\
    \ of the current largest prime factor so far.\nHint: Use a variable j to keep\
    \ track of the current smallest prime factor so far.\nHint: Use a variable k to\
    \ keep track of the current number of times the while loop has iterated so far.\n\
    Hint: Use a variable l to keep track of the current largest prime factor so far.\n\
    Hint: Use a variable m to keep track of the current smallest prime factor so far.\n\
    Hint: Use a variable n to keep track of the number being tested.\nHint: Use a\
    \ variable o to keep track of the current largest prime factor so far.\nHint:\
    \ Use a variable p to keep track of the current smallest prime factor so far.\n\
    Hint: Use a variable q to keep track of the current number of times the while\
    \ loop has iterated so far.\nHint\nusing Test\n\n@testset begin\n\ncandidate =\
    \ largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27) ==\
    \ 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpth_ifyhl.jl:24\nin expression starting at\
    \ /tmp/tmpth_ifyhl.jl:24\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ \n        largest_prime_factor(3*n+2)\nend\n</cell>\n<code language=julia-1.0>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.0>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    2\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0j45j3v3.jl:9\nin expression starting at /tmp/tmp0j45j3v3.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ then return 1\n    else if n==2 then return 2\n    else if n%2==0 then return\
    \ largest_prime_factor(n/2)\n    else return largest_prime_factor(n/2) + largest_prime_factor(n/3)\
    \ + 1\nend\n</cell>\n<code language=julia-1.4>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.4>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise\nWrite a function prime_factors(n) that returns the prime factors of\
    \ n as a vector of Int64s.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgx0u_xbp.jl:8\nin expression starting at /tmp/tmpgx0u_xbp.jl:8\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(1000000000)\n</cell>\n\
    <text>\nExercise: Write a function that returns the smallest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nHint: Use a while loop and a prime number\
    \ checker function.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7xp233o4.jl:14\nin expression starting at\
    \ /tmp/tmp7xp233o4.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 1\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(3 * n + 1)\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.0>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpec_1k55m.jl:9\nin expression starting at /tmp/tmpec_1k55m.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else \n        largest_prime_factor(n / 2) \n    end\n\
    end\n</cell>\n<code language=julia-1.0>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nHint: use the function largest_prime_factor.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdeg7b8dh.jl:14\nin expression starting at\
    \ /tmp/tmpdeg7b8dh.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else \n        largest_prime_factor(n-1) * n\nend\n</cell>\n\
    <code language=julia-1.3>\n@time largest_prime_factor(100_000_000)\n</cell>\n\
    <text>\nExercise\nWrite a function that returns the greatest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg98kp0a0.jl:13\nin expression starting at\
    \ /tmp/tmpg98kp0a0.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpeicsajbc.jl:9\nin expression starting at /tmp/tmpeicsajbc.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 || n % 2 == 0 \n        then return n\n    else if n % 3 == 0 \n       \
    \ then return n\n    else if n % 5 == 0 \n        then return n\n    else if n\
    \ % 7 == 0 \n        then return n\n    else \n        largest_prime_factor(n\
    \ / 2)\n    end\nend\n</cell>\n<code language=julia-1.4>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.4>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that checks if a number is prime. Assume that n is\
    \ positive.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpv2iy1hqy.jl:9\nin expression starting at /tmp/tmpv2iy1hqy.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpconrt6oe.jl:9\nin expression starting at /tmp/tmpconrt6oe.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: Use a recursive function and an\
    \ if statement.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpsr6aktcn.jl:14\nin expression starting at\
    \ /tmp/tmpsr6aktcn.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        return 1 \n    else \n        largest=1 \n        for p in prime_factors(n)\
    \ \n            largest=p if p*p > largest else largest \n        return largest\
    \ \nend\n</cell>\n<code language=julia-1.3>\n\"\"\"Return the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n\
    \    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmpk9msge7g.jl:12 expected \"\
    end\", got \"if\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpk9msge7g.jl:13\n\
    in expression starting at /tmp/tmpk9msge7g.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the greatest common\
    \ divisor (GCD) of two positive integers. Assume that both numbers are positive.\n\
    Hint: use the gcd function from the math library\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9xxjq3pp.jl:14\nin expression starting at\
    \ /tmp/tmp9xxjq3pp.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1 \n    else if n==2 \n        2 \n    else if n%2==0 \n        largest_prime_factor(n/2)\
    \ \n    else \n        largest_prime_factor(n/2) \n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert largest_prime_factor(10) == 2 \"This function should\
    \ return the largest prime factor of 10.\"\n@assert largest_prime_factor(13) ==\
    \ 2 \"This function should return the largest prime factor of 13.\"\n@assert largest_prime_factor(20)\
    \ == 2 \"This function should return the largest prime factor of 20.\"\n@assert\
    \ largest_prime_factor(31) == 3 \"This function should return the largest prime\
    \ factor of 31.\"\n@assert largest_prime_factor(35) == 5 \"This function should\
    \ return the largest prime factor of 35.\"\n@assert largest_prime_factor(37) ==\
    \ 7 \"This function should return the largest prime factor of 37.\"\n@assert largest_prime_factor(40)\
    \ == 11 \"This function should return the largest prime factor of 40.\"\n@assert\
    \ largest_prime_factor(41) == 13 \"This function should return the largest prime\
    \ factor of 41.\"\n@assert largest_prime_factor(50) == 17 \"This function should\
    \ return the largest prime factor of 50.\"\n@assert largest_prime_factor(101)\
    \ == 29 \"This function should return the largest prime factor of 101.\"\n@assert\
    \ largest_prime_factor(102) == 29 \"This function should return the largest prime\
    \ factor of 102.\"\n@assert largest_prime_factor(103) == 29 \"This function should\
    \ return the largest prime factor of 103.\"\n@assert largest_prime_factor(104)\
    \ == 29 \"This function should return the largest prime factor of 104.\"\n@assert\
    \ largest_prime_factor(105) == 29 \"This function should return the largest prime\
    \ factor of 105.\"\n@assert largest_prime_factor(106) == 29 \"This function should\
    \ return the largest prime factor of 106.\"\n@assert largest_prime_factor(107)\
    \ == 29 \"This function should return the largest prime factor of 107.\"\n@assert\
    \ largest_prime_factor(108) == 29 \"This function should return the largest prime\
    \ factor of 108.\"\n@assert largest_prime_factor(109) == 29 \"This function should\
    \ return the largest prime factor of 109.\"\n@assert largest_prime_factor(110)\
    \ == 29 \"This function should return the largest prime factor of 110.\"\n@assert\
    \ largest_prime_factor(111) == 29 \"This function should return the largest prime\
    \ factor of 111.\"\n@assert largest_prime_factor(112) == 29 \"This function should\
    \ return the largest prime factor \nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvf_1fwkn.jl:10\nin expression starting at\
    \ /tmp/tmpvf_1fwkn.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1) * prime_factor(n-1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise: Write a function that returns the greatest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: Use a recursive function.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzmxopeg_.jl:14\nin expression starting at\
    \ /tmp/tmpzmxopeg_.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj_bep7wc.jl:9\nin expression starting at /tmp/tmpj_bep7wc.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else if n % 2 == 0 \n        largest_prime_factor(n /\
    \ 2)\n    else \n        largest_prime_factor(3 * n + 1) \nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n \
    \   >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpao_8pmys.jl:10\nin expression starting at\
    \ /tmp/tmpao_8pmys.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 || n % 2 == 0 \n        then return 2\n    else if n % 3 == 0 \n       \
    \ then return 3\n    else if n % 5 == 0 \n        then return 5\n    else if n\
    \ % 7 == 0 \n        then return 7\n    else if n % 11 == 0 \n        then return\
    \ 11\n    else if n % 13 == 0 \n        then return 13\n    else if n % 17 ==\
    \ 0 \n        then return 17\n    else if n % 19 == 0 \n        then return 19\n\
    \    else if n % 23 == 0 \n        then return 23\n    else if n % 29 == 0 \n\
    \        then return 29\n    else if n % 31 == 0 \n        then return 31\n  \
    \  else if n % 37 == 0 \n        then return 37\n    else if n % 41 == 0 \n  \
    \      then return 41\n    else if n % 43 == 0 \n        then return 43\n    else\
    \ if n % 47 == 0 \n        then return 47\n    else if n % 53 == 0 \n        then\
    \ return 53\n    else if n % 59 == 0 \n        then return 59\n    else if n %\
    \ 61 == 0 \n        then return 61\n    else if n % 67 == 0 \n        then return\
    \ 67\n    else if n % 71 == 0 \n        then return 71\n    else if n % 73 ==\
    \ 0 \n        then return 73\n    else if n % 79 == 0 \n        then return 79\n\
    \    else if n % 83 == 0 \n        then return 83\n    else if n % 89 == 0 \n\
    \        then return 89\n    else if n % 97 == 0 \n        then return 97\n  \
    \  else if n % 101 == 0 \n        then return 101\n    else if n % 103 == 0 \n\
    \        then return 103\n    else if n % 107 == 0 \n        then return 107\n\
    \    else if n % 111 == 0 \n        then return 111\n    else if n % 117 == 0\
    \ \n        then return 117\n    else if n % 121 == 0 \n        then return 121\n\
    \    else if n % 123 == 0 \n        then return 123\n    else if n % 127 == 0\
    \ \n        then return 127\n    else if n % 131 == 0 \n        then return 131\n\
    \    else if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0\
    \ \n        then return 141\n    else if n % 147 == 0 \n        then return 147\n\
    \    else if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0\
    \ \n        then return 157\n    else \nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpijpn3hoj.jl:9\nin expression starting at /tmp/tmpijpn3hoj.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ \n        largest_prime_factor(3*n+2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2x04ckrd.jl:9\nin expression starting at /tmp/tmp2x04ckrd.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc15jz2cc.jl:14\nin expression starting at\
    \ /tmp/tmpc15jz2cc.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\
    \ \n    else \n        p := 3\n        while p < n \n            do if n % p ==\
    \ 0 \n                then return p \n                else p := p + 2\n    return\
    \ n\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5j7x5zl0.jl:9\nin expression starting at /tmp/tmp5j7x5zl0.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n / 2) \n    end\n\
    end\n</cell>\n<code language=julia-1.1>\nlargest_prime_factor(13195)\n</cell>\n\
    <code language=julia-1.1>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nHint: Use a while loop and a prime factorization function.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqdtymi7n.jl:14\nin expression starting at\
    \ /tmp/tmpqdtymi7n.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 1\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp31w7d4dh.jl:9\nin expression starting at /tmp/tmp31w7d4dh.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0z8lsxm1.jl:14\nin expression starting at\
    \ /tmp/tmp0z8lsxm1.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ \n        largest_prime_factor(n / 2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcd2m1edk.jl:9\nin expression starting at /tmp/tmpcd2m1edk.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.1>\nlargest_prime_factor(13195)\n</cell>\n<code\
    \ language=julia-1.1>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nHint: Use a recursive function.\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpat3xlxgf.jl:14\nin expression starting at\
    \ /tmp/tmpat3xlxgf.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else \n        p := 3\n        while p < n \n            do if n % p == 0\
    \ \n                then return p\n                p := p + 2\n            end\n\
    \        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^8)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nHint: Use a while loop and a\
    \ prime number sieve.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj275g1tc.jl:9\nin expression starting at /tmp/tmpj275g1tc.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return n\n    else \n        largest_prime_factor(n\
    \ / 2)\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\nHint: use the largest_prime_factor function.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1an805gy.jl:9\nin expression starting at /tmp/tmp1an805gy.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 127 == 0 \n        then return 127\n\
    \    else if n % 131 == 0 \n        then return 131\n    else if n % 137 == 0\
    \ \n        then return 137\n    else if n % 141 == 0 \n        then return 141\n\
    \    else if n % 147 == 0 \n        then return 147\n    else if n % 151 == 0\
    \ \n        then return 151\n    else if n % 157 == 0 \n        then return 157\n\
    \    else if n % 161 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfwb3j7a0.jl:9\nin expression starting at /tmp/tmpfwb3j7a0.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n-1) * n \nend\n\
    </cell>\n<code language=julia-1.3>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: Use a recursive function and memoization.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwh7z3k5_.jl:13\nin expression starting at\
    \ /tmp/tmpwh7z3k5_.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n / 2) \n    end\n\
    end\n</cell>\n<code language=julia-1.3>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    3\n    >>> smallest_prime_factor(2048)\n    2\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9031ujhq.jl:14\nin expression starting at\
    \ /tmp/tmp9031ujhq.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n-1) * n \nend\n\
    </cell>\n<code language=julia-1.3>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: Use a while loop and a prime number\
    \ sieve.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t\
    @test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmirf2gcm.jl:13\nin expression starting at\
    \ /tmp/tmpmirf2gcm.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else \n        largest_prime_factor(n / 2)\n    end\n\
    end\n</cell>\n<code language=julia-1.0>\n@assert largest_prime_factor(10) == 2\
    \ \"This function should return the largest prime factor of 10.\"\n@assert largest_prime_factor(13)\
    \ == 2 \"This function should return the largest prime factor of 13.\"\n@assert\
    \ largest_prime_factor(20) == 2 \"This function should return the largest prime\
    \ factor of 20.\"\n@assert largest_prime_factor(29) == 3 \"This function should\
    \ return the largest prime factor of 29.\"\n@assert largest_prime_factor(31) ==\
    \ 2 \"This function should return the largest prime factor of 31.\"\n@assert largest_prime_factor(101)\
    \ == 2 \"This function should return the largest prime factor of 101.\"\n@assert\
    \ largest_prime_factor(1305) == 3 \"This function should return the largest prime\
    \ factor of 1305.\"\n@assert largest_prime_factor(2047) == 2 \"This function should\
    \ return the largest prime factor of 2047.\"\n@assert largest_prime_factor(2919)\
    \ == 3 \"This function should return the largest prime factor of 2919.\"\n@assert\
    \ largest_prime_factor(31337) == 2 \"This function should return the largest prime\
    \ factor of 31337.\"\n@assert largest_prime_factor(101287) == 2 \"This function\
    \ should return the largest prime factor of 101287.\"\n@assert largest_prime_factor(131040)\
    \ == 3 \"This function should return the largest prime factor of 131040.\"\n@assert\
    \ largest_prime_factor(204657) == 2 \"This function should return the largest\
    \ prime factor of 204657.\"\n@assert largest_prime_factor(291929) == 3 \"This\
    \ function should return the largest prime factor of 291929.\"\n@assert largest_prime_factor(313377)\
    \ == 2 \"This function should return the largest prime factor of 313377.\"\n@assert\
    \ largest_prime_factor(1012873) == 2 \"This function should return the largest\
    \ prime factor of 1012873.\"\n@assert largest_prime_factor(1310410) == 3 \"This\
    \ function should return the largest prime factor of 1310410.\"\n@assert largest_prime_factor(2046579)\
    \ == 2 \"This function should return the largest prime factor of 2046579.\"\n\
    @assert largest_prime_factor(2919297) == 3 \"This function should return the largest\
    \ prime factor of 2919297.\"\n@assert largest_prime_factor(3133777) == 2 \"This\
    \ function should return the largest prime factor of 3133777.\"\n@assert large\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpos8crj2h.jl:14\nin expression starting at\
    \ /tmp/tmpos8crj2h.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return n\n    else \n        largest_prime_factor(n\
    \ / 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(10^9)\n\
    </cell>\n<text>\nExercise: Write a function that returns the largest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: Use a while loop and a prime number\
    \ test.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t\
    @test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfuv9gwjp.jl:9\nin expression starting at /tmp/tmpfuv9gwjp.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpeicsajbc.jl:9\nin expression starting at /tmp/tmpeicsajbc.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ \n        largest_prime_factor(3*n+2)\nend\n</cell>\n<code language=julia-1.0>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.0>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the greatest common\
    \ divisor (GCD) of two positive integers. Assume that both numbers are positive.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjy0v546i.jl:9\nin expression starting at /tmp/tmpjy0v546i.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0:\n        then return 41\n    else if n % 43 == 0:\n\
    \        then return 43\n    else if n % 47 == 0:\n        then return 47\n  \
    \  else if n % 53 == 0:\n        then return 53\n    else if n % 59 == 0:\n  \
    \      then return 59\n    else if n % 61 == 0:\n        then return 61\n    else\
    \ if n % 67 == 0:\n        then return 67\n    else if n % 71 == 0:\n        then\
    \ return 71\n    else if n % 73 == 0:\n        then return 73\n    else if n %\
    \ 79 == 0:\n        then return 79\n    else if n % 83 == 0:\n        then return\
    \ 83\n    else if n % 89 == 0:\n        then return 89\n    else if n % 97 ==\
    \ 0:\n        then return 97\n    else if n % 103 == 0:\n        then return 103\n\
    \    else if n % 107 == 0:\n        then return 107\n    else if n % 113 == 0:\n\
    \        then return 113\n    else if n % 127 == 0:\n        then return 127\n\
    \    else if n % 131 == 0:\n        then return 131\n    else if n % 137 == 0:\n\
    \        then return 137\n    else if n % 141 == 0:\n        then return 141\n\
    \    else if n % 147 == 0:\n        then return 147\n    else if n % 151 == 0:\n\
    \        then return 151\n    else if n % 157 == 0:\n        then return 157\n\
    \    else if n % 161 == 0:\n        then return 161\n    else if n % 163 == 0:\n\
    \        then return 163\n    else if n % 167 == 0:\n        then return 167\n\
    \    else if n % 173 == 0:\n        then return 173\n    else if n % 177 == 0:\n\
    \        then return 177\n    \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0dktt28k.jl:9\nin expression starting at /tmp/tmp0dktt28k.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n\
    \    else \n        largest_prime_factor(3*n+2)\nend\n</cell>\n<code language=julia-1.1>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.1>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of divisors\
    \ of n that are less than or equal to n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr3l8matm.jl:9\nin expression starting at /tmp/tmpr3l8matm.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n<2\
    \ return 1\n    if n==2 return n\n    if n%2==0 return n\n    \n    largest=2\n\
    \    largest=n\n    \n    while largest%2==0 do\n        largest=largest/2\n \
    \   end\n    \n    while largest%5==0 do\n        largest=largest/5\n    end\n\
    \    \n    while largest%3==0 do\n        largest=largest/3\n    end\n    \n \
    \   while largest%7==0 do\n        largest=largest/7\n    end\n    \n    while\
    \ largest%11==0 do\n        largest=largest/11\n    end\n    \n    while largest%13==0\
    \ do\n        largest=largest/13\n    end\n    \n    while largest%17==0 do\n\
    \        largest=largest/17\n    end\n    \n    while largest%19==0 do\n     \
    \   largest=largest/19\n    end\n    \n    while largest%23==0 do\n        largest=largest/23\n\
    \    end\n    \n    while largest%29==0 do\n        largest=largest/29\n    end\n\
    \    \n    while largest%31==0 do\n        largest=largest/31\n    end\n    \n\
    \    while largest%37==0 do\n        largest=largest/37\n    end\n    \n    while\
    \ largest%41==0 do\n        largest=largest/41\n    end\n    \n    while largest%43==0\
    \ do\n        largest=largest/43\n    end\n    \n    while largest%47==0 do\n\
    \        largest=largest/47\n    end\n    \n    while largest%53==0 do\n     \
    \   largest=largest/53\n    end\n    \n    while largest%59==0 do\n        largest=largest/59\n\
    \    end\n    \n    while largest%61==0 do\n        largest=largest/61\n    end\n\
    \    \n    while largest%67==0 do\n        largest=largest/67\n    end\n    \n\
    \    while largest%71==0 do\n        largest=largest/71\n    end\n    \n    while\
    \ largest%73==0 do\n        largest=largest/73\n    end\n    \n    while largest%79==0\
    \ do\n        largest=largest\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp709zxt8i.jl:15\nin expression starting at /tmp/tmp709zxt8i.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(3 * n + 1) \n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert largest_prime_factor(5) == 5\n@assert largest_prime_factor(7)\
    \ == 3\n@assert largest_prime_factor(12) == 3\n@assert largest_prime_factor(13)\
    \ == 3\n@assert largest_prime_factor(17) == 7\n@assert largest_prime_factor(19)\
    \ == 5\n@assert largest_prime_factor(23) == 3\n@assert largest_prime_factor(29)\
    \ == 3\n@assert largest_prime_factor(31) == 7\n@assert largest_prime_factor(37)\
    \ == 5\n@assert largest_prime_factor(43) == 3\n@assert largest_prime_factor(47)\
    \ == 3\n@assert largest_prime_factor(53) == 7\n@assert largest_prime_factor(59)\
    \ == 3\n@assert largest_prime_factor(61) == 7\n@assert largest_prime_factor(67)\
    \ == 5\n@assert largest_prime_factor(73) == 3\n@assert largest_prime_factor(79)\
    \ == 3\n@assert largest_prime_factor(83) == 7\n@assert largest_prime_factor(89)\
    \ == 3\n@assert largest_prime_factor(97) == 5\n@assert largest_prime_factor(1031)\
    \ == 7\n@assert largest_prime_factor(1055) == 5\n@assert largest_prime_factor(1099)\
    \ == 3\n@assert largest_prime_factor(1159) == 7\n@assert largest_prime_factor(1231)\
    \ == 5\n@assert largest_prime_factor(1279) == 3\n@assert largest_prime_factor(1343)\
    \ == 7\n@assert largest_prime_factor(1397) == 5\n@assert largest_prime_factor(1439)\
    \ == 3\n@assert largest_prime_factor(1459) == 7\n@assert largest_prime_factor(1519)\
    \ == 5\n@assert largest_prime_factor(1599) == 3\n@assert largest_prime_factor(1659)\
    \ == 7\n@assert largest_prime_factor(1721) == 5\n@assert largest_prime_factor(1799)\
    \ == 3\n@assert largest_prime_factor(1859) == 7\n@assert largest_prime_factor(1931)\
    \ == 5\n@assert largest_prime_factor(1993) == 3\n@assert largest_prime_factor(2059)\
    \ == 7\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t\
    @test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1yl4t1um.jl:9\nin expression starting at /tmp/tmp1yl4t1um.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1 \n    else if n==2 \n        2 \n    else if n%3==0 \n        largest_prime_factor(n/3)\
    \ \n    else \n        largest_prime_factor(n*(n+1)/2) \nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6mhm3m9d.jl:10\nin expression starting at\
    \ /tmp/tmp6mhm3m9d.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ \n        largest_prime_factor(3*n+2)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqrf6edkv.jl:9\nin expression starting at /tmp/tmpqrf6edkv.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        return 1 \n    else \n        p := largest_prime_factor(n/2) \n  \
    \      if n % p == 0 \n            return p \n        else \n            return\
    \ n \nend \n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwcs4rmnv.jl:17\nin expression starting at\
    \ /tmp/tmpwcs4rmnv.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1 \n    else \n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n</cell>\n\
    <text>\nExercise: Write a function that returns the smallest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nHint: Use a while loop and a prime number\
    \ sieve.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t\
    @test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyk1sq359.jl:14\nin expression starting at\
    \ /tmp/tmpyk1sq359.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else \n        largest = 2\n        for factor in prime_factors(n) \n   \
    \         if factor > largest \n                then largest = factor \n     \
    \   return largest\nend\n</cell>\n<code language=julia-1.3>\n@time largest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.3>\n@time largest_prime_factor(2048)\n</cell>\n\
    <text>\nExercise: Write a function that returns the smallest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nHint: Use a for loop to iterate over all prime\
    \ factors.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmphdg3u0tl.jl:9\nin expression starting at /tmp/tmphdg3u0tl.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.1>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvk9ca8r7.jl:14\nin expression starting at\
    \ /tmp/tmpvk9ca8r7.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj_bep7wc.jl:9\nin expression starting at /tmp/tmpj_bep7wc.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else \n        largest_prime_factor(n / 2) \n    end\n\
    end\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(13195)\n</cell>\n\
    <code language=julia-1.3>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\nHint: Use a while loop and a prime factorization function.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2gabbfx2.jl:14\nin expression starting at\
    \ /tmp/tmp2gabbfx2.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: Use a while loop and a prime number\
    \ test.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t\
    @test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeqr_3dd6.jl:14\nin expression starting at\
    \ /tmp/tmpeqr_3dd6.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n-1) * n \nend\n\
    </cell>\n<code language=julia-1.5>\n@assert largest_prime_factor(2) == 2 \n@assert\
    \ largest_prime_factor(3) == 3 \n@assert largest_prime_factor(5) == 5 \n@assert\
    \ largest_prime_factor(7) == 7 \n@assert largest_prime_factor(11) == 11 \n@assert\
    \ largest_prime_factor(13) == 13 \n@assert largest_prime_factor(17) == 17 \n@assert\
    \ largest_prime_factor(19) == 19 \n@assert largest_prime_factor(23) == 23 \n@assert\
    \ largest_prime_factor(29) == 29 \n@assert largest_prime_factor(31) == 31 \n@assert\
    \ largest_prime_factor(37) == 37 \n@assert largest_prime_factor(41) == 41 \n@assert\
    \ largest_prime_factor(43) == 43 \n@assert largest_prime_factor(47) == 47 \n@assert\
    \ largest_prime_factor(53) == 53 \n@assert largest_prime_factor(59) == 59 \n@assert\
    \ largest_prime_factor(61) == 61 \n@assert largest_prime_factor(67) == 67 \n@assert\
    \ largest_prime_factor(71) == 71 \n@assert largest_prime_factor(73) == 73 \n@assert\
    \ largest_prime_factor(79) == 79 \n@assert largest_prime_factor(83) == 83 \n@assert\
    \ largest_prime_factor(89) == 89 \n@assert largest_prime_factor(97) == 97 \n@assert\
    \ largest_prime_factor(1031) == 1031 \n@assert largest_prime_factor(1047) == 1047\
    \ \n@assert largest_prime_factor(1059) == 1059 \n@assert largest_prime_factor(1063)\
    \ == 1063 \n@assert largest_prime_factor(1069) == 1069 \n@assert largest_prime_factor(1087)\
    \ == 1087 \n@assert largest_prime_factor(1093) == 1093 \n@assert largest_prime_factor(1099)\
    \ == 1099 \n@assert largest_prime_factor(1103) == 1103 \n@assert largest_prime_factor(1105)\
    \ == 1105 \n@assert largest_prime_factor(1109) == 1109 \n@assert largest_prime_factor(1113)\
    \ == 1113 \n@assert largest_prime_factor(1117) == 1117 \n@assert largest_prime_factor(1123)\
    \ == 1123 \n@assert largest_prime_factor\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2oed92d_.jl:13\nin expression starting at\
    \ /tmp/tmp2oed92d_.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ then return 1\n    else if n==2 then return 2\n    else if n%2==0 then return\
    \ largest_prime_factor(n/2)\n    else return largest_prime_factor(n/2) + 1\nend\n\
    </cell>\n<code language=julia-1.4>\nlargest_prime_factor(13195)\n</cell>\n<code\
    \ language=julia-1.4>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the greatest common divisor of two positive integers.\
    \ Assume that both integers are positive.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpf80q0nq1.jl:8\nin expression starting at /tmp/tmpf80q0nq1.jl:8\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1 \n    else \n        largest_prime_factor(n-1) * n \nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n \
    \   >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz9ota2xy.jl:13\nin expression starting at\
    \ /tmp/tmpz9ota2xy.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise: Write a function that returns\
    \ the smallest prime factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5tky40ky.jl:9\nin expression starting at /tmp/tmp5tky40ky.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert largest_prime_factor(10) == 2 \"Incorrect\
    \ largest_prime_factor(10)\"\n@assert largest_prime_factor(13) == 2 \"Incorrect\
    \ largest_prime_factor(13)\"\n@assert largest_prime_factor(17) == 3 \"Incorrect\
    \ largest_prime_factor(17)\"\n@assert largest_prime_factor(19) == 3 \"Incorrect\
    \ largest_prime_factor(19)\"\n@assert largest_prime_factor(23) == 5 \"Incorrect\
    \ largest_prime_factor(23)\"\n@assert largest_prime_factor(29) == 5 \"Incorrect\
    \ largest_prime_factor(29)\"\n@assert largest_prime_factor(31) == 7 \"Incorrect\
    \ largest_prime_factor(31)\"\n@assert largest_prime_factor(37) == 11 \"Incorrect\
    \ largest_prime_factor(37)\"\n@assert largest_prime_factor(41) == 13 \"Incorrect\
    \ largest_prime_factor(41)\"\n@assert largest_prime_factor(43) == 13 \"Incorrect\
    \ largest_prime_factor(43)\"\n@assert largest_prime_factor(47) == 17 \"Incorrect\
    \ largest_prime_factor(47)\"\n@assert largest_prime_factor(53) == 19 \"Incorrect\
    \ largest_prime_factor(53)\"\n@assert largest_prime_factor(59) == 29 \"Incorrect\
    \ largest_prime_factor(59)\"\n@assert largest_prime_factor(61) == 37 \"Incorrect\
    \ largest_prime_factor(61)\"\n@assert largest_prime_factor(67) == 41 \"Incorrect\
    \ largest_prime_factor(67)\"\n@assert largest_prime_factor(71) == 43 \"Incorrect\
    \ largest_prime_factor(71)\"\n@assert largest_prime_factor(73) == 47 \"Incorrect\
    \ largest_prime_factor(73)\"\n@assert largest_prime_factor(79) == 59 \"Incorrect\
    \ largest_prime_factor(79)\"\n@assert largest_prime_factor(83) == 61 \"Incorrect\
    \ largest_prime_factor(83)\"\n@assert largest_prime_factor(89) == 67 \"Incorrect\
    \ largest_prime_factor(89)\"\n@assert largest_prime_factor(97) == 71 \"Incorrect\
    \ largest_prime_factor(97)\"\n</cell>\n<text>\nProblem 4\nA palindromic number\
    \ reads the same both ways. The largest palindrome made from the product of two\
    \ 2-digit numbers is 9009 = 91 \xD7 99.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplpp92vro.jl:14\nin expression starting at\
    \ /tmp/tmplpp92vro.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n\
    \    else \n        largest = 2\n        for i = 3; i * i <= n; i += 2 \n    \
    \        do if n % i == 0 \n                then largest = i\n        return largest\n\
    end\n</cell>\n<code language=julia-1.1>\nlargest_prime_factor(13195)\n</cell>\n\
    <code language=julia-1.1>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the smallest prime factor of n. Assume n >\
    \ 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n    >>>\
    \ smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpglk2ms_b.jl:9\nin expression starting at /tmp/tmpglk2ms_b.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(20000000)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0c_zsy1e.jl:9\nin expression starting at /tmp/tmp0c_zsy1e.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ \n        largest_prime_factor(n / 2)\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the greatest common\
    \ divisor of two positive integers. Assume that both integers are positive.\n\
    Hint: use the gcd function.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpne_vgugt.jl:9\nin expression starting at /tmp/tmpne_vgugt.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        p := 3\n        while p < n \n            do if n %\
    \ p == 0 \n                then return p\n                p := p + 2\n       \
    \ end\n        return n\nend\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    3\n   \
    \ >>> smallest_prime_factor(2048)\n    7\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpma3otf75.jl:9\nin expression starting at /tmp/tmpma3otf75.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: Use a while loop and a prime number\
    \ sieve.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t\
    @test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxpeeoxyj.jl:14\nin expression starting at\
    \ /tmp/tmpxpeeoxyj.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj_bep7wc.jl:9\nin expression starting at /tmp/tmpj_bep7wc.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the greatest common divisor of two numbers. Assume\
    \ that both numbers are positive.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27) ==\
    \ 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprg_otwjq.jl:14\nin expression starting at\
    \ /tmp/tmprg_otwjq.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: Use a while loop and a prime number\
    \ checker function.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp32dozf0y.jl:14\nin expression starting at\
    \ /tmp/tmp32dozf0y.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(3 * n + 1) \n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the number of prime factors of a given\
    \ number. \nFor example, prime_factors(100) should return (2, 3, 5). \nThe function\
    \ should work for any positive integer $n$. \nThe function should work for $n\
    \ \\ge 0$.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl9_tz7lq.jl:9\nin expression starting at /tmp/tmpl9_tz7lq.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else if n % 2 == 0 \n        largest_prime_factor(n /\
    \ 2)\n    else \n        largest_prime_factor(3 * n + 1) \n    end\nend\n</cell>\n\
    <code language=julia-1.4>\n@time largest_prime_factor(2000000)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\nHint: You may want to use the function largest_prime_factor(n::Int64)::Int64\
    \ to help you write your function.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjss2jyy8.jl:10\nin expression starting at\
    \ /tmp/tmpjss2jyy8.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return 2\n    else if n % 3 == 0 \n     \
    \   then return 3\n    else if n % 5 == 0 \n        then return 5\n    else if\
    \ n % 7 == 0 \n        then return 7\n    else if n % 11 == 0 \n        then return\
    \ 11\n    else if n % 13 == 0 \n        then return 13\n    else if n % 17 ==\
    \ 0 \n        then return 17\n    else if n % 19 == 0 \n        then return 19\n\
    \    else if n % 23 == 0 \n        then return 23\n    else if n % 29 == 0 \n\
    \        then return 29\n    else if n % 31 == 0 \n        then return 31\n  \
    \  else if n % 37 == 0 \n        then return 37\n    else if n % 41 == 0 \n  \
    \      then return 41\n    else if n % 43 == 0 \n        then return 43\n    else\
    \ if n % 47 == 0 \n        then return 47\n    else if n % 53 == 0 \n        then\
    \ return 53\n    else if n % 59 == 0 \n        then return 59\n    else if n %\
    \ 61 == 0 \n        then return 61\n    else if n % 67 == 0 \n        then return\
    \ 67\n    else if n % 71 == 0 \n        then return 71\n    else if n % 73 ==\
    \ 0 \n        then return 73\n    else if n % 79 == 0 \n        then return 79\n\
    \    else if n % 83 == 0 \n        then return 83\n    else if n % 89 == 0 \n\
    \        then return 89\n    else if n % 97 == 0 \n        then return 97\n  \
    \  else if n % 101 == 0 \n        then return 101\n    else if n % 103 == 0 \n\
    \        then return 103\n    else if n % 107 == 0 \n        then return 107\n\
    \    else if n % 111 == 0 \n        then return 111\n    else if n % 117 == 0\
    \ \n        then return 117\n    else if n % 121 == 0 \n        then return 121\n\
    \    else if n % 123 == 0 \n        then return 123\n    else if n % 127 == 0\
    \ \n        then return 127\n    else if n % 131 == 0 \n        then return 131\n\
    \    else if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0\
    \ \n        then return 141\n    else if n % 147 == 0 \n        then return 147\n\
    \    else if n % 151 == 0 \n        then \nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl39d9qc6.jl:9\nin expression starting at /tmp/tmpl39d9qc6.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.1>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpt7sgo0t2.jl:9\nin expression starting at /tmp/tmpt7sgo0t2.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else if n==2 \n        2\n    else if n % 2 == 0 \n       \
    \ largest_prime_factor(n/2)\n    else \n        largest_prime_factor(3*n+1)\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nHint: use the function largest_prime_factor.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoznmteta.jl:10\nin expression starting at\
    \ /tmp/tmpoznmteta.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(13195)\n</cell>\n<code\
    \ language=julia-1.3>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw234cm24.jl:14\nin expression starting at\
    \ /tmp/tmpw234cm24.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ then return 1\n    else if n==2 then return 2\n    else if n%2==0 then return\
    \ 2\n    else if n%3==0 then return 3\n    else if n%5==0 then return 5\n    else\
    \ return largest_prime_factor(n/3)\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(13195)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n \
    \   >>> smallest_prime_factor(13195)\n    7\n    >>> smallest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfcrextnl.jl:8\nin expression starting at /tmp/tmpfcrextnl.jl:8\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else if n==2 \n        2\n    else if n%2==0 \n        largest_prime_factor(n/2)\n\
    \    else \n        largest_prime_factor(n/3)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(100)\n</cell>\n<text>\nExercise 2\nWrite a function prime_divisors(n::Int64)\
    \ which returns the prime divisors of n.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2cbxyddg.jl:10\nin expression starting at\
    \ /tmp/tmp2cbxyddg.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else if n==2 \n        2\n    else if n%2==0 \n        largest_prime_factor(n/2)\n\
    \    else \n        largest_prime_factor(n/3)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiklxnhhl.jl:10\nin expression starting at\
    \ /tmp/tmpiklxnhhl.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<code language=julia-1.4>\n@\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpah6t8z72.jl:14\nin expression starting at\
    \ /tmp/tmpah6t8z72.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else if n % 3 == 0 \n        then return largest_prime_factor(n /\
    \ 3)\n    else if n % 5 == 0 \n        then return largest_prime_factor(n / 5)\n\
    \    else if n % 7 == 0 \n        then return largest_prime_factor(n / 7)\n  \
    \  else \n        return largest_prime_factor(3 * n + 1) \nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise\nWrite a function that returns\
    \ the smallest prime factor of n. Assume n > 1 and is not a prime.\nHint: use\
    \ the largest_prime_factor function.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8ggjcg6s.jl:9\nin expression starting at /tmp/tmp8ggjcg6s.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return n\n    else if n % 3 == 0 \n     \
    \   then return n\n    else if n % 5 == 0 \n        then return n\n    else if\
    \ n % 7 == 0 \n        then return n\n    else \n        largest_prime_factor(n\
    \ / 2)\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n  \
    \  >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1_6xynsk.jl:9\nin expression starting at /tmp/tmp1_6xynsk.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(3 * n + 1)\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.4>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n \
    \   >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1j0ujyif.jl:9\nin expression starting at /tmp/tmp1j0ujyif.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return n\n    else \n        largest_prime_factor(n\
    \ / 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise\nWrite a function that returns the greatest common divisor (GCD) of two\
    \ numbers. Assume that both numbers are positive integers. Assume that both numbers\
    \ are relatively prime (gcd(a, b) == gcd(b, a)).\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_p1qfge0.jl:9\nin expression starting at /tmp/tmp_p1qfge0.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n\
    \    else \n        largest_prime_factor(3*n+1)\nend\n</cell>\n<code language=julia-1.1>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.1>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbuj4vh3c.jl:9\nin expression starting at /tmp/tmpbuj4vh3c.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(3 * n + 1)\nend\n</cell>\n<code language=julia-1.0>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.0>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6v60fjux.jl:9\nin expression starting at /tmp/tmp6v60fjux.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return n\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(3 * n + 1)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp30qtm9op.jl:9\nin expression starting at /tmp/tmp30qtm9op.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest = 2\n        for i = 3 to n \n            largest\
    \ = i if largest * i > n \n        return largest\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp933s2x1p.jl:9\nin expression starting at /tmp/tmp933s2x1p.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.4>\n@time largest_prime_factor(20000000)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the greatest common divisor\
    \ of two positive integers. Assume that both integers are positive.\nHint: use\
    \ the gcd function from the standard library.\nusing Test\n\n@testset begin\n\n\
    candidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpi6h_qw_b.jl:14\nin expression starting at\
    \ /tmp/tmpi6h_qw_b.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpeicsajbc.jl:9\nin expression starting at /tmp/tmpeicsajbc.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n / 2) \n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmtejs6m2.jl:14\nin expression starting at\
    \ /tmp/tmpmtejs6m2.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n\
    \    else \n        largest_prime_factor(3*n+1)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the greatest common divisor of two numbers.\
    \ Assume that both numbers are positive.\nHint: use Euclid's algorithm\nusing\
    \ Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjas7_1d5.jl:9\nin expression starting at /tmp/tmpjas7_1d5.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n / 2) \n    end\n\
    end\n</cell>\n<code language=julia-1.3>\n@code_warntype largest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.3>\n@code_warntype largest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: Use a while loop and a primality\
    \ test.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t\
    @test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplejy8a9l.jl:14\nin expression starting at\
    \ /tmp/tmplejy8a9l.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 || n % 2 == 0 \n        then return n\n    else if n % 3 == 0 \n       \
    \ then return 3\n    else if n % 5 == 0 \n        then return 5\n    else if n\
    \ % 7 == 0 \n        then return 7\n    else if n % 11 == 0 \n        then return\
    \ 11\n    else if n % 13 == 0 \n        then return 13\n    else if n % 17 ==\
    \ 0 \n        then return 17\n    else if n % 19 == 0 \n        then return 19\n\
    \    else if n % 23 == 0 \n        then return 23\n    else if n % 29 == 0 \n\
    \        then return 29\n    else if n % 31 == 0 \n        then return 31\n  \
    \  else if n % 37 == 0 \n        then return 37\n    else if n % 41 == 0 \n  \
    \      then return 41\n    else if n % 43 == 0 \n        then return 43\n    else\
    \ if n % 47 == 0 \n        then return 47\n    else if n % 53 == 0 \n        then\
    \ return 53\n    else if n % 59 == 0 \n        then return 59\n    else if n %\
    \ 61 == 0 \n        then return 61\n    else if n % 67 == 0 \n        then return\
    \ 67\n    else if n % 71 == 0 \n        then return 71\n    else if n % 73 ==\
    \ 0 \n        then return 73\n    else if n % 79 == 0 \n        then return 79\n\
    \    else if n % 83 == 0 \n        then return 83\n    else if n % 89 == 0 \n\
    \        then return 89\n    else if n % 97 == 0 \n        then return 97\n  \
    \  else if n % 101 == 0 \n        then return 101\n    else if n % 103 == 0 \n\
    \        then return 103\n    else if n % 107 == 0 \n        then return 107\n\
    \    else if n % 111 == 0 \n        then return 111\n    else if n % 117 == 0\
    \ \n        then return 117\n    else if n % 121 == 0 \n        then return 121\n\
    \    else if n % 123 == 0 \n        then return 123\n    else if n % 127 == 0\
    \ \n        then return 127\n    else if n % 131 == 0 \n        then return 131\n\
    \    else if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0\
    \ \n        then return 141\n    else if n % 147 == 0 \n        then return 147\n\
    \    else if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0\
    \ \n        then return 157\n    else \nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp83_v8q5b.jl:9\nin expression starting at /tmp/tmp83_v8q5b.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n-1) * n \nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_u5ojiqg.jl:13\nin expression starting at\
    \ /tmp/tmp_u5ojiqg.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ \n        largest_prime_factor(3*n+2)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqrf6edkv.jl:9\nin expression starting at /tmp/tmpqrf6edkv.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else if n % 2 == 0 \n        largest_prime_factor(n /\
    \ 2)\n    else \n        largest_prime_factor(3 * n + 1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_6kciyhi.jl:10\nin expression starting at\
    \ /tmp/tmp_6kciyhi.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwr97ky9j.jl:9\nin expression starting at /tmp/tmpwr97ky9j.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return n\n    else \n        p := largest_prime_factor(n\
    \ / 2)\n        if n % p == 0 \n            then return p\n        else return\
    \ n\nend\n</cell>\n<code language=julia-1.4>\nlargest_prime_factor(13195)\n</cell>\n\
    <code language=julia-1.4>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that checks if a number is prime or not. Assume that n is\
    \ positive.\nHint: use Julia's isa() function to check types.\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdhhfjq83.jl:9\nin expression starting at /tmp/tmpdhhfjq83.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n\
    \    else if n % 3 == 0 \n        then return largest_prime_factor(n/3)\n    else\
    \ if n % 5 == 0 \n        then return largest_prime_factor(n/5)\n    else if n\
    \ % 7 == 0 \n        then return largest_prime_factor(n/7)\n    else if n % 11\
    \ == 0 \n        then return largest_prime_factor(n/11)\n    else if n % 13 ==\
    \ 0 \n        then return largest_prime_factor(n/13)\n    else if n % 17 == 0\
    \ \n        then return largest_prime_factor(n/17)\n    else if n % 19 == 0 \n\
    \        then return largest_prime_factor(n/19)\n    else if n % 23 == 0 \n  \
    \      then return largest_prime_factor(n/23)\n    else if n % 29 == 0 \n    \
    \    then return largest_prime_factor(n/29)\n    else if n % 31 == 0 \n      \
    \  then return largest_prime_factor(n/31)\n    else if n % 37 == 0 \n        then\
    \ return largest_prime_factor(n/37)\n    else if n % 41 == 0 \n        then return\
    \ largest_prime_factor(n/41)\n    else if n % 43 == 0 \n        then return largest_prime_factor(n/43)\n\
    \    else if n % 47 == 0 \n        then return largest_prime_factor(n/47)\n  \
    \  else if n % 53 == 0 \n        then return largest_prime_factor(n/53)\n    else\
    \ if n % 59 == 0 \n        then return largest_prime_factor(n/59)\n    else if\
    \ n % 61 == 0 \n        then return largest_prime_factor(n/61)\n    else if n\
    \ % 67 == 0 \n        then return largest_prime_factor(n/67)\n    else if n %\
    \ 71 == 0 \n        then return largest_prime_factor(n/71)\n    else if n % 73\
    \ == 0 \n        then return largest_prime_factor(n/73)\n    else if n % 79 ==\
    \ 0 \n        then return largest_prime_factor(n/79)\n    else if n % 83 == 0\
    \ \n        then return largest_prime_factor(n/83)\n    else if n % 89 == 0 \n\
    \        then return largest_prime_factor(n/89)\n    else if n % 97 == 0 \n  \
    \      then return largest_prime_factor(n/97)\n    else if n % 101 == 0 \n   \
    \     then return largest_prime_factor(n/\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptb2zm5rd.jl:9\nin expression starting at /tmp/tmptb2zm5rd.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(20000000)\n</cell>\n<text>\nExercise: Write a function\
    \ that returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    Hint: Use a while loop to keep dividing n by 2 until n is odd.\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxfeh3n32.jl:9\nin expression starting at /tmp/tmpxfeh3n32.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(3 * n + 1) \n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n \
    \   >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp7q7l5qo.jl:9\nin expression starting at /tmp/tmpp7q7l5qo.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return n\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ \n        largest_prime_factor(3*n+2)\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(20000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(20000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2\nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdug7u4q4.jl:9\nin expression starting at /tmp/tmpdug7u4q4.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"Return the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    3\n   \
    \ >>> smallest_prime_factor(2048)\n    7\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcn1hhhx3.jl:14\nin expression starting at\
    \ /tmp/tmpcn1hhhx3.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\
    \ \n    else \n        largest_prime_factor(3*n+2)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise 3\nWrite a function prime_sum(n::Int64)\
    \ which returns the sum of the primes less than or equal to n.\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpv8j0msnb.jl:9\nin expression starting at /tmp/tmpv8j0msnb.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else \n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgvvwxrq_.jl:14\nin expression starting at\
    \ /tmp/tmpgvvwxrq_.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 || n % 2 == 0 \n        then return n\n    else if n % 3 == 0 \n       \
    \ then return 3\n    else if n % 5 == 0 \n        then return 5\n    else if n\
    \ % 7 == 0 \n        then return 7\n    else if n % 11 == 0 \n        then return\
    \ 11\n    else if n % 13 == 0 \n        then return 13\n    else if n % 17 ==\
    \ 0 \n        then return 17\n    else if n % 19 == 0 \n        then return 19\n\
    \    else if n % 23 == 0 \n        then return 23\n    else if n % 29 == 0 \n\
    \        then return 29\n    else if n % 31 == 0 \n        then return 31\n  \
    \  else if n % 37 == 0 \n        then return 37\n    else if n % 41 == 0 \n  \
    \      then return 41\n    else if n % 43 == 0 \n        then return 43\n    else\
    \ if n % 47 == 0 \n        then return 47\n    else if n % 53 == 0 \n        then\
    \ return 53\n    else if n % 59 == 0 \n        then return 59\n    else if n %\
    \ 61 == 0 \n        then return 61\n    else if n % 67 == 0 \n        then return\
    \ 67\n    else if n % 71 == 0 \n        then return 71\n    else if n % 73 ==\
    \ 0 \n        then return 73\n    else if n % 79 == 0 \n        then return 79\n\
    \    else if n % 83 == 0 \n        then return 83\n    else if n % 89 == 0 \n\
    \        then return 89\n    else if n % 97 == 0 \n        then return 97\n  \
    \  else if n % 101 == 0 \n        then return 101\n    else if n % 103 == 0 \n\
    \        then return 103\n    else if n % 107 == 0 \n        then return 107\n\
    \    else if n % 111 == 0 \n        then return 111\n    else if n % 117 == 0\
    \ \n        then return 117\n    else if n % 121 == 0 \n        then return 121\n\
    \    else if n % 123 == 0 \n        then return 123\n    else if n % 127 == 0\
    \ \n        then return 127\n    else if n % 131 == 0 \n        then return 131\n\
    \    else if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0\
    \ \n        then return 141\n    else if n % 147 == 0 \n        then return 147\n\
    \    else if n % 151 == 0 \n        then return 151\n    else if n % 157 == 0\
    \ \n        then return 157\n    else \nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp83_v8q5b.jl:9\nin expression starting at /tmp/tmp83_v8q5b.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest = 2\n        for p in prime_factors(n) \n \
    \           if p > largest \n                then largest = p\n        return\
    \ largest\nend\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n  \
    \  >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps_fqdjpv.jl:9\nin expression starting at /tmp/tmps_fqdjpv.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n<2\n\
    \        error(\"n must be greater than 1\")\n    end\n    factors = prime_factors(n)\n\
    \    largest = factors[end]\n    for factor in factors[2:end]\n        if factor\
    \ > largest\n            largest = factor\n        end\n    end\n    return largest\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function prime_divisors(n::Int64) which returns a vector of the prime\
    \ divisors of n.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpb9hw8khk.jl:20\nin expression starting at\
    \ /tmp/tmpb9hw8khk.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ then return n\n    else if n%2==0 then return largest_prime_factor(n/2)\n  \
    \  else return largest_prime_factor(n/2) \nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkj04n9d0.jl:8\nin expression starting at /tmp/tmpkj04n9d0.jl:8\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        p := 3\n        while p < n \n            do if n %\
    \ p == 0 \n                then return p\n                p := p + 2\n       \
    \ return n\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppav_xrt7.jl:9\nin expression starting at /tmp/tmppav_xrt7.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return 2\n    else if n % 3 == 0 \n     \
    \   then return 3\n    else if n % 5 == 0 \n        then return 5\n    else if\
    \ n % 7 == 0 \n        then return 7\n    else if n % 11 == 0 \n        then return\
    \ 11\n    else if n % 13 == 0 \n        then return 13\n    else if n % 17 ==\
    \ 0 \n        then return 17\n    else if n % 19 == 0 \n        then return 19\n\
    \    else if n % 23 == 0 \n        then return 23\n    else if n % 29 == 0 \n\
    \        then return 29\n    else if n % 31 == 0 \n        then return 31\n  \
    \  else if n % 37 == 0 \n        then return 37\n    else if n % 41 == 0 \n  \
    \      then return 41\n    else if n % 43 == 0 \n        then return 43\n    else\
    \ if n % 47 == 0 \n        then return 47\n    else if n % 53 == 0 \n        then\
    \ return 53\n    else if n % 59 == 0 \n        then return 59\n    else if n %\
    \ 61 == 0 \n        then return 61\n    else if n % 67 == 0 \n        then return\
    \ 67\n    else if n % 71 == 0 \n        then return 71\n    else if n % 73 ==\
    \ 0 \n        then return 73\n    else if n % 79 == 0 \n        then return 79\n\
    \    else if n % 83 == 0 \n        then return 83\n    else if n % 89 == 0 \n\
    \        then return 89\n    else if n % 97 == 0 \n        then return 97\n  \
    \  else if n % 101 == 0 \n        then return 101\n    else if n % 103 == 0 \n\
    \        then return 103\n    else if n % 107 == 0 \n        then return 107\n\
    \    else if n % 111 == 0 \n        then return 111\n    else if n % 117 == 0\
    \ \n        then return 117\n    else if n % 121 == 0 \n        then return 121\n\
    \    else if n % 123 == 0 \n        then return 123\n    else if n % 127 == 0\
    \ \n        then return 127\n    else if n % 131 == 0 \n        then return 131\n\
    \    else if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0\
    \ \n        then return 141\n    else if n % 147 == 0 \n        then return 147\n\
    \    else if n % 151 == 0 \n        then \nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl39d9qc6.jl:9\nin expression starting at /tmp/tmpl39d9qc6.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n\
    \    else \n        largest = 2\n        for i = 3 \n            in 1 .. n \n\
    \            do if n % i == 0 \n                then largest = i\n        return\
    \ largest\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n  \
    \  >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp84r8bdtu.jl:9\nin expression starting at /tmp/tmp84r8bdtu.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1 \n    else \n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the smallest prime factor of n. Assume n >\
    \ 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n    >>>\
    \ smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2d73pz7x.jl:14\nin expression starting at\
    \ /tmp/tmp2d73pz7x.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n/2) \n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nHint: Use a while loop.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnpgek30b.jl:14\nin expression starting at\
    \ /tmp/tmpnpgek30b.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(3 * n + 1) \nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpo349co4g.jl:9\nin expression starting at /tmp/tmpo349co4g.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype largest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.0>\n@code_warntype largest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: Use a while loop to keep dividing\
    \ n by 2 until n is 1.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphczcc1o1.jl:14\nin expression starting at\
    \ /tmp/tmphczcc1o1.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(3 * n + 1) \n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzuuhdij4.jl:9\nin expression starting at /tmp/tmpzuuhdij4.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1 \n    else \n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the smallest prime factor of n. Assume n >\
    \ 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n    >>>\
    \ smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn_e3rgoo.jl:14\nin expression starting at\
    \ /tmp/tmpn_e3rgoo.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n/2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n<text>\n\
    Exercise: Write a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n  \
    \  >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp19vn4pil.jl:14\nin expression starting at\
    \ /tmp/tmp19vn4pil.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest = 2\n        for i = 3 to n \n            largest\
    \ = i if n % i == 0 \n            largest = largest if largest % i == 0 \n   \
    \     return largest\nend\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the smallest prime factor of n. Assume\
    \ n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    3\n   \
    \ >>> smallest_prime_factor(2048)\n    7\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpm8g3258s.jl:9\nin expression starting at /tmp/tmpm8g3258s.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc15jz2cc.jl:14\nin expression starting at\
    \ /tmp/tmpc15jz2cc.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n % 2 == 0 \n        then return 2\n\
    \    else \n        p := 3\n        while p < n \n            do if n % p == 0\
    \ \n                then return p\n                p := p + 2\n            end\n\
    \        end\n    end\nend\n</cell>\n<code language=julia-1.3>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nHint: Use a while loop.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbjxu3d8g.jl:9\nin expression starting at /tmp/tmpbjxu3d8g.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(3 * n + 1) \nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise: Write a function that returns\
    \ the smallest prime factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1zxfltzh.jl:9\nin expression starting at /tmp/tmp1zxfltzh.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1) * n\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpehhicb1x.jl:14\nin expression starting at\
    \ /tmp/tmpehhicb1x.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1 \n    else if n % 2 == 0 \n        then return 2\
    \ \n    else \n        p := largest_prime_factor(n / 2) \n        if n % p ==\
    \ 0 \n            then return p \n        else \n            return n \nend\n\
    </cell>\n<code language=julia-1.3>\nlargest_prime_factor(13195)\n</cell>\n<code\
    \ language=julia-1.3>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise 2\n\
    Write a function prime_factor that takes an integer $n$ and returns the prime\
    \ factors of $n$. Assume $n > 1$ and $n$ is not a prime.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9fqctc81.jl:9\nin expression starting at /tmp/tmp9fqctc81.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ \n        largest_prime_factor(3*n+2)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<text>\nExercise: Write a function\
    \ that returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    Hint: Use a recursive function and memoization.\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpnm9lqpoa.jl:9\nin expression starting at /tmp/tmpnm9lqpoa.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.1>\nlargest_prime_factor(13195)\n</cell>\n<code\
    \ language=julia-1.1>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    >>> smallest_prime_factor(13195)\n    3\n    >>> smallest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpv8xzas63.jl:14\nin expression starting at\
    \ /tmp/tmpv8xzas63.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1 \n    else if n==2 \n        2 \n    else if n%2==0 \n        largest_prime_factor(n/2)\
    \ \n    else \n        largest_prime_factor(n-1) \nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of prime\
    \ factors of a given number. Assume n > 1 and is not a prime.\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfzwwfuoq.jl:10\nin expression starting at\
    \ /tmp/tmpfzwwfuoq.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: You may want to use the sieve\
    \ of Eratosthenes (https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes) \nto speed\
    \ up the process.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpak81t7a5.jl:14\nin expression starting at\
    \ /tmp/tmpak81t7a5.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return n\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(3 * n + 1) / 2\nend\n</cell>\n<code language=julia-1.4>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.4>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpquld0lyj.jl:9\nin expression starting at /tmp/tmpquld0lyj.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else if n % 2 == 0 \n        largest_prime_factor(n /\
    \ 2)\n    else \n        largest_prime_factor(3 * n + 1) \n    end\nend\n</cell>\n\
    <code language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxk6ndfxa.jl:10\nin expression starting at\
    \ /tmp/tmpxk6ndfxa.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc15jz2cc.jl:14\nin expression starting at\
    \ /tmp/tmpc15jz2cc.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 2\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return 2\n    else \n        largest_prime_factor(n\
    \ / 2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nHint: Use a sieve of Eratosthenes\
    \ to find prime factors.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpja6msef5.jl:9\nin expression starting at /tmp/tmpja6msef5.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return 2\n    else if n % 3 == 0 \n     \
    \   then return 3\n    else if n % 5 == 0 \n        then return 5\n    else if\
    \ n % 7 == 0 \n        then return 7\n    else if n % 11 == 0 \n        then return\
    \ 11\n    else if n % 13 == 0 \n        then return 13\n    else if n % 17 ==\
    \ 0 \n        then return 17\n    else if n % 19 == 0 \n        then return 19\n\
    \    else if n % 23 == 0 \n        then return 23\n    else if n % 29 == 0 \n\
    \        then return 29\n    else if n % 31 == 0 \n        then return 31\n  \
    \  else if n % 37 == 0 \n        then return 37\n    else if n % 41 == 0 \n  \
    \      then return 41\n    else if n % 43 == 0 \n        then return 43\n    else\
    \ if n % 47 == 0 \n        then return 47\n    else if n % 53 == 0 \n        then\
    \ return 53\n    else if n % 59 == 0 \n        then return 59\n    else if n %\
    \ 61 == 0 \n        then return 61\n    else if n % 67 == 0 \n        then return\
    \ 67\n    else if n % 71 == 0 \n        then return 71\n    else if n % 73 ==\
    \ 0 \n        then return 73\n    else if n % 79 == 0 \n        then return 79\n\
    \    else if n % 83 == 0 \n        then return 83\n    else if n % 89 == 0 \n\
    \        then return 89\n    else if n % 97 == 0 \n        then return 97\n  \
    \  else if n % 101 == 0 \n        then return 101\n    else if n % 103 == 0 \n\
    \        then return 103\n    else if n % 107 == 0 \n        then return 107\n\
    \    else if n % 111 == 0 \n        then return 111\n    else if n % 117 == 0\
    \ \n        then return 117\n    else if n % 121 == 0 \n        then return 121\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \n        \nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5u2fuqdp.jl:9\nin expression starting at /tmp/tmp5u2fuqdp.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc15jz2cc.jl:14\nin expression starting at\
    \ /tmp/tmpc15jz2cc.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return 2\n    else if n % 3 == 0 \n     \
    \   then return 3\n    else if n % 5 == 0 \n        then return 5\n    else if\
    \ n % 7 == 0 \n        then return 7\n    else if n % 11 == 0 \n        then return\
    \ 11\n    else if n % 13 == 0 \n        then return 13\n    else if n % 17 ==\
    \ 0 \n        then return 17\n    else if n % 19 == 0 \n        then return 19\n\
    \    else if n % 23 == 0 \n        then return 23\n    else if n % 29 == 0 \n\
    \        then return 29\n    else if n % 31 == 0 \n        then return 31\n  \
    \  else if n % 37 == 0 \n        then return 37\n    else if n % 41 == 0 \n  \
    \      then return 41\n    else if n % 43 == 0 \n        then return 43\n    else\
    \ if n % 47 == 0 \n        then return 47\n    else if n % 53 == 0 \n        then\
    \ return 53\n    else if n % 59 == 0 \n        then return 59\n    else if n %\
    \ 61 == 0 \n        then return 61\n    else if n % 67 == 0 \n        then return\
    \ 67\n    else if n % 71 == 0 \n        then return 71\n    else if n % 73 ==\
    \ 0 \n        then return 73\n    else if n % 79 == 0 \n        then return 79\n\
    \    else if n % 83 == 0 \n        then return 83\n    else if n % 89 == 0 \n\
    \        then return 89\n    else if n % 97 == 0 \n        then return 97\n  \
    \  else if n % 101 == 0 \n        then return 101\n    else if n % 103 == 0 \n\
    \        then return 103\n    else if n % 107 == 0 \n        then return 107\n\
    \    else if n % 111 == 0 \n        then return 111\n    else if n % 117 == 0\
    \ \n        then return 117\n    else if n % 121 == 0 \n        then return 121\n\
    \    else if n % 123 == 0 \n        then return 123\n    else if n % 127 == 0\
    \ \n        then return 127\n    else if n % 131 == 0 \n        then return 131\n\
    \    else if n % 137 == 0 \n        then return 137\n    else if n % 141 == 0\
    \ \n        then return 141\n    else if n % 147 == 0 \n        then return 147\n\
    \    else if n % 151 == 0 \n        then \nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwjk7anff.jl:9\nin expression starting at /tmp/tmpwjk7anff.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpeicsajbc.jl:9\nin expression starting at /tmp/tmpeicsajbc.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else \n        largest_prime_factor(n / 2)\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n\
    <code language=julia-1.5>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the greatest common divisor (GCD) of two numbers.\
    \ Assume that both numbers are positive.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_ygoa0io.jl:14\nin expression starting at\
    \ /tmp/tmp_ygoa0io.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n-1) * n \nend\n\
    </cell>\n<code language=julia-1.3>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <text>\nExercise: Write a function that returns the greatest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nHint: Use a recursive function and memoization.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpevf5mue1.jl:13\nin expression starting at\
    \ /tmp/tmpevf5mue1.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else if n % 2 == 0 \n        largest_prime_factor(n /\
    \ 2)\n    else \n        largest_prime_factor(3 * n + 1)\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\n@time largest_prime_factor(100_000_000)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmrae117c.jl:10\nin expression starting at\
    \ /tmp/tmpmrae117c.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n-1) * n \nend\n\
    </cell>\n<code language=julia-1.3>\n@time largest_prime_factor(1000000000)\n</cell>\n\
    <text>\nExercise: Write a function that returns the greatest prime factor of n.\
    \ Assume n > 1 and is not a prime.\nHint: Use a recursive function.\nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo7z1yjj5.jl:13\nin expression starting at\
    \ /tmp/tmpo7z1yjj5.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        return n\n    \n    p :: Int64 = 2 \n    \n    while p < n \n\
    \        p :: Int64 = n \n        while n % p == 0 \n            n :: Int64 =\
    \ n // p\n        p += 1\n    return n \nend \n</cell>\n<code language=julia-1.0>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.0>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjst2_884.jl:20\nin expression starting at\
    \ /tmp/tmpjst2_884.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else if n % 2 == 0 \n        largest_prime_factor(n /\
    \ 2) \n    else \n        largest_prime_factor(3 * n + 1) \nend\n</cell>\n<code\
    \ language=julia-1.4>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.4>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n \
    \   >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgiaekr_d.jl:10\nin expression starting at\
    \ /tmp/tmpgiaekr_d.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 1\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(3 * n + 1)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwvypr6yy.jl:9\nin expression starting at /tmp/tmpwvypr6yy.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert largest_prime_factor(2) == 2 \"largest_prime_factor test 1 failed\"\n\
    @assert largest_prime_factor(3) == 3 \"largest_prime_factor test 2 failed\"\n\
    @assert largest_prime_factor(5) == 5 \"largest_prime_factor test 3 failed\"\n\
    @assert largest_prime_factor(7) == 7 \"largest_prime_factor test 4 failed\"\n\
    @assert largest_prime_factor(11) == 11 \"largest_prime_factor test 5 failed\"\n\
    @assert largest_prime_factor(13) == 13 \"largest_prime_factor test 6 failed\"\n\
    @assert largest_prime_factor(17) == 17 \"largest_prime_factor test 7 failed\"\n\
    @assert largest_prime_factor(29) == 29 \"largest_prime_factor test 8 failed\"\n\
    @assert largest_prime_factor(31) == 31 \"largest_prime_factor test 9 failed\"\n\
    @assert largest_prime_factor(41) == 41 \"largest_prime_factor test 10 failed\"\
    \n@assert largest_prime_factor(61) == 61 \"largest_prime_factor test 11 failed\"\
    \n@assert largest_prime_factor(83) == 83 \"largest_prime_factor test 12 failed\"\
    \n@assert largest_prime_factor(101) == 101 \"largest_prime_factor test 13 failed\"\
    \n@assert largest_prime_factor(121) == 121 \"largest_prime_factor test 14 failed\"\
    \n@assert largest_prime_factor(141) == 141 \"largest_prime_factor test 15 failed\"\
    \n@assert largest_prime_factor(171) == 171 \"largest_prime_factor test 16 failed\"\
    \n@assert largest_prime_factor(191) == 191 \"largest_prime_factor test 17 failed\"\
    \n@assert largest_prime_factor(241) == 241 \"largest_prime_factor test 18 failed\"\
    \n@assert largest_prime_factor(271) == 271 \"largest_prime_factor test 19 failed\"\
    \n@assert largest_prime_factor(301) == 301 \"largest_prime_factor test 20 failed\"\
    \n@assert largest_prime_factor(331) == 331 \"largest_prime_\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8_8cd5o5.jl:9\nin expression starting at /tmp/tmp8_8cd5o5.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n\
    \    else if n % 3 == 0 \n        then return largest_prime_factor(n/3)\n    else\
    \ if n % 5 == 0 \n        then return largest_prime_factor(n/5)\n    else if n\
    \ % 7 == 0 \n        then return largest_prime_factor(n/7)\n    else if n % 11\
    \ == 0 \n        then return largest_prime_factor(n/11)\n    else if n % 13 ==\
    \ 0 \n        then return largest_prime_factor(n/13)\n    else if n % 17 == 0\
    \ \n        then return largest_prime_factor(n/17)\n    else if n % 19 == 0 \n\
    \        then return largest_prime_factor(n/19)\n    else if n % 23 == 0 \n  \
    \      then return largest_prime_factor(n/23)\n    else if n % 29 == 0 \n    \
    \    then return largest_prime_factor(n/29)\n    else if n % 31 == 0 \n      \
    \  then return largest_prime_factor(n/31)\n    else if n % 37 == 0 \n        then\
    \ return largest_prime_factor(n/37)\n    else if n % 41 == 0 \n        then return\
    \ largest_prime_factor(n/41)\n    else if n % 43 == 0 \n        then return largest_prime_factor(n/43)\n\
    \    else if n % 47 == 0 \n        then return largest_prime_factor(n/47)\n  \
    \  else if n % 53 == 0 \n        then return largest_prime_factor(n/53)\n    else\
    \ if n % 59 == 0 \n        then return largest_prime_factor(n/59)\n    else if\
    \ n % 61 == 0 \n        then return largest_prime_factor(n/61)\n    else if n\
    \ % 67 == 0 \n        then return largest_prime_factor(n/67)\n    else if n %\
    \ 71 == 0 \n        then return largest_prime_factor(n/71)\n    else if n % 73\
    \ == 0 \n        then return largest_prime_factor(n/73)\n    else if n % 79 ==\
    \ 0 \n        then return largest_prime_factor(n/79)\n    else if n % 83 == 0\
    \ \n        then return largest_prime_factor(n/83)\n    else if n % 89 == 0 \n\
    \        then return largest_prime_factor(n/89)\n    else if n % 97 == 0 \n  \
    \      then return largest_prime_factor(n/97)\n    else if n % 101 == 0 \n   \
    \     then return largest_prime_factor(n/\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptb2zm5rd.jl:9\nin expression starting at /tmp/tmptb2zm5rd.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(3 * n + 1) \n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of prime factors\
    \ of n. Assume n > 1 and is not a prime.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpthv68m61.jl:9\nin expression starting at /tmp/tmpthv68m61.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return n\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ \n        largest_prime_factor(3*n+2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpftbw0sg5.jl:9\nin expression starting at /tmp/tmpftbw0sg5.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2xxqxu7i.jl:14\nin expression starting at\
    \ /tmp/tmp2xxqxu7i.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(3 * n + 1)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvmxdfdpd.jl:9\nin expression starting at /tmp/tmpvmxdfdpd.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ then return 1\n    if n==2 then return 2\n    if n%2==0 then return n//2\n \
    \   else return largest_prime_factor(n//2)\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9thp_0as.jl:8\nin expression starting at /tmp/tmp9thp_0as.jl:8\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else \n        largest_prime_factor(n / 2)\n    end\n\
    end\n</cell>\n<code language=julia-1.4>\nlargest_prime_factor(13195)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    3\n    >>> smallest_prime_factor(2048)\n    2\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjq_socjo.jl:14\nin expression starting at\
    \ /tmp/tmpjq_socjo.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n\
    \    else \n        largest_prime_factor(sqrt(n)) * 3\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n</cell>\n\
    <text>\nExercise: Write a function that returns the smallest prime factor of n.\
    \ Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n   \
    \ 13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2w3ota6r.jl:9\nin expression starting at /tmp/tmp2w3ota6r.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpeicsajbc.jl:9\nin expression starting at /tmp/tmpeicsajbc.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n<2\
    \ return 1\n    \n    factor::Int64 = 1\n    \n    for i::Int64 in 2..n do \n\
    \        if n % i == 0 then \n            factor = i\n            break\n    \n\
    \    return factor\nend\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell\nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpiklwmqg0.jl:12\nin expression starting at /tmp/tmpiklwmqg0.jl:12\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n<2\
    \ return 1\n    if n==2 return n\n    if n%3==0 return n\n    \n    largest=2\n\
    \    largest=3\n    while largest*largest<=n do\n        largest=largest*3+1\n\
    \    end\n    return largest\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\
    Return the smallest prime factor of n. Assume n > 1 and is not a prime.\n    >>>\
    \ largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n  \
    \  2\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6lg5mw3d.jl:14\nin expression starting at /tmp/tmp6lg5mw3d.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1) * n\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpehhicb1x.jl:14\nin expression starting at\
    \ /tmp/tmpehhicb1x.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1 \n    else \n        largest_prime_factor(n-1) * n \nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_u5ojiqg.jl:13\nin expression starting at\
    \ /tmp/tmp_u5ojiqg.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nHint: Use a while loop to keep\
    \ dividing n by 2 until you get down to 1.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj8t_csu_.jl:9\nin expression starting at /tmp/tmpj8t_csu_.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(3 * n + 1)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise\nWrite a function that returns\
    \ the smallest prime factor of n. Assume n > 1 and is not a prime.\nHint: Use\
    \ a while loop and a prime number sieve.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjbx5ch3n.jl:9\nin expression starting at /tmp/tmpjbx5ch3n.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\
    \ \n    else \n        largest = largest_prime_factor(n/2) \n        for m in\
    \ 3:1:largest\n            if n % m == 0 \n                then return largest\n\
    \            largest *= m \n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(100_000_000)\n</cell>\n<text>\nExercise: Write a function\
    \ that returns the greatest common divisor of two numbers. Assume that both numbers\
    \ are positive integers and greater than 0.\nusing Test\n\n@testset begin\n\n\
    candidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpv3k9tdl7.jl:9\nin expression starting at /tmp/tmpv3k9tdl7.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n % 2 == 0 \n        then return 2\n\
    \    else \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise: Write a function that returns\
    \ the smallest prime factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_0wdltue.jl:9\nin expression starting at /tmp/tmp_0wdltue.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else if n % 2 == 0 \n        largest_prime_factor(n /\
    \ 2)\n    else \n        largest_prime_factor(3 * n + 1) \nend\n</cell>\n<code\
    \ language=julia-1.5>\nlargest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(2048)\n</cell>\n<text>\nExercise 3\nWrite a function prime_divisors(n::Int64)\
    \ which returns the prime factorization of n.\nusing Test\n\n@testset begin\n\n\
    candidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn0vwj6nx.jl:10\nin expression starting at\
    \ /tmp/tmpn0vwj6nx.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the smallest prime factor of n. Assume n > 1 and is not a prime.\n\
    \    >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp3vc5j1jg.jl:9\nin expression starting at /tmp/tmp3vc5j1jg.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1) * n\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(100)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_fnr3lcu.jl:14\nin expression starting at\
    \ /tmp/tmp_fnr3lcu.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ \n        largest_prime_factor(3*n+2)\nend\n</cell>\n<code language=julia-1.4>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.4>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    2\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpuuqpe8zo.jl:9\nin expression starting at /tmp/tmpuuqpe8zo.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpeicsajbc.jl:9\nin expression starting at /tmp/tmpeicsajbc.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return 2\n    else if n % 3 == 0 \n     \
    \   then return 3\n    else if n % 5 == 0 \n        then return 5\n    else if\
    \ n % 7 == 0 \n        then return 7\n    else if n % 11 == 0 \n        then return\
    \ 11\n    else if n % 13 == 0 \n        then return 13\n    else if n % 17 ==\
    \ 0 \n        then return 17\n    else if n % 19 == 0 \n        then return 19\n\
    \    else if n % 23 == 0 \n        then return 23\n    else if n % 29 == 0 \n\
    \        then return 29\n    else if n % 31 == 0 \n        then return 31\n  \
    \  else if n % 37 == 0 \n        then return 37\n    else if n % 41 == 0 \n  \
    \      then return 41\n    else if n % 43 == 0 \n        then return 43\n    else\
    \ if n % 47 == 0 \n        then return 47\n    else if n % 53 == 0 \n        then\
    \ return 53\n    else if n % 59 == 0 \n        then return 59\n    else if n %\
    \ 61 == 0 \n        then return 61\n    else if n % 67 == 0 \n        then return\
    \ 67\n    else if n % 71 == 0 \n        then return 71\n    else if n % 73 ==\
    \ 0 \n        then return 73\n    else if n % 79 == 0 \n        then return 79\n\
    \    else if n % 83 == 0 \n        then return 83\n    else if n % 89 == 0 \n\
    \        then return 89\n    else if n % 97 == 0 \n        then return 97\n  \
    \  else if n % 101 == 0 \n        then return 101\n    else if n % 103 == 0 \n\
    \        then return 103\n    else if n % 107 == 0 \n        then return 107\n\
    \    else if n % 111 == 0 \n        then return 111\n    else if n % 117 == 0\
    \ \n        then return 117\n    else if n % 121 == 0 \n        then return 121\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \n        \nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5u2fuqdp.jl:9\nin expression starting at /tmp/tmp5u2fuqdp.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n-1) * n\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy1t8k85a.jl:14\nin expression starting at\
    \ /tmp/tmpy1t8k85a.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1 \n    else if n==2 \n        2 \n    else \n        largest_prime_factor(n-1)\
    \ * n \nend\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\nHint: You may want to use the\
    \ sieve of Eratosthenes (https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes)\
    \ \nto speed up the process.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnh5g6stb.jl:10\nin expression starting at\
    \ /tmp/tmpnh5g6stb.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf38vr57_.jl:14\nin expression starting at\
    \ /tmp/tmpf38vr57_.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else \n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\n@time largest_prime_factor(100_000_000)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\nHint: use largest_prime_factor\nusing Test\n\
    \n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpazysk8w8.jl:14\nin expression starting at\
    \ /tmp/tmpazysk8w8.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        return n\n    \n    p :: Int64 = 1\n    q :: Int64 = 2\n    \n\
    \    while p <= n \n        q = p\n        while q * q <= n \n            q =\
    \ q * q\n        \n        if q > n \n            return n\n        \n       \
    \ if n % q == 0 \n            return q\n        \n        p = q + 1\n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpik2dokr8.jl:28\nin expression starting at\
    \ /tmp/tmpik2dokr8.jl:28\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else \n        largest_prime_factor(n / 2)\n    end\n\
    end\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(13195)\n</cell>\n\
    <code language=julia-1.3>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise:\
    \ Write a function that returns the smallest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n    >>> smallest_prime_factor(13195)\n    13\n    >>> smallest_prime_factor(2048)\n\
    \    3\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwpqfazjl.jl:14\nin expression starting at\
    \ /tmp/tmpwpqfazjl.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ \n        largest_prime_factor(3*n+2)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    7\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptyf_gw8z.jl:9\nin expression starting at /tmp/tmptyf_gw8z.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n<2\
    \ return 1\n    if n==2 return 2\n    if n%2==0 return n\n    \n    factors=[]\n\
    \    \n    for f in factorize(n) do factors.append(f)\n    \n    largest=factors[length(factors)-1]\n\
    \    \n    for f in factors do if f>largest then largest=f end\n    \n    return\
    \ largest\nend\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(13195)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2048)\n</cell>\n\
    <text>\nExercise: Find the largest prime factor of $n$, where $n$ is given as\
    \ a string.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr9wpvreq.jl:18\nin expression starting at /tmp/tmpr9wpvreq.jl:18\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ \n        largest_prime_factor(3*n+2)\nend\n</cell>\n<code language=julia-1.1>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.1>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise\nWrite a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    3\n    >>> smallest_prime_factor(2048)\n    2\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp301wkmi7.jl:9\nin expression starting at /tmp/tmp301wkmi7.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        return n\n    \n    p :: Int64 = 2 \n    q :: Int64 = 3 \n   \
    \ \n    while p <= n \n        q = p + q \n        if q > n \n            break\n\
    \        if n % q == 0 \n            return q \n        p += q \n    return n\
    \ \nend \n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(13195)\n</cell>\n\
    <code language=julia-1.3>\nlargest_prime_factor(2048)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the smallest prime factor of n. Assume n >\
    \ 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n    3\n    >>>\
    \ smallest_prime_factor(2048)\n    2\n    \"\"\"\nusing Test\n\n@testset begin\n\
    \ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyv7aun2q.jl:23\nin expression starting at\
    \ /tmp/tmpyv7aun2q.jl:23\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n<2\
    \ return 1\n    if n==2 return n\n    if n%3==0 return n\n    if n%5==0 return\
    \ n\n    if n%7==0 return n\n    if n%11==0 return n\n    if n%13==0 return n\n\
    \    if n%17==0 return n\n    if n%19==0 return n\n    if n%23==0 return n\n \
    \   if n%29==0 return n\n    if n%31==0 return n\n    if n%37==0 return n\n  \
    \  if n%41==0 return n\n    if n%43==0 return n\n    if n%47==0 return n\n   \
    \ if n%53==0 return n\n    if n%59==0 return n\n    if n%61==0 return n\n    if\
    \ n%67==0 return n\n    if n%73==0 return n\n    if n%79==0 return n\n    if n%83==0\
    \ return n\n    if n%89==0 return n\n    if n%97==0 return n\n    if n%103==0\
    \ return n\n    if n%107==0 return n\n    if n%113==0 return n\n    if n%119==0\
    \ return n\n    if n%127==0 return n\n    if n%131==0 return n\n    if n%137==0\
    \ return n\n    if n%141==0 return n\n    if n%147==0 return n\n    if n%153==0\
    \ return n\n    if n%159==0 return n\n    if n%163==0 return n\n    if n%167==0\
    \ return n\n    if n%173==0 return n\n    if n%179==0 return n\n    if n%183==0\
    \ return n\n    if n%189==0 return n\n    if n%193==0 return n\n    if n%197==0\
    \ return n\n    if n%203==0 return n\n    if n%209==0 return n\n    if n%213==0\
    \ return n\n    if n%217==0 return n\n    if n%223==0 return n\n    if n%229==0\
    \ return n\n    if n%233==0 return n\n    if n%239==0 return n\n    if n%243==0\
    \ return n\n    if n%247==0 return n\n    if n%251==0 return n\n    if n%257==0\
    \ return n\n    if n%\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq0bm_19j.jl:1\nin expression starting at /tmp/tmpq0bm_19j.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0:\n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \n\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpfe0ll3zm.jl:9\nin expression starting at /tmp/tmpfe0ll3zm.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 2\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n    else\
    \ \n        largest_prime_factor(3*n+2)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2x04ckrd.jl:9\nin expression starting at /tmp/tmp2x04ckrd.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1 \n    else if n % 2 == 0 \n        then return n\
    \ \n    else \n        p := largest_prime_factor(n / 2) \n        if n % p ==\
    \ 0 \n            then return p \n        else \n            return n \nend\n\
    </cell>\n<code language=julia-1.5>\n@assert largest_prime_factor(2) == 2 \n@assert\
    \ largest_prime_factor(7) == 3 \n@assert largest_prime_factor(12) == 2 \n@assert\
    \ largest_prime_factor(13) == 3 \n@assert largest_prime_factor(17) == 5 \n@assert\
    \ largest_prime_factor(19) == 7 \n@assert largest_prime_factor(24) == 4 \n@assert\
    \ largest_prime_factor(29) == 5 \n@assert largest_prime_factor(32) == 6 \n@assert\
    \ largest_prime_factor(35) == 8 \n@assert largest_prime_factor(49) == 7 \n@assert\
    \ largest_prime_factor(52) == 5 \n@assert largest_prime_factor(57) == 9 \n@assert\
    \ largest_prime_factor(60) == 10 \n@assert largest_prime_factor(61) == 11 \n@assert\
    \ largest_prime_factor(68) == 12 \n@assert largest_prime_factor(73) == 14 \n@assert\
    \ largest_prime_factor(78) == 16 \n@assert largest_prime_factor(83) == 18 \n@assert\
    \ largest_prime_factor(90) == 19 \n@assert largest_prime_factor(97) == 20 \n@assert\
    \ largest_prime_factor(101) \n</cell>\n<text>\nProblem 3\nA palindromic number\
    \ reads the same both ways. The largest palindrome made from the product of two\
    \ 2-digit numbers is 9009 = 91 \xD7 99.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t@test(candidate(27)\
    \ == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195)\
    \ == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdb0hiawp.jl:9\nin expression starting at /tmp/tmpdb0hiawp.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        return 1 \n    else \n        largest_prime_factor(n-1) // n \nend\n\
    </cell>\n<code language=julia-1.3>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise: Write a function that returns the smallest prime factor\
    \ of n. Assume n > 1 and is not a prime.\nHint: Use a while loop and a prime number\
    \ sieve.\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t\
    @test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcm_gdyp2.jl:13\nin expression starting at\
    \ /tmp/tmpcm_gdyp2.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n==1\
    \ \n        1\n    else\n        largest_prime_factor(n-1)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdl2a0hte.jl:14\nin expression starting at\
    \ /tmp/tmpdl2a0hte.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n\
    \ / 2)\n    else \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the greatest common divisor\
    \ of two numbers. Assume that both numbers are positive.\nHint: use the gcd function.\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpy9rrehxg.jl:9\nin expression starting at /tmp/tmpy9rrehxg.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ == 1 \n        1\n    else\n        largest_prime_factor(n / 2)\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\n@time largest_prime_factor(20000)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the smallest prime factor of\
    \ n. Assume n > 1 and is not a prime.\nHint: use the function largest_prime_factor\n\
    using Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15)\
    \ == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxxifqjwg.jl:14\nin expression starting at\
    \ /tmp/tmpxxifqjwg.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return largest_prime_factor(n/2)\n\
    \    else \n        largest_prime_factor(3*n+1)\nend\n</cell>\n<code language=julia-1.5>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.5>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the smallest prime\
    \ factor of n. Assume n > 1 and is not a prime.\n    >>> smallest_prime_factor(13195)\n\
    \    13\n    >>> smallest_prime_factor(2048)\n    3\n    \"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5z725ad3.jl:9\nin expression starting at /tmp/tmp5z725ad3.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpeicsajbc.jl:9\nin expression starting at /tmp/tmpeicsajbc.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return 1\n    else if n % 2 == 0 \n        then return 2\n\
    \    else if n % 3 == 0 \n        then return 3\n    else if n % 5 == 0 \n   \
    \     then return 5\n    else if n % 7 == 0 \n        then return 7\n    else\
    \ if n % 11 == 0 \n        then return 11\n    else if n % 13 == 0 \n        then\
    \ return 13\n    else if n % 17 == 0 \n        then return 17\n    else if n %\
    \ 19 == 0 \n        then return 19\n    else if n % 23 == 0 \n        then return\
    \ 23\n    else if n % 29 == 0 \n        then return 29\n    else if n % 31 ==\
    \ 0 \n        then return 31\n    else if n % 37 == 0 \n        then return 37\n\
    \    else if n % 41 == 0 \n        then return 41\n    else if n % 43 == 0 \n\
    \        then return 43\n    else if n % 47 == 0 \n        then return 47\n  \
    \  else if n % 53 == 0 \n        then return 53\n    else if n % 59 == 0 \n  \
    \      then return 59\n    else if n % 61 == 0 \n        then return 61\n    else\
    \ if n % 67 == 0 \n        then return 67\n    else if n % 71 == 0 \n        then\
    \ return 71\n    else if n % 73 == 0 \n        then return 73\n    else if n %\
    \ 79 == 0 \n        then return 79\n    else if n % 83 == 0 \n        then return\
    \ 83\n    else if n % 89 == 0 \n        then return 89\n    else if n % 97 ==\
    \ 0 \n        then return 97\n    else if n % 101 == 0 \n        then return 101\n\
    \    else if n % 103 == 0 \n        then return 103\n    else if n % 107 == 0\
    \ \n        then return 107\n    else if n % 111 == 0 \n        then return 111\n\
    \    else if n % 117 == 0 \n        then return 117\n    else if n % 121 == 0\
    \ \n        then return 121\n    else if n % 123 == 0 \n        then return 123\n\
    \    else if n % 127 == 0 \n        then return 127\n    else if n % 131 == 0\
    \ \n        then return 131\n    else if n % 137 == 0 \n        then return 137\n\
    \    else if n % 141 == 0 \n        then return 141\n    else if n % 147 == 0\
    \ \n        then return 147\n    else if n % 151 == 0 \n        then return 151\n\
    \    else if n % 157 == 0 \nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpj_bep7wc.jl:9\nin expression starting at /tmp/tmpj_bep7wc.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else \n        largest_prime_factor(n / 2)\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2a3sf9gp.jl:9\nin expression starting at /tmp/tmp2a3sf9gp.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        return n\n    \n    p :: Int64 = 1\n    while p*p <= n \n    \
    \    p += 1\n    \n    while n % p == 0 \n        n /= p\n    \n    return n\n\
    end\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(100_000_000)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the greatest common\
    \ divisor of two numbers. Assume that both numbers are positive integers. Assume\
    \ that both numbers are relatively prime to each other.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) == 5)\n\t\
    @test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4b3bl8bs.jl:20\nin expression starting at\
    \ /tmp/tmp4b3bl8bs.jl:20\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n % 2 == 0 \n        then return 2\n\
    \    else \n        p := 3\n        while p < n \n            do if n % p == 0\
    \ \n                then return p\n                p := p + 2\n            end\n\
    \        end\n        return n\nend\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code\
    \ language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n\
    @time largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time\
    \ largest_prime_factor(2000000)\n</cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n\
    </cell>\n<code language=julia-1.5>\n@time largest_prime_factor(2000000)\n</cell>\n\
    <code language=julia-\nusing Test\n\n@testset begin\n\ncandidate = largest_prime_factor;\n\
    \t@test(candidate(15) == 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63)\
    \ == 7)\n\t@test(candidate(330) == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7p6sg1c5.jl:9\nin expression starting at /tmp/tmp7p6sg1c5.jl:9\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"Return the largest prime factor of n. Assume n > 1 and is not a\
    \ prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n\
    \    2\n    \"\"\"\nfunction largest_prime_factor(n::Int64)::Int64 \n    if n\
    \ < 2 \n        then return n\n    else if n == 2 \n        then return 1\n  \
    \  else if n % 2 == 0 \n        then return largest_prime_factor(n / 2)\n    else\
    \ \n        largest_prime_factor(3 * n + 1)\nend\n</cell>\n<code language=julia-1.3>\n\
    largest_prime_factor(13195)\n</cell>\n<code language=julia-1.3>\nlargest_prime_factor(2048)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of prime\
    \ factors of a given number. Assume n > 1 and is not a prime.\nusing Test\n\n\
    @testset begin\n\ncandidate = largest_prime_factor;\n\t@test(candidate(15) ==\
    \ 5)\n\t@test(candidate(27) == 3)\n\t@test(candidate(63) == 7)\n\t@test(candidate(330)\
    \ == 11)\n\t@test(candidate(13195) == 29)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp92x1u60z.jl:9\nin expression starting at /tmp/tmp92x1u60z.jl:9\n"
  stdout: ''

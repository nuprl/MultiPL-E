name: HumanEval_122_add_elements
language: jl
prompt: "\"\"\"\n    Given a non-empty vector of integers arr and an integer k, return\n\
  \    the sum of the elements with at most two digits from the first k elements of\
  \ arr.\n\n    Example:\n\n    >>> add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
  \ 4)\n    24\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1\
  \ <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64}, k::Int64)::Int64\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1,\
  \ -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000,\
  \ 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\
  \t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1],\
  \ 1) == 1)\nend\n"
completions: ["    sum = 0\n    for x in arr\n        if x > 9\n            sum +=\
    \ x - 10\n        else\n            sum += x\n    end\n    return sum\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the elements with\
    \ at most two digits from the first k elements of arr. For example, add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) should return 24.", "    sum = 0\n    for x\
    \ in arr[k:end]\n        sum += x\n    end\n    return sum\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9],\
    \ 4) == 24\n</cell>\n<text>\nQuestion 2.2\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24.", "    if k == 0 \n        return arr[1] \n    else \n   \
    \     sum = 0\n        for i = 1:k \n            sum += arr[i] \n        end\n\
    \        return sum\n    end\nend\n</cell>\n<code language=julia-1.5>", "    sum\
    \ = 0\n    for x in arr\n        if x < 10\n            sum += x\n        else\n\
    \            sum += x - 10\n            if sum > k\n                sum -= 10\n\
    \            end\n        end\n    end\n    return sum\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  sum = 0\n    for x in arr\n        if x > 9\n            sum += x - 10\n  \
    \      else\n            sum += x\n    end\n    return sum\nend\n</cell>\n<text>\n\
    Question 3.2\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  if k > length(arr)\n        error(\"k must be less than or equal to length(arr)\"\
    )\n    end\n    \n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n\
    \    return sum\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, your\
    \ function should return 24.", "    if k > length(arr)\n        return sum(arr)\n\
    \    else\n        sum = 0\n        for i = 1:k\n            sum += arr[i]\n \
    \       end\n        return sum\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if k == 0 \n        return arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k],\
    \ k-1) \nend", "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n   \
    \ end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\nQuestion 2.2\nWrite\
    \ a function that returns the sum of the elements with at most two digits from\
    \ the first k elements of arr. For example, given arr = [111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9] and k = 4, your function should return 24.", "    sum = 0\n    for\
    \ e in arr\n        if e < 10\n            sum += e\n        elseif e < 100\n\
    \            sum += e - 10\n        elseif e < 1000\n            sum += e - 100\n\
    \        elseif e < 10000\n            sum += e - 1000\n        elseif e < 100000\n\
    \            sum += e - 10000\n        elseif e < 1000000\n            sum +=\
    \ e - 100000\n        elseif e < 10000000\n            sum += e - 1000000\n  \
    \      elseif e < 100000000\n            sum += e - 10000000\n        elseif e\
    \ < 1000000000\n            sum += e - 100000000\n        elseif e < 10000000000\n\
    \            sum += e - 1000000000\n        elseif e < 100000000000\n        \
    \    sum += e - 10000000000\n        elseif e < 1000000000000\n            sum\
    \ += e - 100000000000\n        elseif e < 10000000000000\n            sum += e\
    \ - 1000000000000\n        elseif e < 100000000000000\n            sum += e -\
    \ 10000000000000\n        elseif e < 1000000000000000\n            sum += e -\
    \ 100000000000000\n        elseif e < 10000000000000000\n            sum += e\
    \ - 1000000000000000\n        elseif e < 100000000000000000\n            sum +=\
    \ e - 10000000000000000\n        elseif e < 1000000000000000000\n            sum\
    \ += e - 100000000000000000\n        else\n            sum += e - 1000000000000000000\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that returns the sum of the elements with at most three digits from\
    \ the first k elements of arr. For example, given arr = [111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9] and k = 4, the function should return 24 (3 + 4 + 5 + 6 + 7 + 8\
    \ + 9).", "    if k > length(arr)\n        throw(ArgumentError(\"k must be less\
    \ than or equal to length(arr)\"))\n    end\n    sum = 0\n    for i = 1:k\n  \
    \      sum += arr[i]\n    end\n    return sum\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k == 0 \n\
    \        return arr[1] \n    else \n        sum = 0\n        for i in 1:k\n  \
    \          sum += arr[i]\n        end\n        return sum\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the elements with\
    \ at most two digits from the first k elements of arr. For example, add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) should return 24.", "    if k == 0 || k == length(arr)\n\
    \        return arr[k]\n    else\n        sum = 0\n        for i in 1:k\n    \
    \        sum += arr[i]\n        end\n        return sum\n    end\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that returns the sum of the elements with\
    \ at most two digits from the first k elements of arr. For example, add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) should return 24.", "    sum = 0\n    for i\
    \ in 1:k\n        sum += arr[i]\n    end\n    return sum\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  sum = 0\n    for e in arr[k:end]\n        sum += e\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for e in arr\n   \
    \     if e < 10\n            sum += e\n        else\n            sum += e % 10\
    \ + 10 * (e / 10)\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, add_elements([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) should return 24.", "    if k == 0 \n        return arr[1]\
    \ \n    else \n        sum = 0\n        for i in 1:k\n            sum += arr[i]\n\
    \        end\n        return sum\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if k > length(arr)\n        throw(ArgumentError(\"k must be less than or equal\
    \ to length of arr\"))\n    end", "    if k == 0 \n        return arr[1] \n  \
    \  else \n        sum = 0\n        for i = 1:k \n            sum += arr[i] \n\
    \        end\n        return sum\n    end\nend\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k == 0 \n\
    \        return arr[1] \n    \n    sum = 0\n    for i in 1:k\n        sum += arr[i]\n\
    \    end\n    return sum\nend", "    if k == 0 \n        return arr[1] \n    else\
    \ \n        return arr[1] + add_elements(arr[k+1:end], k-1) \nend\n</cell>\n<code\
    \ language=julia-1.5>", "    if k == 0 \n        return arr[1] \n    else \n \
    \       return arr[1] + add_elements(arr[2:k], k-1)\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k > length(arr)\n\
    \        throw(ArgumentError(\"k must be less than or equal to length(arr)\"))\n\
    \    end\n    sum = 0\n    for e in arr[k:end]\n        sum += e\n    end\n  \
    \  return sum\nend", "    if k == 0 \n        return arr[1]\n    else \n     \
    \   sum = 0\n        for i in arr[k:end]\n            sum += i\n        end\n\
    \        return sum\n    end\nend", "    if k > length(arr) || k > length(arr)\n\
    \        throw(ArgumentError(\"k must be less than or equal to length(arr)\"))\n\
    \    end\n    \n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n\
    \    return sum\nend\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the\
    \ function should return 24.", "    if k == 0 \n        return arr[1] \n    else\
    \ \n        return arr[1] + add_elements(arr[2:k], k-1) \nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  sum = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n    return sum\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should\
    \ return 24.", "    if k == 0 \n        return arr[1] \n    else \n        return\
    \ arr[1] + add_elements(arr[2:k], k-1) \nend", "    sum = 0\n    for x in arr\n\
    \        if x < 10\n            sum += x\n        elseif x < 100\n           \
    \ sum += 10 + x\n        elseif x < 1000\n            sum += 100 + x\n       \
    \ elseif x < 10000\n            sum += 1000 + x\n        elseif x < 100000\n \
    \           sum += 10000 + x\n        elseif x < 1000000\n            sum += 100000\
    \ + x\n        elseif x < 10000000\n            sum += 1000000 + x\n        elseif\
    \ x < 100000000\n            sum += 10000000 + x\n        elseif x < 1000000000\n\
    \            sum += 100000000 + x\n        elseif x < 10000000000\n          \
    \  sum += 1000000000 + x\n        elseif x < 100000000000\n            sum +=\
    \ 10000000000 + x\n        elseif x < 1000000000000\n            sum += 100000000000\
    \ + x\n        elseif x < 10000000000000\n            sum += 1000000000000 + x\n\
    \        elseif x < 100000000000000\n            sum += 10000000000000 + x\n \
    \       elseif x < 1000000000000000\n            sum += 100000000000000 + x\n\
    \        elseif x < 10000000000000000\n            sum += 1000000000000000 + x\n\
    \        elseif x < 100000000000000000\n            sum += 10000000000000000 +\
    \ x\n        elseif x < 1000000000000000000\n            sum += 100000000000000000\
    \ + x\n        else\n            sum += 1000000000000000000 + x\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes as input a vector of integers arr and an integer k, and returns the sum\
    \ of the elements with at most k digits from the first k elements of arr.", " \
    \   if k == 0 \n        return arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k],\
    \ k-1) \nend\n</cell>\n<text>\nQuestion 3\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24.", "    if k > length(arr)\n        throw(ArgumentError(\"\
    k must be less than or equal to length(arr)\"))\n    end\n    \n    sum = 0\n\
    \    for i = 1:k\n        sum += arr[i]\n    end\n    return sum\nend", "    if\
    \ k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for i in\
    \ 1:k \n            sum += arr[i] \n        end\n        return sum\n    end\n\
    end\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\n\
    Question 2.2\nWrite a function called two_digits that takes as input a vector\
    \ of integers arr and an integer k, and returns the sum of the elements with at\
    \ most two digits from the first k elements of arr.", "    if k == 0 \n      \
    \  return arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k], k-1)\n\
    end\n</cell>\n<text>\nLet's test our add_elements function by calling it with\
    \ the test array we created earlier.", "    sum = 0\n    for x in arr[k:end]\n\
    \        sum += x\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k > length(arr)\n\
    \        return sum(arr)\n    else\n        sum = 0\n        for i in 1:k\n  \
    \          sum += arr[i]\n        end\n        return sum\n    end\nend", "  \
    \  if k == 0 \n        return arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k],\
    \ k-1)\nend\n</cell>\n<text>\nLet's test our add_elements function by verifying\
    \ it works on some test cases:", "    sum = 0\n    for x in arr\n        if x\
    \ < 10\n            sum += x\n        else\n            sum += x - 10\n      \
    \      if sum > k\n                sum -= 10\n            end\n        end\n \
    \   end\n    return sum\nend", "    sum = 0\n    for x in arr\n        if x <\
    \ 10\n            sum += x\n        elseif x < 100\n            sum += 10 + x\n\
    \        elseif x < 1000\n            sum += 100 + x\n        elseif x < 10000\n\
    \            sum += 1000 + x\n        elseif x < 100000\n            sum += 10000\
    \ + x\n        elseif x < 1000000\n            sum += 100000 + x\n        elseif\
    \ x < 10000000\n            sum += 1000000 + x\n        elseif x < 100000000\n\
    \            sum += 10000000 + x\n        elseif x < 1000000000\n            sum\
    \ += 100000000 + x\n        elseif x < 10000000000\n            sum += 1000000000\
    \ + x\n        elseif x < 100000000000\n            sum += 10000000000 + x\n \
    \       elseif x < 1000000000000\n            sum += 100000000000 + x\n      \
    \  elseif x < 10000000000000\n            sum += 1000000000000 + x\n        elseif\
    \ x < 100000000000000\n            sum += 10000000000000 + x\n        elseif x\
    \ < 1000000000000000\n            sum += 100000000000000 + x\n        elseif x\
    \ < 10000000000000000\n            sum += 1000000000000000 + x\n        elseif\
    \ x < 100000000000000000\n            sum += 10000000000000000 + x\n        elseif\
    \ x < 1000000000000000000\n            sum += 100000000000000000 + x\n       \
    \ else\n            sum += 1000000000000000000 + x\n        end\n    end\n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for\
    \ e in arr[k:end]\n        sum += e\n    end\n    return sum\nend", "    sum =\
    \ 0\n    for i in 1:k\n        sum += arr[i]\n    end\n    return sum\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the elements with\
    \ at most two digits from the first k elements of arr. For example, given arr\
    \ = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.",
  "    sum = 0\n    for n in arr\n        if n <= 9\n            sum += n\n      \
    \  else\n            sum += 9 + n % 10\n    end\n    return sum\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the elements with\
    \ at most two digits from the first k elements of arr. For example, given arr\
    \ = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, you should return 24.", "   \
    \ sum = 0\n    for x in arr\n        if x <= 9\n            sum += x\n       \
    \ elseif x > 9\n            sum += x - 10\n        end\n    end\n    return sum\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, your function should\
    \ return 24. Your function should use only a single for loop.", "    sum = 0\n\
    \    for e in arr[k:end]\n        sum += e\n    end\n    return sum\nend", " \
    \   sum = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n    return\
    \ sum\nend\n</cell>\n<text>\nExercise 3: Add elements with at most two digits\
    \ from the first k elements of arr\nWrite a function that adds elements with at\
    \ most two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  if k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for\
    \ i in arr[k:end]\n            sum += i\n        end\n        return sum\nend",
  "    sum = 0\n    for x in arr\n        if x > 0 && x < 10\n            sum += x\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for x in arr[k:end]\n        sum += x\n    end\n    return sum\n\
    end", "    sum = 0\n    for i in arr[k+1:end]\n        sum += i\n    end\n   \
    \ return sum\nend\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for\
    \ i in 1:k\n        sum += arr[i]\n    end\n    return sum\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  if k == 0 \n        return arr[1] \n    else \n        return arr[1] + add_elements(arr[k+1:end],\
    \ k-1) \nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24.", "    if k == 0 \n        return arr[1] \n    else \n   \
    \     return arr[1] + add_elements(arr[2:k], k-1) \nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k == 0 \n\
    \        return arr[1] \n    else \n        sum = 0\n        for i in 1:k \n \
    \           sum += arr[i] \n        end\n        return sum\n    end\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the elements with\
    \ at most two digits from the first k elements of arr. For example, given arr\
    \ = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.",
  "    if k == 0 \n        return arr[1] \n    \n    sum = 0\n    \n    for i in 1:k\n\
    \        sum += arr[i]\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    if k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for\
    \ i in 1:k\n            sum += arr[i]\n        end\n        return sum\n    end\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should\
    \ return 24.", "    if k == 0 || k > length(arr)\n        return sum(arr)\n  \
    \  \n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n    return\
    \ sum\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24. Your function should work for any arr and k. Make sure your\
    \ function works for arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4.", "  \
    \  if k == 0 \n        return arr[1] \n    else \n        sum = 0 \n        for\
    \ i = 1:k \n            sum += arr[i] \n        return sum + add_elements(arr[k+1:],\
    \ k-1) \nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. \n\
    For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24.", "    if k == 0 \n        return arr[1] \n    else \n   \
    \     return arr[1] + add_elements(arr[2:k], k-1) \nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, add_elements([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) should return 24.", "    if k == 0 \n        return arr[1]\n\
    \    \n    sum = 0\n    for i in 1:k\n        sum += arr[i]\n    end\n    return\
    \ sum\nend\n</cell>\n<text>\nQuestion 2.2\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. \n\
    The function should return an error if k is greater than or equal to the length\
    \ of the array.", "    if k == 0 \n        return arr[1] \n    else \n       \
    \ return arr[1] + add_elements(arr[2:k], k-1) \nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k == 0 \n\
    \        return arr[1] \n    else \n        return arr[1] + add_elements(arr[k+1:end],\
    \ k-1) \nend\n</cell>\n<code language=julia-1.5>", "    if k == 0 \n        return\
    \ arr[1] \n    else \n        sum = 0 \n        for i in arr[k:] \n          \
    \  sum += i \n        return sum + arr[k] \nend\n</cell>\n<text>\nQuestion 3\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. \nFor example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k == 0 ||\
    \ k == length(arr)\n        return arr[k]\n    \n    sum = 0\n    \n    for i\
    \ in 1:k\n        sum += arr[i]\n    end\n    \n    return sum\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the elements with\
    \ at most two digits from the first k elements of arr. For example, given arr\
    \ = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.",
  "    if k == 0 \n        return arr[1] \n    else \n        return arr[1] + add_elements(arr[k+1:end],\
    \ k-1) \nend\n</cell>\n<text>\nQuestion 3\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24.", "    sum = 0\n    for e in arr[k+1:end]\n        sum +=\
    \ e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>", "    if\
    \ k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for i in\
    \ arr[k:end]\n            sum += i\n        return sum\nend", "    sum = 0\n \
    \   for e in arr[k+1:end]\n        sum += e\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.3>", "    sum = 0\n    for i in arr[k:end]\n        sum\
    \ += i\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>", " \
    \   if k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for\
    \ i = 1:k \n            sum += arr[i] \n        end\n        return sum\n    end\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should\
    \ return 24.", "    if k > length(arr)\n        throw(ArgumentError(\"k must be\
    \ less than or equal to length of arr\"))\n    end", "    if k > length(arr) ||\
    \ k > length(arr)\n        error(\"k must be less than or equal to length(arr)\"\
    )\n    end\n    \n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n\
    \    return sum\nend", "    if k == 0 \n        return arr[1] \n    else \n  \
    \      sum = 0 \n        for i = 1:k \n            sum += arr[i] \n        endfor\
    \ \n        return sum \n    end\nend\n</cell>\n<code language=julia-1.5>", " \
    \   if k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for\
    \ i in arr[k:end]\n            sum += i\n        end\n        return sum\n   \
    \ end\nend\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for x in arr[k:end]\n\
    \        sum += x\n    end\n    return sum\nend", "    if k == 0 || k == length(arr)\n\
    \        return arr[k]\n    \n    sum = 0\n    for i in 1:k\n        sum = sum\
    \ + arr[i]\n    end\n    return sum\nend", "    if k == 0 \n        return arr[1]\
    \ \n    else \n        sum = 0\n        for i in 1:k\n            sum += arr[i]\n\
    \        end\n        return sum\n    end\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24. Write a test that tests\
    \ your function with arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4.", "  \
    \  if k > length(arr)\n        throw(ArgumentError(\"k must be less than or equal\
    \ to length(arr)\"))\n    end", "    sum = 0\n    for x in arr\n        if x <\
    \ 10\n            sum += x\n        else\n            sum += x - 10\n        \
    \    if sum > k\n                sum -= 10\n            end\n        end\n   \
    \ end\n    return sum\nend\n</cell>\n<code language=julia-1.5>", "    sum = 0\n\
    \    for x in arr[k:end]\n        sum += x\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert add_elements([111, 21, 3, 4000, 5, 6, 7, 8,\
    \ 9], 4) == 24\n</cell>\n<text>\nQuestion 3.2\nWrite a function called two_digits\
    \ that takes as input a vector of integers arr and an integer k, and returns the\
    \ sum of the elements with at most two digits from the first k elements of arr.",
  "    if k == 0 \n        return arr[1] \n    \n    sum = 0\n    for el in arr[k:end]\n\
    \        if el % 10 > 2 \n            sum += el\n        end\n    end\n    return\
    \ sum\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24.", "    if k == 0 \n        return arr[1]\n    else \n    \
    \    return arr[1] + add_elements(arr[2:k], k-1)\nend\n</cell>\n<text>\nQuestion\
    \ 7\nWrite a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24. Write a test that verifies\
    \ that your function works.", "    if k == 0 \n        return arr[1] \n    else\
    \ \n        return arr[1] + add_elements(arr[2:k], k-1) \nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24. \nThe\
    \ function should work for any arr and k. \nThe function should work for any arr\
    \ and k. \nThe function should work for any arr and k. \nThe function should work\
    \ for any arr and k. \nThe function should work for any arr and k. \nThe function\
    \ should work for any arr and k. \nThe function should work for any arr and k.\
    \ \nThe function should work for any arr and k. \nThe function should work for\
    \ any arr and k. \nThe function should work for any arr and k. \nThe function\
    \ should work for any arr and k. \nThe function should work for any arr and k.\
    \ \nThe function should work for any arr and k. \nThe function should work for\
    \ any arr and k. \nThe function should work for any arr and k. \nThe function\
    \ should work for any arr and k. \nThe function should work for any arr and k.\
    \ \nThe function should work for any arr and k. \nThe function should work for\
    \ any arr and k. \nThe function should work for any arr and k. \nThe function\
    \ should work for any arr and k. \nThe function should work for any arr and k.\
    \ \nThe function should work for any arr and k. \nThe function should work for\
    \ any arr and k. \nThe function should work for any arr and k. \nThe function\
    \ should work for any arr and k. \nThe function should work for any arr and k.\
    \ \nThe function should work for any arr and k. \nThe function should work for\
    \ any arr and k. \nThe function should work for any arr and k. \nThe function\
    \ should work for any arr and k. \nThe function should work for any arr and k.\
    \ \nThe function should work for any arr and k. \nThe function should work for\
    \ any arr and k. \nThe function should work for any arr and k. \nThe function\
    \ should work for any arr and k. \nThe function should work for any arr and k.\
    \ \nThe function should work for any arr and k. \nThe function should work for\
    \ any arr and k. \nThe function should work for any arr and k. \nThe function\
    \ should work for any arr and k. \nThe function should work for any arr and k.\
    \ \nThe function should work for any arr and k. \nThe function should work for ",
  "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n    return sum\n\
    end", "    sum = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n   \
    \ return sum\nend", "    if k == 0 \n        return arr[1] \n    else \n     \
    \   sum = 0\n        for i in 1:k \n            sum += arr[i] \n        end\n\
    \        return sum\n    end\nend\n</cell>\n<text>\nQuestion 3\nWrite a function\
    \ that returns the sum of the elements with at most two digits from the first\
    \ k elements of arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9]\
    \ and k = 4, the function should return 24.", "    sum = 0\n    for x in arr\n\
    \        if x < 10\n            sum += x\n        elseif x < 100\n           \
    \ sum += x - 10\n        elseif x < 1000\n            sum += x - 100\n       \
    \ elseif x < 10000\n            sum += x - 1000\n        elseif x < 100000\n \
    \           sum += x - 10000\n        elseif x < 1000000\n            sum += x\
    \ - 100000\n        elseif x < 10000000\n            sum += x - 1000000\n    \
    \    elseif x < 100000000\n            sum += x - 10000000\n        elseif x <\
    \ 1000000000\n            sum += x - 100000000\n        elseif x < 10000000000\n\
    \            sum += x - 1000000000\n        elseif x < 100000000000\n        \
    \    sum += x - 10000000000\n        elseif x < 1000000000000\n            sum\
    \ += x - 100000000000\n        elseif x < 10000000000000\n            sum += x\
    \ - 1000000000000\n        elseif x < 100000000000000\n            sum += x -\
    \ 10000000000000\n        elseif x < 1000000000000000\n            sum += x -\
    \ 100000000000000\n        elseif x < 10000000000000000\n            sum += x\
    \ - 1000000000000000\n        elseif x < 100000000000000000\n            sum +=\
    \ x - 10000000000000000\n        elseif x < 1000000000000000000\n            sum\
    \ += x - 100000000000000000\n        else\n            sum += x - 1000000000000000000\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    if k == 0 \n        return arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k],\
    \ k-1) \nend", "    if k == 0 \n        return arr[1] \n    else \n        sum\
    \ = 0 \n        for i in arr[k:end] \n            sum += i \n        return sum\
    \ + arr[1] \nend", "    sum = 0\n    for x in arr\n        if x < 10\n       \
    \     sum += x\n        else\n            sum += x - 10\n            if sum >\
    \ k\n                sum -= 10\n            end\n        end\n    end\n    return\
    \ sum\nend\n</cell>\n<text>\nQuestion 7\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24.", "    if k > length(arr) \n        error(\"k must be less\
    \ than or equal to length(arr)\") \n    else \n        sum = 0\n        for i\
    \ in 1:k\n            sum += arr[i]\n        end\n        return sum\n    end\n\
    end\n</cell>\n<text>\nQuestion 3\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, your function should\
    \ return 24.", "    if k == 0 \n        return arr[1] \n    else \n        sum\
    \ = 0\n        for i in 1:k\n            sum += arr[i]\n        end\n        return\
    \ sum\n    end\nend", "    sum = 0\n    for x in arr\n        if x > 9\n     \
    \       sum += x - 10\n        else\n            sum += x\n    end\n    return\
    \ sum\nend\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24.", "    if k == 0 \n        return arr[1] \n    \n    sum =\
    \ 0\n    for i = 1:k\n        sum += arr[i]\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert add_elements([111, 21, 3, 4000, 5, 6, 7, 8,\
    \ 9], 4) == 24\n</cell>\n<text>\nQuestion 2.2\nWrite a function that returns the\
    \ sum of the elements with at most two digits from the first k elements of arr.",
  "    if k > length(arr)\n        throw(ArgumentError(\"k must be less than or equal\
    \ to length(arr)\"))\n    end\n    \n    sum = 0\n    for i in 1:k\n        sum\
    \ += arr[i]\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the sum of the elements with at most two digits from\
    \ the first k elements of arr. For example, given arr = [111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9] and k = 4, your function should return 24.", "    if k > length(arr)\n\
    \        throw(ArgumentError(\"k must be less than or equal to length(arr)\"))\n\
    \    end\n    \n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>", "    if k == 0 \n \
    \       return arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k],\
    \ k-1) \nend\n</cell>\n<text>\nProblem 3\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, if arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24. \nThe function should work for any arr and k. \nThe function\
    \ should return an error if the array is empty or if k is less than 1.", "   \
    \ if k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for\
    \ i = 1:k \n            sum += arr[i] \n        end\n        return sum\n    end\n\
    end\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for x in arr\n   \
    \     if x <= 9\n            sum += x\n        else\n            sum += x - 10\n\
    \            if sum > k\n                sum -= 10\n            end\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the sum of the elements with at most two digits from the first k elements\
    \ of arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4,\
    \ the function should return 24.", "    if k == 0 \n        return arr[1] \n \
    \   else \n        return arr[1] + add_elements(arr[2:k], k-1) \nend", "    if\
    \ k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for i =\
    \ 1:k\n            sum += arr[i]\n        end\n        return sum\n    end\nend",
  "    if k > length(arr)\n        error(\"k must be less than or equal to length(arr)\"\
    )\n    end\n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n   \
    \ return sum\nend", "    if k > length(arr)\n        throw(ArgumentError(\"k must\
    \ be less than or equal to length(arr)\"))\n    end", "    sum = 0\n    for x\
    \ in arr[k:end]\n        sum += x\n    end\n    return sum\nend", "    sum = 0\n\
    \    for e in arr[k+1:end]\n        sum += e\n    end\n    return sum\nend", " \
    \   if k > length(arr)\n        throw(ArgumentError(\"k must be less than or equal\
    \ to length(arr)\"))\n    end\n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n\
    \    end\n    return sum\nend", "    sum = 0\n    for x in arr\n        if x <\
    \ 10\n            sum += x\n        elseif x < 100\n            sum += x - 10\n\
    \        elseif x < 1000\n            sum += x - 100\n        elseif x < 10000\n\
    \            sum += x - 1000\n        elseif x < 100000\n            sum += x\
    \ - 10000\n        elseif x < 1000000\n            sum += x - 100000\n       \
    \ elseif x < 10000000\n            sum += x - 1000000\n        elseif x < 100000000\n\
    \            sum += x - 10000000\n        elseif x < 1000000000\n            sum\
    \ += x - 100000000\n        elseif x < 10000000000\n            sum += x - 1000000000\n\
    \        elseif x < 100000000000\n            sum += x - 10000000000\n       \
    \ elseif x < 1000000000000\n            sum += x - 100000000000\n        elseif\
    \ x < 10000000000000\n            sum += x - 1000000000000\n        elseif x <\
    \ 100000000000000\n            sum += x - 10000000000000\n        elseif x < 1000000000000000\n\
    \            sum += x - 100000000000000\n        elseif x < 10000000000000000\n\
    \            sum += x - 1000000000000000\n        elseif x < 100000000000000000\n\
    \            sum += x - 10000000000000000\n        elseif x < 1000000000000000000\n\
    \            sum += x - 100000000000000000\n        else\n            sum += x\
    \ - 1000000000000000000\n        end\n    end\n    return sum\nend\n</cell>\n\
    <text>\nProblem 3\nWrite a function that returns the sum of the elements with\
    \ at most three digits from the first k elements of arr. For example, given arr\
    \ = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24\
    \ (3 + 4 + 5 + 6 + 7 + 8 + 9).", "    sum = 0\n    for n in arr\n        if n\
    \ < 10\n            sum += n\n        elseif n < 100\n            sum += n\n \
    \       elseif n < 1000\n            sum += n\n        elseif n < 10000\n    \
    \        sum += n\n        elseif n < 100000\n            sum += n\n        elseif\
    \ n < 1000000\n            sum += n\n        elseif n < 10000000\n           \
    \ sum += n\n        elseif n < 100000000\n            sum += n\n        elseif\
    \ n < 1000000000\n            sum += n\n        elseif n < 10000000000\n     \
    \       sum += n\n        elseif n < 100000000000\n            sum += n\n    \
    \    elseif n < 1000000000000\n            sum += n\n        elseif n < 10000000000000\n\
    \            sum += n\n        elseif n < 100000000000000\n            sum +=\
    \ n\n        elseif n < 1000000000000000\n            sum += n\n        elseif\
    \ n < 10000000000000000\n            sum += n\n        elseif n < 100000000000000000\n\
    \            sum += n\n        elseif n < 1000000000000000000\n            sum\
    \ += n\n        elseif n < 10000000000000000000\n            sum += n\n      \
    \  elseif n < 100000000000000000000\n            sum += n\n        elseif n <\
    \ 1000000000000000000000\n            sum += n\n        elseif n < 10000000000000000000000\n\
    \            sum += n\n        elseif n < 100000000000000000000000\n         \
    \   sum += n\n        elseif n < 1000000000000000000000000\n            sum +=\
    \ n\n        elseif n < 10000000000000000000000000\n            sum += n\n   \
    \     elseif n < 100000000000000000000000000\n            sum += n\n        elseif\
    \ n < 1000000000000000000000000000\n            sum += n\n        elseif n < 10000000000000000000000000000\n\
    \            sum += n\n        elseif n < 100000000000000000000000000000\n   \
    \         sum += n\n        elseif n < 1000000000000000000000000000000\n     \
    \       sum += n\n        elseif n < 10000000000000000000000000000000\n      \
    \      sum += n\n        elseif n < 100000000000000000000000000000000\n      \
    \      sum += n\n        elseif n < 1000000000000000000000000000000000\n     \
    \       sum += n\n        elseif n < 1000000000000000000000000000000000\n    \
    \        sum += n\n        elseif n < 1000000000000000000000000000000000\n   \
    \         sum += n\n        elseif n < 1000000000000000000000000000000000\n  \
    \          sum += n\n        elseif n < 1000000000000000000000000000000000\n \
    \           sum += n\n        elseif n < 1000000000000000000000000000000000\n\
    \            sum += n\n        elseif n < 1000000000000000000000000000000000\n\
    \            sum += n\n        elseif n < 1000000000000000000000000000000000\n\
    \            sum += n\n        elseif n < 1000000000000000000000000000000000\n\
    \            sum += n\n        elseif n < 1000000000000000000000000000000000\n\
    \            sum += n\n        elseif n < 1000000000000000000000000000000000\n\
    \            sum += n\n        elseif n < 1000000000000000000000000000000000\n\
    \            sum += n\n        elseif n < 1000000000000000000000000000000000\n\
    \            sum += n\n        elseif n < 1000000000000000000000000000000000\n",
  "    if k == 0 \n        return arr[1]\n    else \n        return arr[1] + add_elements(arr[2:k],\
    \ k-1)\nend", "    sum = 0\n    for i in arr[k:end]\n        sum += i\n    end\n\
    \    return sum\nend", "    if k > length(arr)\n        error(\"k must be less\
    \ than or equal to length of arr\")\n    end", "    sum = 0\n    for e in arr[k+1:end]\n\
    \        sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, your function should return 24.", " \
    \   if k == 0 \n        return arr[1] \n    else \n        return arr[1] + add_elements(arr[k+1:end],\
    \ k-1)\nend", "    if k == 0 \n        return arr[1] \n    else \n        return\
    \ arr[1] + add_elements(arr[2:k], k-1)\nend", "    if k == 0 \n        return\
    \ arr[1]\n    \n    sum = 0\n    \n    for i in 1:k\n        sum += arr[i]\n \
    \   end\n    \n    return sum\nend", "    sum = 0\n    for x in arr\n        if\
    \ x > 9\n            sum += x - 10\n        else\n            sum += x\n    end\n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\nQuestion 2.2\nWrite\
    \ a function that returns the sum of the elements with at most two digits from\
    \ the first k elements of arr. For example, given arr = [111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9] and k = 4, your function should return 24.", "    if k > length(arr)\n\
    \        throw(ArgumentError(\"k must be less than or equal to length(arr)\"))\n\
    \    end\n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n    return\
    \ sum\nend\n</cell>\n<text>\nExercise 3: Find the sum of all elements with at\
    \ most two digits from the first k elements of arr", "    if k == 0 \n       \
    \ return arr[1] \n    else \n        sum = 0\n        for i in 1:k\n         \
    \   sum += arr[i]\n        end\n        return sum\n    end\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, add_elements([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) should return 24.", "    if k > length(arr)\
    \ || k < 1 \n        throw(ArgumentError(\"k must be between 1 and length(arr)\"\
    ))\n    end", "    sum = 0\n    for el in arr[k:end]\n        sum += el\n    end\n\
    \    return sum\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the\
    \ function should return 24.", "    if k == 0 \n        return arr[1] \n    else\
    \ \n        sum = 0\n        for i in 1:k \n            sum += arr[i] \n     \
    \   end\n        return sum\n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if k == 0 \n        return arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k],\
    \ k-1) \nend\n</cell>\n<code language=julia-1.5>", "    if k == 0 || k == length(arr)\n\
    \        return arr[k]\n    \n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>", "    sum =\
    \ 0\n    for x in arr[k:end]\n        sum += x\n    end\n    return sum\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the elements\
    \ with at most two digits from the first k elements of arr. For example, given\
    \ arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return\
    \ 24.", "    if k == 0 \n        return arr[1] \n    else \n        sum = 0\n\
    \        for i in arr[k:end]\n            sum += i\n        return sum\nend\n\
    </cell>\n<code language=julia-1.5>", "    if k == 0 \n        return arr[1] \n\
    \    \n    sum = 0\n    \n    for i in 1:k\n        sum += arr[i]\n    end\n \
    \   \n    return sum\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the sum of the elements with at most two digits from the first k elements\
    \ of arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4,\
    \ the function should return 24.", "    if k > length(arr)\n        throw(ArgumentError(\"\
    k must be less than or equal to length of arr\"))\n    end\n    sum = 0\n    for\
    \ i = 1:k\n        sum += arr[i]\n    end\n    return sum\nend", "    if k ==\
    \ 0 \n        return arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k],\
    \ k-1) \nend\n</cell>\n<code language=julia-1.5>", "    if k > length(arr) ||\
    \ k > length(arr)\n        throw(ArgumentError(\"k must be less than or equal\
    \ to length of arr\"))\n    end\n    \n    sum = 0\n    for i = 1:k\n        sum\
    \ += arr[i]\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the sum of the elements with at most two digits from\
    \ the first k elements of arr. For example, given arr = [111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9] and k = 4, the function should return 24.", "    sum = 0\n    for\
    \ x in arr[k:end]\n        sum += x\n    end\n    return sum\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  if k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for\
    \ i in 1:k\n            sum += arr[i]\n        end\n        return sum\n    end\n\
    end\n</cell>\n<code language=julia-1.3>", "    sum = 0\n    for el in arr[k+1:end]\n\
    \        sum += el\n    end\n    return sum\nend\n</cell>\n<text>\nQuestion 3.2\n\
    Write a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. \nThe function should take as input a vector\
    \ of integers arr and an integer k. \nThe function should return the sum of the\
    \ elements with at most two digits from the first k elements of arr.", "    if\
    \ k > length(arr)\n        throw(ArgumentError(\"k must be less than or equal\
    \ to length(arr)\"))\n    end\n    sum = 0\n    for i in 1:k\n        sum += arr[i]\n\
    \    end\n    return sum\nend\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the sum of the elements with at most two digits from the first k elements\
    \ of arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4,\
    \ the function should return 24.", "    if k == 0 \n        return arr[1] \n \
    \   else \n        sum = 0 \n        for i = 1:k \n            sum += arr[i] \n\
    \        endfor \n        return sum \n    end\nend\n</cell>\n<code language=julia-1.5>",
  "    if k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for\
    \ i = 1:k\n            sum += arr[i]\n        end\n        return sum\n    end\n\
    end\n</cell>\n<code language=julia-1.5>", "    sum = 0\n    for x in arr\n   \
    \     if x < 10\n            sum += x\n        elseif x < 100\n            sum\
    \ += 10 + x\n        elseif x < 1000\n            sum += 100 + x\n        elseif\
    \ x < 10000\n            sum += 1000 + x\n        elseif x < 100000\n        \
    \    sum += 10000 + x\n        elseif x < 1000000\n            sum += 100000 +\
    \ x\n        elseif x < 10000000\n            sum += 1000000 + x\n        elseif\
    \ x < 100000000\n            sum += 10000000 + x\n        elseif x < 1000000000\n\
    \            sum += 100000000 + x\n        elseif x < 10000000000\n          \
    \  sum += 1000000000 + x\n        elseif x < 100000000000\n            sum +=\
    \ 10000000000 + x\n        elseif x < 1000000000000\n            sum += 100000000000\
    \ + x\n        elseif x < 10000000000000\n            sum += 1000000000000 + x\n\
    \        elseif x < 100000000000000\n            sum += 10000000000000 + x\n \
    \       elseif x < 1000000000000000\n            sum += 100000000000000 + x\n\
    \        elseif x < 10000000000000000\n            sum += 1000000000000000 + x\n\
    \        elseif x < 100000000000000000\n            sum += 10000000000000000 +\
    \ x\n        elseif x < 1000000000000000000\n            sum += 100000000000000000\
    \ + x\n        else\n            sum += 1000000000000000000 + x\n        end\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>", "    sum =\
    \ 0\n    for x in arr\n        if x < 10\n            sum += x\n        elseif\
    \ x < 100\n            sum += x - 10\n        elseif x < 1000\n            sum\
    \ += x - 100\n        elseif x < 10000\n            sum += x - 1000\n        elseif\
    \ x < 100000\n            sum += x - 10000\n        elseif x < 1000000\n     \
    \       sum += x - 100000\n        elseif x < 10000000\n            sum += x -\
    \ 1000000\n        elseif x < 100000000\n            sum += x - 10000000\n   \
    \     elseif x < 1000000000\n            sum += x - 100000000\n        elseif\
    \ x < 10000000000\n            sum += x - 1000000000\n        elseif x < 100000000000\n\
    \            sum += x - 10000000000\n        elseif x < 1000000000000\n      \
    \      sum += x - 100000000000\n        elseif x < 10000000000000\n          \
    \  sum += x - 1000000000000\n        elseif x < 100000000000000\n            sum\
    \ += x - 10000000000000\n        elseif x < 1000000000000000\n            sum\
    \ += x - 100000000000000\n        elseif x < 10000000000000000\n            sum\
    \ += x - 1000000000000000\n        elseif x < 100000000000000000\n           \
    \ sum += x - 10000000000000000\n        elseif x < 1000000000000000000\n     \
    \       sum += x - 100000000000000000\n        else\n            sum += x - 1000000000000000000\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the sum of the elements with at most three digits from\
    \ the first k elements of arr. For example, given arr = [111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9] and k = 4, the function should return 24. Your function should work\
    \ for any arr and k. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9]\
    \ and k = 5, your function should return 50.", "    sum = 0\n    for e in arr\n\
    \        if e < 10\n            sum += e\n        else\n            sum += e %\
    \ 10 + 10 * (e / 10)\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    if k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for\
    \ i = 1:k \n            sum += arr[i] \n        end\n        return sum\nend\n\
    </cell>\n<code language=julia-1.5>", "    if k > length(arr)\n        throw(ArgumentError(\"\
    k must be less than or equal to length(arr)\"))\n    end\n    sum = 0\n    for\
    \ i = 1:k\n        sum += arr[i]\n    end\n    return sum\nend", "    if k > length(arr)\n\
    \        throw(ArgumentError(\"k must be less than or equal to length(arr)\"))\n\
    \    end\n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n    return\
    \ sum\nend", "    if k == 0 \n        return arr[1] \n    else \n        return\
    \ arr[1] + add_elements(arr[2:k], k-1) \nend\n</cell>\n<text>\nSolution\nLet's\
    \ see how we would solve this problem manually.", "    sum = 0\n    for e in arr[k:end]\n\
    \        if e < 10\n            sum += e\n        else\n            sum += e -\
    \ 10\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns the sum of the elements with at most two digits from the first\
    \ k elements of arr. For example, add_elements([111, 21, 3, 4000, 5, 6, 7, 8,\
    \ 9], 4) should return 24.", "    sum = 0\n    for x in arr\n        if x < 10\n\
    \            sum += x\n        elseif x < 100\n            sum += x - 10\n   \
    \     elseif x < 1000\n            sum += x - 100\n        elseif x < 10000\n\
    \            sum += x - 1000\n        elseif x < 100000\n            sum += x\
    \ - 10000\n        elseif x < 1000000\n            sum += x - 100000\n       \
    \ elseif x < 10000000\n            sum += x - 1000000\n        elseif x < 100000000\n\
    \            sum += x - 10000000\n        elseif x < 1000000000\n            sum\
    \ += x - 100000000\n        elseif x < 10000000000\n            sum += x - 1000000000\n\
    \        elseif x < 100000000000\n            sum += x - 10000000000\n       \
    \ elseif x < 1000000000000\n            sum += x - 100000000000\n        elseif\
    \ x < 10000000000000\n            sum += x - 1000000000000\n        elseif x <\
    \ 100000000000000\n            sum += x - 10000000000000\n        elseif x < 1000000000000000\n\
    \            sum += x - 100000000000000\n        elseif x < 10000000000000000\n\
    \            sum += x - 1000000000000000\n        elseif x < 100000000000000000\n\
    \            sum += x - 10000000000000000\n        elseif x < 1000000000000000000\n\
    \            sum += x - 100000000000000000\n        else\n            sum += x\
    \ - 1000000000000000000\n        end\n    end\n    return sum\nend\n</cell>\n\
    <text>\nProblem 3\nWrite a function that returns the sum of the digits of an integer.",
  "    if k > length(arr)\n        error(\"k must be <= length(arr)\")\n    end\n\
    \    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n    return sum\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should\
    \ return 24.", "    if k > length(arr)\n        throw(ArgumentError(\"k must be\
    \ less than or equal to length(arr)\"))\n    end\n    \n    sum = 0\n    for i\
    \ = 1:k\n        sum += arr[i]\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for e in arr[k:end]\n        sum += e\n    end\n    return sum\n\
    end", "    if k == 0 \n        return arr[1] \n    else \n        sum = 0\n  \
    \      for i in 1:k\n            sum += arr[i]\n        end\n        return sum\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>", "    if k > length(arr)\n\
    \        error(\"k must be <= length of arr\")\n    end", "    sum = 0\n    for\
    \ e in arr\n        if e > 0 && e <= 9\n            sum += e\n        end\n  \
    \  end\n    return sum\nend", "    if k == 0 \n        return arr[1] \n    else\
    \ \n        sum = 0\n        for i in arr[k:end]\n            sum += i\n     \
    \   end\n        return sum\nend\n</cell>\n<text>\nQuestion 3\nWrite a function\
    \ that returns the sum of the elements with at most two digits from the first\
    \ k elements of arr. \nThe function should return an error if k is greater than\
    \ or equal to len(arr).", "    if k == 0 \n        return arr[1] \n    else \n\
    \        sum = 0\n        for i in 1:k\n            sum += arr[i]\n        end\n\
    \        return sum\n    end\nend\n</cell>\n<code language=julia-1.5>", "    if\
    \ k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for i in\
    \ arr[k:end]\n            sum += i\n        end\n        return sum\nend\n</cell>\n\
    <code language=julia-1.5>", "    if k == 0 \n        return arr[1] \n    else\
    \ \n        return arr[1] + add_elements(arr[k+1:end], k-1) \nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  sum = 0\n    for el in arr[k:end]\n        sum += el\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert add_elements([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\nProblem 2b", "    if k == 0 \n  \
    \      return arr[1] \n    \n    sum = 0\n    \n    for i = 1:k\n        sum +=\
    \ arr[i]\n    end\n    \n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    if k == 0 \n        return arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k],\
    \ k-1) \nend", "    sum = 0\n    for e in arr[k+1:end]\n        if e < 10\n  \
    \          sum += e\n        else\n            sum += e - 10\n    end\n    return\
    \ sum\nend\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. Test\
    \ your function on the following arrays:", "    if k > length(arr)\n        return\
    \ sum(arr)\n    else\n        sum = 0\n        for i = 1:k\n            sum +=\
    \ arr[i]\n        end\n        return sum\n    end\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k == 0 \n\
    \        return arr[1] \n    else \n        sum = 0\n        for i in arr[k:end]\n\
    \            sum += i\n        end\n        return sum\nend\n</cell>\n<text>\n\
    Question 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  sum = 0\n    for x in arr[k:end]\n        sum += x\n    end\n    return sum\n\
    end\n</cell>\n<text>\nQuestion 2.2\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. \nFor example,\
    \ given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should\
    \ return 24.", "    sum = 0\n    for n in arr\n        if n <= 9\n           \
    \ sum += n\n        elseif n <= 99\n            sum += n\n        elseif n <=\
    \ 999\n            sum += n\n        elseif n <= 9999\n            sum += n\n\
    \        elseif n <= 99999\n            sum += n\n        elseif n <= 999999\n\
    \            sum += n\n        elseif n <= 9999999\n            sum += n\n   \
    \     elseif n <= 999999999\n            sum += n\n        elseif n <= 99999999999\n\
    \            sum += n\n        elseif n <= 9999999999999\n            sum += n\n\
    \        elseif n <= 1000000000000\n            sum += n\n        elseif n <=\
    \ 10000000000000\n            sum += n\n        elseif n <= 100000000000000\n\
    \            sum += n\n        elseif n <= 1000000000000000\n            sum +=\
    \ n\n        elseif n <= 10000000000000000\n            sum += n\n        elseif\
    \ n <= 100000000000000000\n            sum += n\n        elseif n <= 1000000000000000000\n\
    \            sum += n\n        elseif n <= 10000000000000000000\n            sum\
    \ += n\n        elseif n <= 100000000000000000000\n            sum += n\n    \
    \    elseif n <= 1000000000000000000000\n            sum += n\n        elseif\
    \ n <= 10000000000000000000000\n            sum += n\n        elseif n <= 100000000000000000000000\n\
    \            sum += n\n        elseif n <= 1000000000000000000000000\n       \
    \     sum += n\n        elseif n <= 10000000000000000000000000\n            sum\
    \ += n\n        elseif n <= 100000000000000000000000000\n            sum += n\n\
    \        elseif n <= 1000000000000000000000000000\n            sum += n\n    \
    \    elseif n <= 10000000000000000000000000000\n            sum += n\n       \
    \ elseif n <= 100000000000000000000000000000\n            sum += n\n        elseif\
    \ n <= 1000000000000000000000000000000\n            sum += n\n        elseif n\
    \ <= 10000000000000000000000000000000\n            sum += n\n        elseif n\
    \ <= 100000000000000000000000000000000\n            sum += n\n        elseif n\
    \ <= 1000000000000000000000000000000000\n            sum += n\n        elseif\
    \ n <= 1000000000000000000000000000000000\n            sum += n\n        elseif\
    \ n <= 1000000000000000000000000000000000\n            sum += n\n        elseif\
    \ n <= 1000000000000000000000000000000000\n            sum += n\n        elseif\
    \ n <= 1000000000000000000000000000000000\n            sum += n\n        elseif\
    \ n <= 1000000000000000000000000000000000\n            sum += n\n        elseif\
    \ n <= 1000000000000000000000000000000000\n            sum += n\n        elseif\
    \ n <= 1000000000000000000000000000000000\n            sum += n\n        elseif\
    \ n <= 1000000000000000000000000000000000\n            sum += n\n        elseif\
    \ n <= 1000000000000000000000000000000000\n            sum += n\n        elseif\
    \ n <= 1000000000000000000000000000000000\n            sum += n", "    if k ==\
    \ 0 \n        return arr[1]\n    \n    sum = 0\n    for i in 1:k\n        sum\
    \ += arr[i]\n    end\n    return sum\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the sum of the elements with at most two digits from\
    \ the first k elements of arr. Test it on arr = [111, 21, 3, 4000, 5, 6, 7, 8,\
    \ 9] and k = 4.", "    sum = 0\n    for el in arr\n        if el > 0\n       \
    \     sum += el % 10\n            el = el / 10\n        end\n    end\n    return\
    \ sum + add_elements(arr[k+1:end], k)\nend\n</cell>\n<text>\nProblem 7\nWrite\
    \ a function that returns the sum of the elements with at most two digits from\
    \ the first k elements of arr. For example, given arr = [111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k == 0 \n  \
    \      return arr[1] \n    else \n        return arr[1] + add_elements(arr[2:k],\
    \ k-1) \nend\n</cell>\n<code language=julia-1.3>", "    if k > length(arr)\n \
    \       throw(ArgumentError(\"k must be less than or equal to length(arr)\"))\n\
    \    end", "    if k == 0 \n        return arr[1] \n    else \n        return\
    \ arr[1] + add_elements(arr[2:k], k-1) \nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for i in 1:k\n        sum += arr[i]\n    end\n    return sum\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) should return 24.", "   \
    \ if k > length(arr)\n        throw(ArgumentError(\"k must be less than or equal\
    \ to length of arr\"))\n    end\n    sum = 0\n    for i = 1:k\n        sum +=\
    \ arr[i]\n    end\n    return sum\nend", "    sum = 0\n    for x in arr\n    \
    \    if x < 10\n            sum += x\n        elseif x < 100\n            sum\
    \ += x - 10\n        elseif x < 1000\n            sum += x - 100\n        elseif\
    \ x < 10000\n            sum += x - 1000\n        elseif x < 100000\n        \
    \    sum += x - 10000\n        elseif x < 1000000\n            sum += x - 100000\n\
    \        elseif x < 10000000\n            sum += x - 1000000\n        elseif x\
    \ < 100000000\n            sum += x - 10000000\n        elseif x < 1000000000\n\
    \            sum += x - 100000000\n        elseif x < 10000000000\n          \
    \  sum += x - 1000000000\n        elseif x < 100000000000\n            sum +=\
    \ x - 10000000000\n        elseif x < 1000000000000\n            sum += x - 100000000000\n\
    \        elseif x < 10000000000000\n            sum += x - 1000000000000\n   \
    \     elseif x < 100000000000000\n            sum += x - 10000000000000\n    \
    \    elseif x < 1000000000000000\n            sum += x - 100000000000000\n   \
    \     elseif x < 10000000000000000\n            sum += x - 1000000000000000\n\
    \        elseif x < 100000000000000000\n            sum += x - 10000000000000000\n\
    \        elseif x < 1000000000000000000\n            sum += x - 100000000000000000\n\
    \        else\n            sum += x - 1000000000000000000\n        end\n    end\n\
    \    return sum\nend\n</cell>\n<text>\nQuestion 3\nWrite a function that returns\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr. For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the\
    \ function should return 24.", "    sum = 0\n    for e in arr[k+1:end]\n     \
    \   sum += e\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\n\
    Question 2.2\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  sum = 0\n    for x in arr[k:end]\n        if x % 10 == 0 \n            sum\
    \ += x\n        end\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\n\
    Question 3.2\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, your function should return 24.", " \
    \   if k == 0 \n        return arr[1]\n    \n    sum = 0\n    for el in arr[k:end]\n\
    \        if el < 10 \n            sum += el\n        else\n            sum +=\
    \ el - 10\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\n\
    Question 2.2\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  if k > length(arr)\n        throw(ArgumentError(\"k must be less than or equal\
    \ to length(arr)\"))\n    end\n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n\
    \    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>", "    if k\
    \ == 0 \n        return arr[1] \n    \n    sum = 0\n    for el in arr[k:end]\n\
    \        sum += el\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\n\
    Problem 7: add_elements2", "    if k > length(arr)\n        throw(ArgumentError(\"\
    k must be less than or equal to length of arr\"))\n    end\n    sum = 0\n    for\
    \ i = 1:k\n        sum += arr[i]\n    end\n    return sum\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  if k == 0 \n        return arr[1]\n    else \n        return arr[1] + add_elements(arr[2:k],\
    \ k-1)\nend\n</cell>\n<text>\nExercise 4\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24. Your function should work for any arr and k. Make sure your\
    \ function works for arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4.", "  \
    \  if k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for\
    \ i in 1:k \n            sum += arr[i] \n        end\n        return sum\n   \
    \ end\nend", "    if k == 0 \n        return arr[1] \n    else \n        return\
    \ arr[1] + add_elements(arr[2:k], k-1) \nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the sum of the elements with at most two digits from\
    \ the first k elements of arr. For example, given arr = [111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k == 0 \n  \
    \      return arr[1] \n    else \n        sum = 0\n        for i in 1:k\n    \
    \        sum += arr[i]\n        end\n        return sum\n    end\nend\n</cell>\n\
    <code language=julia-1.5>", "    if k == 0 \n        return arr[1] \n    else\
    \ \n        return arr[1] + add_elements(arr[2:k], k-1) \nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  if k == 0 \n        return arr[1] \n    \n    sum = 0\n    for i = 1:k\n  \
    \      sum += arr[i]\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    sum = 0\n    for x in arr\n        if x < 10\n            sum += x\n      \
    \  elseif x < 100\n            sum += x - 10\n        elseif x < 1000\n      \
    \      sum += x - 100\n        elseif x < 10000\n            sum += x - 1000\n\
    \        elseif x < 100000\n            sum += x - 10000\n        elseif x < 1000000\n\
    \            sum += x - 100000\n        elseif x < 10000000\n            sum +=\
    \ x - 1000000\n        elseif x < 100000000\n            sum += x - 10000000\n\
    \        elseif x < 1000000000\n            sum += x - 100000000\n        elseif\
    \ x < 10000000000\n            sum += x - 1000000000\n        elseif x < 100000000000\n\
    \            sum += x - 10000000000\n        elseif x < 1000000000000\n      \
    \      sum += x - 100000000000\n        elseif x < 10000000000000\n          \
    \  sum += x - 1000000000000\n        elseif x < 100000000000000\n            sum\
    \ += x - 10000000000000\n        elseif x < 1000000000000000\n            sum\
    \ += x - 100000000000000\n        elseif x < 10000000000000000\n            sum\
    \ += x - 1000000000000000\n        elseif x < 100000000000000000\n           \
    \ sum += x - 10000000000000000\n        elseif x < 1000000000000000000\n     \
    \       sum += x - 100000000000000000\n        else\n            sum += x - 1000000000000000000\n\
    \        end\n    end\n    return sum\nend\n</cell>\n<text>\nProblem 3\nWrite\
    \ a function that returns the sum of the elements with at most three digits from\
    \ the first k elements of arr. For example, given arr = [111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9] and k = 4, the function should return 24 (3 + 4 + 5 + 6 + 7 + 8).",
  "    sum = 0\n    for n in arr\n        if n <= 9\n            sum += n\n      \
    \  elseif n <= 99\n            sum += n\n        elseif n <= 999\n           \
    \ sum += n\n        elseif n <= 9999\n            sum += n\n        elseif n <=\
    \ 99999\n            sum += n\n        elseif n <= 999999\n            sum +=\
    \ n\n        elseif n <= 9999999\n            sum += n\n        elseif n <= 999999999\n\
    \            sum += n\n        elseif n <= 99999999999\n            sum += n\n\
    \        elseif n <= 9999999999999\n            sum += n\n        elseif n <=\
    \ 1000000000000\n            sum += n\n        elseif n <= 10000000000000\n  \
    \          sum += n\n        elseif n <= 100000000000000\n            sum += n\n\
    \        elseif n <= 1000000000000000\n            sum += n\n        elseif n\
    \ <= 10000000000000000\n            sum += n\n        elseif n <= 100000000000000000\n\
    \            sum += n\n        elseif n <= 1000000000000000000\n            sum\
    \ += n\n        elseif n <= 10000000000000000000\n            sum += n\n     \
    \   elseif n <= 100000000000000000000\n            sum += n\n        elseif n\
    \ <= 1000000000000000000000\n            sum += n\n        elseif n <= 10000000000000000000000\n\
    \            sum += n\n        elseif n <= 100000000000000000000000\n        \
    \    sum += n\n        elseif n <= 1000000000000000000000000\n            sum\
    \ += n\n        elseif n <= 10000000000000000000000000\n            sum += n\n\
    \        elseif n <= 100000000000000000000000000\n            sum += n\n     \
    \   elseif n <= 1000000000000000000000000000\n            sum += n\n        elseif\
    \ n <= 10000000000000000000000000000\n            sum += n\n        elseif n <=\
    \ 100000000000000000000000000000\n            sum += n\n        elseif n <= 1000000000000000000000000000000\n\
    \            sum += n\n        elseif n <= 10000000000000000000000000000000\n\
    \            sum += n\n        elseif n <= 100000000000000000000000000000000\n\
    \            sum += n\n        elseif n <= 1000000000000000000000000000000000\n\
    \            sum += n\n        elseif n <= 1000000000000000000000000000000000\n\
    \            sum += n\n        elseif n <= 1000000000000000000000000000000000\n\
    \            sum += n\n        elseif n <= 1000000000000000000000000000000000\n\
    \            sum += n\n        elseif n <= 1000000000000000000000000000000000\n\
    \            sum += n\n        elseif n <= 1000000000000000000000000000000000\n\
    \            sum += n\n        elseif n <= 1000000000000000000000000000000000\n\
    \            sum += n\n        elseif n <= 1000000000000000000000000000000000\n\
    \            sum += n\n        elseif n <= 1000000000000000000000000000000000\n\
    \            sum += n\n        elseif n <= 1000000000000000000000000000000000\n\
    \            sum += n\n        elseif n <= 1000000000000000000000000000000000\n\
    \            sum += n", "    if k == 0 \n        return arr[1]\n    else \n  \
    \      sum = 0\n        for i in 1:k\n            sum += arr[i]\n        end\n\
    \        return sum\n    end\nend\n</cell>\n<code language=julia-1.3>\n@assert\
    \ add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24\n</cell>\n<text>\n\
    Question 3.2\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  sum = 0\n    for e in arr[k:end]\n        sum += e\n    end\n    return sum\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the\
    \ elements with at most two digits from the first k elements of arr. For example,\
    \ given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should\
    \ return 24.", "    if k > length(arr)\n        throw(ArgumentError(\"k must be\
    \ less than or equal to length(arr)\"))\n    end\n    sum = 0\n    for i = 1:k\n\
    \        sum += arr[i]\n    end\n    return sum\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k == 0 \n\
    \        return arr \n    \n    sum = 0\n    \n    for i = 1:k\n        sum +=\
    \ arr[i]\n    end\n    \n    return sum\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the sum of the elements with at most two digits from\
    \ the first k elements of arr. For example, given arr = [111, 21, 3, 4000, 5,\
    \ 6, 7, 8, 9] and k = 4, the function should return 24.", "    if k > length(arr)\n\
    \        throw(ArgumentError(\"k must be less than or equal to length(arr)\"))\n\
    \    end\n    sum = 0\n    for el in arr[k:end]\n        if el < 10\n        \
    \    sum += el\n        else\n            sum += el - 10\n        end\n    end\n\
    \    return sum\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the sum of the elements with at most two digits from the first k elements of\
    \ arr. For example, add_elements([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) should\
    \ return 24.", "    sum = 0\n    for el in arr\n        if el > 0\n          \
    \  sum += el\n            el -= k\n        end\n    end\n    return sum\nend\n\
    </cell>\n<code language=julia-1.5>", "    if k == 0 \n        return arr[1] \n\
    \    else \n        return arr[1] + add_elements(arr[2:k], k-1) \nend\n</cell>\n\
    <text>\nSolution\nLet's see how we would solve this problem manually.", "    sum\
    \ = 0\n    for e in arr[k+1:end]\n        sum += e\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>", "    if k == 0 \n        return arr[1]\
    \ \n    \n    sum = 0\n    for i = 1:k\n        sum += arr[i]\n    end\n    return\
    \ sum\nend\n</cell>\n<text>\nQuestion 3\nWrite a function that returns the sum\
    \ of the elements with at most two digits from the first k elements of arr. For\
    \ example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24.", "    if k == 0 \n        return arr[1] \n    else \n   \
    \     return arr[1] + add_elements(arr[2:k], k-1) \nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the elements with at most two digits\
    \ from the first k elements of arr. For example, given arr = [111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "    sum = 0\n  \
    \  for x in arr\n        if x <= 9\n            sum += x\n        else\n     \
    \       sum += x - 10\n        end\n    end\n    return sum\nend\n</cell>\n<text>\n\
    Question 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  if k == 0 \n        return arr[1]\n    \n    sum = 0\n    for i in 1:k\n  \
    \      sum += arr[i]\n    end\n    return sum\nend\n</cell>\n<code language=julia-1.5>",
  "    if k > length(arr)\n        error(\"k must be less than or equal to length\
    \ of arr\")\n    end", "    if k > length(arr)\n        error(\"k must be less\
    \ than or equal to length of arr\")\n    end\n    \n    sum = 0\n    for i = 1:k\n\
    \        sum += arr[i]\n    end\n    \n    return sum\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the elements with at most\
    \ two digits from the first k elements of arr. For example, given arr = [111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function should return 24.", "  \
    \  if k == 0 \n        return arr[1] \n    else \n        sum = 0\n        for\
    \ i in arr[k:end]\n            sum += i\n        end\n        return sum\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the elements\
    \ with at most two digits from the first k elements of arr. Test your function\
    \ with arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4.", "    sum = 0\n   \
    \ for e in arr[k:end]\n        sum += e\n    end\n    return sum\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert add_elements([111, 21, 3, 4000, 5, 6, 7, 8,\
    \ 9], 4) == 24\n</cell>\n<text>\nQuestion 3\nWrite a function that returns the\
    \ sum of the elements with at most two digits from the first k elements of arr.\
    \ For example, given arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9] and k = 4, the function\
    \ should return 24.", "    sum = 0\n    for x in arr\n        if x < 10\n    \
    \        sum += x\n        elseif x < 100\n            sum += 10 + x\n       \
    \ elseif x < 1000\n            sum += 100 + x\n        elseif x < 10000\n    \
    \        sum += 1000 + x\n        elseif x < 100000\n            sum += 10000\
    \ + x\n        elseif x < 1000000\n            sum += 100000 + x\n        elseif\
    \ x < 10000000\n            sum += 1000000 + x\n        elseif x < 100000000\n\
    \            sum += 10000000 + x\n        elseif x < 1000000000\n            sum\
    \ += 100000000 + x\n        elseif x < 10000000000\n            sum += 1000000000\
    \ + x\n        elseif x < 100000000000\n            sum += 10000000000 + x\n \
    \       elseif x < 1000000000000\n            sum += 100000000000 + x\n      \
    \  elseif x < 10000000000000\n            sum += 1000000000000 + x\n        elseif\
    \ x < 100000000000000\n            sum += 10000000000000 + x\n        elseif x\
    \ < 1000000000000000\n            sum += 100000000000000 + x\n        elseif x\
    \ < 10000000000000000\n            sum += 1000000000000000 + x\n        elseif\
    \ x < 100000000000000000\n            sum += 10000000000000000 + x\n        elseif\
    \ x < 1000000000000000000\n            sum += 100000000000000000 + x\n       \
    \ else\n            sum += 1000000000000000000 + x\n        end\n    end\n   \
    \ return sum\nend\n</cell>\n<text>\nProblem 3\nWrite a function that returns the\
    \ sum of the digits of an integer."]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

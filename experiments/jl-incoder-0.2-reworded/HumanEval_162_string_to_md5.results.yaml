language: jl
name: HumanEval_162_string_to_md5
results:
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    Given a vector of strings, return their md5 hash equivalent vector\n\
    \    If 'text' is an empty vector, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_7gvojis.jl:15\nin expression starting at\
    \ /tmp/tmp_7gvojis.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return nothing\n    else \n        return md5(text)\nend\n</cell>\n<code\
    \ language=julia-1.0>\n\"\"\"\n    Given a string 'text', return its md5 hash\
    \ equivalent string.\n    If 'text' is an empty string, return nothing.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello\
    \ world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") ==\
    \ nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzaklrpe6.jl:14\nin expression starting at\
    \ /tmp/tmpzaklrpe6.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        Digest(text).hexdigest\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    Given a string 'text', return its md5 hash\
    \ equivalent string.\n    If 'text' is an empty string, return nothing.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello\
    \ world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") ==\
    \ nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfmpape2b.jl:15\nin expression starting at\
    \ /tmp/tmpfmpape2b.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmlk78vrw.jl:15\nin expression starting at\
    \ /tmp/tmpmlk78vrw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return nothing \n    else \n        md5 = Digest.new(\"md5\") \n    \
    \    md5.update(text) \n        return md5.digest() \nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpr8_sp7e_.jl:16\nin expression starting at\
    \ /tmp/tmpr8_sp7e_.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return Nothing\n    else \n        return md5(text)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6exfx_t3.jl:14\nin expression starting at\
    \ /tmp/tmp6exfx_t3.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return nothing\n    else \n        md5_hash = MD5()\n        md5_hash.update(text)\n\
    \        return md5_hash.digest()\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg7ouec38.jl:10\nin expression starting at /tmp/tmpg7ouec38.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = md5()\n    md5.update(text)\n\
    \    return md5.digest()\nend\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp3nan7e5o.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmp3nan7e5o.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n  UndefVarError: md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n\
    \     @ Main /tmp/tmp3nan7e5o.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nan7e5o.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nan7e5o.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp3nan7e5o.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == nothing\n  UndefVarError: md5 not defined\n  Stacktrace:\n\
    \   [1] string_to_md5(text::String)\n     @ Main /tmp/tmp3nan7e5o.jl:9\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nan7e5o.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nan7e5o.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp3nan7e5o.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\n  UndefVarError:\
    \ md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp3nan7e5o.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nan7e5o.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nan7e5o.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp3nan7e5o.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\"\n  UndefVarError:\
    \ md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp"
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return Nothing\n    else \n        md5 = md5(text)\n        return\
    \ md5\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"\
    3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"\
    A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"password\"\
    ) == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7h7wp9s3.jl:10\nin expression starting at /tmp/tmp7h7wp9s3.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnxes1rq3.jl:15\nin expression starting at\
    \ /tmp/tmpnxes1rq3.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its sha1 hash equivalent string.\n \
    \   If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp737l4r3z.jl:15\nin expression starting at\
    \ /tmp/tmp737l4r3z.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string as input and returns the md5\
    \ hash equivalent of the string converted to lowercase. For example, the string\
    \ \"Hello World\" would return \"a94a8fe5ccb19ba61c4c0873d391e987982fbbd3\".\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph55716rc.jl:15\nin expression starting at\
    \ /tmp/tmph55716rc.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = md5()\n    md5.update(text)\n\
    \    return md5.digest()\nend\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp3nan7e5o.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmp3nan7e5o.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n  UndefVarError: md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n\
    \     @ Main /tmp/tmp3nan7e5o.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nan7e5o.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nan7e5o.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp3nan7e5o.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == nothing\n  UndefVarError: md5 not defined\n  Stacktrace:\n\
    \   [1] string_to_md5(text::String)\n     @ Main /tmp/tmp3nan7e5o.jl:9\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nan7e5o.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nan7e5o.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp3nan7e5o.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\n  UndefVarError:\
    \ md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp3nan7e5o.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nan7e5o.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nan7e5o.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp3nan7e5o.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\"\n  UndefVarError:\
    \ md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp"
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnxes1rq3.jl:15\nin expression starting at\
    \ /tmp/tmpnxes1rq3.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7tuzft5r.jl:15\nin expression starting at\
    \ /tmp/tmp7tuzft5r.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a vector of strings, return the md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa2rxurey.jl:15\nin expression starting at\
    \ /tmp/tmpa2rxurey.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwjx6ts7i.jl:15\nin expression starting at\
    \ /tmp/tmpwjx6ts7i.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp88w9nf_f.jl:15\nin expression starting at\
    \ /tmp/tmp88w9nf_f.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return Nothing\n    else \n        md5(text)\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    Given a string 'text', return its sha1\
    \ hash equivalent string.\n    If 'text' is an empty string, return nothing.\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpstlr0cvp.jl:10\nin expression starting at /tmp/tmpstlr0cvp.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return nothing\n    else \n        md5 = Digest.new(\"md5\")\n \
    \       md5.update(text)\n        return md5.digest().hex\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpa2j2awvg.jl:10\nin expression starting at /tmp/tmpa2j2awvg.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<text>\n\
    Exercise: Write a function that takes a string and returns the md5 hash of that\
    \ string. Test it on some strings. What happens if you give it an empty string?\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxe7v10vm.jl:15\nin expression starting at\
    \ /tmp/tmpxe7v10vm.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<text>\n\
    Exercise\nWrite a function that takes a string and returns the md5 hash equivalent\
    \ of the string. \nWrite a function that takes a string and returns the md5 hash\
    \ equivalent of the string.\nWrite a function that takes a string and returns\
    \ the md5 hash equivalent of the string.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_g1qzmva.jl:15\nin expression starting at\
    \ /tmp/tmp_g1qzmva.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string and returns the md5 hash equivalent\
    \ of the string in hexadecimal.\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpswtn0ayv.jl:15\nin expression starting at\
    \ /tmp/tmpswtn0ayv.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = Digest.new(\"\
    md5\")\n    md5.update(text)\n    return md5.digest().hex\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\"\
    ) == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\
    \t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"\
    password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpgmzyncgn.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpgmzyncgn.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n  UndefVarError: Digest not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n\
    \     @ Main /tmp/tmpgmzyncgn.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgmzyncgn.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgmzyncgn.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpgmzyncgn.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == nothing\n  UndefVarError: Digest not defined\n  Stacktrace:\n\
    \   [1] string_to_md5(text::String)\n     @ Main /tmp/tmpgmzyncgn.jl:9\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgmzyncgn.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgmzyncgn.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpgmzyncgn.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\n  UndefVarError:\
    \ Digest not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n    \
    \ @ Main /tmp/tmpgmzyncgn.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgmzyncgn.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgmzyncgn.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpgmzyncgn.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\"\n  UndefVarError:\
    \ Digest not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n    \
    \ @ M"
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return Nothing\n    else \n        md5_hash = md5(text)\n      \
    \  return md5_hash\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\"\
    ) == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\
    \t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"\
    password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn0khmt4b.jl:10\nin expression starting at /tmp/tmpn0khmt4b.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return Nothing\n    else \n        digest = md5(text) \n       \
    \ return digest.hexdigest() \nend\n</cell>\n<code language=julia-1.4>\nusing Test\n\
    \n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\"\
    ) == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\
    \t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"\
    password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpdefhouf3.jl:10\nin expression starting at /tmp/tmpdefhouf3.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = digest.MD5()\n\
    \    md5.update(text)\n    return md5.digest()\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpxsed_pcz.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxsed_pcz.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n  UndefVarError: digest not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n\
    \     @ Main /tmp/tmpxsed_pcz.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxsed_pcz.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxsed_pcz.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxsed_pcz.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == nothing\n  UndefVarError: digest not defined\n  Stacktrace:\n\
    \   [1] string_to_md5(text::String)\n     @ Main /tmp/tmpxsed_pcz.jl:9\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxsed_pcz.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxsed_pcz.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxsed_pcz.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\n  UndefVarError:\
    \ digest not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n    \
    \ @ Main /tmp/tmpxsed_pcz.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxsed_pcz.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxsed_pcz.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxsed_pcz.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\"\n  UndefVarError:\
    \ digest not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n    \
    \ @ M"
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnxes1rq3.jl:15\nin expression starting at\
    \ /tmp/tmpnxes1rq3.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnxes1rq3.jl:15\nin expression starting at\
    \ /tmp/tmpnxes1rq3.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.1>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmputqndzsd.jl:15\nin expression starting at\
    \ /tmp/tmputqndzsd.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwjx6ts7i.jl:15\nin expression starting at\
    \ /tmp/tmpwjx6ts7i.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = MD5()\n    md5.update(text)\n\
    \    return md5.digest()\nend\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmppshiqkl0.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmppshiqkl0.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n  UndefVarError: MD5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n\
    \     @ Main /tmp/tmppshiqkl0.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppshiqkl0.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppshiqkl0.jl:17\ntest set:\
    \ Error During Test at /tmp/tmppshiqkl0.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == nothing\n  UndefVarError: MD5 not defined\n  Stacktrace:\n\
    \   [1] string_to_md5(text::String)\n     @ Main /tmp/tmppshiqkl0.jl:9\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppshiqkl0.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppshiqkl0.jl:17\ntest set:\
    \ Error During Test at /tmp/tmppshiqkl0.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\n  UndefVarError:\
    \ MD5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmppshiqkl0.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppshiqkl0.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppshiqkl0.jl:17\ntest set:\
    \ Error During Test at /tmp/tmppshiqkl0.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\"\n  UndefVarError:\
    \ MD5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp"
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = Digest.new(\"\
    md5\")\n    md5.update(text)\n    return md5.digest().hex\nend\n</cell>\n<code\
    \ language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\n\
    string_to_md5(\"\")\n</cell>\n<text>\nExercise\nWrite a function that takes a\
    \ string and returns the md5 hash equivalent of the string in hexadecimal format.\
    \ For example, string_to_hex(\"Hello world\") should return \"3e25960a79dbc69b674cd4ec67a72c62\"\
    .\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpywtnmcxr.jl:13\nin expression starting at\
    \ /tmp/tmpywtnmcxr.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string and returns a list of all unique\
    \ characters in that string. For example, the string \"Hello world\" would return\
    \ [\"H\", \"e\", \"l\", \"l\", \"o\", \" \", \"w\", \"o\", \"r\", \"l\", \"d\"\
    ]. Make sure to handle non-string inputs gracefully.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpia7rt0b6.jl:15\nin expression starting at\
    \ /tmp/tmpia7rt0b6.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return Nothing\n    else \n        hash = md5(text)\n        return hash.hexdigest()\n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmou0fd2b.jl:16\nin expression starting at\
    \ /tmp/tmpmou0fd2b.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</code>\n<|/ a tags=julia,md5\
    \ |>\n<| c |>\nI believe that `md5` returns a `String`, not a `String` of length\
    \ `16`. Also, `md5` returns a `String`, not a `String` of length `16`.\n<|/ c\
    \ |>\n<| c |>\nI believe that `md5` returns a `String`, not a `String` of length\
    \ `16`. Also, `md5` returns a `String`, not a `String` of length `16`.\n<|/ c\
    \ |>\n<| c |>\nThe `md5` function returns a `String` of length 16. `md5(\"Hello\
    \ world\")` returns `\"3e25960a79dbc69b674cd4ec67a72c62\"`.\n<|/ c |>\n<| c |>\n\
    Yes, but `md5` returns a `String` of length 16. `md5(\"Hello world\")` returns\
    \ `\"3e25960a79dbc69b674cd4ec67a72c62\"`.\n<|/ c |>\n<| c |>\nYes, but `md5` returns\
    \ a `String` of length 16. `md5(\"Hello world\")` returns `\"3e25960a79dbc69b674cd4ec67a72c62\"\
    `.\n<|/ c |>\n<| a tags=julia,md5 |>\nThe accepted answer does not work for me\
    \ in Julia 1.5.1. The following code works:\n<code>\nusing MD5\nusing Test\n\n\
    @testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\"\
    ) == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\
    \t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"\
    password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq35kh2wi.jl:15\nin expression starting at\
    \ /tmp/tmpq35kh2wi.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return nothing\n    else \n        md5hash = MD5()\n        md5hash.update(text)\n\
    \        return md5hash.hexdigest()\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp4pa1ccng.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp4pa1ccng.jl:1\n\
    in expression starting at /tmp/tmp4pa1ccng.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.1>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzn_8dald.jl:15\nin expression starting at\
    \ /tmp/tmpzn_8dald.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return Nothing\n    else\n        md5 = Digest.new(\"md5\")\n  \
    \      md5.update(text)\n        return md5.digest().hex\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvk15q0it.jl:10\nin expression starting at /tmp/tmpvk15q0it.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    md5(text::String)\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9hr47svo.jl:15\nin expression starting at\
    \ /tmp/tmp9hr47svo.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return Nothing\n    else \n        md5 = digest(text, \"md5\")\n\
    \        return md5\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\"\
    ) == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\
    \t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"\
    password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp03fvyxpx.jl:10\nin expression starting at /tmp/tmp03fvyxpx.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</code>\n<|/ a dscore=2\
    \ |>\n<| a dscore=2 |>\nThe accepted answer does not work anymore in Julia 1.5.\n\
    The correct solution is to use md5() from Digests package:\n<code>\nusing Digests\n\
    md5(\"Hello world\")\n</code>\n<|/ a tags=julia |>\n<| a |>\nThe accepted answer\
    \ does not work anymore in Julia 1.5.\nThe correct solution is to use md5() from\
    \ Digests package:\n<code>\nusing Digests\nmd5(\"Hello world\")\n</code>\n<|/\
    \ a dscore=1 tags=julia |>\n<| a dscore=0 |>\nIn Julia 1.5 you can use the md5\
    \ function from the Digests package:\n<code>\njulia> using Digests\nusing Test\n\
    \n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\"\
    ) == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\
    \t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"\
    password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplk5w4wn8.jl:15\nin expression starting at\
    \ /tmp/tmplk5w4wn8.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return nothing \n    else \n        md5_hash = digest.MD5()\n  \
    \      md5_hash.update(text)\n        return md5_hash.digest()\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=juli\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgr6nm2tk.jl:10\nin expression starting at /tmp/tmpgr6nm2tk.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp88w9nf_f.jl:15\nin expression starting at\
    \ /tmp/tmp88w9nf_f.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp88w9nf_f.jl:15\nin expression starting at\
    \ /tmp/tmp88w9nf_f.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwjx6ts7i.jl:15\nin expression starting at\
    \ /tmp/tmpwjx6ts7i.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its sha1 hash equivalent string.\n \
    \   If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp737l4r3z.jl:15\nin expression starting at\
    \ /tmp/tmp737l4r3z.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnxes1rq3.jl:15\nin expression starting at\
    \ /tmp/tmpnxes1rq3.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return Nothing\n    else \n        md5 = Digests.md5(text)\n        return\
    \ md5\n    end\nend\n</cell>\n<code language=julia-1.3>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"\
    3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"\
    A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"password\"\
    ) == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl2h0nok0.jl:16\nin expression starting at\
    \ /tmp/tmpl2h0nok0.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</code>\n<|/ a tags=julia,md5\
    \ |>\n<| a dscore=0 |>\nThe answer by is correct, but I wanted to add some more\
    \ information to help others who are trying to understand this type of problem.\n\
    The MD5 algorithm is defined as:\nusing Test\n\n@testset begin\n\ncandidate =\
    \ string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8qyw5osw.jl:15\nin expression starting at\
    \ /tmp/tmp8qyw5osw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return Nothing \n    else \n        digest = digest.MD5()\n        digest.update(text)\n\
    \        return digest.hexdigest()\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuim3_ins.jl:17\nin expression starting at\
    \ /tmp/tmpuim3_ins.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = MD5()\n    md5.update(text)\n\
    \    return md5.digest()\nend\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmppshiqkl0.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmppshiqkl0.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n  UndefVarError: MD5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n\
    \     @ Main /tmp/tmppshiqkl0.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppshiqkl0.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppshiqkl0.jl:17\ntest set:\
    \ Error During Test at /tmp/tmppshiqkl0.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == nothing\n  UndefVarError: MD5 not defined\n  Stacktrace:\n\
    \   [1] string_to_md5(text::String)\n     @ Main /tmp/tmppshiqkl0.jl:9\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppshiqkl0.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppshiqkl0.jl:17\ntest set:\
    \ Error During Test at /tmp/tmppshiqkl0.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\n  UndefVarError:\
    \ MD5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmppshiqkl0.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppshiqkl0.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppshiqkl0.jl:17\ntest set:\
    \ Error During Test at /tmp/tmppshiqkl0.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\"\n  UndefVarError:\
    \ MD5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp"
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvqvbshw9.jl:15\nin expression starting at\
    \ /tmp/tmpvqvbshw9.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the md5 hash equivalent of the string in hexadecimal.\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjixguou1.jl:15\nin expression starting at\
    \ /tmp/tmpjixguou1.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = Digest.new(\"\
    md5\")\n    md5.update(text)\n    return md5.digest().hex()\nend\n</cell>\n<code\
    \ language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"\")\n</cell>\n<text>\nExercise\nWrite a function that takes a\
    \ string and returns the md5 hash of that string as a hexadecimal string.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello\
    \ world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") ==\
    \ nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfp6vn7c9.jl:13\nin expression starting at\
    \ /tmp/tmpfp6vn7c9.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmlk78vrw.jl:15\nin expression starting at\
    \ /tmp/tmpmlk78vrw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = MD5()\n    md5.update(text)\n\
    \    return md5.digest()\nend\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmppshiqkl0.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmppshiqkl0.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n  UndefVarError: MD5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n\
    \     @ Main /tmp/tmppshiqkl0.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppshiqkl0.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppshiqkl0.jl:17\ntest set:\
    \ Error During Test at /tmp/tmppshiqkl0.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == nothing\n  UndefVarError: MD5 not defined\n  Stacktrace:\n\
    \   [1] string_to_md5(text::String)\n     @ Main /tmp/tmppshiqkl0.jl:9\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppshiqkl0.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppshiqkl0.jl:17\ntest set:\
    \ Error During Test at /tmp/tmppshiqkl0.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\n  UndefVarError:\
    \ MD5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmppshiqkl0.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppshiqkl0.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppshiqkl0.jl:17\ntest set:\
    \ Error During Test at /tmp/tmppshiqkl0.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\"\n  UndefVarError:\
    \ MD5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp"
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    \")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.5\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqvbu7iq1.jl:15\nin expression starting at\
    \ /tmp/tmpqvbu7iq1.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp88w9nf_f.jl:15\nin expression starting at\
    \ /tmp/tmp88w9nf_f.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnxes1rq3.jl:15\nin expression starting at\
    \ /tmp/tmpnxes1rq3.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1chqbjdj.jl:15\nin expression starting at\
    \ /tmp/tmp1chqbjdj.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a vector of strings 'texts', return their md5 hash equivalent\
    \ vectors.\n    If 'texts' is an empty vector, return nothing.\nusing Test\n\n\
    @testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\"\
    ) == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\
    \t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"\
    password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj4a_q2bq.jl:15\nin expression starting at\
    \ /tmp/tmpj4a_q2bq.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return Nothing\n    else \n        md5(text) \n    end\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    Given a string 'text', return its md5 hash\
    \ equivalent string.\n    If 'text' is an empty string, return nothing.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello\
    \ world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") ==\
    \ nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn9zunlho.jl:10\nin expression starting at /tmp/tmpn9zunlho.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.1>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzn_8dald.jl:15\nin expression starting at\
    \ /tmp/tmpzn_8dald.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return Nothing\n    else \n        md5(text) \n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9dz7_srf.jl:10\nin expression starting at /tmp/tmp9dz7_srf.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        Digest(text).hexdigest\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"\")\n</cell>\n<text>\nExercise\nWrite a function that takes a\
    \ string and returns the md5 hash equivalent of the string in hexadecimal.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello\
    \ world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") ==\
    \ nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_1nhh6ve.jl:15\nin expression starting at\
    \ /tmp/tmp_1nhh6ve.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</code>\n<|/ a tags=julia,md5\
    \ |>\n<| c |>\nI didn't know about this package. Thanks for sharing!\n<|/ c |>\n\
    <| a tags=julia,md5 |>\nFor those who are looking for a way to compute md5 hash\
    \ in Julia, here is a simple solution:\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2cpgbewp.jl:15\nin expression starting at\
    \ /tmp/tmp2cpgbewp.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp88w9nf_f.jl:15\nin expression starting at\
    \ /tmp/tmp88w9nf_f.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = md5(text)\n\
    \    if md5 == \"\"\n        return Nothing\n    else\n        return md5\n  \
    \  end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    Given a string 'text',\
    \ return its md5 hash equivalent string.\n    If 'text' is an empty string, return\
    \ nothing.\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbj_b_6z_.jl:16\nin expression starting at\
    \ /tmp/tmpbj_b_6z_.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = MD5()\n    md5.update(text)\n\
    \    return md5.digest()\nend\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmppshiqkl0.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmppshiqkl0.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n  UndefVarError: MD5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n\
    \     @ Main /tmp/tmppshiqkl0.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppshiqkl0.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppshiqkl0.jl:17\ntest set:\
    \ Error During Test at /tmp/tmppshiqkl0.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == nothing\n  UndefVarError: MD5 not defined\n  Stacktrace:\n\
    \   [1] string_to_md5(text::String)\n     @ Main /tmp/tmppshiqkl0.jl:9\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppshiqkl0.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppshiqkl0.jl:17\ntest set:\
    \ Error During Test at /tmp/tmppshiqkl0.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\n  UndefVarError:\
    \ MD5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmppshiqkl0.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppshiqkl0.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppshiqkl0.jl:17\ntest set:\
    \ Error During Test at /tmp/tmppshiqkl0.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\"\n  UndefVarError:\
    \ MD5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp"
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = md5()\n    md5.update(text)\n\
    \    return md5.digest()\nend\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp3nan7e5o.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmp3nan7e5o.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n  UndefVarError: md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n\
    \     @ Main /tmp/tmp3nan7e5o.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nan7e5o.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nan7e5o.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp3nan7e5o.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == nothing\n  UndefVarError: md5 not defined\n  Stacktrace:\n\
    \   [1] string_to_md5(text::String)\n     @ Main /tmp/tmp3nan7e5o.jl:9\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nan7e5o.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nan7e5o.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp3nan7e5o.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\n  UndefVarError:\
    \ md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp3nan7e5o.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nan7e5o.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nan7e5o.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp3nan7e5o.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\"\n  UndefVarError:\
    \ md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp"
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"\
    3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"\
    A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"password\"\
    ) == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8ns_yw6o.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8ns_yw6o.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n  UndefVarError: md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n\
    \     @ Main /tmp/tmp8ns_yw6o.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8ns_yw6o.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8ns_yw6o.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8ns_yw6o.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == nothing\n  MethodError: Cannot `convert` an object of type\
    \ Type{Nothing} to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] convert(#unused#::Type{Union{Nothing, String}},\
    \ x::Type)\n     @ Base ./some.jl:36\n   [2] string_to_md5(text::String)\n   \
    \  @ Main /tmp/tmp8ns_yw6o.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8ns_yw6o.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8ns_yw6o.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8ns_yw6o.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\n  UndefVarError:\
    \ md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp8ns_yw6o.jl:12\n   [2] macro expansion\n     "
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = md5()\n    md5.update(text)\n\
    \    return md5.digest()\nend\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"\")\n</cell>\n\
    <code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.0>\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpax7jly7h.jl:13\nin expression starting at\
    \ /tmp/tmpax7jly7h.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</code>\n<|/ a tags=julia,hash\
    \ |>\n<| c |>\nThe `md5` function has been deprecated in favor of the `Digest`\
    \ module.\n<|/ c |>\n<| a tags=julia,hash |>\nIn Julia v0.7 you can use the md5\
    \ function from the Digest module:\n<code>\njulia> using Digest\nusing Test\n\n\
    @testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\"\
    ) == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\
    \t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"\
    password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn3n48m1n.jl:15\nin expression starting at\
    \ /tmp/tmpn3n48m1n.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp88w9nf_f.jl:15\nin expression starting at\
    \ /tmp/tmp88w9nf_f.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string and returns the md5 hash equivalent\
    \ of the string. \nWrite a function that takes a string and returns the md5 hash\
    \ equivalent of the string. \nWrite a function that takes a string and returns\
    \ the md5 hash equivalent of the string. \nWrite a function that takes a string\
    \ and returns the md5 hash equivalent of the string. \nWrite a function that takes\
    \ a string and returns the md5 hash equivalent of the string. \nWrite a function\
    \ that takes a string and returns the md5 hash equivalent of the string. \nWrite\
    \ a function that takes a string and returns the md5 hash equivalent of the string.\
    \ \nWrite a function that takes a string and returns the md5 hash equivalent of\
    \ the string. \nWrite a function that takes a string and returns the md5 hash\
    \ equivalent of the string. \nWrite a function that takes a string and returns\
    \ the md5 hash equivalent of the string. \nWrite a function that takes a string\
    \ and returns the md5 hash equivalent of the string. \nWrite a function that takes\
    \ a string and returns the md5 hash equivalent of the string. \nWrite a function\
    \ that takes a string and returns the md5 hash equivalent of the string. \nWrite\
    \ a function that takes a string and returns the md5 hash equivalent of the string.\
    \ \nWrite a function that takes a string and returns the md5 hash equivalent of\
    \ the string. \nWrite a function that takes a string and returns the md5 hash\
    \ equivalent of the string. \nWrite a function that takes a string and returns\
    \ the md5 hash equivalent of the string. \nWrite a function that takes a string\
    \ and returns the md5 hash equivalent of the string. \nWrite a function that takes\
    \ a string and returns the md5 hash equivalent of the string. \nWrite a function\
    \ that takes a string and returns the md5 hash equivalent of the string. \nWrite\
    \ a function that takes a string and returns the md5 hash equivalent of the string.\
    \ \nWrite a function that takes a string and returns the md5 hash equivalent of\
    \ the string. \nWrite a function that takes a string and returns the md5 hash\
    \ equivalent of the string. \nWrite a function that takes a string and returns\
    \ the md5 hash equivalent of the string. \nWrite a function that takes a string\
    \ and returns the md5 hash equivalent of the string. \nWrite a function that takes\
    \ a string and returns the md5 hash equivalent of the string. \nWrite a function\
    \ that takes a string and returns the md5 hash equivalent of the string. \nWrite\
    \ a function that takes a string and returns the md5 hash equivalent of the string.\
    \ \nWrite a function that takes a string and returns the md5 hash equivalent of\
    \ the string. \nWrite a function that takes a string and returns the md5 hash\
    \ equivalent of the string. \nWrite a function that takes a string and returns\
    \ the md5 hash equivalent of the string. \nWrite a function that takes a string\
    \ and returns the md5 hash equivalent of the string. \nWrite a function that \n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpw11rm5qg.jl:15\nin expression starting at\
    \ /tmp/tmpw11rm5qg.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    \")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the md5 hash equivalent of its lowercase version.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppwgwvu4a.jl:15\nin expression starting at\
    \ /tmp/tmppwgwvu4a.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnba6b2w9.jl:15\nin expression starting at\
    \ /tmp/tmpnba6b2w9.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return Nothing\n    else \n        digest = Digest(MD5())\n        digest.update(text)\n\
    \        return digest.hexdigest()\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj592c_jo.jl:16\nin expression starting at\
    \ /tmp/tmpj592c_jo.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return Nothing \n    else \n        md5hash = digests.MD5()\n       \
    \ md5hash.update(text)\n        return md5hash.digest()\nend\n</cell>\n<code language=julia-1.1>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"\
    \")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.1>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.1>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.1>\nstring_to_\nusing Test\n\n\
    @testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\"\
    ) == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\
    \t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"\
    password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps6x_3dlu.jl:16\nin expression starting at\
    \ /tmp/tmps6x_3dlu.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return Nothing\n    else \n        md5 = Digest.new(\"md5\")\n \
    \       md5.update(text)\n        return md5.digest().hex\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"\n    Given a string 'text', return its md5 hash\
    \ equivalent string.\n    If 'text' is an empty string, return nothing.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello\
    \ world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") ==\
    \ nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp2e7m9bf6.jl:10\nin expression starting at /tmp/tmp2e7m9bf6.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return Nothing \n    else \n        md5 = Digest.new(\"md5\") \n    \
    \    md5.update(text) \n        return md5.digest() \nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"\
    3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"\
    A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"password\"\
    ) == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp3c0u9_sk.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp3c0u9_sk.jl:1\n\
    in expression starting at /tmp/tmp3c0u9_sk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp88w9nf_f.jl:15\nin expression starting at\
    \ /tmp/tmp88w9nf_f.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp4vg570_.jl:15\nin expression starting at\
    \ /tmp/tmpp4vg570_.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return Nothing \n    else \n        md5 = Digest.new(\"md5\") \n\
    \        md5.update(text) \n        return md5.digest() \nend\n</cell>\n<code\
    \ language=julia-1.4>\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpad6ug1ij.jl:10\nin expression starting at /tmp/tmpad6ug1ij.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeycxpbw8.jl:15\nin expression starting at\
    \ /tmp/tmpeycxpbw8.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp88w9nf_f.jl:15\nin expression starting at\
    \ /tmp/tmp88w9nf_f.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnxes1rq3.jl:15\nin expression starting at\
    \ /tmp/tmpnxes1rq3.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a vector of strings 'texts', return their md5 hash equivalent\n\
    \    strings. \n    If 'texts' is an empty vector, return nothing.\nusing Test\n\
    \n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\"\
    ) == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\
    \t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"\
    password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp40kb7lpa.jl:15\nin expression starting at\
    \ /tmp/tmp40kb7lpa.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwjx6ts7i.jl:15\nin expression starting at\
    \ /tmp/tmpwjx6ts7i.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<text>\n\
    Exercise\nWrite a function that takes in a string and returns the md5 hash equivalent\
    \ of the string.\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxfn9wig9.jl:15\nin expression starting at\
    \ /tmp/tmpxfn9wig9.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps9ukcmq1.jl:15\nin expression starting at\
    \ /tmp/tmps9ukcmq1.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</code>\n<|/ a tags=julia,md5,hash\
    \ |>\n<| a dscore=2 |>\nThe accepted answer does not work for me. \nThe correct\
    \ answer is:\n<code>\nusing MD5\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptadb3pmy.jl:15\nin expression starting at\
    \ /tmp/tmptadb3pmy.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</code>\n<|/ a tags=julia\
    \ |>\n<| c |>\nThanks for your answer. I'm sorry I didn't make it clear that I\
    \ was looking for a solution that doesn't require installing any packages. I edited\
    \ my question to reflect this.\n<|/ c |>\n<| c |>\nI edited my answer to include\
    \ a solution that does not require any packages.\n<|/ c |>\n<| a tags=julia |>\n\
    The answer by is correct and should be accepted as the correct answer. \nHowever,\
    \ I wanted to add that you can also use the md5sum function from the FileIO package:\n\
    <code>\njulia> using FileIO\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdtqx4v82.jl:15\nin expression starting at\
    \ /tmp/tmpdtqx4v82.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return Nothing\n    else \n        digest = Digest.new(\"md5\")\n   \
    \     digest.update(text)\n        return digest.hexdigest() \nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprd8s9q9u.jl:16\nin expression starting at\
    \ /tmp/tmprd8s9q9u.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return Nothing \n    else \n        digest = digest(text) \n        return\
    \ digest\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"\
    3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"\
    A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"password\"\
    ) == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgr_od0sk.jl:16\nin expression starting at\
    \ /tmp/tmpgr_od0sk.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return nothing \n    else \n        hash = MD5()\n        hash.update(text)\n\
    \        return hash.digest() \nend\n</cell>\n<code language=julia-1.3>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello\
    \ world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") ==\
    \ nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyoq631lt.jl:16\nin expression starting at\
    \ /tmp/tmpyoq631lt.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return nothing\n    else \n        md5 = Digest.new(\"md5\")\n \
    \       md5.update(text)\n        return md5.digest\n    end\nend\n</code>\n<|/\
    \ a tags=julia,md5,hash |>\n<| a dscore=1 |>\nI wrote a package for this: https://github.com/jamiewilson/MD5\n\
    <code>\nusing MD5\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7kl3t7s5.jl:10\nin expression starting at /tmp/tmp7kl3t7s5.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return Nothing \n    else \n        digest = digest.MD5() \n        digest.update(text)\
    \ \n        return digest.hexdigest() \nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    Given a string 'text', return its sha1 hash equivalent string.\n \
    \   If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl4hajk8m.jl:16\nin expression starting at\
    \ /tmp/tmpl4hajk8m.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"\
    3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"\
    A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"password\"\
    ) == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp8ns_yw6o.jl:17

    '
  stdout: "test set: Error During Test at /tmp/tmp8ns_yw6o.jl:20\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n  UndefVarError: md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n\
    \     @ Main /tmp/tmp8ns_yw6o.jl:12\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8ns_yw6o.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8ns_yw6o.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8ns_yw6o.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == nothing\n  MethodError: Cannot `convert` an object of type\
    \ Type{Nothing} to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] convert(#unused#::Type{Union{Nothing, String}},\
    \ x::Type)\n     @ Base ./some.jl:36\n   [2] string_to_md5(text::String)\n   \
    \  @ Main /tmp/tmp8ns_yw6o.jl:10\n   [3] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8ns_yw6o.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8ns_yw6o.jl:19\ntest set:\
    \ Error During Test at /tmp/tmp8ns_yw6o.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\n  UndefVarError:\
    \ md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp8ns_yw6o.jl:12\n   [2] macro expansion\n     "
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeycxpbw8.jl:15\nin expression starting at\
    \ /tmp/tmpeycxpbw8.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnba6b2w9.jl:15\nin expression starting at\
    \ /tmp/tmpnba6b2w9.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnxes1rq3.jl:15\nin expression starting at\
    \ /tmp/tmpnxes1rq3.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return Nothing \n    else \n        md5(text) \n    end\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"\n    Given a string 'text', return its md5 hash\
    \ equivalent string.\n    If 'text' is an empty string, return nothing.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello\
    \ world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") ==\
    \ nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmplhmpxpl8.jl:10\nin expression starting at /tmp/tmplhmpxpl8.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return Nothing\n    else \n        hash = md5(text)\n        return hash.hexdigest()\
    \ \nend\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwed_v5k0.jl:8\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwed_v5k0.jl:1\n\
    in expression starting at /tmp/tmpwed_v5k0.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a string as input and returns the number\
    \ of characters in the string.\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmpggbe6o.jl:15\nin expression starting at\
    \ /tmp/tmpmpggbe6o.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnxes1rq3.jl:15\nin expression starting at\
    \ /tmp/tmpnxes1rq3.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return Nothing \n    else \n        md5 = Digest.new(\"md5\")\n\
    \        md5.update(text)\n        return md5.digest() \nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"\
    3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"\
    A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"password\"\
    ) == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_xn64vrs.jl:10\nin expression starting at /tmp/tmp_xn64vrs.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return nothing \n    else \n        md5 = Digest.new(\"md5\") \n    \
    \    md5.update(text) \n        return md5.digest \nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2q7pe7oh.jl:16\nin expression starting at\
    \ /tmp/tmp2q7pe7oh.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a vector of strings 'texts', return a vector of their md5 hash\
    \ equivalent strings.\n    If 'texts' is an empty vector, return an empty vector.\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0wtfcw6y.jl:15\nin expression starting at\
    \ /tmp/tmp0wtfcw6y.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a binary 'data' string, return its md5 hash equivalent string.\n\
    \    If 'data' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpzyw09g1q.jl:15\nin expression starting at\
    \ /tmp/tmpzyw09g1q.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7tuzft5r.jl:15\nin expression starting at\
    \ /tmp/tmp7tuzft5r.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return Nothing\n    else \n        md5 = Digest.new(\"md5\")\n      \
    \  md5.update(text)\n        return md5.digest().hex()\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\n    Given a string 'text', return its sha1\
    \ hash equivalent string.\n    If 'text' is an empty string, return nothing.\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgny9e8p8.jl:17\nin expression starting at\
    \ /tmp/tmpgny9e8p8.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwjx6ts7i.jl:15\nin expression starting at\
    \ /tmp/tmpwjx6ts7i.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return nothing \n        else return md5(text) \n    end\nend\n\
    </cell>\n<code language=julia-1.1>\n\"\"\"\n    Given a string 'text', return\
    \ its md5 hash equivalent string.\n    If 'text' is an empty string, return nothing.\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxpdm19ki.jl:10\nin expression starting at /tmp/tmpxpdm19ki.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return Nothing \n    else \n        digest = Digest(MD5()) \n       \
    \ digest.update(text) \n        return digest.hexdigest \nend\n</cell>\n<code\
    \ language=julia-1.0>\nstring_to_md5(\"Hello world\")\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that takes a string and returns the md5 hash of that string.\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpipbvlb9k.jl:16\nin expression starting at\
    \ /tmp/tmpipbvlb9k.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = MD5()\n    md5.update(text)\n\
    \    return md5.digest()\nend\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmppshiqkl0.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmppshiqkl0.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n  UndefVarError: MD5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n\
    \     @ Main /tmp/tmppshiqkl0.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppshiqkl0.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppshiqkl0.jl:17\ntest set:\
    \ Error During Test at /tmp/tmppshiqkl0.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == nothing\n  UndefVarError: MD5 not defined\n  Stacktrace:\n\
    \   [1] string_to_md5(text::String)\n     @ Main /tmp/tmppshiqkl0.jl:9\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppshiqkl0.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppshiqkl0.jl:17\ntest set:\
    \ Error During Test at /tmp/tmppshiqkl0.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\n  UndefVarError:\
    \ MD5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmppshiqkl0.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppshiqkl0.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppshiqkl0.jl:17\ntest set:\
    \ Error During Test at /tmp/tmppshiqkl0.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\"\n  UndefVarError:\
    \ MD5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp"
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return Nothing\n    else\n        md5 = Digest.new(\"md5\")\n  \
    \      md5.update(text)\n        return md5.digest().hex\n    end\nend\n</code>\n\
    <|/ a tags=julia |>\n<| a dscore=2 |>\nThe accepted answer doesn't work for me\
    \ in Julia 1.5.1\n<code>\njulia> using Digest\nusing Test\n\n@testset begin\n\n\
    candidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp4iria5x8.jl:10\nin expression starting at /tmp/tmp4iria5x8.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        Digest(text).hexdigest\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given a binary 'data' of length $N, return\
    \ its md5 hash equivalent string.\n    If 'data' is an empty string, return nothing.\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1zts53or.jl:15\nin expression starting at\
    \ /tmp/tmp1zts53or.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return Nothing\n    else \n        md5(text) \n    end\nend\n</cell>\n\
    <code language=julia-1.4>\n\"\"\"\n    md5_of_file(filename::AbstractString)\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpg0ibzwls.jl:10\nin expression starting at /tmp/tmpg0ibzwls.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.1>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmputqndzsd.jl:15\nin expression starting at\
    \ /tmp/tmputqndzsd.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = md5()\n    md5.update(text)\n\
    \    return md5.digest()\nend\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp3nan7e5o.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmp3nan7e5o.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n  UndefVarError: md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n\
    \     @ Main /tmp/tmp3nan7e5o.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nan7e5o.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nan7e5o.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp3nan7e5o.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == nothing\n  UndefVarError: md5 not defined\n  Stacktrace:\n\
    \   [1] string_to_md5(text::String)\n     @ Main /tmp/tmp3nan7e5o.jl:9\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nan7e5o.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nan7e5o.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp3nan7e5o.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\n  UndefVarError:\
    \ md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp3nan7e5o.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nan7e5o.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nan7e5o.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp3nan7e5o.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\"\n  UndefVarError:\
    \ md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp"
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = md5()\n    md5.update(text)\n\
    \    return md5.digest()\nend\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp3nan7e5o.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmp3nan7e5o.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n  UndefVarError: md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n\
    \     @ Main /tmp/tmp3nan7e5o.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nan7e5o.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nan7e5o.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp3nan7e5o.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == nothing\n  UndefVarError: md5 not defined\n  Stacktrace:\n\
    \   [1] string_to_md5(text::String)\n     @ Main /tmp/tmp3nan7e5o.jl:9\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nan7e5o.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nan7e5o.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp3nan7e5o.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\n  UndefVarError:\
    \ md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp3nan7e5o.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nan7e5o.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nan7e5o.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp3nan7e5o.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\"\n  UndefVarError:\
    \ md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp"
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return Nothing \n    else \n        digest = Digest.new(\"md5\") \n \
    \       digest.update(text) \n        return digest.hexdigest \nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"\n    Given a string 'text', return its sha1\
    \ hash equivalent string.\n    If 'text' is an empty string, return nothing.\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6cenr1uq.jl:16\nin expression starting at\
    \ /tmp/tmp6cenr1uq.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp88w9nf_f.jl:15\nin expression starting at\
    \ /tmp/tmp88w9nf_f.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return nothing \n    else \n        md5 = digest.MD5()\n       \
    \ md5.update(text)\n        return md5.digest()\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpued78csz.jl:10\nin expression starting at /tmp/tmpued78csz.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = MD5()\n    md5.update(text)\n\
    \    return md5.digest()\nend\n</cell>\n<code language=julia-1.4>\nusing Test\n\
    \n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\"\
    ) == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\
    \t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"\
    password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf8d3pns6.jl:13\nin expression starting at\
    \ /tmp/tmpf8d3pns6.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1chqbjdj.jl:15\nin expression starting at\
    \ /tmp/tmp1chqbjdj.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnxes1rq3.jl:15\nin expression starting at\
    \ /tmp/tmpnxes1rq3.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7tuzft5r.jl:15\nin expression starting at\
    \ /tmp/tmp7tuzft5r.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return nothing\n    else \n        md5 = Digest.new(\"md5\")\n \
    \       md5.update(text)\n        return md5.digest().hex\n    end\nend\n</cell>\n\
    <code language=julia-1.3>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.3>\n\
    string_to_md5(\"\")\n</cell>\n<text>\nExercise: Write a function that takes a\
    \ string and returns the md5 hash of that string as a hexadecimal string.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello\
    \ world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") ==\
    \ nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpr_76glx1.jl:10\nin expression starting at /tmp/tmpr_76glx1.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a string 'text', return its sha1 hash equivalent string.\n \
    \   If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8q14t8zs.jl:15\nin expression starting at\
    \ /tmp/tmp8q14t8zs.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = md5()\n    md5.update(text)\n\
    \    return md5.digest()\nend\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp3nan7e5o.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmp3nan7e5o.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n  UndefVarError: md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n\
    \     @ Main /tmp/tmp3nan7e5o.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nan7e5o.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nan7e5o.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp3nan7e5o.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == nothing\n  UndefVarError: md5 not defined\n  Stacktrace:\n\
    \   [1] string_to_md5(text::String)\n     @ Main /tmp/tmp3nan7e5o.jl:9\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nan7e5o.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nan7e5o.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp3nan7e5o.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\n  UndefVarError:\
    \ md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp3nan7e5o.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3nan7e5o.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3nan7e5o.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp3nan7e5o.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\"\n  UndefVarError:\
    \ md5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp"
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return Nothing\n    else \n        digest = digest.MD5()\n        digest.update(text)\n\
    \        return digest.hexdigest()\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<text>\nExercise\nWrite a function that\
    \ takes in two strings and returns the md5 hash of the concatenation of them.\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7fxq0h4f.jl:17\nin expression starting at\
    \ /tmp/tmp7fxq0h4f.jl:17\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = md5(text)\n\
    \    if md5 == \"\"\n        return Nothing\n    else\n        return md5\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdg3t3_a8.jl:15\nin expression starting at\
    \ /tmp/tmpdg3t3_a8.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return Nothing \n    else \n        md5(text) \n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwvs3hecu.jl:10\nin expression starting at /tmp/tmpwvs3hecu.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp88w9nf_f.jl:15\nin expression starting at\
    \ /tmp/tmp88w9nf_f.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</code>\n<|/ a tags=julia,md5\
    \ |>\n<| c |>\nThanks for your answer. I've tried your solution and it works fine.\
    \ However I still don't understand why my code doesn't work. Could you please\
    \ explain it to me?\n<|/ c |>\n<| c |>\nThe code you posted is different from\
    \ the code you claim is working. Can you post the code you claim is working?\n\
    <|/ c |>\n<| c |>\nI've added the code I claim is working in the question. Thanks\
    \ for your help.\n<|/ c |>\n<| c |>\nThe code you posted is different from the\
    \ code you claim is working. The code you claim is working is `md5(\"Hello world\"\
    )` which returns `\"3e25960a79dbc69b674cd4ec67a72c62\"`. Your code returns `nothing`.\
    \ So the code you claim is working is different from the code you posted.\n<|/\
    \ c |>\n<| c |>\nI see now. Thanks for your help.\n<|/ c |>\n<| a dscore=1 |>\n\
    The code you posted is different from the code you claim is working. The code\
    \ you claim is working is md5(\"Hello world\") which returns \"3e25960a79dbc69b674cd4ec67a72c62\"\
    . Your code returns nothing. So the code you claim is working is different from\
    \ the code you posted.\nThe code you claim is working is different from the code\
    \ you posted. The code you claim is working is md5(\"Hello world\") which returns\
    \ \"3e25960a79dbc69b674cd4ec67a72c62\". Your code returns nothing. So the code\
    \ you claim is working is different from the code you posted.\nThe code you claim\
    \ is working is md5(\"Hello world\") which returns \"3e25960a79dbc69b674cd4ec67a72c62\"\
    . Your code returns nothing. So the code you claim is working is different from\
    \ the code you posted.\nThe code you claim is working is md5(\"Hello world\")\
    \ which returns \"3e25960a79dbc69b674cd4ec67a72c62\". Your code returns nothing.\
    \ So the code you claim is working is different from the code you posted.\nThe\
    \ code you claim is working is md5\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcfqljcyz.jl:15\nin expression starting at\
    \ /tmp/tmpcfqljcyz.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1chqbjdj.jl:15\nin expression starting at\
    \ /tmp/tmp1chqbjdj.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return nothing\n    else \n        md5 = Digest::MD5.hexdigest(text)\n\
    \        return md5\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"\
    3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"\
    A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"password\"\
    ) == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx1iyausd.jl:15\nin expression starting at\
    \ /tmp/tmpx1iyausd.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return nothing\n    else \n        return md5(text)\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"\n    Given a string 'text', return its md5 hash\
    \ equivalent string.\n    If 'text' is an empty string, return nothing.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello\
    \ world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") ==\
    \ nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvmfpi0ls.jl:14\nin expression starting at\
    \ /tmp/tmpvmfpi0ls.jl:14\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1chqbjdj.jl:15\nin expression starting at\
    \ /tmp/tmp1chqbjdj.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnba6b2w9.jl:15\nin expression starting at\
    \ /tmp/tmpnba6b2w9.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvqvbshw9.jl:15\nin expression starting at\
    \ /tmp/tmpvqvbshw9.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a string 'text', return its sha1 hash equivalent string.\n \
    \   If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphw_e3412.jl:15\nin expression starting at\
    \ /tmp/tmphw_e3412.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return Nothing \n    else \n        digest = Digest(md5)\n        digest.update(text)\n\
    \        return digest.hexdigest() \nend\n</cell>\n<code language=julia-1.4>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp91r449kl.jl:16\nin expression starting at\
    \ /tmp/tmp91r449kl.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    md5(text::String)\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9hr47svo.jl:15\nin expression starting at\
    \ /tmp/tmp9hr47svo.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return Nothing\n    else \n        md5_hash = md5(text)\n      \
    \  return md5_hash\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\"\
    ) == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\
    \t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"\
    password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn0khmt4b.jl:10\nin expression starting at /tmp/tmpn0khmt4b.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return nothing \n        else return md5(text) \n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpjsea933h.jl:10\nin expression starting at /tmp/tmpjsea933h.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp88w9nf_f.jl:15\nin expression starting at\
    \ /tmp/tmp88w9nf_f.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that will take a filename as input and return the\
    \ md5 hash equivalent of the file contents. If the file does not exist, return\
    \ nothing.\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnsqhljqd.jl:15\nin expression starting at\
    \ /tmp/tmpnsqhljqd.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp88w9nf_f.jl:15\nin expression starting at\
    \ /tmp/tmp88w9nf_f.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<text>\n\
    Exercise\nWrite a function that takes a string as input and returns the md5 hash\
    \ equivalent of the string. \nWrite a function that takes a string as input and\
    \ returns the md5 hash equivalent of the string if the string is not empty.\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmplnx53umf.jl:15\nin expression starting at\
    \ /tmp/tmplnx53umf.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = Digest.new()\n\
    \    md5.update(text)\n    return md5.digest().hex\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"\
    3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"\
    A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"password\"\
    ) == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpf8q3m871.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpf8q3m871.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n  UndefVarError: Digest not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n\
    \     @ Main /tmp/tmpf8q3m871.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf8q3m871.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf8q3m871.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpf8q3m871.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == nothing\n  UndefVarError: Digest not defined\n  Stacktrace:\n\
    \   [1] string_to_md5(text::String)\n     @ Main /tmp/tmpf8q3m871.jl:9\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf8q3m871.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf8q3m871.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpf8q3m871.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\n  UndefVarError:\
    \ Digest not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n    \
    \ @ Main /tmp/tmpf8q3m871.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpf8q3m871.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpf8q3m871.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpf8q3m871.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\"\n  UndefVarError:\
    \ Digest not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n    \
    \ @ M"
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.1>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmputqndzsd.jl:15\nin expression starting at\
    \ /tmp/tmputqndzsd.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = MD5()\n    md5.update(text)\n\
    \    return md5.digest()\nend\n</cell>\n<code language=julia-1.3>\nusing Test\n\
    \n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\"\
    ) == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\
    \t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"\
    password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmsozkh1u.jl:13\nin expression starting at\
    \ /tmp/tmpmsozkh1u.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeycxpbw8.jl:15\nin expression starting at\
    \ /tmp/tmpeycxpbw8.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return nothing \n    else \n        md5 = digest.MD5()\n        md5.update(text)\n\
    \        return md5.digest()\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\"\
    ) == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\
    \t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"\
    password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn4xw5f6t.jl:16\nin expression starting at\
    \ /tmp/tmpn4xw5f6t.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        return Nothing \n    else \n        digest = digest(\"md5\", text) \n\
    \        return digest\n    end\nend\n</cell>\n<code language=julia-1.3>\n\"\"\
    \"\n    md5_hash(string)\nusing Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\
    \t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t\
    @test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4vzz_18k.jl:16\nin expression starting at\
    \ /tmp/tmp4vzz_18k.jl:16\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp88w9nf_f.jl:15\nin expression starting at\
    \ /tmp/tmp88w9nf_f.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\" \n\
    \        then return Nothing\n    else \n        md5_hash = md5(text)\n      \
    \  return md5_hash\n    end\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n\
    \    Given a string 'text', return its md5 hash equivalent string.\n    If 'text'\
    \ is an empty string, return nothing.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmppa7m6k2x.jl:10\nin expression starting at /tmp/tmppa7m6k2x.jl:10\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nI added the function `string_to_md5` to the answer. Hope it helps.\n\
    <|/ c |>\n<| a dscore=2 |>\nThe easiest way is to use MD5 in Julia:\n<code>\n\
    julia> MD5(\"Hello world\")\n\"3e25960a79dbc69b674cd4ec67a72c62\"\n</code>\n<|/\
    \ a tags=julia,md5 |>\n<| a tags=julia,md5 |>\nThe easiest way is to use MD5 in\
    \ Julia:\n<code>\njulia> MD5(\"Hello world\")\n\"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n</code>\n<|/ a dscore=2 |>\n<| a tags=julia,md5 |>\nThe easiest way is to use\
    \ MD5 in Julia:\n<code>\njulia> MD5(\"Hello world\")\n\"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n</code>\n<|/ a dscore=1 |>\n<| a dscore=0 |>\nThe easiest way is to use MD5\
    \ in Julia:\n<code>\njulia> MD5(\"Hello world\")\n\"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n</code>\n<|/ a tags=julia,md5 |>\n<| a tags=julia,md5 |>\n<code>\nusing MD5\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpg074wptx.jl:15\nin expression starting at\
    \ /tmp/tmpg074wptx.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its sha1 hash equivalent string.\n \
    \   If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp737l4r3z.jl:15\nin expression starting at\
    \ /tmp/tmp737l4r3z.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<text>\n\
    Exercise: Write a function that takes a string and returns the md5 hash equivalent\
    \ of the string in hexadecimal format. For example, the string \"Hello world\"\
    \ would return \"9e107d9d372bb6826bd81d3542a419d6\".\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0chl44y3.jl:15\nin expression starting at\
    \ /tmp/tmp0chl44y3.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</code>\n<|/ a tags=julia\
    \ |>\n<| c |>\nThanks for the answer! I added a note about my specific use case\
    \ to the original question.\n<|/ c |>\n<| c |>\nI added a note about my specific\
    \ use case to the original question.\n<|/ c |>\n<| c |>\nThanks for the update!\
    \ I added a note about my specific use case to the original question.\n<|/ c |>\n\
    <| a |>\nThe accepted answer does not work for me. \n<code>\njulia> string_to_md5(\"\
    Hello world\")\nERROR: MethodError: no method matching md5(::String)\nClosest\
    \ candidates are:\n  md5(::String) at /Users/julia/buildbot/worker/package_osx64/build/usr/share/julia/stdlib/v1.5/MD5.jl:10\n\
    \  md5(::Array{UInt8,1}) at /Users/julia/buildbot/worker/package_osx64/build/usr/share/julia/stdlib/v1.5/MD5.jl:10\n\
    \  md5(::Array{UInt8,2}) at /Users/julia/buildbot/worker/package_osx64/build/usr/share/julia/stdlib/v1.5/MD5.jl:10\n\
    \  md5(::Array{UInt8,3}) at /Users/julia/buildbot/worker/package_osx64/build/usr/share/julia/stdlib/v1.5/MD5.jl:10\n\
    \  md5(::Array{UInt8,4}) at /Users/julia/buildbot/worker/package_osx64/build/usr/share/julia/stdlib/v1.5/MD5.jl:10\n\
    \  md5(::Array{UInt8,5}) at /Users/julia/buildbot/worker/package_osx64/build/usr/share/julia/stdlib/v1.5/MD5.jl:10\n\
    \  md5(::Array{UInt8,6}) at /Users/julia/buildbot/worker/package_osx64/build/usr/share/julia/stdlib/v1.5/MD5.jl:10\n\
    \  md5(::Array{UInt8,7}) at /Users/julia/buildbot/worker/package_osx64/build/usr/share/julia/stdlib/v1.5/MD5.jl:10\n\
    \  md5(::Array{UInt8,8}) at /Users/julia/buildbot/worker/package_osx64/build/usr/share/julia/stdlib/v1.5/MD5.jl:10\n\
    \  md5(::Array{UInt8,9}) at /Users/julia/buildbot\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpesye9qvh.jl:15\nin expression starting at\
    \ /tmp/tmpesye9qvh.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1chqbjdj.jl:15\nin expression starting at\
    \ /tmp/tmp1chqbjdj.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp88w9nf_f.jl:15\nin expression starting at\
    \ /tmp/tmp88w9nf_f.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = MD5()\n    md5.update(text)\n\
    \    return md5.digest()\nend\n</cell>\n<code language=julia-1.3>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string\
    \ and returns the md5 hash equivalent of its lowercase version.\nusing Test\n\n\
    @testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\"\
    ) == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\
    \t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"\
    password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8f3n1o9f.jl:13\nin expression starting at\
    \ /tmp/tmp8f3n1o9f.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</code>\n<|/ a tags=julia,md5\
    \ |>\n<| a tags=julia,md5 |>\nI wrote a package for this. It supports both MD5\
    \ and SHA1 hashes.\n<code>\nusing MD5\nusing SHA1\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvjr5_0pw.jl:15\nin expression starting at\
    \ /tmp/tmpvjr5_0pw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwjx6ts7i.jl:15\nin expression starting at\
    \ /tmp/tmpwjx6ts7i.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = Digest.new(\"\
    md5\")\n    md5.update(text)\n    return md5.digest().hex\nend\n</cell>\n<code\
    \ language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\n\
    string_to_md5(\"\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello\
    \ world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"\
    Hello world\")\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\"\
    )\n</cell>\n<code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n\
    <code language=julia-1.4>\nstring_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.4>\n\
    string_to_md5(\"Hello world\")\n</cell\nusing Test\n\n@testset begin\n\ncandidate\
    \ = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphvpwraf3.jl:13\nin expression starting at\
    \ /tmp/tmphvpwraf3.jl:13\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n  \
    \  If 'text' is an empty string, return nothing.\nusing Test\n\n@testset begin\n\
    \ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    )\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp88w9nf_f.jl:15\nin expression starting at\
    \ /tmp/tmp88w9nf_f.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"\
    Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\"\
    ) == nothing)\n\t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\
    )\n\t@test(candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\n\
    end\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp08jiyxxw.jl:15\nin expression starting at\
    \ /tmp/tmp08jiyxxw.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    if text == \"\"\n\
    \        Nothing\n    else\n        md5(text)\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    string_to_md5(\"Hello world\")\n</cell>\n<code language=julia-1.5>\nstring_to_md5(\"\
    \")\n</cell>\n<text>\nExercise\nWrite a function that takes a string and returns\
    \ the md5 hash equivalent of the string in hexadecimal format. For example, string_to_hex(\"\
    Hello world\") should return \"3e25960a79dbc69b674cd4ec67a72c62\".\nusing Test\n\
    \n@testset begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\"\
    ) == \"3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\
    \t@test(candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"\
    password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp96qeff_1.jl:15\nin expression starting at\
    \ /tmp/tmp96qeff_1.jl:15\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\"\n    Given a string 'text', return its md5 hash equivalent string.\n\
    \    If 'text' is an empty string, return nothing.\n\n    >>> string_to_md5(\"\
    Hello world\")\n    \"3e25960a79dbc69b674cd4ec67a72c62\"\n    \"\"\"\nfunction\
    \ string_to_md5(text::String)::Union{String, Nothing} \n    md5 = Digest::MD5.new()\n\
    \    md5.update(text)\n    return md5.digest().hex\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = string_to_md5;\n\t@test(candidate(\"Hello world\") == \"\
    3e25960a79dbc69b674cd4ec67a72c62\")\n\t@test(candidate(\"\") == nothing)\n\t@test(candidate(\"\
    A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\")\n\t@test(candidate(\"password\"\
    ) == \"5f4dcc3b5aa765d61d8327deb882cf99\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp0lm4dko3.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmp0lm4dko3.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"Hello world\") == \"3e25960a79dbc69b674cd4ec67a72c62\"\
    \n  UndefVarError: MD5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n\
    \     @ Main /tmp/tmp0lm4dko3.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0lm4dko3.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0lm4dko3.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp0lm4dko3.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"\") == nothing\n  UndefVarError: MD5 not defined\n  Stacktrace:\n\
    \   [1] string_to_md5(text::String)\n     @ Main /tmp/tmp0lm4dko3.jl:9\n   [2]\
    \ macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0lm4dko3.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0lm4dko3.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp0lm4dko3.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"A B C\") == \"0ef78513b0cb8cef12743f5aeb35f888\"\n  UndefVarError:\
    \ MD5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp0lm4dko3.jl:9\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0lm4dko3.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0lm4dko3.jl:17\ntest set:\
    \ Error During Test at /tmp/tmp0lm4dko3.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"password\") == \"5f4dcc3b5aa765d61d8327deb882cf99\"\n  UndefVarError:\
    \ MD5 not defined\n  Stacktrace:\n   [1] string_to_md5(text::String)\n     @ Main\
    \ /tmp/tmp"

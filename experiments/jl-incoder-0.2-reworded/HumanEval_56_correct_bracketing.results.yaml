language: jl
name: HumanEval_56_correct_bracketing
results:
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>>\", \"\")\n    brackets =\
    \ brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\
    \")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9ypn8j21.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9ypn8j21.jl:1\n\
    in expression starting at /tmp/tmp9ypn8j21.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = bracket\nusing Test\n\n@testset begin\n\ncandidate\
    \ = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"\
    <<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"\
    <><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\
    \t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"<\") == false)\n\t\
    @test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"\
    <<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"\
    <><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpydk9u1c1.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpydk9u1c1.jl:1\n\
    in expression starting at /tmp/tmpydk9u1c1.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8gqs9hkc.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8gqs9hkc.jl:1\n\
    in expression starting at /tmp/tmp8gqs9hkc.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    \nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcu9mo6l4.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcu9mo6l4.jl:1\n\
    in expression starting at /tmp/tmpcu9mo6l4.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpt0b5nnci.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt0b5nnci.jl:1\n\
    in expression starting at /tmp/tmpt0b5nnci.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9mllxvbf.jl:1\nin expression starting at /tmp/tmp9mllxvbf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8gqs9hkc.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8gqs9hkc.jl:1\n\
    in expression starting at /tmp/tmp8gqs9hkc.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\nusing Test\n\n@testset begin\n\
    \ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"\
    <<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"\
    <><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\
    \t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"<\") == false)\n\t\
    @test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"\
    <<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"\
    <><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvmknd8sp.jl:71\nin expression starting at\
    \ /tmp/tmpvmknd8sp.jl:71\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    >>\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9m9fmezs.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9m9fmezs.jl:1\n\
    in expression starting at /tmp/tmp9m9fmezs.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    \nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcu9mo6l4.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcu9mo6l4.jl:1\n\
    in expression starting at /tmp/tmpcu9mo6l4.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8gqs9hkc.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8gqs9hkc.jl:1\n\
    in expression starting at /tmp/tmp8gqs9hkc.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9mllxvbf.jl:1\nin expression starting at /tmp/tmp9mllxvbf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgs1usvkw.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgs1usvkw.jl:1\n\
    in expression starting at /tmp/tmpgs1usvkw.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<<\", \"\")\n    brackets =\
    \ brackets.replace(\"<<<<<\", \"\")\n    brackets = brackets.replace(\"<<<<<\"\
    , \"\")\n    brackets = brackets.replace(\"<<<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<<<\", \"\")\n    brackets = brackets.replace(\"<<<<<\", \"\")\n    brackets\
    \ = brackets.replace(\"<<<<<\", \"\")\n    brackets = brackets.replace(\"<<<<<\"\
    , \"\")\n    brackets = brackets.replace(\"<<<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<<<\", \"\")\n    brackets = brackets.replace(\"<<<<<\", \"\")\n    brackets\
    \ = brackets.replace(\"<<<<<\", \"\")\n    brackets = brackets.replace(\"<<<<<\"\
    , \"\")\n    brackets = brackets.replace(\"<<<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<<<\", \"\")\n    brackets = brackets.replace(\"<<<<<\", \"\")\n    brackets\
    \ = brackets.replace(\"<<<<<\", \"\")\n    brackets = brackets.replace(\"<<<<<\"\
    , \"\")\n    brackets = brackets.replace(\"<<<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<<<\", \"\")\n    brackets = brackets.replace(\"<<<<<\", \"\")\n    brackets\
    \ = brackets.replace(\"<<<<<\", \"\")\n    brackets = brackets.replace(\"<<<<<\"\
    , \"\")\n    brackets = brackets.replace(\"<<<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<<<\", \"\")\n    brackets = brackets.replace(\"<<<<<\", \"\")\n    brackets\
    \ = brackets.replace(\"<<<<<\", \"\")\n    brackets = brackets.replace(\"<<<<<\"\
    , \"\")\n    brackets = brackets.replace(\"<<<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<<<\", \"\")\n    brackets = brackets.replace(\"<<<<<\", \"\")\n    brackets\
    \ = brackets.replace(\"<<<<<\", \"\")\n    brackets = brackets.replace(\"<<<<<\"\
    , \"\")\n    brackets = brackets.replace(\"<<<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<<<\", \"\")\n    brackets = brackets.replace(\"<<<<<\", \"\")\n    brackets\
    \ = brackets.replace(\"<<<<<\", \"\")\n    brackets = brackets.replace(\"<<<<<\"\
    , \"\")\n    brackets = brackets.replace(\"<<<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<<<\", \"\")\n    brackets = brackets.replace(\"<<<<<\", \"\")\n    brackets\
    \ = brackets.replace(\"<<<<<\", \"\")\n    brackets = brackets.replace(\"<<<<<\"\
    , \"\")\n    brackets = brackets.replace(\"<<<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<<<\", \"\")\n    brackets = brackets.replace(\"<<<<<\", \"\")\n    brackets\
    \ = brackets.replace(\"<<<<<\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp06rvwtdw.jl:71\nin expression starting at\
    \ /tmp/tmp06rvwtdw.jl:71\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <>>\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<<\", \"\")\n    brackets =\
    \ brackets.replace(\"<<>>\", \"\")\n    brackets = brackets.replace(\">>><\",\
    \ \"\")\n    brackets = brackets.replace(\"<<<>>\", \"\")\n    brackets = brackets.replace(\"\
    ><<>>\", \"\")\n    brackets = brackets.replace(\"<<>><\", \"\")\n    brackets\
    \ = brackets.replace(\">>>>>\", \"\")\n    brackets = brackets.replace(\"<<>>>>\"\
    , \"\")\n    brackets = brackets.replace(\"<<>>>>>\", \"\")\n    brackets = brackets.replace(\"\
    <<>>>>>\", \"\")\n    brackets = brackets.replace(\"<<>>>>>\", \"\")\n    brackets\
    \ = brackets.replace(\"<<>>>>>\", \"\")\n    brackets = brackets.replace(\"<<>>>>>\"\
    , \"\")\n    brackets = brackets.replace(\"<<>>>>>\", \"\")\n    brackets = brackets.replace(\"\
    <<>>>>>\", \"\")\n    brackets = brackets.replace(\"<<>>>>>\", \"\")\n    brackets\
    \ = brackets.replace(\"<<>>>>>\", \"\")\n    brackets = brackets.replace(\"<<>>>>>\"\
    , \"\")\n    brackets = brackets.replace(\"<<>>>>>\", \"\")\n    brackets = brackets.replace(\"\
    <<>>>>>\", \"\")\n    brackets = brackets.replace(\"<<>>>>>\", \"\")\n    brackets\
    \ = brackets.replace(\"<<>>>>>\", \"\")\n    brackets = brackets.replace(\"<<>>>>>\"\
    , \"\")\n    brackets = brackets.replace(\"<<>>>>>\", \"\")\n    brackets = brackets.replace(\"\
    <<>>>>>\", \"\")\n    brackets = brackets.replace(\"<<>>>>>\", \"\")\n    brackets\
    \ = brackets.replace(\"<<>>>>>\", \"\")\n    brackets = brackets.replace(\"<<>>>>>\"\
    , \"\")\n    brackets = brackets.replace(\"<<>>>>>\", \"\")\n    brackets = brackets.replace(\"\
    <<>>>>>\", \"\")\n    brackets = brackets.replace(\"<<>>>>>\", \"\")\n    brackets\
    \ = brackets.replace(\"<<>>>>>\", \"\")\n    brackets = brackets.replace(\"<<>>>>>\"\
    , \"\")\n    brackets = brackets.replace(\"<<>>>>>\", \"\")\n    brackets = brackets.replace(\"\
    <<>>>>>\", \"\")\n    brackets = brackets.replace(\"<<>>>>>\", \"\")\n    brackets\
    \ = brackets.replace(\"<<>>>>>\", \"\")\n    brackets = brackets.replace(\"<<>>>>>\"\
    , \"\")\n    brackets = brackets.replace(\"<<>>>>>\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpsqe9lsev.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpsqe9lsev.jl:63\n\
    in expression starting at /tmp/tmpsqe9lsev.jl:63\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Determine whether brackets is a string of \"<\" and \">\".\n    return\
    \ true if every opening bracket has a corresponding closing bracket.\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgnadzao_.jl:1\nin expression starting at /tmp/tmpgnadzao_.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    correct_bracketing(brackets::String)::Bool\n    \n    Determine whether\
    \ brackets are correctly nested.\n    \n    >>> correct_bracketing(\"<\")\n  \
    \  false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpkwqhfxja.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkwqhfxja.jl:1\n\
    in expression starting at /tmp/tmpkwqhfxja.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppx4tq86g.jl:1\nin expression starting at /tmp/tmppx4tq86g.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8gqs9hkc.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8gqs9hkc.jl:1\n\
    in expression starting at /tmp/tmp8gqs9hkc.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8gqs9hkc.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8gqs9hkc.jl:1\n\
    in expression starting at /tmp/tmp8gqs9hkc.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Determine if brackets are correctly nested.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\
    \t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") ==\
    \ true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwxx17069.jl:1\nin expression starting at /tmp/tmpwxx17069.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8gqs9hkc.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8gqs9hkc.jl:1\n\
    in expression starting at /tmp/tmp8gqs9hkc.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    \nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpt767h46a.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt767h46a.jl:1\n\
    in expression starting at /tmp/tmpt767h46a.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Determine whether brackets is a string of \"<\" and \">\".\n    Return\
    \ true if every opening bracket has a corresponding closing bracket.\n    \n \
    \   >>> correct_bracketing(\"<\")\n    false\n    >>> correct_bracketing(\"<>\"\
    )\n    true\n    >>> correct_bracketing(\"<<><>>\")\n    true\n    >>> correct_bracketing(\"\
    ><<>\")\n    false\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpul7cs33d.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpul7cs33d.jl:1\n\
    in expression starting at /tmp/tmpul7cs33d.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Determine if brackets are correctly nested.\n    \n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpviyoka43.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpviyoka43.jl:1\n\
    in expression starting at /tmp/tmpviyoka43.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8gqs9hkc.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8gqs9hkc.jl:1\n\
    in expression starting at /tmp/tmp8gqs9hkc.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8gqs9hkc.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8gqs9hkc.jl:1\n\
    in expression starting at /tmp/tmp8gqs9hkc.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppx4tq86g.jl:1\nin expression starting at /tmp/tmppx4tq86g.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8gqs9hkc.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8gqs9hkc.jl:1\n\
    in expression starting at /tmp/tmp8gqs9hkc.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgs1usvkw.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgs1usvkw.jl:1\n\
    in expression starting at /tmp/tmpgs1usvkw.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Checks whether brackets is a string of \"<\" and \">\".\n    return\
    \ true if every opening bracket has a corresponding closing bracket.\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeohgl2l7.jl:1\nin expression starting at /tmp/tmpeohgl2l7.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppx4tq86g.jl:1\nin expression starting at /tmp/tmppx4tq86g.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<\nusing Test\n\n@testset begin\n\
    \ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"\
    <<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"\
    <><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\
    \t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"<\") == false)\n\t\
    @test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"\
    <<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"\
    <><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_b8z7vea.jl:71\nin expression starting at\
    \ /tmp/tmp_b8z7vea.jl:71\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Determine whether brackets is a string of \"<\" and \">\".\n    Return\
    \ true if every opening bracket has a corresponding closing bracket.\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9r7mjhtv.jl:1\nin expression starting at /tmp/tmp9r7mjhtv.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8gqs9hkc.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8gqs9hkc.jl:1\n\
    in expression starting at /tmp/tmp8gqs9hkc.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    \nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpt767h46a.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt767h46a.jl:1\n\
    in expression starting at /tmp/tmpt767h46a.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    \    \n    Determine whether brackets are correctly nested.\n    brackets is a\
    \ string of \"<\" and \">\".\n    return true if every opening bracket has a corresponding\
    \ closing bracket.\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp39z86wjk.jl:1\nin expression starting at /tmp/tmp39z86wjk.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    \nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcu9mo6l4.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcu9mo6l4.jl:1\n\
    in expression starting at /tmp/tmpcu9mo6l4.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)::Bool\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9mllxvbf.jl:1\nin expression starting at /tmp/tmp9mllxvbf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    \nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcu9mo6l4.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcu9mo6l4.jl:1\n\
    in expression starting at /tmp/tmpcu9mo6l4.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgs1usvkw.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgs1usvkw.jl:1\n\
    in expression starting at /tmp/tmpgs1usvkw.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing\
    \ is a function that takes a string and checks \n    whether every opening bracket\
    \ has a corresponding closing bracket.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"\
    <<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"\
    <><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\
    \t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"<\") == false)\n\t\
    @test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"\
    <<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"\
    <><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3c3ti257.jl:1\nin expression starting at /tmp/tmp3c3ti257.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\nusing Test\n\n@testset begin\n\
    \ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"\
    <<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"\
    <><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\
    \t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"<\") == false)\n\t\
    @test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"\
    <<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"\
    <><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvmknd8sp.jl:71\nin expression starting at\
    \ /tmp/tmpvmknd8sp.jl:71\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    \nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpcu9mo6l4.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpcu9mo6l4.jl:1\n\
    in expression starting at /tmp/tmpcu9mo6l4.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\nusing Test\n\n@testset begin\n\
    \ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"\
    <<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"\
    <><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\
    \t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"<\") == false)\n\t\
    @test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"\
    <<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"\
    <><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \">\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvmknd8sp.jl:71\nin expression starting at\
    \ /tmp/tmpvmknd8sp.jl:71\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\nusing Test\n\n@testset\
    \ begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\
    \t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") ==\
    \ true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpt89hi1rx.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt89hi1rx.jl:1\n\
    in expression starting at /tmp/tmpt89hi1rx.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    \"\"\"\n    correct_bracketing(brackets::String)\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppx4tq86g.jl:1\nin expression starting at /tmp/tmppx4tq86g.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    >>>\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    \nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpt767h46a.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt767h46a.jl:1\n\
    in expression starting at /tmp/tmpt767h46a.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8gqs9hkc.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8gqs9hkc.jl:1\n\
    in expression starting at /tmp/tmp8gqs9hkc.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n\nusing Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\
    \t@test(candidate(\"<>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t\
    @test(candidate(\"<><><<><>><>\") == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\"\
    ) == true)\n\t@test(candidate(\"<<<><>>>>\") == false)\n\t@test(candidate(\"><<>\"\
    ) == false)\n\t@test(candidate(\"<\") == false)\n\t@test(candidate(\"<<<<\") ==\
    \ false)\n\t@test(candidate(\">\") == false)\n\t@test(candidate(\"<<>\") == false)\n\
    \t@test(candidate(\"<><><<><>><>><<>\") == false)\n\t@test(candidate(\"<><><<><>><>>><>\"\
    ) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgs1usvkw.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgs1usvkw.jl:1\n\
    in expression starting at /tmp/tmpgs1usvkw.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8gqs9hkc.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8gqs9hkc.jl:1\n\
    in expression starting at /tmp/tmp8gqs9hkc.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\nusing Test\n\n@testset\
    \ begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\") == true)\n\
    \t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\") ==\
    \ true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpt89hi1rx.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt89hi1rx.jl:1\n\
    in expression starting at /tmp/tmpt89hi1rx.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\"<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"<<<\", \"\")\n    \nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8ht_yvbu.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8ht_yvbu.jl:1\n\
    in expression starting at /tmp/tmp8ht_yvbu.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp06za54zm.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp06za54zm.jl:1\n\
    in expression starting at /tmp/tmp06za54zm.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.\n\
    using Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmpfl_wmhd3.jl:13 expected\
    \ \"end\", got \"Test\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfl_wmhd3.jl:73\n\
    in expression starting at /tmp/tmpfl_wmhd3.jl:73\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    bracket\nusing Test\n\
    \n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"<>\"\
    ) == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5ef2kvlf.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5ef2kvlf.jl:1\n\
    in expression starting at /tmp/tmp5ef2kvlf.jl:1\n"
  stdout: ''
- exit_code: 1
  program: "\"\"\" brackets is a string of \"<\" and \">\".\n    return true if every\
    \ opening bracket has a corresponding closing bracket.\n\n    >>> correct_bracketing(\"\
    <\")\n    false\n    >>> correct_bracketing(\"<>\")\n    true\n    >>> correct_bracketing(\"\
    <<><>>\")\n    true\n    >>> correct_bracketing(\"><<>\")\n    false\n    \"\"\
    \"\nfunction correct_bracketing(brackets::String)::Bool \n    brackets = brackets.replace(\"\
    <\", \"\")\n    brackets = brackets.replace(\">\", \"\")\n    brackets = brackets.replace(\"\
    <<\", \"\")\n    brackets = brackets.replace(\">>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\"><<\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    brackets = brackets.replace(\"\
    <<<\", \"\")\n    brackets = brackets.replace(\">>>\", \"\")\n    bracket\nusing\
    \ Test\n\n@testset begin\n\ncandidate = correct_bracketing;\n\t@test(candidate(\"\
    <>\") == true)\n\t@test(candidate(\"<<><>>\") == true)\n\t@test(candidate(\"<><><<><>><>\"\
    ) == true)\n\t@test(candidate(\"<><><<<><><>><>><<><><<>>>\") == true)\n\t@test(candidate(\"\
    <<<><>>>>\") == false)\n\t@test(candidate(\"><<>\") == false)\n\t@test(candidate(\"\
    <\") == false)\n\t@test(candidate(\"<<<<\") == false)\n\t@test(candidate(\">\"\
    ) == false)\n\t@test(candidate(\"<<>\") == false)\n\t@test(candidate(\"<><><<><>><>><<>\"\
    ) == false)\n\t@test(candidate(\"<><><<><>><>>><>\") == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp8gqs9hkc.jl:13\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp8gqs9hkc.jl:1\n\
    in expression starting at /tmp/tmp8gqs9hkc.jl:1\n"
  stdout: ''

name: HumanEval_52_below_threshold
language: jl
prompt: "\"\"\"Return true if all numbers in the vector l are below threshold t.\n\
  \    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>> below_threshold([1,\
  \ 20, 4, 10], 5)\n    false\n    \"\"\"\nfunction below_threshold(l::Vector{Int64},\
  \ t::Int64)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = below_threshold;\n\t@test(candidate([1,\
  \ 2, 4, 10], 100) == true)\n\t@test(candidate([1, 20, 4, 10], 5) == false)\n\t@test(candidate([1,\
  \ 20, 4, 10], 21) == true)\n\t@test(candidate([1, 20, 4, 10], 22) == true)\n\t@test(candidate([1,\
  \ 8, 4, 10], 11) == true)\n\t@test(candidate([1, 8, 4, 10], 10) == false)\nend\n"
completions: ["    for x in l\n        if x < t\n            return false\n    end\n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true if\
    \ all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"", "    for x in l\n        if x < t\n            return false\n  \
    \      end\n    end\n    return true\nend\n</cell>\n<code language=julia-1.4>\n\
    \"\"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n        if x < t\n    \
    \        return false\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"", "    for n in l\n        if n < t\n    \
    \        return false\n    end\n    return true\nend", "    for x in l\n     \
    \   if x < t\n            return false\n    end\n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert below_threshold([1, 2, 4, 10], 100) == true\n\
    @assert below_threshold([1, 20, 4, 10], 5) == false\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of elements in a vector that are\
    \ less than a given threshold.", "    for x in l\n        if x < t\n         \
    \   return false\n    end\n    return true\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns true if the vector l contains at least two numbers\
    \ that are both below threshold t and above threshold t.\nHint: Use the function\
    \ below_threshold.", "    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n        if x < t\n\
    \            return false\n    return true\nend", "    for x in l\n        if\
    \ x < t\n            return false\n    return true\nend", "    for x in l \n \
    \       if x < t \n            return false \n    end \n    return true \nend\
    \ \n</cell>\n<code language=julia-1.5>\n\"\"\"Return true if all numbers in the\
    \ vector l are above threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n\
    \    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"",
  "    for x in l\n        if x < t\n            return false\n    end\n    return\
    \ true\nend\n</cell>\n<code language=julia-1.3>\n\"\"\"Return true if all numbers\
    \ in the vector l are above threshold t.\n    >>> above_threshold([1, 2, 4, 10],\
    \ 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\
    \"\"", "    for x in l \n        if x < t \n            return false \n    return\
    \ true \nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns true\
    \ if all numbers in the vector l are greater than threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"", "    l .< t \nend", "    for n in l\n        if n < t\n        \
    \    return false\n    return true\nend", "    for x in l \n        if x < t \n\
    \            return false \n    end \n    return true \nend ", "    for x in l\n\
    \        if x < t\n            return false\n    end\n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"Return true if all numbers in the vector l are\
    \ above threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n\
    \    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"", "    for\
    \ x in l\n        if x < t\n            return false\n    end\n    return true\n\
    end", "    for x in l \n        if x < t \n            return false \n    end\
    \ \n    return true \nend \n</cell>\n<code language=julia-1.5>\nbelow_threshold([1,\
    \ 2, 4, 10], 100)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ true if all numbers in the vector l are greater than threshold t.\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n        if x < t\n\
    \            return false\n    return true\nend", "    for x in l\n        if\
    \ x < t\n            return false\n    end\n    return true\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns true if the vector l contains any numbers\
    \ that are divisible by 3\nHint: use below_threshold(l, 3) to test each element\
    \ of l", "    for x in l\n        if x < t\n            return false\n    end\n\
    \    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ true if all numbers in the vector l are greater than threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"", "    for x in l \n        if x < t \n            return false \n\
    \    end \n    return true \nend \n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"", "    for i in l\n        if i < t\n\
    \            return false\n    end\n    return true\nend", "    for x in l\n \
    \       if x < t\n            return false\n    end\n    return true\nend", " \
    \   for x in l\n        if x < t\n            return false\n    end\n    return\
    \ true\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns true if\
    \ the vector l has at least two elements that are both below threshold t.", " \
    \   l <= t\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns true\
    \ if the vector l is sorted from smallest to largest.\nHint: use the function\
    \ sorted.", "    for x in l \n        if x < t \n            return false \n \
    \   end \n    return true \nend \n</cell>\n<code language=julia-1.5>\n@assert\
    \ below_threshold([1, 2, 4, 10], 100) == true\n@assert below_threshold([1, 20,\
    \ 4, 10], 5) == false\n</cell>\n<text>\nExercise 3\nWrite a function is_positive_definite(v::Vector{Int64})\
    \ that returns true if the vector v is positive definite and false otherwise.",
  "    below_threshold = false\n    for x in l\n        if x < t\n            below_threshold\
    \ = true\n            break\n    end\n    return below_threshold\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the number of elements in a\
    \ vector that are below a threshold.", "    for x in l \n        if x < t \n \
    \           return false \n    return true \nend \n</cell>\n<text>\nExercise:\
    \ Write a function that returns true if all numbers in the vector l are above\
    \ threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>>\
    \ above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\
    \ \n        if x < t \n            return false \n    end \n    return true \n\
    end \n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1, 2, 4, 10],\
    \ 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns true if the vector l has at\
    \ least two non-zero elements.\nHint: Use a for loop.", "    below_threshold =\
    \ l .< t\n    return below_threshold\nend\n</cell>\n<text>\nExercise\nWrite a\
    \ function that returns true if the vector l contains any numbers that are greater\
    \ than or equal to threshold t.", "    for x in l\n        if x < t\n        \
    \    return false\n        end\n    end\n    return true\nend", "    l <= t\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that returns true if all numbers\
    \ in the vector l are above threshold t.\n    >>> above_threshold([1, 2, 4, 10],\
    \ 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\
    \"\"", "    for x in l\n        if x < t\n            return false\n    end\n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true if\
    \ all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"", "    for x in l\n        if x < t\n            return false\n  \
    \  end\n    return true\nend", "    for x in l\n        if x < t\n           \
    \ return false\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\
    \"Return true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"", "    for x in l\n        if x < t\n            return false\n  \
    \  end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"", "    for x in l\n        if x < t\n            return false\n  \
    \  end\n    return true\nend", "    for x in l\n        if x < t\n           \
    \ return false\n    return true\nend", "    for n in l\n        if n < t\n   \
    \         return false\n    end\n    return true\nend", "    l .< t\nend", " \
    \   for x in l\n        if x < t\n            return false\n    end\n    return\
    \ true\nend\n</cell>\n<text>\nExercise 2\nWrite a function that returns true if\
    \ all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    true\n\
    \    \"\"\"", "    for x in l\n        if x < t\n            return false\n  \
    \      end\n    end\n    return true\nend", "    for n in l\n        if n < t\n\
    \            return false\n    end\n    return true\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns true if the vector l has at least two non-zero\
    \ elements.", "    for i in l\n        if i < t\n            return false\n  \
    \      end\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n        if x < t\n    \
    \        return false\n    end\n    return true\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns true if all numbers in the vector l are greater\
    \ than threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n \
    \   >>> above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"", "    for x\
    \ in l\n        if x < t\n            return false\n    return true\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"Return true if all numbers in the vector l are\
    \ above threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n\
    \    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"", "    for\
    \ x in l\n        if x < t\n            return false\n        end\n    end\n \
    \   return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true if\
    \ all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"", "    for x in l\n        if x < t\n            return false\n  \
    \  return true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1,\
    \ 2, 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of elements\
    \ in a vector that are less than a given value.", "    l .< t\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of elements in the\
    \ vector l that are greater than threshold t.\n    >>> count_greater_than([10,\
    \ 20, 30, 40, 50], 50)\n    2\n    >>> count_greater_than([10, 20, 30, 40, 50],\
    \ 10)\n    1\n    \"\"\"", "    for x in l\n        if x < t\n            return\
    \ false\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\
    \"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n        if x < t\n    \
    \        return false\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"", "    l <= t\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns true if all numbers in the vector l are above\
    \ threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>>\
    \ above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n\
    \        if x < t\n            return false\n    return true\nend", "    for x\
    \ in l\n        if x < t\n            return false\n    end\n    return true\n\
    end", "    for x in l\n        if x < t\n            return false\n    return\
    \ true\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns true if\
    \ all numbers in the vector l are greater than threshold t.\n    >>> below_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> below_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"", "    for i in l\n        if i < t\n            return false\n  \
    \  return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true if\
    \ all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"", "    for x in l \n        if x < t \n            return false \n\
    \    return true \nend ", "    for x in l\n        if x < t\n            return\
    \ false\n    return true\nend", "    for x in l\n        if x < t\n          \
    \  return false\n    end\n    return true\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns true if all numbers in the vector l are above threshold\
    \ t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"", "    for x in l \n        if x < t \n\
    \            return false \n    return true \nend ", "    for x in l\n       \
    \ if x < t\n            return false\n    end\n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"Return true if all numbers in the vector l are\
    \ above threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n\
    \    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"", "    for\
    \ x in l\n        if x < t\n            return false\n    end\n    return true\n\
    end", "    for x in l\n        if x < t\n            return false\n    end\n \
    \   return true\nend", "    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend", "    for x in l\n        if x < t\n         \
    \   return false\n    return true\nend", "    for n in l\n        if n < t\n \
    \           return false\n    return true\nend", "    l <= t\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert below_threshold([1, 2, 4, 10], 100) == true\n@assert\
    \ below_threshold([1, 20, 4, 10], 5) == false\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns true if the vector l has exactly one element that is\
    \ greater than threshold t.", "    for x in l\n        if x < t\n            return\
    \ false\n        end\n    end\n    return true\nend", "    for x in l\n      \
    \  if x < t\n            return false\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"", "    for x in l \n        if x < t \n  \
    \          return false \n    end \n    return true \nend \n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the number of elements in a vector that\
    \ are less than a given threshold t.", "    for x in l\n        if x < t\n   \
    \         return false\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"", "    for x in l \n        if x < t \n  \
    \          return false \n    end \n    return true \nend ", "    for n in l\n\
    \        if n < t\n            return false\n    return true\nend", "    for x\
    \ in l \n        if x < t \n            return false \n    end \n    return true\
    \ \nend \n</cell>\n<code language=julia-1.5>\nbelow_threshold([1, 2, 4, 10], 100)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of elements\
    \ in a vector that are less than a given threshold.", "    for x in l\n      \
    \  if x < t\n            return false\n    end\n    return true\nend", "    for\
    \ x in l \n        if x < t \n            return false \n    end \n    return\
    \ true \nend ", "    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"", "    for x in l\n        if x < t\n            return false\n  \
    \  end\n    return true\nend", "    for x in l\n        if x < t\n           \
    \ return false\n    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns true if all numbers in the vector l are equal to threshold\
    \ t.\n    >>> all_equal([1, 2, 4, 10], 100)\n    true\n    >>> all_equal([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n        if x < t\n    \
    \        return false\n        end\n    end\n    return true\nend", "    for x\
    \ in l\n        if x < t\n            return false\n    end\n    return true\n\
    end", "    for i in l\n        if i < t\n            return false\n        end\n\
    \    end\n    return true\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"Return\
    \ true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"", "    for x in l\n        if x < t\n            return false\n  \
    \  end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns true if the vector l contains all numbers in the vector u below threshold\
    \ t.\n    >>> below_threshold([1, 2, 4, 10], [1, 20, 4, 10])\n    true\n    >>>\
    \ below_threshold([1, 20, 4, 10], [1, 2, 4, 10])\n    false\n    \"\"\"", "  \
    \  for x in l\n        if x < t\n            return false\n    end\n    return\
    \ true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1, 2,\
    \ 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns true if the vector\
    \ l has at least two elements that are both below threshold t.", "    for x in\
    \ l\n        if x < t\n            return false\n    end\n    return true\nend",
  "    for x in l\n        if x < t\n            return false\n    end\n    return\
    \ true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1, 2,\
    \ 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns true if the vector\
    \ l contains any numbers that are not in the vector u. For example, if the vector\
    \ l is [10, 20, 30] and the vector u is [10, 20, 30], your function should return\
    \ true.", "    for i in l\n        if i < t\n            return false\n      \
    \  end\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\
    \"Return true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"", "    for x in l\n        if x < t\n            return false\n  \
    \      end\n    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns true if all numbers in the vector l are above threshold\
    \ t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n        if x < t\n\
    \            return false\n    end\n    return true\nend", "    for x in l\n \
    \       if x < t\n            return false\n    end\n    return true\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that returns true if all numbers in the vector\
    \ l are above threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n\
    \    >>> above_threshold([1, 20, 4, 10], 5)\n    true\n    \"\"\"", "    l <=\
    \ t\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the number\
    \ of elements in a vector that are greater than a specified value.", "    for\
    \ x in l\n        if x < t\n            return false\n    end\n    return true\n\
    end", "    for x in l\n        if x < t\n            return false\n    return\
    \ true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1, 2,\
    \ 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns true if the vector\
    \ l has at least two elements that are both below threshold t.", "    for x in\
    \ l\n        if x < t\n            return false\n    end\n    return true\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns true if all numbers\
    \ in the vector l are greater than threshold t.\n    >>> below_threshold([1, 2,\
    \ 4, 10], 5)\n    false\n    >>> below_threshold([1, 20, 4, 10], 100)\n    true\n\
    \    \"\"\"", "    for x in l\n        if x < t\n            return false\n  \
    \  end\n    return true\nend\n</cell>\n<code language=julia-1.5>\nbelow_threshold([1,\
    \ 2, 4, 10], 100)\n</cell>\n<code language=julia-1.5>\nbelow_threshold([1, 20,\
    \ 4, 10], 5)\n</cell>\n<text>\nExercise 2\nWrite a function that returns the number\
    \ of elements in a vector that are greater than a given threshold t.", "    l\
    \ <= t\nend\n</cell>\n<text>\nExercise\nWrite a function that returns true if\
    \ all numbers in the vector l are greater than threshold t.\nWrite a function\
    \ that returns true if all numbers in the vector l are greater than or equal to\
    \ threshold t.\nWrite a function that returns true if all numbers in the vector\
    \ l are less than threshold t.\nWrite a function that returns true if all numbers\
    \ in the vector l are less than or equal to threshold t.", "    for x in l\n \
    \       if x < t\n            return false\n    end\n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert below_threshold([1, 2, 4, 10], 100) == true\n\
    @assert below_threshold([1, 20, 4, 10], 5) == false\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the number of elements in a vector that are\
    \ less than a specified threshold.", "    for x in l\n        if x < t\n     \
    \       return false\n    end\n    return true\nend", "    for x in l\n      \
    \  if x < t\n            return false\n    end\n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\nbelow_threshold([1, 2, 4, 10], 100)\n</cell>\n<code\
    \ language=julia-1.5>\nbelow_threshold([1, 20, 4, 10], 5)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of elements in a vector that are\
    \ less than a given threshold t.", "    for x in l\n        if x < t\n       \
    \     return false\n    return true\nend\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns true if all numbers in the vector l are greater than threshold\
    \ t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"", "    for n in l\n        if n < t\n\
    \            return false\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    below_threshold([1, 2, 4, 10], 100)\n</cell>\n<code language=julia-1.5>\nbelow_threshold([1,\
    \ 20, 4, 10], 5)\n</cell>\n<text>\nExercise: Write a function that returns the\
    \ number of elements in a vector that are below a certain threshold. Test it on\
    \ some vectors.", "    for x in l\n        if x < t\n            return false\n\
    \        end\n    end\n    return true\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that returns true if all numbers in the vector l are greater than\
    \ threshold t.\n    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>>\
    \ below_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\
    \ \n        if x < t \n            return false \n    end \n    return true \n\
    end ", "    for x in l\n        if x < t\n            return false\n    end\n\
    \    return true\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"Return true if\
    \ all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"", "    for x in l \n        if x < t \n            return false \n\
    \    return true \nend\n</cell>\n<text>\nExercise 4\nWrite a function that returns\
    \ true if the vector l contains at least two numbers that are both below threshold\
    \ t and above threshold t.\nHint: Use the function below_threshold.", "    for\
    \ x in l\n        if x < t\n            return false\n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"Return true if all numbers in the vector l are\
    \ above threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n\
    \    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"", "    for\
    \ x in l\n        if x < t\n            return false\n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"Return true if all numbers in the vector l are\
    \ above threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n\
    \    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"", "    for\
    \ x in l\n        if x < t\n            return false\n    end\n    return true\n\
    end\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true if all numbers in the\
    \ vector l are above threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n\
    \    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"",
  "    for x in l\n        if x < t\n            return false\n    end\n    return\
    \ true\nend", "    for i in l\n        if i < t\n            return false\n  \
    \      end\n    end\n    return true\nend", "    for x in l\n        if x < t\n\
    \            return false\n    return true\nend", "    for x in l\n        if\
    \ x < t\n            return false\n    end\n    return true\nend\n</cell>\n<code\
    \ language=julia-1.5>\n\"\"\"Return true if all numbers in the vector l are above\
    \ threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>>\
    \ above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\
    \ \n        if x < t \n            return false \n    return true \nend ", " \
    \   for i in l\n        if i < t\n            return false\n    end\n    return\
    \ true\nend", "    for x in l\n        if x < t\n            return false\n  \
    \  end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns true if all numbers in the vector l are greater than threshold t.\n\
    \    >>> below_threshold([1, 2, 4, 10], 5)\n    false\n    >>> below_threshold([1,\
    \ 20, 4, 10], 100)\n    true\n    \"\"\"", "    for x in l\n        if x < t\n\
    \            return false\n    return true\nend", "    for x in l \n        if\
    \ x < t \n            return false \n    end \n    return true \nend \n</cell>\n\
    <text>\nExercise 4\nWrite a function that returns true if all numbers in the vector\
    \ l are greater than threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n\
    \    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"",
  "    for x in l\n        if x < t\n            return false\n    return true\nend",
  "    for x in l\n        if x < t\n            return false\n    return true\nend",
  "    for x in l\n        if x < t\n            return false\n    end\n    return\
    \ true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1, 2,\
    \ 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns true if the vector\
    \ l contains at least one number that is greater than or equal to threshold t.",
  "    for x in l \n        if x < t \n            return false \n    end \n    return\
    \ true \nend \n</cell>\n<code language=julia-1.3>\n\"\"\"Return true if all numbers\
    \ in the vector l are above threshold t.\n    >>> above_threshold([1, 2, 4, 10],\
    \ 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\
    \"\"", "    for x in l\n        if x < t\n            return false\n    end\n\
    \    return true\nend", "    for x in l\n        if x < t\n            return\
    \ false\n    end\n    return true\nend\n</cell>\n<code language=julia-1.4>\n\"\
    \"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n        if x < t\n    \
    \        return false\n    end\n    return true\nend", "    for x in l\n     \
    \   if x < t\n            return false\n    end\n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert below_threshold([1, 2, 4, 10], 100) == true\n\
    @assert below_threshold([1, 20, 4, 10], 5) == false\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns true if the vector l contains at least two\
    \ numbers that are both below threshold t.", "    for x in l\n        if x < t\n\
    \            return false\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n        if x < t\n    \
    \        return false\n    end\n    return true\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns true if all numbers in the vector l are above\
    \ threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>>\
    \ above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"", "    for n in l\
    \ \n        if n < t \n            return false \n    return true \nend\n</cell>\n\
    <code language=julia-1.5>\n@assert below_threshold([1, 2, 4, 10], 100) == true\n\
    @assert below_threshold([1, 20, 4, 10], 5) == false\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of times the value t appears in\
    \ the vector l.", "    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that returns true if the vector l has at least two non-negative numbers in it.",
  "    below_threshold = false\n    for n in l\n        if n < t\n            below_threshold\
    \ = true\n            break\n        end\n    end\n    return below_threshold\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that returns true if the vector\
    \ l contains any numbers that are not in the vector u. For example, if the vector\
    \ l is [4, 6, 10] and u is [4, 6, 10, 15], the function should return true.",
  "    for x in l\n        if x < t\n            return false\n    end\n    return\
    \ true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1, 2,\
    \ 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns true if all numbers\
    \ in the vector l are greater than threshold t.\n    >>> above_threshold([1, 2,\
    \ 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"", "    below_threshold = false\n    for x in l\n        if x < t\n\
    \            below_threshold = true\n            break\n        end\n    end\n\
    \    return below_threshold\nend\n</cell>\n<text>\nExercise 7: Write a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n        if x < t\n\
    \            return false\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"", "    for n in l \n        if n < t \n  \
    \          return false \n    end \n    return true \nend \n</cell>\n<text>\n\
    Exercise\nWrite a function that returns true if all numbers in the vector l are\
    \ below threshold t.\nWrite a function that returns true if all numbers in the\
    \ vector l are above threshold t.\nWrite a function that returns true if all numbers\
    \ in the vector l are between threshold t and threshold t+1.\nWrite a function\
    \ that returns true if all numbers in the vector l are between threshold t and\
    \ threshold t+2.\nWrite a function that returns true if all numbers in the vector\
    \ l are between threshold t and threshold t+3.\nWrite a function that returns\
    \ true if all numbers in the vector l are between threshold t and threshold t+4.",
  "    for n in l\n        if n < t\n            return false\n    end\n    return\
    \ true\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns true if\
    \ all numbers in the vector l are greater than threshold t.\n    >>> below_threshold([1,\
    \ 2, 4, 10], 5)\n    false\n    >>> below_threshold([1, 20, 4, 10], 100)\n   \
    \ true\n    \"\"\"", "    for x in l\n        if x < t\n            return false\n\
    \    end\n    return true\nend", "    for x in l\n        if x < t\n         \
    \   return false\n        end\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n        if x < t\n    \
    \        return false\n    return true\nend", "    for x in l\n        if x <\
    \ t\n            return false\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n        if x < t\n    \
    \        return false\n    end\n    return true\nend\n</cell>\n<text>\nExercise\
    \ 4\nWrite a function that returns true if all numbers in the vector l are equal\
    \ to threshold t.\n    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n   \
    \ >>> below_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"", "    for x in\
    \ l\n        if x < t\n            return false\n    end\n    return true\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns true if the vector\
    \ l contains any numbers that are not in the vector u.", "    for x in l \n  \
    \      if x < t \n            return false \n    end \n    return true \nend \n\
    </cell>\n<code language=julia-1.5>\n\"\"\"Return true if all numbers in the vector\
    \ l are above threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n\
    \    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"", "    for\
    \ x in l\n        if x < t\n            return false\n    end\n    return true\n\
    end", "    for x in l \n        if x < t \n            return false \n    end\
    \ \n    return true \nend \n</cell>\n<text>\nExercise: Write a function that returns\
    \ true if all numbers in the vector l are greater than threshold t.\nHint: Use\
    \ a for loop.", "    for x in l\n        if x < t\n            return false\n\
    \        end\n    end\n    return true\nend\n</cell>\n<text>\nExercise 4\nWrite\
    \ a function that returns true if all numbers in the vector l are greater than\
    \ threshold t.\n    >>> below_threshold([1, 2, 4, 10], 100)\n    true\n    >>>\
    \ below_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n\
    \        if x < t\n            return false\n        end\n    end\n    return\
    \ true\nend", "    for x in l \n        if x < t \n            return false \n\
    \    return true \nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true\
    \ if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"", "    for x in l\n        if x < t\n            return false\n  \
    \  return true\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"Return true if\
    \ all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"", "    for x in l \n        if x < t \n            return false \n\
    \    end \n    return true \nend \n</cell>\n<code language=julia-1.5>\n\"\"\"\
    Return true if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"", "    l = sort(l)\n    l = l[l .< t]\n    length(l) == 0 || t ==\
    \ 0\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1, 2, 4,\
    \ 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n</cell>\n\
    <text>\nExercise 2\nWrite a function below that takes a list of numbers and returns\
    \ the sum of the numbers in the list that are below the threshold t.", "    for\
    \ x in l\n        if x < t\n            return false\n    return true\nend\n</cell>\n\
    <code language=julia-1.5>\n\"\"\"Return true if all numbers in the vector l are\
    \ above threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n\
    \    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"", "    for\
    \ x in l\n        if x < t\n            return false\n    end\n    return true\n\
    end\n</cell>\n<code language=julia-1.5>\nbelow_threshold([1, 2, 4, 10], 100)\n\
    </cell>\n<code language=julia-1.5>\nbelow_threshold([1, 20, 4, 10], 5)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of elements in a\
    \ vector that are less than a given threshold.", "    for x in l \n        if\
    \ x < t \n            return false \n    end \n    return true \nend \n</cell>\n\
    <code language=julia-1.5>\n@assert below_threshold([1, 2, 4, 10], 100) == true\n\
    @assert below_threshold([1, 20, 4, 10], 5) == false\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns true if all numbers in the vector l are less\
    \ than or equal to threshold t.\nHint: use the function below_threshold.", " \
    \   for x in l \n        if x < t \n            return false \n    end \n    return\
    \ true \nend \n</cell>\n<text>\nExercise 4\nWrite a function that returns true\
    \ if all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    true\n\
    \    \"\"\"", "    for x in l\n        if x < t\n            return false\n  \
    \  return true\nend", "    for x in l \n        if x < t \n            return\
    \ false \n    return true \nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"", "    for i in l\n        if i < t\n\
    \            return false\n    end\n    return true\nend", "    for x in l \n\
    \        if x < t \n            return false \n    return true \nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns true if all numbers in the vector\
    \ l are above threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n\
    \    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"", "    for\
    \ x in l\n        if x < t\n            return false\n        end\n    end\n \
    \   return true\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Return true if\
    \ all numbers in the vector l are above threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"", "    for x in l\n        if x < t\n            return false\n  \
    \  end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1,\
    \ 2, 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the number of elements\
    \ in a vector that are less than a given threshold t.", "    for x in l\n    \
    \    if x < t\n            return false\n    return true\nend", "    for x in\
    \ l\n        if x < t\n            return false\n        end\n    end\n    return\
    \ true\nend", "    for x in l \n        if x < t \n            return false \n\
    \    end \n    return true \nend \n</cell>\n<text>\nExercise 7\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n        if x < t\n\
    \            return false\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"", "    for n in l\n        if n < t\n    \
    \        return false\n    end\n    return true\nend", "    for x in l\n     \
    \   if x < t\n            return false\n    end\n    return true\nend", "    for\
    \ x in l\n        if x < t\n            return false\n    end\n    return true\n\
    end", "    for n in l \n        if n < t \n            return false \n    end\
    \ \n    return true \nend ", "    for x in l\n        if x < t\n            return\
    \ false\n    end\n    return true\nend", "    for x in l \n        if x < t \n\
    \            return false \n    end \n    return true \nend \n</cell>\n<code language=julia-1.3>\n\
    \"\"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n        if x < t\n    \
    \        return false\n    end\n    return true\nend", "    for x in l \n    \
    \    if x < t \n            return false \n    end \n    return true \nend \n\
    </cell>\n<code language=julia-1.5>\n\"\"\"Return true if all numbers in the vector\
    \ l are above threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n\
    \    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"", "    for\
    \ x in l\n        if x < t\n            return false\n    end\n    return true\n\
    end\n</cell>\n<code language=julia-1.4>\n\"\"\"Return true if all numbers in the\
    \ vector l are above threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n\
    \    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"",
  "    for x in l\n        if x < t\n            return false\n    end\n    return\
    \ true\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns true if\
    \ the vector l has at least two numbers that are both below threshold t.\n   \
    \ >>> below_threshold_two([1,2,4,10], 100)\n    true\n    >>> below_threshold_two([1,20,4,10],\
    \ 5)\n    false\n    \"\"\"", "    for x in l\n        if x < t\n            return\
    \ false\n    end\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\"\
    \"\"Return true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n        if x < t\n    \
    \        return false\n    end\n    return true\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns true if all numbers in the vector l are greater\
    \ than threshold t.\n    >>> below_threshold([1, 2, 4, 10], 5)\n    false\n  \
    \  >>> below_threshold([1, 20, 4, 10], 100)\n    true\n    \"\"\"", "    for x\
    \ in l\n        if x < t\n            return false\n    end\n    return true\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1, 2, 4, 10],\
    \ 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of times the value\
    \ t appears in the vector l.", "    for x in l\n        if x < t\n           \
    \ return false\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the number of elements in a vector that are less than a given threshold\
    \ t.", "    for x in l \n        if x < t \n            return false \n    end\
    \ \n    return true \nend ", "    for x in l\n        if x < t\n            return\
    \ false\n    end\n    return true\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    true\n    \"\"\"", "    for x in l\n        if x < t\n \
    \           return false\n    end\n    return true\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns true if all numbers in the vector l are greater\
    \ than threshold t.\n    >>> below_threshold([1, 2, 4, 10], 5)\n    false\n  \
    \  >>> below_threshold([1, 20, 4, 10], 100)\n    true\n    \"\"\"", "    for x\
    \ in l\n        if x < t\n            return false\n    end\n    return true\n\
    end", "    l .< t\nend", "    for x in l\n        if x < t\n            return\
    \ false\n    end\n    return true\nend", "    for x in l\n        if x < t\n \
    \           return false\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert below_threshold([1, 2, 4, 10], 100) == true\n@assert below_threshold([1,\
    \ 20, 4, 10], 5) == false\n</cell>\n<text>\nExercise 2\nWrite a function is_positive(l::Vector{Int64})\
    \ that returns true if all numbers in the vector l are positive.\nWrite a function\
    \ is_negative(l::Vector{Int64}) that returns true if all numbers in the vector\
    \ l are negative.\nWrite a function is_zero(l::Vector{Int64}) that returns true\
    \ if all numbers in the vector l are zero.\nWrite a function is_positive(l::Vector{Int64},\
    \ threshold::Int64) that returns true if all numbers in the vector l are above\
    \ threshold and below zero.\nWrite a function is_negative(l::Vector{Int64}, threshold::Int64)\
    \ that returns true if all numbers in the vector l are above threshold and below\
    \ zero.\nWrite a function is_zero(l::Vector{Int64}, threshold::Int64) that returns\
    \ true if all numbers in the vector l are above threshold and below zero.\nWrite\
    \ a function is_positive(l::Vector{Int64}, threshold::Int64) that returns true\
    \ if all numbers in the vector l are above threshold and below zero.\nWrite a\
    \ function is_negative(l::Vector{Int64}, threshold::Int64) that returns true if\
    \ all numbers in the vector l are above threshold and below zero.\nWrite a function\
    \ is_zero(l::Vector{Int64}, threshold::Int64) that returns true if all numbers\
    \ in the vector l are above threshold and below zero.\nWrite a function is_positive(l::Vector{Int64},\
    \ threshold::Int64) that returns true if all numbers in the vector l are above\
    \ threshold and below zero.\nWrite a function is_negative(l::Vector{Int64}, threshold::Int64)\
    \ that returns true if all numbers in the vector l are above threshold and below\
    \ zero.\nWrite a function is_zero(l::Vector{Int64}, threshold::Int64) that returns\
    \ true if all numbers in the vector l are above threshold and below zero.\nWrite\
    \ a function is_positive(l::Vector{Int64}, threshold::Int64) that returns true\
    \ if all numbers in the vector l are above threshold and below zero.\nWrite a\
    \ function is_negative(l::Vector{Int64}, threshold::Int64) that returns true if\
    \ all numbers in the vector l are above threshold and below zero.\nWrite a function\
    \ is_zero(l::Vector{Int64}, threshold::Int64) that returns true if all numbers\
    \ in the vector l are above threshold and below zero.\nWrite a function is_positive(l::Vector{Int64},\
    \ threshold::Int64) that returns true if all ", "    for n in l\n        if n\
    \ < t\n            return false\n    end\n    return true\nend", "    for x in\
    \ l\n        if x < t\n            return false\n    return true\nend", "    for\
    \ x in l\n        if x < t\n            return false\n    end\n    return true\n\
    end\n</cell>\n<text>\nExercise 4\nWrite a function that returns true if all numbers\
    \ in the vector l are above threshold t.\n    >>> above_threshold([1, 2, 4, 10],\
    \ 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\
    \"\"", "    for x in l\n        if x < t\n            return false\n    end\n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\nbelow_threshold([1,\
    \ 2, 4, 10], 100)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ true if all numbers in the vector l are greater than threshold t.\n    >>> below_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"", "    for x in l \n        if x < t \n\
    \            return false \n    end \n    return true \nend \n</cell>\n<code language=julia-1.5>\n\
    @assert below_threshold([1, 2, 4, 10], 100) == true\n@assert below_threshold([1,\
    \ 20, 4, 10], 5) == false\n</cell>\n<text>\nExercise 3\nWrite a function called\
    \ below_threshold_v2 that does the same thing as below_threshold except that it\
    \ does not use an explicit for loop.", "    for x in l\n        if x < t\n   \
    \         return false\n    end\n    return true\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns true if all numbers in the vector l are above\
    \ threshold t.\n    >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>>\
    \ above_threshold([1, 20, 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n\
    \        if x < t\n            return false\n    end\n    return true\nend", " \
    \   for i in l\n        if i < t\n            return false\n    end\n    return\
    \ true\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns true if\
    \ all numbers in the vector l are greater than threshold t.\n    >>> above_threshold([1,\
    \ 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20, 4, 10], 5)\n    false\n\
    \    \"\"\"", "    l .< t\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that returns true if all numbers in the vector l are above threshold t.\n  \
    \  >>> above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1,\
    \ 20, 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n        if x < t\n\
    \            return false\n    return true\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert below_threshold([1, 2, 4, 10], 100) == true\n@assert below_threshold([1,\
    \ 20, 4, 10], 5) == false\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns true if all numbers in the vector l are above threshold t.\n    >>>\
    \ above_threshold([1, 2, 4, 10], 100)\n    true\n    >>> above_threshold([1, 20,\
    \ 4, 10], 5)\n    false\n    \"\"\"", "    for x in l\n        if x < t\n    \
    \        return false\n    return true\nend", "    for x in l\n        if x <\
    \ t\n            return false\n    return true\nend", "    for x in l \n     \
    \   if x < t \n            return false \n    end \n    return true \nend ", " \
    \   for x in l\n        if x < t\n            return false\n        end\n    end\n\
    \    return true\nend\n</cell>\n<code language=julia-1.5>\n@assert below_threshold([1,\
    \ 2, 4, 10], 100) == true\n@assert below_threshold([1, 20, 4, 10], 5) == false\n\
    </cell>\n<text>\nExercise 2\nWrite a function below that takes a vector of numbers\
    \ and a threshold and returns a vector of booleans indicating which numbers are\
    \ below the threshold. For example, below([10, 20, 30, 40], 30) should return\
    \ a vector [false, true, false, true]."]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

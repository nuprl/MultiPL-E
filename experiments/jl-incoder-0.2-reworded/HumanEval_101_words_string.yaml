name: HumanEval_101_words_string
language: jl
prompt: "\"\"\"\n    You will be given a string of words separated by commas or spaces.\
  \ Your task is\n    to split the string into words and return a vector of the words.\n\
  \    \n    For example:\n    >>> words_string(\"Hi, my name is John\")\n    [\"\
  Hi\", \"my\", \"name\", \"is\", \"John\"]\n    >>> words_string(\"One, two, three,\
  \ four, five, six\")\n    [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
  ]\n    \"\"\"\nfunction words_string(s::String)::Vector{String} \n"
tests: "using Test\n\n@testset begin\n\ncandidate = words_string;\n\t@test(candidate(\"\
  Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\t@test(candidate(\"\
  One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"\
  five\", \"six\"])\n\t@test(candidate(\"Hi, my name\") == [\"Hi\", \"my\", \"name\"\
  ])\n\t@test(candidate(\"One,, two, three, four, five, six,\") == [\"One\", \"two\"\
  , \"three\", \"four\", \"five\", \"six\"])\n\t@test(candidate(\"\") == Vector{String}([]))\n\
  \t@test(candidate(\"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])\nend\n"
completions: ["    \n    words_string = split(s, \",\")\n    words_string = split(s,\
    \ \" \")\n    \n    return words_string\nend", "    \n    words_string = split(s)\n\
    \    \n    return words_string\nend", "    \n    words_string=split(s)\n    \n\
    \    return words_string\nend\n</cell>\n<code language=julia-1.3>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string and returns a vector of strings where each string is a word in the\
    \ original string.", "    \n    words_string = split(s, \",\")\n    words_string\
    \ = split(s, \" \")\n    \n    return words_string\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of words and returns a vector of counts for each word.",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    words_string\
    \ = \"\"\n    \n    for word in split(s, \",\")\n        words_string += word\n\
    \        \n    return words_string\nend", "    \n    words = split(s)\n    \n\
    \    return words\nend", "    \n    words = split(s)\n    \n    return words\n\
    end", "    \n    words = split(s)\n    \n    return words\nend", "    \n    words_string\
    \ = split(s)\n    \n    return words_string\nend", "    \n    words_string = []\n\
    \    \n    for word in split(s)\n        push!(words_string, word)\n    end\n\
    \    \n    return words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a vector of words and returns a vector of counts for each word.", "    \n  \
    \  words = split(s, \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_words that counts the number of words in a string. \nThe function should\
    \ take a string as input and return a dictionary of the form {word : count}. \n\
    The function should ignore punctuation and only count the words that are not empty\
    \ strings.\nFor example, count_words(\"Hi, my name is John\") should return {name\
    \ : 2, Hi: 1}.", "    \n    words_string = \"\"\n    \n    for word in split(s)\n\
    \        words_string += word + \" \"\n    end\n    \n    return words_string.split(\"\
    \ \")\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is\
    \ John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two, three,\
    \ four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function called count_words\
    \ that takes a string and returns a vector of counts of the number of times each\
    \ word appears in the string.", "    \n    words = split(s)\n    \n    return\
    \ words\nend", "    \n    words = split(s)\n    \n    return words\nend\n</cell>\n\
    <code language=julia-1.0>\nwords_string(\"Hi, my name is John\")\n</cell>\n<code\
    \ language=julia-1.0>\nwords_string(\"One, two, three, four, five, six\")\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string and returns a vector\
    \ of strings. Your function should split each string into words and return a vector\
    \ of words. \nFor example, \n>>> string_to_words(\"Hi, my name is John\")\n[\"\
    Hi\", \"my\", \"name\", \"is\", \"John\"]\n>>> string_to_words(\"One, two, three,\
    \ four, five, six\")\n[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ]\n\"\"\"", "    \n    words = split(s)\n    \n    return words\nend\n</cell>\n\
    <code language=julia-1.4>\nwords_string(\"Hi, my name is John\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of words and returns a vector\
    \ of numbers. Each number represents the frequency of the word in the given vector.",
  "    \n    words_string = split(s)\n    \n    return words_string\nend", "    \n\
    \    words = split(s)\n    \n    return words\nend", "    \n    words = split(s)\n\
    \    \n    return words\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns a vector of strings. Each string in the vector\
    \ is the word in the string surrounded by spaces.", "    \n    words_string =\
    \ []\n    for word in split(s, \",\")\n        words_string = [word | words_string]\n\
    \    end\n    return words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string and returns the number of words in the string.", "    \n    words_string\
    \ = split(s)\n    \n    return words_string\nend", "    \n    words_string = split(s)\n\
    \    \n    return words_string\nend", "    \n    words = split(s)\n    \n    return\
    \ words\nend\n</cell>\n<code language=julia-1.1>\nwords_string(\"Hi, my name is\
    \ John\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector of\
    \ words and returns a vector of numbers. \nThe numbers should be the frequency\
    \ of each word in the input vector. \nThe input vector will contain only words\
    \ that are in the word_freqs dictionary.\nThe output vector should contain only\
    \ numbers, not strings.", "    \n    words_string = split(s)\n    words_string\n\
    end", "    \n    words = split(s)\n    \n    return words\nend", "    \n    words_string\
    \ = split(s)\n    \n    return words_string\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of words and returns a vector of numbers. Each number represents\
    \ the number of times a word appears in the original string.", "    \n    words_string\
    \ = \"\"\n    \n    for word in split(s)\n        words_string += word + \" \"\
    \n    end\n    \n    return words_string.split(\" \")\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of strings and returns a vector of integers representing\
    \ the\nnumber of times each string appears in the vector.", "    \n    words =\
    \ split(s, \",\")\n    \n    return words\nend", "    \n    words = split(s)\n\
    \    \n    return words\nend", "    \n    words_string=split(s)\n    \n    return\
    \ words_string\nend", "    \n    words_string = split(s, \",\")\n    words_string\
    \ = split(s, \" \")\n    \n    return words_string\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns a vector of strings. Your function should split\
    \ each string on spaces and then remove any empty strings. For example:", "  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    words_string\
    \ = split(s, \",\")\n    words_string = split(s, \" \")\n    return words_string\n\
    end", "    \n    words_string = split(s)\n    \n    return words_string\nend",
  "    \n    words_string = []\n    \n    for word in split(s)\n        push!(words_string,\
    \ word)\n    end\n    \n    return words_string\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of strings and returns a vector of vectors of the words\
    \ in each string. \nFor example, \n    words_strings([\"Hi, my name is John\"\
    , \"Hi, my name is Jane\"])\nshould return \n    [[\"Hi\", \"my\", \"name\"],\
    \ [\"is\", \"John\"], [\"is\", \"Jane\"]]\nHint: Use split", "    \n    words_string\
    \ = split(s, \",\")\n    words_string = split(s, \" \")\n    words_string\nend",
  "    \n    words = split(s, \",\")\n    \n    return words\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    words_string = []\n    \n    for word in split(s,\
    \ \",\")\n        words_string = [word | words_string]\n    end\n    \n    return\
    \ words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my\
    \ name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two,\
    \ three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ takes a string and returns a vector of strings where each string is the reverse\
    \ of the string in the original string. For example, \n    \n    >>> reverse_string(\"\
    Hi, my name is John\")\n    [\"oh, my name is Hi\", \"no, my name is John\"]\n\
    \    >>> reverse_string(\"One, two, three, four, five, six\")\n    [\"six, five,\
    \ four, three, two, one\"]\n    \"\"\"", "    \n    words_string=split(s)\n  \
    \  return words_string\nend", "    \n    words = split(s)\n    \n    return words\n\
    end", "    \n    words_string = split(s)\n    return words_string\nend\n</cell>\n\
    <code language=julia-1.5>\nwords_string(\"Hi, my name is John\")\n</cell>\n<code\
    \ language=julia-1.5>\nwords_string(\"One, two, three, four, five, six\")\n</cell>\n\
    <text>\nExercise: Write a function that takes a string and returns the number\
    \ of words in the string.", "    words = split(s, \",\")\n    words_vector = Vector{String}(undef,\
    \ 0)\n    for word in words\n        words_vector = push!(words_vector, word)\n\
    \    end\n    return words_vector\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of words and returns a vector of counts of the number of times each\
    \ word appears in the input vector.", "    \n    words_string = split(s, \",\"\
    )\n    return words_string\nend", "    words = split(s)\n    \n    return words\n\
    end", "    \n    words = split(s, \",\")\n    \n    return words\nend\n</cell>\n\
    <code language=julia-1.5>\nwords_string(\"Hi, my name is John\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string and returns a vector of strings.\
    \ Each string in the vector is the word in the string surrounded by spaces.",
  "    \n    words = split(s, \",\")\n    \n    return words\nend", "    \n    words_string\
    \ = split(s)\n    \n    return words_string\nend", "    \n    words = split(s,\
    \ \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns a vector of strings where each string is a word\
    \ in the original string.", "    \n    words_string = split(s, \",\")\n    words_string\
    \ = split(s, \" \")\n    \n    return words_string\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns a vector of strings. Your function should split\
    \ the string into words and return a vector of strings. \nFor example, \n    words_string(\"\
    Hi, my name is John\")\nshould return a vector containing the following strings:\n\
    \    [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\nHint: Use split() to split\
    \ the string into words.", "    \n    words_string = split(s, \",\")\n    words_string\
    \ = split(s, \" \")\n    \n    return words_string\nend", "    \n    words = split(s)\n\
    \    \n    return words\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of words and returns a vector of the length of each word.\
    \ \nFor example, words_length([\"Hi\", \"my\", \"name\", \"is\", \"John\"]) should\
    \ return [5, 3, 7, 4, 1]", "    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n", "    \n    words_string = split(s)\n    \n    return words_string\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two, three, four, five,\
    \ six\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector of\
    \ words and returns a vector of numbers. Each number represents the number of\
    \ times the word occurs in the given string.", "    \n    words_string = \"\"\n\
    \    \n    for word in split(s)\n        words_string += word + \" \"\n    end\n\
    \    \n    words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of words and returns a vector of integers representing the\n\
    number of times each word appears in the input vector.\nFor example, if the input\
    \ vector is [\"Hi\", \"my\", \"name\", \"is\", \"John\"] then the output vector\n\
    should be [2, 2, 1, 2, 1]", "    \n    words = split(s, \",\")\n    \n    return\
    \ words\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"Hi, my name is\
    \ John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"One, two, three,\
    \ four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function called words_string\
    \ that takes a string and returns a vector of words. Your function should split\
    \ on spaces and commas. Your function should ignore any empty strings. Your function\
    \ should ignore any strings that only contain spaces or commas.", "    \n    words\
    \ = split(s)\n    \n    return words\nend\n</cell>\n<code language=julia-1.0>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of words and returns a vector of integers representing the\n\
    number of times each word appears in the input vector.", "    \n    words_string\
    \ = split(s)\n    \n    return words_string\nend", "    \n    words = split(s,\
    \ \",\")\n    \n    return words\nend", "    \n    words_string=split(s,\",\"\
    )\n    words_string=split(s,\" \")\n    words_string\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise\nWrite a function\
    \ that takes a vector of words and returns a vector of numbers, where each number\
    \ is the frequency of the word in the input vector.", "    \n    words_string\
    \ = []\n    \n    for word in split(s, \",\")\n        words_string = [word |\
    \ words_string]\n    end\n    \n    return words_string\nend", "    \n    words\
    \ = split(s, \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.0>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of strings and returns a vector of strings where each string\
    \ has been concatenated with the string \"-\".", "    \n    words = split(s)\n\
    \    \n    return words\nend", "    \n    words_string = split(s)\n    \n    return\
    \ words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my\
    \ name is John\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ vector of words and returns a vector of integers representing the\nnumber of\
    \ times each word appears in the input vector.", "    \n    words_string = split(s)\n\
    \    words_string\nend", "    \n    words_string = split(s)\n    \n    return\
    \ words_string\nend", "    \n    words = split(s)\n    \n    return words\nend\n\
    </cell>\n<code language=julia-1.0>\nwords_string(\"Hi, my name is John\")\n</cell>\n\
    <text>\nExercise 3\nWrite a function called count_words that takes a string and\
    \ returns the number of words in the string.", "    \n    words = split(s)\n \
    \   \n    return words\nend", "    words = split(s, \",\")\n    \n    return words\n\
    end\n</cell>\n<code language=julia-1.3>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and returns\
    \ a vector of words that start with \"the\".", "    \n    words_string = \"\"\n\
    \    \n    for word in split(s)\n        words_string += word + \" \"\n    end\n\
    \    \n    return words_string\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of words and returns a vector of the lengths of the words.\
    \ \nFor example, words_length([\"Hi\", \"my\", \"name\", \"is\", \"John\"]) should\
    \ return a vector [5, 7, 7, 7, 7].", "    \n    words_string = split(s, \",\"\
    )\n    words_string = split(s, \" \")\n    \n    return words_string\nend", " \
    \   \n    words_string = split(s)\n    words_string\nend", "    \n    words_string\
    \ = split(s)\n    \n    return words_string\nend", "    \n    words = split(s)\n\
    \    \n    return words\nend", "    \n    words = split(s, \" \")\n    \n    return\
    \ words\nend", "    \n    words_string = split(s)\n    \n    return words_string\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two, three, four, five,\
    \ six\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector of\
    \ words and returns a vector of counts of the number of times each word appears\
    \ in the input vector.", "    \n    words = split(s)\n    \n    return words\n\
    end\n</cell>\n<code language=julia-1.4>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<code language=julia-1.4>\nwords_string(\"One, two, three, four, five,\
    \ six\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of\
    \ words and returns a vector of counts of the number of times each word appears\
    \ in the given string.", "    \n    words_string = split(s)\n    \n    return\
    \ words_string\nend", "    \n    words_string = split(s)\n    \n    return words_string\n\
    end\n</cell>\n<code language=julia-1.0>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<code language=julia-1.0>\nwords_string(\"One, two, three, four, five,\
    \ six\")\n</cell>\n<text>\nExercise 3\nWrite a function count_words that counts\
    \ the number of words in a string.", "    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n", "    \n    words_string = split(s)\n    \n    return words_string\n\
    end", "    \n    words_string = split(s)\n    \n    return words_string\nend",
  "    \n    words_string = \"\"\n    for word in split(s)\n        words_string +=\
    \ word + \" \"\n    end\n    words_string\nend\n</cell>\n<code language=julia-1.4>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of words and returns a vector of numbers. Each number represents\
    \ the number of times that word appears in the input vector.", "    \n    words_string\
    \ = []\n    \n    for word in split(s)\n        words_string = [word | words_string]\n\
    \    end\n    \n    return words_string\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of words and returns a vector of counts of the number of\
    \ times each word appears in the input vector. For example, if the input vector\
    \ is [\"Hi\", \"my\", \"name\", \"is\", \"John\"], then the output vector should\
    \ be [2 1 3 1 2 1].", "    \n    words_string = split(s, \",\")\n    words_string\
    \ = split(s, \" \")\n    \n    return words_string\nend", "    \n    words_string\
    \ = split(s)\n    \n    return words_string\nend", "    \n    words = split(s,\
    \ \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.4>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.4>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ count_words that counts the number of words in a string.", "    \n    words_string\
    \ = []\n    \n    for word in split(s)\n        push!(words_string, word)\n  \
    \  end\n    \n    return words_string\nend\n</cell>\n<code language=julia-1.4>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of words and returns a vector of counts of the number of\
    \ times each word appears in the input vector.", "    \n    words_string = split(s)\n\
    \    return words_string\nend", "    \n    words = split(s)\n    \n    return\
    \ words\nend", "    \n    words = split(s, \",\")\n    \n    return words\nend",
  "    \n    words_string = split(s, \",\")\n    words_string = split(s, \" \")\n\
    \    words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi,\
    \ my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns a vector of words that start with a given letter.\
    \ For example, words_start(\"Hi, my name is John\", \"n\") should return [\"my\"\
    , \"name\"].", "    \n    words_string = split(s)\n    \n    return words_string\n\
    end", "    \n    words_string = split(s)\n    \n    return words_string\nend",
  "    \n    words = split(s)\n    \n    return words\nend", "    \n    words = split(s)\n\
    \    \n    return words\nend", "    \n    words = split(s, \",\")\n    \n    return\
    \ words\nend\n</cell>\n<code language=julia-1.4>\nwords_string(\"Hi, my name is\
    \ John\")\n</cell>\n<code language=julia-1.4>\nwords_string(\"One, two, three,\
    \ four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of words and returns a vector of counts of the number of times each\
    \ word appears in the given string.", "    \n    words_string=split(s)\n    \n\
    \    return words_string\nend\n</cell>\n<code language=julia-1.3>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.3>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ called words_string that takes a string and returns a vector of strings. \n\
    The function should split the string into words and return a vector of the words.",
  "    \n    words_string = split(s)\n    \n    return words_string\nend", "    \n\
    \    words = split(s, \",\")\n    \n    return words\nend", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    words_string = \"\"\n    \n\
    \    for word in split(s, \",\")\n        words_string += word\n        \n   \
    \ return words_string\nend", "    \n    words_string = []\n    \n    for word\
    \ in split(s, \",\")\n        words_string = [word | words_string]\n    end\n\
    \    \n    for word in split(s, \" \")\n        words_string = [word | words_string]\n\
    \    end\n    \n    return words_string\nend", "    \n    words = split(s, \"\
    ,\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a vector of words and returns a vector of numbers. Each number represents the\
    \ number of times that word appears in the given vector.", "    \n    words_string\
    \ = \"\"\n    \n    for word in split(s)\n        words_string += word + \" \"\
    \n    end\n    \n    words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a string and returns a vector of integers representing the number of times each\
    \ word appears in the string.", "    \n    words = split(s, \",\")\n    \n   \
    \ return words\nend", "    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    \n    words = split(s)\n    \n    return words\nend\n</cell>\n<code language=julia-1.4>",
  "    \n    words_string = split(s, \",\")\n    words_string = split(s, \" \")\n\
    \    words_string\nend\n</cell>\n<code language=julia-1.4>\nwords_string(\"Hi,\
    \ my name is John\")\n</cell>\n<code language=julia-1.4>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of words and returns a vector of integers representing the\n\
    number of times each word appears in the input vector.", "    \n    words_string\
    \ = split(s, \",\")\n    words_string = split(s, \" \")\n    \n    return words_string\n\
    end", "    \n    words = split(s, \",\")\n    \n    return words\nend", "    \n\
    \    words_string = split(s)\n    words_string\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of words and returns a vector of integers representing the\n\
    number of times each word appears in the input vector.", "    \n    words_string\
    \ = []\n    \n    for word in split(s)\n        push!(words_string, word)\n  \
    \  end\n    \n    return words_string\nend\n</cell>\n<code language=julia-1.0>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of words and returns a vector of counts of the number of\
    \ times each word appears in the input vector.", "    \n    words_string = split(s,\
    \ \",\")\n    words_string = split(s, \" \")\n    \n    return words_string\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two, three, four, five,\
    \ six\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a string and\
    \ returns a vector of words that start with a given letter. For example, if the\
    \ input string is \"Hi, my name is John\", and the letter is \"n\", the function\
    \ should return [\"my\", \"name\"].", "    \n    words_string = split(s)\n   \
    \ words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my\
    \ name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ string and returns a vector of strings where each string is a word in the original\
    \ string separated by spaces.", "    \n    words = split(s)\n    \n    return\
    \ words\nend", "    words = split(s, \",\")\n    return words\nend\n</cell>\n\
    <code language=julia-1.0>\nwords_string(\"Hi, my name is John\")\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of words and returns a vector\
    \ of numbers. Each number represents the number of times the word appears in the\
    \ original vector.", "    \n    words_string = \"\"\n    \n    for word in split(s)\n\
    \        words_string += word\n    end\n    \n    return words_string\nend", " \
    \   \n    words = split(s)\n    \n    return words\nend", "    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n", "    \n    words_string = split(s, \"\
    ,\")\n    words_string = split(s, \" \")\n    \n    return words_string\nend",
  "    words = split(s, \",\")\n    words_vector = Vector{String}()\n    for word\
    \ in words\n        words_vector = words_vector + [word]\n    end\n    return\
    \ words_vector\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"Hi, my\
    \ name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ vector of words and returns a vector of the lengths of the words.", "    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    words_string =\
    \ split(s)\n    \n    return words_string\nend", "    \n    words = split(s)\n\
    \    \n    return words\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of words and returns a vector of numbers. Each number represents\
    \ the number of times a word appears in the original vector.", "    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n", "    \n    words_string = []\n    \n    for word in\
    \ split(s)\n        push!(words_string, word)\n    end\n    \n    return words_string\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a string and returns\
    \ the number of words in the string.", "    \n    words_string = split(s)\n  \
    \  \n    return words_string\nend", "    \n    words_string = \"\"\n    \n   \
    \ for word in split(s)\n        words_string += word\n    end\n    \n    return\
    \ words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my\
    \ name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two,\
    \ three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a string and returns a vector of strings where each string is a word in\
    \ the original string. \nThe function should ignore numbers and punctuation marks.",
  "    \n    words = split(s)\n    \n    return words\nend", "    \n    words = split(s)\n\
    \    \n    return words\nend", "    \n    words = split(s)\n    \n    return words\n\
    end", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    words\
    \ = split(s, \",\")\n    \n    return words\nend", "    \n    words_string = []\n\
    \    \n    for word in split(s)\n        words_string = [word] ++ words_string\n\
    \    end\n    \n    return words_string\nend\n</cell>\n<code language=julia-1.0>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns a vector of words. Your function should split\
    \ on spaces and commas, and ignore punctuation.", "    \n    words = split(s)\n\
    \    \n    return words\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns a vector of strings. Your function should split\
    \ each string into words and return a vector of strings. \nFor example, \n   \
    \ \n    >>> string_vector(\"Hi, my name is John\")\n    [\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]\n    >>> string_vector(\"One, two, three, four, five, six\"\
    )\n    [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n    \"\"\"",
  "    \n    words_string = \"\"\n    \n    for word in split(s)\n        words_string\
    \ += word + \" \"\n    end\n    \n    return words_string.split(\" \")\nend\n\
    </cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\")\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a string and returns a vector\
    \ of all the words in the string.", "    \n    words_string = \"\"\n    \n   \
    \ for word in split(s)\n        words_string += word\n    end\n    \n    return\
    \ words_string\nend", "    \n    words_string = split(s)\n    \n    return words_string\n\
    end", "    \n    words_string = split(s, \",\")\n    words_string = split(s, \"\
    \ \")\n    \n    return words_string\nend", "    \n    words_string = \"\"\n \
    \   \n    for word in split(s)\n        words_string += word + \" \"\n    end\n\
    \    \n    return words_string.split(\" \")\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    words = split(s)\n\
    \    \n    return words\nend", "    \n    words = split(s)\n    \n    return words\n\
    end\n</cell>\n<code language=julia-1.0>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector of words\
    \ and returns a vector of numbers. Each number represents the number of times\
    \ a word appears in the input vector.", "    \n    words_string = []\n    \n \
    \   for word in split(s, \",\")\n        words_string = [word | words_string]\n\
    \    end\n    \n    return words_string\nend", "    words = split(s)\n    \n \
    \   return words\nend\n</cell>\n<code language=julia-1.3>\nwords_string(\"Hi,\
    \ my name is John\")\n</cell>\n<code language=julia-1.3>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of words and returns a vector of numbers. Each number represents\
    \ the number of times the word occurs in the given string.", "    \n    words\
    \ = split(s)\n    \n    return words\nend", "    \n    words_string = \"\"\n \
    \   \n    for word in split(s)\n        words_string += word + \" \"\n    end\n\
    \    \n    return words_string\nend", "    \n    words_string = split(s)\n   \
    \ \n    return words_string\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of words and returns a vector of integers representing the\nnumber\
    \ of times each word appears in the input vector.", "    \n    words_string =\
    \ []\n    \n    for word in split(s)\n        push!(words_string, word)\n    end\n\
    \    \n    return words_string\nend", "    \n    words = split(s, \",\")\n   \
    \ \n    return words\nend", "    \n    words_string = split(s, \",\")\n    words_string\
    \ = split(s, \" \")\n    return words_string\nend", "    \n    words = split(s,\
    \ \",\")\n    \n    return words\nend", "    \n    words = split(s)\n    \n  \
    \  return words\nend", "    \n    words_string = split(s)\n    words_string\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two, three, four, five,\
    \ six\")\n</cell>\n<text>\nExercise 2\nWrite a function count_words that takes\
    \ in a string and returns the number of words in the string.", "    \n    words_string=split(s)\n\
    \    \n    return words_string\nend", "    \n    words_string = split(s, \",\"\
    )\n    words_string = split(s, \" \")\n    \n    return words_string\nend", " \
    \   \n    words_string = []\n    for word in split(s, \",\")\n        push!(words_string,\
    \ word)\n    end\n    return words_string\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of words and returns a vector of counts of the number of\
    \ times each word appears in the input vector.", "    \n    words_string = split(s)\n\
    \    \n    return words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a vector of words and returns a vector of numbers, where each number\
    \ represents the number of times that word appears in the input vector.", "  \
    \  \n    words = split(s, \",\")\n    \n    return words\nend\n</cell>\n<code\
    \ language=julia-1.5>", "    \n    words = split(s)\n    \n    return words\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector of words\
    \ and returns a vector of numbers. Each number represents the number of times\
    \ a word appears in the original string.", "    \n    words_string = split(s)\n\
    \    \n    return words_string\nend", "    \n    words_string = \"\"\n    \n \
    \   for word in split(s)\n        words_string += word + \" \"\n    end\n    \n\
    \    return words_string.split(\" \")\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of words and returns a vector of numbers, where each number\
    \ is the frequency of the word in the input vector. For example, if the input\
    \ vector is [\"Hi\", \"my\", \"name\", \"is\", \"John\"], your function should\
    \ return [2, 1, 3, 1, 1]. Make sure your function works with both single words\
    \ and multiple words.", "    \n    words_string = split(s)\n    return words_string\n\
    end", "    \n    words_string = split(s)\n    \n    return words_string\nend\n\
    </cell>\n<code language=julia-1.0>\nwords_string(\"Hi, my name is John\")\n</cell>\n\
    <code language=julia-1.0>\nwords_string(\"One, two, three, four, five, six\")\n\
    </cell>\n<text>\nExercise: Write a function that takes a string and returns a\
    \ vector of words. Your function should split on commas and spaces.", "    \n\
    \    words_string = \"\"\n    \n    for word in split(s, \" \")\n        words_string\
    \ += word + \" \"\n    end\n    \n    words_string = words_string[1:end]\n   \
    \ \n    return words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of words and returns a vector of numbers, where each number represents\
    \ the number of times that word appears in the original vector.", "    \n    words\
    \ = split(s, \",\")\n    \n    return words\nend\n</cell>\n<code language=julia-1.4>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns a vector of strings where each string is a word\
    \ in the original string separated by spaces.", "    \n    words_string = split(s,\
    \ \",\")\n    words_string = split(s, \" \")\n    return words_string\nend", " \
    \   \n    words_string = split(s)\n    \n    return words_string\nend", "    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    words_string =\
    \ split(s)\n    words_string\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of words and returns a vector of numbers. Each number represents the\
    \ number of times a word appears in the original string. \nFor example, if the\
    \ input vector is [\"Hi\", \"my\", \"name\", \"is\", \"John\"] then the output\
    \ vector should be [1, 1, 2, 1, 1, 1]. \nThe input vector is [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"] and the output vector should be [6,\
    \ 6, 6, 6, 6, 6].", "    \n    words = split(s)\n    \n    return words\nend",
  "    \n    words_string = split(s)\n    words_string = words_string[end]\n    return\
    \ words_string\nend", "    \n    words = split(s)\n    \n    return words\nend",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    words_string\
    \ = split(s)\n    \n    return words_string\nend", "    \n    words = split(s)\n\
    \    \n    return words\nend", "    \n    words = split(s)\n    \n    return words\n\
    end\n</cell>\n<code language=julia-1.5>\nwords_string(\"Hi, my name is John\"\
    )\n</cell>\n<code language=julia-1.5>\nwords_string(\"One, two, three, four, five,\
    \ six\")\n</cell>\n<text>\nExercise: Write a function that takes a vector of words\
    \ and returns a vector of numbers, where each number represents the number of\
    \ times that word appears in the original vector.", "    \n    words_string =\
    \ split(s)\n    \n    return words_string\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns a vector of strings. Your function should split\
    \ each string into words and return a vector of strings. For example:", "    \n\
    \    words_string = \"\"\n    \n    for word in split(s)\n        words_string\
    \ += word + \" \"\n    end\n    \n    return words_string\nend", "    \n    words\
    \ = split(s)\n    \n    return words\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of strings and returns a vector of vectors of strings. Each\
    \ vector should contain all the words in the original string separated by spaces.",
  "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n", "    \n    words = split(s)\n\
    \    \n    return words\nend", "    \n    words_string = split(s)\n    return\
    \ words_string\nend\n</cell>\n<code language=julia-1.0>\nwords_string(\"Hi, my\
    \ name is John\")\n</cell>\n<code language=julia-1.0>\nwords_string(\"One, two,\
    \ three, four, five, six\")\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ takes a vector of words and returns a vector of numbers. Each number represents\
    \ the number of times a word appears in the input vector.", "    \n    words_string\
    \ = []\n    \n    for word in split(s, \",\")\n        push!(words_string, word)\n\
    \    end\n    \n    return words_string\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words_string = \"\"\n    \n    for word in split(s)\n        words_string\
    \ += word\n    end\n    \n    return words_string\nend\n</cell>\n<code language=julia-1.5>\n\
    words_string(\"Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    One, two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns a vector of strings. Your function should split\
    \ each word in the string into its own string, and return a vector of those strings.\
    \ For example:", "    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", " \
    \   \n    words = split(s)\n    \n    return words\nend", "    \n    words = split(s)\n\
    \    \n    return words\nend", "    \n    words = split(s)\n    \n    return words\n\
    end", "    \n    words = split(s)\n    \n    return words\nend\n</cell>\n<code\
    \ language=julia-1.5>\nwords_string(\"Hi, my name is John\")\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a string and returns a vector of strings\
    \ where each string is a word in the string.", "    \n    words_string = split(s)\n\
    \    \n    return words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a vector of words and returns a vector of integers representing the\n\
    number of times each word appears in the input vector. For example:", "    \n\
    \    words = split(s)\n    \n    return words\nend", "    \n    words_string =\
    \ split(s)\n    \n    return words_string\nend", "    \n    words_string = []\n\
    \    \n    for word in split(s)\n        push!(words_string, word)\n    end\n\
    \    \n    return words_string\nend", "    \n    words_string = \"\"\n    \n \
    \   for word in split(s, \",\")\n        words_string += word\n    end\n    \n\
    \    return words_string\nend\n</cell>\n<code language=julia-1.5>\nwords_string(\"\
    Hi, my name is John\")\n</cell>\n<code language=julia-1.5>\nwords_string(\"One,\
    \ two, three, four, five, six\")\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a string and returns the number of words in the string.", "    \n\
    \    words_string = split(s)\n    words_string\nend", "    \n    words = split(s)\n\
    \    \n    return words\nend", "    \n    words_string = split(s)\n    \n    return\
    \ words_string\nend", "    \n    words = split(s, \",\")\n    \n    return words\n\
    end"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

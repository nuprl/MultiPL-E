name: HumanEval_85_add
language: jl
prompt: "\"\"\"Given a non-empty vector of integers lst. add the even elements that\
  \ are at odd indices..\n\n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n  \
  \  \"\"\"\nfunction add(lst::Vector{Int64})::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = add;\n\t@test(candidate([4, 88])\
  \ == 88)\n\t@test(candidate([4, 5, 6, 7, 2, 122]) == 122)\n\t@test(candidate([4,\
  \ 0, 6, 7]) == 0)\n\t@test(candidate([4, 4, 6, 8]) == 12)\nend\n"
completions: ["    evens = lst[1 : (end-1)]\n    odds = lst[(end-1) : end]\n    evens\
    \ = filter(x -> x % 2 == 0, evens)\n    odds = filter(x -> x % 2 == 1, odds)\n\
    \    return sum(evens) + sum(odds)\nend\n</cell>\n<code language=julia-1.5>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the sum of the squares of the even numbers in a given vector of integers. \n\
    For example, add([4, 2, 6, 7]) is equal to 10. \nWrite a function that returns\
    \ the sum of the squares of the odd numbers in a given vector of integers. \n\
    For example, add([4, 2, 6, 7]) is equal to 14. \nWrite a function that returns\
    \ the sum of the squares of the even numbers in a given vector of integers. \n\
    For example, add([4, 2, 6, 7]) is equal to 10. \nWrite a function that returns\
    \ the sum of the squares of the odd numbers in a given vector of integers. \n\
    For example, add([4, 2, 6, 7]) is equal to 14. \nWrite a function that returns\
    \ the sum of the squares of the even numbers in a given vector of integers. \n\
    For example, add([4, 2, 6, 7]) is equal to 10. \nWrite a function that returns\
    \ the sum of the squares of the odd numbers in a given vector of integers. \n\
    For example, add([4, 2, 6, 7]) is equal to 14. \nWrite a function that returns\
    \ the sum of the squares of the even numbers in a given vector of integers. \n\
    For example, add([4, 2, 6, 7]) is equal to 10. \nWrite a function that returns\
    \ the sum of the squares of the odd numbers in a given vector of integers. \n\
    For example, add([4, 2, 6, 7]) is equal to 14. \nWrite a function that returns\
    \ the sum of the squares of the even numbers in a given vector of integers. \n\
    For example, add([4, 2, 6, 7]) is equal to 10. \nWrite a function that returns\
    \ the sum of the squares of the odd numbers in a given vector of integers. \n\
    For example, add([4, 2, 6, 7]) is equal to 14. \nWrite a function that returns\
    \ the sum of the squares of the even numbers in a given vector of integers. \n\
    For example, add([4, 2, 6, 7]) is equal to 10. \nWrite a function that returns\
    \ the sum of the squares of the odd numbers in a given vector of integers. \n\
    For example, add([4, 2, 6, 7]) is equal to 14. \nWrite a function that returns\
    \ the sum of the squares of the even numbers in a given vector of integers. \n\
    For example, add([4, 2, 6, 7]) is equal to 10. \nWrite a function that returns\
    \ the sum of the squares of the odd numbers in a given vector of integers. \n\
    For example, add([4, 2, 6, 7]) is equal to 14. \nWrite a function that returns\
    \ the sum of the squares of the even numbers in a given vector of integers. \n\
    For example, add([4, 2, 6, 7]) is equal to 10. \nWrite a function that returns\
    \ the sum of the squares of the ", "    even = lst[1 :end] \n    odd = lst[2 :end]\
    \ \n    even.+ odd.+ sum(even)\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the sum of the even elements in a given vector of integers. \n\
    Given a vector of integers lst. return the sum of the even elements that are at\
    \ odd indices..", "    evens = lst[1 : (end-1)]\n    odds = lst[(end-1) : (end)]\n\
    \    return sum(evens) + sum(odds)\nend\n</cell>\n<code language=julia-1.5>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the sum of the even elements in a given vector of integers lst. \nWrite a function\
    \ that returns the sum of the odd elements in a given vector of integers lst.\
    \ \nWrite a function that returns the product of the even elements in a given\
    \ vector of integers lst. \nWrite a function that returns the product of the odd\
    \ elements in a given vector of integers lst. ", "    even = lst[1 : (end-1)]\n\
    \    odd = lst[2:end]\n    even.+=(odd.*2)\n    return even\nend\n</cell>\n<code\
    \ language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the sum of the even numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the product of the even numbers\
    \ in a given vector of integers. \nWrite a function that returns the product of\
    \ the odd numbers in a given vector of integers. \nWrite a function that returns\
    \ the maximum of the even numbers in a given vector of integers. \nWrite a function\
    \ that returns the maximum of the odd numbers in a given vector of integers. \n\
    Write a function that returns the minimum of the even numbers in a given vector\
    \ of integers. \nWrite a function that returns the minimum of the odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the absolute\
    \ value of the even numbers in a given vector of integers. \nWrite a function\
    \ that returns the absolute value of the odd numbers in a given vector of integers.\
    \ \nWrite a function that returns the factorial of a given vector of integers.\
    \ \nWrite a function that returns the factorial of the factorial of a given vector\
    \ of integers. \nWrite a function that returns the factorial of the factorial\
    \ of a given vector of integers. \nWrite a function that returns the factorial\
    \ of the factorial of a given vector of integers. \nWrite a function that returns\
    \ the factorial of the factorial of a given vector of integers. \nWrite a function\
    \ that returns the factorial of the factorial of a given vector of integers. \n\
    Write a function that returns the factorial of the factorial of a given vector\
    \ of integers. \nWrite a function that returns the factorial of the factorial\
    \ of a given vector of integers. \nWrite a function that returns the factorial\
    \ of the factorial of a given vector of integers. \nWrite a function that returns\
    \ the factorial of the factorial of a given vector of integers. \nWrite a function\
    \ that returns the factorial of the factorial of a given vector of integers. \n\
    Write a function that returns the factorial of the factorial of a given vector\
    \ of integers. \nWrite a function that returns the factorial of the factorial\
    \ of a given vector of integers. \nWrite a function that returns the factorial\
    \ of the factorial of a given vector of integers. \nWrite a function that returns\
    \ the factorial of the factorial of a given vector of integers. \nWrite a function\
    \ that returns the factorial of the factorial of a given vector of integers. \n\
    Write a function that returns the factorial of the factorial of a given vector\
    \ of integers. \nWrite a function that returns the factorial of the factorial\
    \ of a given vector of integers. \nWrite a function that returns the factorial\
    \ of the factorial of a given vector of integers. \nWrite a function that returns\
    \ the factorial of the factorial of a given vector of integers. \nWrite a function\
    \ that returns the factorial of the factorial of a given vector of integers. \n",
  "    even = lst[1::2]\n    odd = lst[1::2]\n    even.+=(odd.+=0)\n    return even\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of integers\
    \ and returns the sum of the even elements of the vector.", "    even = lst[1\
    \ : (end-1)]\n    odd = lst[2:end]\n    even.+=(odd.*2)\n    return even\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the even\
    \ numbers in a given vector of integers. \nWrite a function that returns the sum\
    \ of the odd numbers in a given vector of integers. \nWrite a function that returns\
    \ the sum of the even and odd numbers in a given vector of integers. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a given vector of integers. \n\
    Write a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a given vector of integers. \n\
    Write a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a given vector of integers. \n\
    Write a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a given vector of integers. \n\
    Write a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a given vector of integers. \n\
    Write a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a given vector of integers. \n\
    Write a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd ", "    evens = lst[1 : (end-1)]\n    odds = lst[(end-1) : end]\n\
    \    return sum(evens) + sum(odds)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add(Vector{Int64}([4, 2, 6, 7])) == 6\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the sum of the even elements in a vector.", "    even\
    \ = lst[1 : (end-1)]\n    odd = lst[2:end]\n    return sum(even) + sum(odd)\n\
    end", "    even = lst[1 : (end-lst)]\n    odd = lst[2 : end]\n    even.+=(odd.*2)\n\
    \    return even\nend\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n\
    </cell>\n<text>\nExercise 2\nGiven a vector of integers lst, return the sum of\
    \ the even elements that are at odd indices.", "    even = lst[1 : (end-1)]\n\
    \    odd = lst[2:end]\n    return sum(even) + sum(odd)\nend", "    evens = lst[1\
    \ : (end-lst)]\n    odds = lst[(end-lst):end]\n    evens = filter(x -> x % 2 ==\
    \ 0, evens)\n    odds = filter(x -> x % 2 != 0, odds)\n    return sum(evens) +\
    \ sum(odds)\nend\n</cell>\n<code language=julia-1.5>\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 6\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the number of elements in a vector that are greater than a given value.", " \
    \   even = lst[1 :end] \n    odd = lst[2 :end] \n    even.+ odd.+ \nend\n</cell>\n\
    <code language=julia-1.0>\n@code_warntype add([4, 2, 6, 7])\n</cell>\n<text>\n\
    Exercise: Write a function that takes a vector of integers and returns the sum\
    \ of the even elements that are at odd indices.", "    even = lst[1::2]\n    odd\
    \ = lst[1::2]\n    even = even.+odd\n    return even\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add(Vector{Int64}([4, 2, 6, 7])) == 4\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the sum of the numbers in the vector lst that have even\
    \ indices. For example, [4, 2, 6, 7] has even indices 1, 3, and 5, so the function\
    \ should return 8.", "    even = lst[1 : (end-1)]\n    odd = lst[2:end]\n    return\
    \ sum(even) + sum(odd)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the sum of the even elements of a vector", "    evens = lst[findall(x\
    \ -> x % 2 == 0, lst)]\n    evens = evens[2:end]\n    evens = sum(evens)\n   \
    \ return evens\nend\n</cell>\n<text>\nExercise 4\nWrite a function that returns\
    \ the sum of the even numbers in a vector.", "    even = lst[1 :end]\n    odd\
    \ = lst[2 :end]\n    even.+=(odd.*2)\n    return even\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add(Vector{Int64}([4, 2, 6, 7])) == 4\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the sum of the numbers in the vector lst.", "    even\
    \ = lst[1::2]\n    odd = lst[1::2]\n    even.+=(odd.-even)\n    return even\n\
    end\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the even elements in a given\
    \ vector of integers. \nWrite a function that returns the sum of the odd elements\
    \ in a given vector of integers. \nWrite a function that returns the product of\
    \ the even elements in a given vector of integers. \nWrite a function that returns\
    \ the product of the odd elements in a given vector of integers. \nWrite a function\
    \ that returns the maximum of a given vector of integers. \nWrite a function that\
    \ returns the minimum of a given vector of integers. \nWrite a function that returns\
    \ the absolute value of a given vector of integers. ", "    even = lst[1 : (end-1)]\n\
    \    odd = lst[(end-1) : end]\n    return sum(even) + sum(odd)\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the even elements\
    \ of a given vector of integers lst. \nWrite a function that returns the sum of\
    \ the odd elements of a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements of a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements of a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements of a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements of a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements of a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements of a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements of a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements of a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even ", "    even = lst[1 :] \n    odd = lst[2 :] \n\
    \    even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even", "    even = lst[1\
    \ : (end-1)]\n    odd = lst[(end-1) : (end)]\n    even.+=(odd.*2)\n    return\
    \ even\nend", "    evens = lst[1 : (end-lst)]\n    odds = lst[(end-lst):end]\n\
    \    return sum(evens) + sum(odds)\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the sum of the squares of the even numbers in a vector.",
  "    evens = lst[1 : (end-1)]\n    odds = lst[(end-1) : (end)]\n    return sum(evens)\
    \ + sum(odds)\nend\n</cell>\n<code language=julia-1.5>\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 6\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the sum of the even elements of a given vector of integers. If the vector is\
    \ empty, return 0.", "    evens = lst[1 : (end-1)]\n    evens = filter(x -> x\
    \ % 2 == 0, evens)\n    evens = map(x -> x + 1, evens)\n    evens = map(x -> x\
    \ + 1, evens)\n    evens = map(x -> x + 1, evens)\n    evens = map(x -> x + 1,\
    \ evens)\n    evens = map(x -> x + 1, evens)\n    evens = map(x -> x + 1, evens)\n\
    \    evens = map(x -> x + 1, evens)\n    evens = map(x -> x + 1, evens)\n    evens\
    \ = map(x -> x + 1, evens)\n    evens = map(x -> x + 1, evens)\n    evens = map(x\
    \ -> x + 1, evens)\n    evens = map(x -> x + 1, evens)\n    evens = map(x -> x\
    \ + 1, evens)\n    evens = map(x -> x + 1, evens)\n    evens = map(x -> x + 1,\
    \ evens)\n    evens = map(x -> x + 1, evens)\n    evens = map(x -> x + 1, evens)\n\
    \    evens = map(x -> x + 1, evens)\n    evens = map(x -> x + 1, evens)\n    evens\
    \ = map(x -> x + 1, evens)\n    evens = map(x -> x + 1, evens)\n    evens = map(x\
    \ -> x + 1, evens)\n    evens = map(x -> x + 1, evens)\n    evens = map(x -> x\
    \ + 1, evens)\n    evens = map(x -> x + 1, evens)\n    evens = map(x -> x + 1,\
    \ evens)\n    evens = map(x -> x + 1, evens)\n    evens = map(x -> x + 1, evens)\n\
    \    evens = map(x -> x + 1, evens)\n    evens = map(x -> x + 1, evens)\n    evens\
    \ = map(x -> x + 1, evens)\n    evens = map(x -> x + 1, evens)\n    evens = map(x\
    \ -> x + 1, evens)\n    evens = map(x -> x + 1, evens)\n    evens = map(x -> x\
    \ + 1, evens)\n    evens = map(x -> x + 1, evens)\n    evens = map(x -> x + 1,\
    \ evens)\n    evens = map(x -> x + 1, evens)\n    evens = map(x -> x + 1, evens)\n\
    \    evens = map(x -> x + 1, evens)\n    evens = map(x -> x + 1, evens)\n    evens\
    \ = map(x -> x + 1, evens)\n    evens = map(x -> x + 1, evens)\n    evens = map(x\
    \ -> x + 1, evens)\n    evens = map(", "    even = lst[1 :end] \n    odd = lst[2\
    \ :end] \n    even.+ odd.+ sum(even.+ odd)\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the even elements in a given vector of\
    \ integers. If the vector is empty return 0.", "    evens = lst[findall(x -> x\
    \ % 2 == 0, lst)]\n    evens = evens[2:end]\n    evens = sum(evens)\n    return\
    \ evens\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector\
    \ of integers lst and returns the sum of the even elements that are at odd indices.",
  "    even = lst[1::2]\n    odd = lst[1::2]\n    return sum(even) + sum(odd)\nend\n\
    </cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the sum of the even numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the odd numbers\
    \ in a given vector of integers lst. \nWrite a function that returns the sum of\
    \ the even and odd numbers in a given vector of integers lst. \nWrite a function\
    \ that returns the sum of the even and odd numbers in a given vector of integers\
    \ lst. \nWrite a function that returns the sum of the even and odd numbers in\
    \ a given vector of integers lst. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd numbers in a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd numbers in a given vector of integers lst. \nWrite a function that returns\
    \ the sum of the even and odd numbers in a given vector of integers lst. \nWrite\
    \ a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of ", "    evens = lst[1 : (end-1)]\n    odds = lst[2 : end]\n    evens + sum(odds)\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert add(Vector{Int64}([4, 2, 6, 7]))\
    \ == 2 \n</cell>\n<text>\nExercise 2\nWrite a function called add_all that given\
    \ a vector of integers lst, adds the even elements that are at odd indices.",
  "    even = lst[1::2]\n    odd = lst[1::2]\n    even.+=(odd.-even)\n    return even\n\
    end\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function called sub that subtracts all the even elements that\
    \ are at odd indices.", "    evens = lst[1 : (end-1)]\n    odds = lst[(end-1)\
    \ : end]\n    return sum(evens) + sum(odds)\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the even numbers in a given vector.",
  "    even = lst[1 : (end-lst)]\n    odd = lst[2:end]\n    even = even[findall(even\
    \ .%2)] \n    even = sum(even)\n    odd = odd[findall(odd .%2)]\n    odd = sum(odd)\n\
    \    return even + odd\nend\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6,\
    \ 7])\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of integers\
    \ lst and returns the sum of the even elements that are at odd indices.", "  \
    \  evens = lst[1 : (end-1)]\n    odds = lst[(end-1) : end]\n    return sum(evens)\
    \ + sum(odds)\nend\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the squares of the\
    \ numbers in a vector.", "    evens = lst[1 : (end-1)]\n    odds = lst[(end-1)\
    \ : end]\n    return sum(evens) + sum(odds)\nend\n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the even elements of a given vector.\
    \ \nWrite a function that returns the sum of the odd elements of a given vector.\
    \ \nWrite a function that returns the product of the even elements of a given\
    \ vector. \nWrite a function that returns the product of the odd elements of a\
    \ given vector. ", "    evens = lst[findall(x->x%2==0, lst)]\n    evens = evens[2:end]\n\
    \    return sum(evens)\nend\n</cell>\n<code language=julia-1.5>\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 5\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the sum of the squares of the numbers in the given vector. For example, sum([4,\
    \ 2, 6, 7]) == 50", "    evens = lst[1 : (end-1)]\n    odds = lst[(end-1):end]\n\
    \    return sum(evens) + sum(odds)\nend\n</cell>\n<code language=julia-1.5>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the sum of the even elements in a given vector of integers. If the vector is\
    \ empty, return 0.", "    even = lst[1 :end] \n    odd = lst[2 :end] \n    even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.", "    even = lst[1 :end] \n   \
    \ odd = lst[2 :end] \n    even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.",
  "    even = lst[1 :end] \n    odd = lst[2 :end] \n    even.+ odd.+ \nend\n</cell>\n\
    <code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the sum of the even numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a given vector of integers. \n\
    Write a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a given vector of integers. \n\
    Write a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a given vector of integers. \n\
    Write a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a given vector of integers. \n\
    Write a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a given vector of integers. \n\
    Write a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a given vector of integers. \n\
    Write a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a ", "    even = lst[1 : (end-1)]\n\
    \    odd = lst[2 : end]\n    even.+ odd.+\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the even numbers in a given vector. \n\
    Write a function that returns the sum of the odd numbers in a given vector. \n\
    Write a function that returns the product of the even numbers in a given vector.\
    \ \nWrite a function that returns the product of the odd numbers in a given vector.\
    \ \nWrite a function that returns the maximum of a given vector. \nWrite a function\
    \ that returns the minimum of a given vector. \nWrite a function that returns\
    \ the absolute value of a given vector. \nWrite a function that returns the absolute\
    \ value of a given vector. \nWrite a function that returns the absolute value\
    \ of a given vector. \nWrite a function that returns the absolute value of a given\
    \ vector. \nWrite a function that returns the absolute value of a given vector.\
    \ \nWrite a function that returns the absolute value of a given vector. \nWrite\
    \ a function that returns the absolute value of a given vector. \nWrite a function\
    \ that returns the absolute value of a given vector. \nWrite a function that returns\
    \ the absolute value of a given vector. \nWrite a function that returns the absolute\
    \ value of a given vector. \nWrite a function that returns the absolute value\
    \ of a given vector. \nWrite a function that returns the absolute value of a given\
    \ vector. \nWrite a function that returns the absolute value of a given vector.\
    \ \nWrite a function that returns the absolute value of a given vector. \nWrite\
    \ a function that returns the absolute value of a given vector. \nWrite a function\
    \ that returns the absolute value of a given vector. \nWrite a function that returns\
    \ the absolute value of a given vector. \nWrite a function that returns the absolute\
    \ value of a given vector. \nWrite a function that returns the absolute value\
    \ of a given vector. \nWrite a function that returns the absolute value of a given\
    \ vector. \nWrite a function that returns the absolute value of a given vector.\
    \ \nWrite a function that returns the absolute value of a given vector. \nWrite\
    \ a function that returns the absolute value of a given vector. \nWrite a function\
    \ that returns the absolute value of a given vector. \nWrite a function that returns\
    \ the absolute value of a given vector. \nWrite a function that returns the absolute\
    \ value of a given vector. \nWrite a function that returns the absolute value\
    \ of a given vector. \nWrite a function that returns the absolute value of a given\
    \ vector. \nWrite a function that returns the absolute value of a given vector.\
    \ \nWrite a function that returns the absolute value of a given vector. \nWrite\
    \ a function that returns the absolute value of a given vector. \nWrite a function\
    \ that returns the absolute value of a given vector. \nWrite a function that returns\
    \ the absolute value of a given vector. \nWrite a function that returns the absolute\
    \ value of a given vector. \nWrite a function that returns the absolute value\
    \ of a given vector. \nWrite a function that returns the absolute value of a given\
    \ vector. \nWrite a function that returns the absolute ", "    evens = lst[1 :\
    \ (end-1)]\n    odds = lst[2 : end]\n    return sum(evens) + sum(odds)\nend\n\
    </cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the squares of the elements of a\
    \ given vector. For example, add([4, 2, 6, 7]) is equal to 10. Hint: use map()",
  "    even = lst[1 :end]\n    odd = lst[2 :end]\n    even.+=(odd.*2)\n    return\
    \ even\nend\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the even elements\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ odd elements in a given vector of integers. \nWrite a function that returns\
    \ the sum of the even and odd elements in a given vector of integers. \nWrite\
    \ a function that returns the sum of the even and odd elements in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd elements\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd elements in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd elements in a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd elements in a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd elements in a given vector of integers. \nWrite a function that returns\
    \ the sum of the even and odd elements in a given vector of integers. \nWrite\
    \ a function that returns the sum of the even and odd elements in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd elements\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd elements in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd elements in a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd elements in a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd elements in a given vector of integers. \nWrite a function that returns\
    \ the sum of the even and odd elements in a given vector of integers. \nWrite\
    \ a function that returns the sum of the even and odd elements in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd elements\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd elements in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd elements in a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd elements in a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd elements in a given vector of integers. \nWrite a function that returns\
    \ the sum of the even and odd elements in a given vector of integers. \nWrite\
    \ a function that returns the sum of the even and odd elements in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd elements\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd elements in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd elements in a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and ", "    even = lst[1\
    \ : (end-lst)]\n    odd = lst[(end-lst):end]\n    even.+=(odd.*2)\n    return\
    \ even\nend\n</cell>\n<code language=julia-1.0>\nadd([4, 2, 6, 7])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the even numbers\
    \ in a given vector.", "    even = lst[1 :end]\n    odd = lst[2 :end]\n    even.+=(odd.*2)\n\
    \    return even\nend\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n\
    </cell>\n<text>\nExercise 3\nWrite a function called sub that subtracts the even\
    \ elements that are at odd indices.", "    evens = lst[1 :end] \n    odds = lst[2\
    \ :end] \n    evens + sum(odds)\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the sum of the even numbers in a given vector.", "    even = lst[1::2]\n\
    \    odd = lst[1::2]\n    even.+=(odd.+=0)\n    return even\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert add([4, 2, 6, 7]) == 5\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function called sub that subtracts the even elements that are at\
    \ odd indices.", "    evens = lst[1 : (end-1)]\n    odds = lst[(end-1):end]\n\
    \    return sum(evens) + sum(odds)\nend\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the sum of the even numbers in a given vector. \nWrite\
    \ a function that returns the sum of the odd numbers in a given vector. \nWrite\
    \ a function that returns the product of the even numbers in a given vector. \n\
    Write a function that returns the product of the odd numbers in a given vector.\
    \ \nWrite a function that returns the maximum of a given vector. \nWrite a function\
    \ that returns the minimum of a given vector. \nWrite a function that returns\
    \ the product of the squares of the even numbers in a given vector. \nWrite a\
    \ function that returns the product of the squares of the odd numbers in a given\
    \ vector. \nWrite a function that returns the sum of the squares of the even numbers\
    \ in a given vector. \nWrite a function that returns the sum of the squares of\
    \ the odd numbers in a given vector. \nWrite a function that returns the product\
    \ of the squares of the even numbers in a given vector. \nWrite a function that\
    \ returns the product of the squares of the odd numbers in a given vector. \n\
    Write a function that returns the sum of the cubes of the even numbers in a given\
    \ vector. \nWrite a function that returns the sum of the cubes of the odd numbers\
    \ in a given vector. \nWrite a function that returns the product of the cubes\
    \ of the even numbers in a given vector. \nWrite a function that returns the product\
    \ of the cubes of the odd numbers in a given vector. \nWrite a function that returns\
    \ the sum of the reciprocals of the even numbers in a given vector. \nWrite a\
    \ function that returns the sum of the reciprocals of the odd numbers in a given\
    \ vector. \nWrite a function that returns the product of the reciprocals of the\
    \ even numbers in a given vector. \nWrite a function that returns the product\
    \ of the reciprocals of the odd numbers in a given vector. \nWrite a function\
    \ that returns the sum of the reciprocals of the squares of the even numbers in\
    \ a given vector. \nWrite a function that returns the sum of the reciprocals of\
    \ the squares of the odd numbers in a given vector. \nWrite a function that returns\
    \ the product of the reciprocals of the squares of the even numbers in a given\
    \ vector. \nWrite a function that returns the product of the reciprocals of the\
    \ squares of the odd numbers in a given vector. \nWrite a function that returns\
    \ the sum of the reciprocals of the cubes of the even numbers in a given vector.\
    \ \nWrite a function that returns the sum of the reciprocals of the cubes of the\
    \ odd numbers in a given vector. \nWrite a function that returns the product of\
    \ the reciprocals of the cubes of the even numbers in a given vector. \nWrite\
    \ a function that returns the product of the reciprocals of the cubes of the odd\
    \ numbers in a given vector. \nWrite a function that returns the sum of the reciprocals\
    \ of the squares of the even numbers in a given vector. \nWrite a function that\
    \ returns the sum of the reciprocals of the square", "    even = lst[1 :end]\n\
    \    odd = lst[2 :end]\n    return sum(even) + sum(odd)\nend\n</cell>\n<code language=julia-1.5>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a function called sub that\
    \ subtracts the even elements that are at odd indices from the odd elements that\
    \ are at even indices.", "    evens = lst[1 : (end-lst)/2]\n    odds = lst[(end-lst)/2+1\
    \ : end]\n    return sum(evens) + sum(odds)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add(Vector{Int64}([4, 2, 6, 7])) == 5\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the sum of the even elements of a given vector of integers\
    \ lst. \nWrite a function that returns the sum of the odd elements of a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements of a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements of a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements of a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements of a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements of a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements of a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements of a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements of a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given ", "    evens = lst[1\
    \ : (end-1)]\n    odds = lst[2:end]\n    return sum(evens) + sum(odds)\nend\n\
    </cell>\n<code language=julia-1.5>\n@assert add(Vector{Int64}([4, 2, 6, 7])) ==\
    \ 6\n</cell>\n<text>\nExercise 2\nWrite a function that returns the product of\
    \ a given vector of integers lst. \nThe function should work for both scalars\
    \ and vectors of integers.", "    evens = lst[1 : (end-1)]\n    odds = lst[(end-1)\
    \ : (end)]\n    evens = filter(x -> x % 2 == 0, evens)\n    odds = filter(x ->\
    \ x % 2 != 0, odds)\n    return sum(evens) + sum(odds)\nend\n</cell>\n<code language=julia-1.5>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the sum of the even elements in a given vector of integers lst", "    evens\
    \ = lst[findall(x -> mod(x,2)==0, lst)]\n    evens = evens[2:end]\n    evens =\
    \ sum(evens)\n    return evens\nend\n</cell>\n<code language=julia-1.5>", "  \
    \  even = lst[1 :end] \n    odd = lst[2 :end] \n    return sum(even + odd)\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the even\
    \ elements of a given vector of integers lst. \nWrite a function that returns\
    \ the sum of the odd elements of a given vector of integers lst. \nWrite a function\
    \ that returns the sum of the even and odd elements of a given vector of integers\
    \ lst. ", "    even = lst[1 : (end-1)]\n    odd = lst[2 : end]\n    return sum(even)\
    \ + sum(odd)\nend\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the even elements\
    \ of a vector.", "    even = lst[1::2]\n    odd = lst[1::2]\n    return sum(even)\
    \ + sum(odd)\nend\n</cell>\n<code language=julia-1.5>\n@assert add([4, 2, 6, 7])\
    \ == 6\n</cell>\n<text>\nExercise 2\nWrite a function called sub that subtracts\
    \ the even elements that are at odd indices from the given vector.", "    even\
    \ = lst[1 : (end-lst)]\n    odd = lst[(end-lst):end]\n    return sum(even) + sum(odd)\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert add(Vector{Int64}([4, 2, 6, 7]))\
    \ == 6\n</cell>\n<text>\nExercise 3\nWrite a function that returns the product\
    \ of a list of numbers.", "    even = lst[1::2]\n    odd = lst[1::2]\n    even\
    \ = even + odd\n    return even\nend\n</cell>\n<code language=julia-1.5>\nadd([4,\
    \ 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the even elements of a given vector of integers. \nWrite a function that\
    \ returns the sum of the odd elements of a given vector of integers. \nWrite a\
    \ function that returns the product of the even elements of a given vector of\
    \ integers. \nWrite a function that returns the product of the odd elements of\
    \ a given vector of integers. \nWrite a function that returns the maximum of a\
    \ given vector of integers. \nWrite a function that returns the minimum of a given\
    \ vector of integers. \nWrite a function that returns the absolute value of a\
    \ given vector of integers. \nWrite a function that returns the absolute value\
    \ of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a given vector of integers. \nWrite a function that returns the absolute\
    \ value of a ", "    even = lst[1 : (end-1)]\n    odd = lst[2:end]\n    even.+=(odd.*2)\n\
    \    return even\nend\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n\
    </cell>\n<text>\nExercise 2\nGiven a vector of integers lst. find the sum of all\
    \ even elements that are at odd indices.", "    evens = lst[findall(x->x%2==0,\
    \ lst)]\n    evens = filter(x -> x % 2 == 0, evens)\n    evens = map(x -> x +\
    \ 1, evens)\n    evens = reduce(add, evens)\n    return evens\nend\n</cell>\n\
    <code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nGiven\
    \ a vector of integers lst, return the sum of the even elements that are at odd\
    \ indices.", "    even = lst[1 :end] \n    odd = lst[2 :end] \n    even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.", "    even = lst[1 :end]\n    odd = lst[2\
    \ :end]\n    even = even(:).+even\n    odd = odd(:).+odd\n    return sum(even,\
    \ odd)\nend\n</cell>\n<code language=julia-1.5>\n@assert add([4, 2, 6, 7]) ==\
    \ 6\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the\
    \ squares of the numbers in a vector.", "    even = lst[1 :end]\n    odd = lst[2\
    \ :end]\n    return sum(even) + sum(odd)\nend\n</cell>\n<code language=julia-1.5>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the product of a given vector of integers lst. \nThe function should work for\
    \ both scalars and vectors.", "    evens = lst[1 : (end-1)]\n    odds = lst[(end-1)\
    \ : (end)]\n    evens = filter(x -> x % 2 == 0, evens)\n    odds = filter(x ->\
    \ x % 2 != 0, odds)\n    return sum(evens) + sum(odds)\nend\n</cell>\n<code language=julia-1.4>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ vector of integers and returns the sum of the squares of the even numbers in\
    \ the vector.", "    even = lst[1 :end]\n    odd = lst[2 :end]\n    even.+=(odd.*2)\n\
    \    return even\nend\n</cell>\n<code language=julia-1.3>\nadd([4, 2, 6, 7])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the even\
    \ numbers in a given vector of integers. \nWrite a function that returns the sum\
    \ of the even numbers in a given vector of integers. \nWrite a function that returns\
    \ the sum of the even numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the even numbers in a given vector of integers. \nWrite\
    \ a function that returns the sum of the even numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the even numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even numbers in\
    \ a given vector of integers. \nWrite a function that returns the sum of the even\
    \ numbers in a given vector of integers. \nWrite a function that returns the sum\
    \ of the even numbers in a given vector of integers. \nWrite a function that returns\
    \ the sum of the even numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the even numbers in a given vector of integers. \nWrite\
    \ a function that returns the sum of the even numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the even numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even numbers in\
    \ a given vector of integers. \nWrite a function that returns the sum of the even\
    \ numbers in a given vector of integers. \nWrite a function that returns the sum\
    \ of the even numbers in a given vector of integers. \nWrite a function that returns\
    \ the sum of the even numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the even numbers in a given vector of integers. \nWrite\
    \ a function that returns the sum of the even numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the even numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even numbers in\
    \ a given vector of integers. \nWrite a function that returns the sum of the even\
    \ numbers in a given vector of integers. \nWrite a function that returns the sum\
    \ of the even numbers in a given vector of integers. \nWrite a function that returns\
    \ the sum of the even numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the even numbers in a given vector of integers. \nWrite\
    \ a function that returns the sum of the even numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the even numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even numbers in\
    \ a given vector of integers. \nWrite a function that returns the sum of the even\
    \ numbers in a given vector of integers. \nWrite a function that returns the sum\
    \ of the even numbers in a given vector of integers. \nWrite a function that returns\
    \ the sum of the even numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the even numbers in a given vector of integers. \nWrite\
    \ a function that returns the ", "    even = lst[1::2]\n    odd = lst[1::2]\n\
    \    even.+=(odd.-even)\n    return even\nend", "    evens = lst[1 : (end-1)]\n\
    \    odds = lst[(end-1):end]\n    evens + sum(odds)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add(Vector{Int64}([4, 2, 6, 7])) == 5\n</cell>\n<text>\nExercise 3.2\n\
    Given a non-empty vector of integers lst. add the odd elements that are at even\
    \ indices..", "    evens = lst[1 : (end-1)]\n    odds = lst[2 : end]\n    evens\
    \ = filter(x -> x % 2 == 0, evens)\n    odds = filter(x -> x % 2 != 0, odds)\n\
    \    evens = map(x -> x + 2, evens)\n    odds = map(x -> x + 1, odds)\n    return\
    \ sum(evens) + sum(odds)\nend\n</cell>\n<code language=julia-1.5>\nadd([4, 2,\
    \ 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector of\
    \ integers and returns the sum of the squares of the even elements of the vector.",
  "    evens = lst[1 : (end-lst)]\n    odds = lst[(end-lst):end]\n    return sum(evens)\
    \ + sum(odds)\nend", "    evens = lst[1 : (end-lst)]\n    odds = lst[(end-lst):end]\n\
    \    return sum(evens) + sum(odds)\nend\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the sum of the even elements in a given vector of integers\
    \ lst. \nWrite a function that returns the sum of the odd elements in a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements in a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements in a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements in a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements in a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements in a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements in a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements in a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements in a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements in a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements in a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements in a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements in a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements in a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements in a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements in a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements in a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements in a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements in a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements in a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements in a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements in a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the even\
    \ and odd elements in a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the even and odd elements in a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even and odd elements in a given\
    \ vector of integers lst. \nWrite a function that returns the sum", "    even\
    \ = lst[1 : (end-1)]\n    odd = lst[2 : end]\n    even.+=(odd.*2)\n    return\
    \ even\nend\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the numbers in the\
    \ vector lst.", "    even = lst[1 :end] \n    odd = lst[2 :end] \n    even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.", "    evens = lst[findall(x -> x % 2\
    \ == 0, lst)]\n    evens = evens[2:end]\n    return sum(evens)\nend\n</cell>\n\
    <code language=julia-1.3>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nGiven\
    \ a vector of integers lst, find the index of the first element that is greater\
    \ than or equal to 50", "    evens = lst[1 : (end-1)]\n    odds = lst[2 : end]\n\
    \    return sum(evens) + sum(odds)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add([4, 2, 6, 7]) == 5\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the sum of the squares of the numbers in a vector.", "    even\
    \ = lst[1 : (end-lst)]\n    odd = lst[(end-lst):end]\n    return sum(even) + sum(odd)\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the\
    \ even elements of a given vector of integers lst. \nWrite a function that returns\
    \ the sum of the odd elements of a given vector of integers lst. \nWrite a function\
    \ that returns the sum of the even and odd elements of a given vector of integers\
    \ lst. \nWrite a function that returns the sum of the even and odd elements of\
    \ a given vector of integers lst. \nWrite a function that returns the sum of the\
    \ even and odd elements of a given vector of integers lst. \nWrite a function\
    \ that returns the sum of the even and odd elements of a given vector of integers\
    \ lst. \nWrite a function that returns the sum of the even and odd elements of\
    \ a given vector of integers lst. \nWrite a function that returns the sum of the\
    \ even and odd elements of a given vector of integers lst. ", "    evens = lst[1\
    \ : (end-lst)]\n    odds = lst[(end-lst):end]\n    evens = filter(x -> x % 2 ==\
    \ 0, evens)\n    odds = filter(x -> x % 2 != 0, odds)\n    evens = map(x -> x\
    \ + 1, evens)\n    odds = map(x -> x + 1, odds)\n    return sum(evens) + sum(odds)\n\
    end\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the squares of the even numbers\
    \ in a given vector of integers. \nFor example, add([4, 2, 6, 7]) should return\
    \ 24.", "    evens = lst[1 : (end-1)]\n    odds = lst[(end-1) : (end)]\n    return\
    \ sum(evens) + sum(odds)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the sum of the squares of the even numbers in a given vector of integers.\
    \ For example, add([4, 2, 6, 7]) is equal to 14. Your function should work for\
    \ vectors of any length.", "    even = lst[1 : (end-1)]\n    odd = lst[2:end]\n\
    \    return sum(even) + sum(odd)\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ add([4, 2, 6, 7]) == 6\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the sum of the squares of the even elements of a given vector of integers. Test\
    \ your function on a few examples:", "    even = lst[1 : (end-lst)]\n    odd =\
    \ lst[2:end]\n    return sum(even) + sum(odd)\nend\n</cell>\n<code language=julia-1.5>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the sum of all elements in a vector. \nWrite a function that returns the product\
    \ of all elements in a vector. \nWrite a function that returns the maximum of\
    \ all elements in a vector. \nWrite a function that returns the minimum of all\
    \ elements in a vector. \nWrite a function that returns the absolute maximum of\
    \ all elements in a vector. \nWrite a function that returns the absolute minimum\
    \ of all elements in a vector. \nWrite a function that returns the sum of the\
    \ squares of all elements in a vector. \nWrite a function that returns the product\
    \ of the squares of all elements in a vector. \nWrite a function that returns\
    \ the sum of the absolute values of all elements in a vector. \nWrite a function\
    \ that returns the product of the absolute values of all elements in a vector.\
    \ \nWrite a function that returns the sum of the natural logarithms of all elements\
    \ in a vector. \nWrite a function that returns the product of the natural logarithms\
    \ of all elements in a vector. \nWrite a function that returns the sum of the\
    \ absolute values of the natural logarithms of all elements in a vector. \nWrite\
    \ a function that returns the product of the absolute values of the natural logarithms\
    \ of all elements in a vector. \nWrite a function that returns the sum of the\
    \ natural logarithms of the absolute values of all elements in a vector. \nWrite\
    \ a function that returns the product of the natural logarithms of the absolute\
    \ values of all elements in a vector. \nWrite a function that returns the sum\
    \ of the squares of the absolute values of all elements in a vector. \nWrite a\
    \ function that returns the product of the squares of the absolute values of all\
    \ elements in a vector. \nWrite a function that returns the sum of the squares\
    \ of the natural logarithms of all elements in a vector. \nWrite a function that\
    \ returns the product of the squares of the natural logarithms of all elements\
    \ in a vector. \nWrite a function that returns the sum of the squares of the absolute\
    \ values of the natural logarithms of all elements in a vector. \nWrite a function\
    \ that returns the product of the squares of the absolute values of the natural\
    \ logarithms of all elements in a vector. \nWrite a function that returns the\
    \ sum of the squares of the natural logarithms of the absolute values of all elements\
    \ in a vector. \nWrite a function that returns the product of the squares of the\
    \ natural logarithms of the absolute values of all elements in a vector. \nWrite\
    \ a function that returns the sum of the squares of the natural logarithms of\
    \ the absolute values of the natural logarithms of all elements in a vector. \n\
    Write a function that returns the product of the squares of the natural logarithms\
    \ of the absolute values of the natural logarithms of all elements in a vector.\
    \ \nWrite a function that returns the sum of the squares of the natural logarithms\
    \ of the absolute values of the natural logarithms of the absolute values of all\
    \ elements in a vector. \nWrite a function that returns the product of the squares\
    \ of the natural logarithms of the absolute values of the ", "    evens = lst[1\
    \ : (end-lst)]\n    odds = lst[(end-lst):end]\n    return sum(evens) + sum(odds)\n\
    end\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the squares of the numbers\
    \ in a vector.", "    even = lst[1::2]\n    odd = lst[1::2]\n    even.+=(odd.-even)\n\
    \    return even\nend\n</cell>\n<code language=julia-1.5>\n@assert add([4, 2,\
    \ 6, 7]) == 2 \n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ sum of the numbers in a vector. For example, sum([1, 2, 3]) should return 6.\
    \ Make sure it works for vectors of different lengths too.", "    evens = lst[1\
    \ : (end-lst)]\n    evens = filter(x -> x % 2 == 0, evens)\n    evens = map(x\
    \ -> x + 1, evens)\n    return sum(evens)\nend\n</cell>\n<code language=julia-1.5>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the sum of the squares of the numbers in a vector.", "    even = lst[1 :end]\n\
    \    odd = lst[2 :end]\n    even = even.+even\n    odd = odd.+odd\n    return\
    \ even+odd\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns the\
    \ sum of the even numbers in a given vector.", "    evens = lst[findall(x -> x\
    \ % 2 == 0, lst)]\n    evens = evens[2:end]\n    return sum(evens)\nend\n</cell>\n\
    <code language=julia-1.3>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the sum of the squares of the elements of a vector.\
    \ For example, add([4, 2, 6, 7]) == 10", "    even = lst[1 : (end-1)]\n    odd\
    \ = lst[(end-1) : (end)]\n    return sum(even) + sum(odd)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a vector of integers and returns the sum of the even elements\
    \ and the sum of the odd elements. \nWrite a function that takes a vector of integers\
    \ and returns the sum of the even elements and the sum of the odd elements. \n\
    Write a function that takes a vector of integers and returns the sum of the even\
    \ elements and the sum of the odd elements. \nWrite a function that takes a vector\
    \ of integers and returns the sum of the even elements and the sum of the odd\
    \ elements. \nWrite a function that takes a vector of integers and returns the\
    \ sum of the even elements and the sum of the odd elements. \nWrite a function\
    \ that takes a vector of integers and returns the sum of the even elements and\
    \ the sum of the odd elements.", "    even = lst[1 : (end-1)]\n    odd = lst[2:end]\n\
    \    even.+=(odd.*2)\n    return even\nend\n</cell>\n<code language=julia-1.5>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the sum of the even numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the odd numbers in a given vector of integers. \nWrite\
    \ a function that returns the product of the even numbers in a given vector of\
    \ integers. \nWrite a function that returns the product of the odd numbers in\
    \ a given vector of integers. \nWrite a function that returns the maximum of a\
    \ given vector of integers. \nWrite a function that returns the minimum of a given\
    \ vector of integers. \nWrite a function that returns the absolute value of a\
    \ given vector of integers. ", "    evens = lst[findall(x -> x % 2 == 0, lst)]\n\
    \    evens = evens[2:end]\n    evens = sum(evens)\n    return evens\nend", " \
    \   even = lst[1 :end] \n    odd = lst[2 :end] \n    even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.", "    evens = lst[1 : (end-lst)]\n    odds = lst[(end-lst):end]\n\
    \    return sum(evens) + sum(odds)\nend", "    even = lst[1::2]\n    odd = lst[1::2]\n\
    \    even.+ odd.+\nend\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the sum of the numbers in the vector lst that are divisible by 3.", "    even\
    \ = lst[1 : (end-1)]\n    odd = lst[2:end]\n    return sum(even) + sum(odd)\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert add(Vector{Int64}([4, 2, 6, 7]))\
    \ == 6\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum of\
    \ the even elements of a given vector of integers. \nWrite a function that returns\
    \ the sum of the odd elements of a given vector of integers. \nWrite a function\
    \ that returns the sum of the even and odd elements of a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd elements of a given vector of integers. \nWrite a function that returns\
    \ the sum of the even and odd elements of a given vector of integers. \nWrite\
    \ a function that returns the sum of the even and odd elements of a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd elements\
    \ of a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd elements of a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd elements of a given vector of integers. \nWrite a function that returns\
    \ the sum of the even and odd elements of a given vector of integers. \nWrite\
    \ a function that returns the sum of the even and odd elements of a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd elements\
    \ of a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd elements of a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd elements of a given vector of integers. \nWrite a function that returns\
    \ the sum of the even and odd elements of a given vector of integers. \nWrite\
    \ a function that returns the sum of the even and odd elements of a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd elements\
    \ of a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd elements of a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd elements of a given vector of integers. \nWrite a function that returns\
    \ the sum of the even and odd elements of a given vector of integers. \nWrite\
    \ a function that returns the sum of the even and odd elements of a given vector\
    \ of integers. \nWrite a function that returns the ", "    evens = lst[1 : (end-lst)]\n\
    \    odds = lst[(end-lst):end]\n    return sum(evens) + sum(odds)\nend\n</cell>\n\
    <code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the sum of the even numbers in a given vector of integers\
    \ lst. \nWrite a function that returns the sum of the odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the product of the even numbers\
    \ in a given vector of integers lst. \nWrite a function that returns the product\
    \ of the odd numbers in a given vector of integers lst. \nWrite a function that\
    \ returns the maximum of the even numbers in a given vector of integers lst. \n\
    Write a function that returns the maximum of the odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the minimum of the even numbers\
    \ in a given vector of integers lst. \nWrite a function that returns the minimum\
    \ of the odd numbers in a given vector of integers lst. \nWrite a function that\
    \ returns the absolute value of the even numbers in a given vector of integers\
    \ lst. \nWrite a function that returns the absolute value of the odd numbers in\
    \ a given vector of integers lst. \nWrite a function that returns the absolute\
    \ value of the sum of even numbers in a given vector of integers lst. \nWrite\
    \ a function that returns the absolute value of the sum of odd numbers in a given\
    \ vector of integers lst. \nWrite a function that returns the absolute value of\
    \ the product of even numbers in a given vector of integers lst. \nWrite a function\
    \ that returns the absolute value of the product of odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the absolute value of the maximum\
    \ of the even numbers in a given vector of integers lst. \nWrite a function that\
    \ returns the absolute value of the maximum of the odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the absolute value of the minimum\
    \ of the even numbers in a given vector of integers lst. \nWrite a function that\
    \ returns the absolute value of the minimum of the odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the absolute value of the sum\
    \ of the even numbers in a given vector of integers lst. \nWrite a function that\
    \ returns the absolute value of the sum of the odd numbers in a given vector of\
    \ integers lst. \nWrite a function that returns the absolute value of the product\
    \ of even numbers in a given vector of integers lst. \nWrite a function that returns\
    \ the absolute value of the product of odd numbers in a given vector of integers\
    \ lst. \nWrite a function that returns the absolute value of the maximum of the\
    \ even numbers in a given vector of integers lst. \nWrite a function that returns\
    \ the absolute value of the maximum of the odd numbers in a given vector of integers\
    \ lst. \nWrite a function that returns the absolute value of the minimum of the\
    \ even numbers in a given vector of integers lst. \nWrite a function that returns\
    \ the absolute value of the minimum of the odd numbers in a given vector of integers\
    \ lst. \nWrite a function that returns the absolute value of the ", "    even\
    \ = lst[1 : (end-lst)]\n    odd = lst[2 : end]\n    even.+=(odd.*2)\n    return\
    \ even\nend\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the numbers in a\
    \ vector. \nWrite a function that returns the sum of the squares of the numbers\
    \ in a vector. \nWrite a function that returns the product of the numbers in a\
    \ vector. \nWrite a function that returns the product of the squares of the numbers\
    \ in a vector. \nWrite a function that returns the maximum of the numbers in a\
    \ vector. \nWrite a function that returns the minimum of the numbers in a vector.\
    \ \nWrite a function that returns the number of elements in a vector. \nWrite\
    \ a function that returns the mean of the numbers in a vector. \nWrite a function\
    \ that returns the variance of the numbers in a vector. \nWrite a function that\
    \ returns the standard deviation of the numbers in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite a function\
    \ that returns the number of non-zero elements in a vector. \nWrite ", "    even\
    \ = lst[1 :end]\n    odd = lst[2 :end]\n    even.+ odd.+\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the even numbers in a list.",
  "    evens = lst[1 : (end-1)]\n    odds = lst[2:end]\n    evens = filter(x -> x\
    \ % 2 == 0, evens)\n    odds = filter(x -> x % 2 != 0, odds)\n    return sum(evens)\
    \ + sum(odds)\nend\n</cell>\n<code language=julia-1.4>\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 6\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the sum of the squares of the numbers in a vector.", "    even = lst[1 :end]\
    \ \n    odd = lst[2 :end] \n    return sum(even) + sum(odd)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the sum of the even numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a given vector of integers. \n\
    Write a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a given vector of integers. \n\
    Write a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a given vector of integers. \n\
    Write a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a given vector of integers. \n\
    Write a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a given vector of integers. \n\
    Write a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a given vector of integers. \n\
    Write a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd numbers in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd numbers in a ", "    even = lst[1::2]\n\
    \    odd = lst[2::2]\n    even.+=(odd.+=0)\n    return even\nend\n</cell>\n<code\
    \ language=julia-1.3>\n@assert add(Vector{Int64}([4, 2, 6, 7])) == 5\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the numbers in the\
    \ given vector. \nThe function should work for both real and complex numbers.",
  "    even = lst[1 :] \n    odd = lst[2 :]\n    even.+=(odd.*2)\n    return even\n\
    end\n</cell>\n<code language=julia-1.0>\nadd([4, 2, 6, 7])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the squares of the even numbers\
    \ in a given vector of integers. \nThe function should take one argument, lst::Vector{Int64}.",
  "    even = lst[1 : (end-1)]\n    odd = lst[2:end]\n    even.+=(odd.*2)\n    return\
    \ even\nend\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the squares of the\
    \ even numbers in a given vector.", "    even = lst[1 : (end-1)]\n    odd = lst[2:end]\n\
    \    return sum(even) + sum(odd)\nend\n</cell>\n<code language=julia-1.5>\nadd([4,\
    \ 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the even numbers in a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the odd numbers in a given vector of integers lst. \nWrite\
    \ a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a ", "    even = lst[1::2]\n    odd = lst[1::2]\n\
    \    even.+=(odd.+0)\n    return even.sum\nend\n</cell>\n<code language=julia-1.5>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the sum of the squares of the even numbers in a given vector of integers. \n\
    The function should take one argument, a vector of integers lst. \nThe function\
    \ should return the sum of the squares of the even numbers in the vector.", " \
    \   evens = lst[1 : (end-1)]\n    odds = lst[(end-1):end]\n    return sum(evens)\
    \ + sum(odds)\nend\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n\
    <text>\nExercise 3\nGiven a vector of integers lst, return the sum of the squares\
    \ of the even elements that are at odd indices.", "    evens = lst[findall(x ->\
    \ x % 2 == 0, lst)]\n    evens = evens[2:end]\n    evens = sum(evens)\n    return\
    \ evens\nend\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the even numbers\
    \ in a vector.", "    even = lst[1 : (end-1)]\n    odd = lst[(end-2) : (end-1)]\n\
    \    return sum(even) + sum(odd)\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ add(Vector{Int64}([4, 2, 6, 7])) == 6\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the sum of the squares of the numbers in a vector.", " \
    \   even = lst[1::2]\n    odd = lst[1::2]\n    even.+ odd.+\nend\n</cell>\n<code\
    \ language=julia-1.3>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function called sub that subtracts the even elements that are at odd indices\
    \ from the even elements that are at even indices.", "    even = lst[1::2]\n \
    \   odd = lst[1::2]\n    even.+=(odd.-even)\n    return even\nend\n</cell>\n<code\
    \ language=julia-1.5>\n@assert add(Vector{Int64}([4, 2, 6, 7])) == 5\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the numbers in a\
    \ vector. For example, sum([1, 2, 3]) should return 6. Make sure it works for\
    \ both scalars and vectors.", "    even = lst[1 :] .% 2 == 0\n    lst[even] =\
    \ lst[even] + lst[!even]\n    return lst[even]\nend\n</cell>\n<code language=julia-1.5>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the sum of the even elements of an array.", "    evens = lst[1 : (end-lst)]\n\
    \    odds = lst[(end-lst):end]\n    return sum(evens) + sum(odds)\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert add(Vector{Int64}([4, 2, 6, 7])) == 6\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the squares of the\
    \ numbers in the given vector. For example, sum([4, 2, 6, 7]) == 25", "    even\
    \ = lst[1 : (end-lst)]\n    odd = lst[2 : end]\n    return sum(even) + sum(odd)\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the\
    \ squares of the numbers in a vector.", "    even = lst[1 : (end-1)]\n    odd\
    \ = lst[2:end]\n    even.+=(odd.*2)\n    return even\nend\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the even numbers in a given vector.",
  "    even = lst[1::2]\n    odd = lst[1::2]\n    even.+=(odd.-even)\n    return even\n\
    end", "    even = lst[1 : (end-1)]\n    odd = lst[(end-1) : (end)]\n    even =\
    \ sum(even)\n    odd = sum(odd)\n    return even + odd\nend\n</cell>\n<code language=julia-1.5>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the sum of the even elements in a given vector of integers. If the vector is\
    \ empty, return 0.", "    even = lst[1 :end]\n    odd = lst[2 :end]\n    even.+=(odd.*2)\n\
    \    return even\nend\n</cell>\n<code language=julia-1.5>\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 6\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the sum of the numbers in a vector. \nThe function should work for both real\
    \ and complex numbers. \nThe function should work for both real and complex numbers.\
    \ \nThe function should work for both real and complex numbers. \nThe function\
    \ should work for both real and complex numbers. \nThe function should work for\
    \ both real and complex numbers. \nThe function should work for both real and\
    \ complex numbers. \nThe function should work for both real and complex numbers.\
    \ \nThe function should work for both real and complex numbers. \nThe function\
    \ should work for both real and complex numbers. \nThe function should work for\
    \ both real and complex numbers. \nThe function should work for both real and\
    \ complex numbers. \nThe function should work for both real and complex numbers.\
    \ \nThe function should work for both real and complex numbers. \nThe function\
    \ should work for both real and complex numbers. \nThe function should work for\
    \ both real and complex numbers. \nThe function should work for both real and\
    \ complex numbers. \nThe function should work for both real and complex numbers.\
    \ \nThe function should work for both real and complex numbers. \nThe function\
    \ should work for both real and complex numbers. \nThe function should work for\
    \ both real and complex numbers. \nThe function should work for both real and\
    \ complex numbers. \nThe function should work for both real and complex numbers.\
    \ \nThe function should work for both real and complex numbers. \nThe function\
    \ should work for both real and complex numbers. \nThe function should work for\
    \ both real and complex numbers. \nThe function should work for both real and\
    \ complex numbers. \nThe function should work for both real and complex numbers.\
    \ \nThe function should work for both real and complex numbers. \nThe function\
    \ should work for both real and complex numbers. \nThe function should work for\
    \ both real and complex numbers. \nThe function should work for both real and\
    \ complex numbers. \nThe function should work for both real and complex numbers.\
    \ \nThe function should work for both real and complex numbers. \nThe function\
    \ should work for both real and complex numbers. \nThe function should work for\
    \ both real and complex numbers. \nThe function should work for both real and\
    \ complex numbers. \nThe function should work for both real and complex numbers.\
    \ \nThe function should work for both real and complex numbers. \nThe function\
    \ should work for both real and complex numbers. \nThe function should ", "  \
    \  even = lst[1::2]\n    odd = lst[1::2]\n    even.+=(odd.+=0)\n    return even\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert add([4, 2, 6, 7]) == 5\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the squares of the\
    \ numbers in the given vector. For example, sum([4, 2, 6]) should return 14.",
  "    even = lst[1 :end]\n    odd = lst[2 :end]\n    even.+=(odd.*2)\n    return\
    \ even\nend\n</cell>\n<code language=julia-1.5>\n@assert add([4, 2, 6, 7]) ==\
    \ 5\n</cell>\n<text>\nExercise 3\nWrite a function called multiply that multiplies\
    \ a vector by a scalar.", "    even = lst[1::2]\n    odd = lst[1::2]\n    even.+=(odd.+=0)\n\
    \    return even\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes\
    \ a vector of integers and returns the sum of the even elements that are at odd\
    \ indices.", "    evens = lst[1 : (end-lst)]\n    odds = lst[2 : end]\n    evens\
    \ = filter(x -> x % 2 == 0, evens)\n    odds = filter(x -> x % 2 != 0, odds)\n\
    \    return sum(evens) + sum(odds)\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that takes a vector of integers and returns the sum of the even elements\
    \ and the sum of the odd elements. \nWrite a function that takes a vector of integers\
    \ and returns the sum of the even elements and the sum of the odd elements. \n\
    Write a function that takes a vector of integers and returns the sum of the even\
    \ elements and the sum of the odd elements. \nWrite a function that takes a vector\
    \ of integers and returns the sum of the even elements and the sum of the odd\
    \ elements. \nWrite a function that takes a vector of integers and returns the\
    \ sum of the even elements and the sum of the odd elements.", "    even = lst[1::2]\n\
    \    odd = lst[1::2]\n    return sum(even) + sum(odd)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add(Vector{Int64}([4, 2, 6, 7])) == 6\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the sum of the even elements of a given vector of integers.\
    \ \nWrite a function that returns the sum of the odd elements of a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd elements\
    \ of a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd elements of a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd elements of a given vector of integers. \nWrite a function that returns\
    \ the sum of the even and odd elements of a given vector of integers. \nWrite\
    \ a function that returns the sum of the even and odd elements of a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd elements\
    \ of a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd elements of a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd elements of a given vector of integers. \nWrite a function that returns\
    \ the sum of the even and odd elements of a given vector of integers. \nWrite\
    \ a function that returns the sum of the even and odd elements of a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd elements\
    \ of a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd elements of a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd elements of a given vector of integers. \nWrite a function that returns\
    \ the sum of the even and odd elements of a given vector of integers. \nWrite\
    \ a function that returns the sum of the even and odd elements of a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd elements\
    \ of a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd elements of a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd elements of a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd elements of a given vector of integers. \nWrite a function that returns\
    \ the sum of the ", "    even = lst[1 :end] \n    odd = lst[2 :end] \n    even.+\
    \ odd.+ sum(even)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the sum of the even numbers in a given vector of integers lst. \nWrite a function\
    \ that returns the sum of the odd numbers in a given vector of integers lst. \n\
    Write a function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum of the even and odd numbers in a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ numbers in a given vector of integers lst. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers lst. \nWrite a\
    \ function that returns the sum", "    even = lst[1 : (end-1)]\n    odd = lst[2:end]\n\
    \    even.+ odd.+\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the sum of the even elements of a given vector of integers. Write a test that\
    \ ensures that your function works as expected.", "    even = lst[1 : (end-1)]\n\
    \    odd = lst[2:end]\n    even.+=(odd.*2)\n    return even\nend", "    even =\
    \ lst[1 : (end-1)]\n    odd = lst[2:end]\n    return sum(even) + sum(odd)\nend",
  "    even = lst[1 : (end-1)]\n    odd = lst[2:end]\n    even.+=(odd.*2)\n    return\
    \ even\nend\n</cell>\n<code language=julia-1.0>\nadd([4, 2, 6, 7])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the numbers in the\
    \ vector lst that have even indices. For example, sum([4, 2, 6, 7]) is 5.", " \
    \   even = lst[1 : (end-1)]\n    odd = lst[2:end]\n    even.+=(odd)\n    return\
    \ even\nend\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n\
    <text>\nExercise 2\nGiven a vector of integers lst, return the sum of the even\
    \ elements that are at odd indices.", "    evens = lst[findall(x->x%2==0, lst)]\n\
    \    return sum(evens)\nend\n</cell>\n<code language=julia-1.0>\nadd([4, 2, 6,\
    \ 7])\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the\
    \ squares of the even numbers in a given vector.", "    evens = lst[1 : (end-1)]\n\
    \    odds = lst[(end-1) : end]\n    evens = filter(x -> x % 2 == 0, evens)\n \
    \   odds = filter(x -> x % 2 == 1, odds)\n    return sum(evens) + sum(odds)\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a vector of integers\
    \ and returns the sum of the even elements and the sum of the odd elements.",
  "    evens = lst[1 : (end-1)]\n    odds = lst[2 : end]\n    evens + sum(odds)\n\
    end\n</cell>\n<code language=julia-1.5>\n@code_warntype add([4, 2, 6, 7])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the even numbers\
    \ in a given vector.", "    even = lst[1 :] \n    odd = lst[2:end] \n    return\
    \ sum(even) + sum(odd) \nend \n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns the sum of the even elements of a given vector of integers lst. \nWrite\
    \ a function that returns the sum of the odd elements of a given vector of integers\
    \ lst. \nWrite a function that returns the product of the even elements of a given\
    \ vector of integers lst. \nWrite a function that returns the product of the odd\
    \ elements of a given vector of integers lst. \nWrite a function that returns\
    \ the maximum of a given vector of integers lst. \nWrite a function that returns\
    \ the minimum of a given vector of integers lst. \nWrite a function that returns\
    \ the product of the squares of the even elements of a given vector of integers\
    \ lst. \nWrite a function that returns the product of the squares of the odd elements\
    \ of a given vector of integers lst. ", "    evens = lst[1 : (end-lst)]\n    odds\
    \ = lst[(end-lst):end]\n    evens = filter(x -> x % 2 == 0, evens)\n    odds =\
    \ filter(x -> x % 2 == 1, odds)\n    evens = map(x -> x + 1, evens)\n    odds\
    \ = map(x -> x + 1, odds)\n    return sum(evens) + sum(odds)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes a vector of integers and returns the sum of the squares\
    \ of the even elements and of the odd elements.", "    evens = lst[1 : (end-1)]\n\
    \    odds = lst[(end-1) : end]\n    return sum(evens) + sum(odds)\nend\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the numbers in the\
    \ vector lst that are divisible by 3.", "    evens = lst[1 : (end-lst)]\n    odds\
    \ = lst[(end-lst):end]\n    return sum(evens) + sum(odds)\nend\n</cell>\n<code\
    \ language=julia-1.0>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes a vector of integers and returns the sum of the squares\
    \ of the even numbers in the vector.", "    evens = lst[1 : (end-1)]\n    odds\
    \ = lst[2:end]\n    evens = filter(x -> x % 2 == 0, evens)\n    odds = filter(x\
    \ -> x % 2 == 1, odds)\n    return sum(evens) + sum(odds)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the sum of the squares of the even numbers in a vector.",
  "    evens = lst[1 : (end-1)]\n    odds = lst[(end-1) : (end)]\n    return sum(evens)\
    \ + sum(odds)\nend\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n\
    <text>\nExercise 3\nWrite a function called sub that subtracts all the even elements\
    \ from all the odd elements in a vector. For example, if the vector is [4, 2,\
    \ 6, 7], then the function should return [3, -2, -4, -6]. Make sure your function\
    \ works with vectors of different lengths.", "    even = lst[1 : (end-1)]\n  \
    \  odd = lst[(end-1) : (end)]\n    return sum(even) + sum(odd)\nend\n</cell>\n\
    <code language=julia-1.0>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nGiven\
    \ a vector of integers lst, return the sum of the even elements that are at odd\
    \ indices.", "    even = lst[1 : (end-1)]\n    odd = lst[2:end]\n    return sum(even)\
    \ + sum(odd)\nend\n</cell>\n<code language=julia-1.4>\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 6\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the sum of the squares of the elements of a vector. For example, sum([1, 2,\
    \ 3]) = 1 + 4 + 9 + 16 = 25", "    evens = lst[1 : (end-lst)]\n    evens = filter(x\
    \ -> x % 2 == 0, evens)\n    evens = map(x -> x + 1, evens)\n    return sum(evens)\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the\
    \ even numbers in a given vector.", "    even = lst[1 :end] \n    odd = lst[2\
    \ :end] \n    even.+=(odd.*2)\n    return even\nend\n</cell>\n<code language=julia-1.3>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the sum of the even elements in a given vector of integers lst", "    even =\
    \ lst[1::2]\n    odd = lst[1::2]\n    even.+=(odd.-even)\n    return even\nend\n\
    </cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise\
    \ 2\nGiven a vector of integers lst, return the sum of the even elements that\
    \ are at odd indices.", "    evens = lst[1 : (end-lst)]\n    odds = lst[(end-lst):end]\n\
    \    evens = filter(x -> x % 2 == 0, evens)\n    odds = filter(x -> x % 2 == 1,\
    \ odds)\n    return sum(evens) + sum(odds)\nend\n</cell>\n<code language=julia-1.5>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nGiven a vector of integers lst,\
    \ find the largest element in the vector. \nGiven a vector of integers lst, find\
    \ the smallest element in the vector. \nGiven a vector of integers lst, find the\
    \ product of the elements in the vector. \nGiven a vector of integers lst, find\
    \ the sum of the elements in the vector. \nGiven a vector of integers lst, find\
    \ the index of the first element that is greater than the element at index i.\
    \ \nGiven a vector of integers lst, find the index of the first element that is\
    \ less than the element at index i. \nGiven a vector of integers lst, find the\
    \ index of the element that is divisible by 3. \nGiven a vector of integers lst,\
    \ find the index of the element that is divisible by 5. \nGiven a vector of integers\
    \ lst, find the index of the element that is divisible by 7. \nGiven a vector\
    \ of integers lst, find the index of the element that is divisible by 11. \nGiven\
    \ a vector of integers lst, find the index of the element that is divisible by\
    \ 13. \nGiven a vector of integers lst, find the index of the element that is\
    \ divisible by 17. \nGiven a vector of integers lst, find the index of the element\
    \ that is divisible by 19. \nGiven a vector of integers lst, find the index of\
    \ the element that is divisible by 23. \nGiven a vector of integers lst, find\
    \ the index of the element that is divisible by 29. \nGiven a vector of integers\
    \ lst, find the index of the element that is divisible by 31. \nGiven a vector\
    \ of integers lst, find the index of the element that is divisible by 37. \nGiven\
    \ a vector of integers lst, find the index of the element that is divisible by\
    \ 41. \nGiven a vector of integers lst, find the index of the element that is\
    \ divisible by 43. \nGiven a vector of integers lst, find the index of the element\
    \ that is divisible by 47. \nGiven a vector of integers lst, find the index of\
    \ the element that is divisible by 53. \nGiven a vector of integers lst, find\
    \ the index of the element that is divisible by 59. \nGiven a vector of integers\
    \ lst, find the index of the element that is divisible by 61. \nGiven a vector\
    \ of integers lst, find the index of the element that is divisible by 67. \nGiven\
    \ a vector of integers lst, find the index of the element that is divisible by\
    \ 71. \nGiven a vector of integers lst, ", "    even = lst[1 :end]\n    odd =\
    \ lst[2 :end]\n    even.+=(odd.*2)\n    return even\nend\n</cell>\n<code language=julia-1.5>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a function called multiply\
    \ that multiplies all elements in a vector by 2.", "    evens = lst[findall(x\
    \ -> x % 2 == 0, lst)]\n    evens = evens[2:end]\n    return sum(evens)\nend\n\
    </cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the squares of the numbers in the\
    \ given vector. For example, add([4, 2, 6, 7]) is equal to 10. You may use the\
    \ sum function.", "    even = lst[1 : (end-1)]\n    odd = lst[2:end]\n    even.+=(odd.*2)\n\
    \    return even\nend\n</cell>\n<code language=julia-1.0>\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4, 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4, 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4, 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4, 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4, 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4, 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4, 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4, 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4, 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4, 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4, 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4, 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4, 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4, 2, 6, 7])) == 4\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 4\n@assert add(Vector{", "    even = lst[1 :] \n    odd = lst[2:end]\
    \ \n    even.+ odd.* 2 \nend\n</cell>\n<text>\nExercise 3\nWrite a function that\
    \ returns the sum of the even elements of a given vector of integers lst. \nGiven\
    \ a non-empty vector of integers lst. add the even elements that are at odd indices..",
  "    evens = lst[1 : (end-1)]\n    odds = lst[(end-1) : (end)]\n    evens + sum(odds)\n\
    end\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the even numbers in a vector.",
  "    evens = lst[1 : (end-1)]\n    odds = lst[(end-1):end]\n    return sum(evens)\
    \ + sum(odds)\nend", "    even = lst[1 : (end-1)]\n    odd = lst[2 : end]\n  \
    \  return sum(even) + sum(odd)\nend\n</cell>\n<code language=julia-1.5>\nadd([4,\
    \ 2, 6, 7])\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the even elements in a given vector of integers. \nWrite a function that\
    \ returns the sum of the odd elements in a given vector of integers. \nWrite a\
    \ function that returns the sum of the even and odd elements in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd elements\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd elements in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd elements in a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd elements in a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd elements in a given vector of integers. \nWrite a function that returns\
    \ the sum of the even and odd elements in a given vector of integers. \nWrite\
    \ a function that returns the sum of the even and odd elements in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd elements\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd elements in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd elements in a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd elements in a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd elements in a given vector of integers. \nWrite a function that returns\
    \ the sum of the even and odd elements in a given vector of integers. \nWrite\
    \ a function that returns the sum of the even and odd elements in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd elements\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd elements in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd elements in a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd elements in a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd elements in a given vector of integers. \nWrite a function that returns\
    \ the sum of the even and odd elements in a given vector of integers. \nWrite\
    \ a function that returns the sum of the even and odd elements in a given vector\
    \ of integers. \nWrite a function that returns the sum of the even and odd elements\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ even and odd elements in a given vector of integers. \nWrite a function that\
    \ returns the sum of the even and odd elements in a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd elements in a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd elements in a given ", "    even = lst[1 : (end-lst)]\n    odd = lst[(end-lst)\
    \ : end]\n    even.+=(odd.*2)\n    return even\nend\n</cell>\n<code language=julia-1.3>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the sum of the elements of a vector. \nGiven a vector of integers lst. return\
    \ the sum of the elements that are at even indices.", "    even = lst[1 :end]\
    \ \n    odd = lst[2 :end] \n    even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.", "    even = lst[1 :end] \n    odd = lst[2 :end] \n    even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.", "    even = lst[1 : (end-1)]\n    odd = lst[2:end]\n\
    \    even.+ odd.+\nend\n</cell>\n<code language=julia-1.5>\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 6\n</cell>\n<text>\nExercise 2\nWrite a function called add_all\
    \ that takes in a list of vectors and returns the sum of the even elements of\
    \ each vector. For example: add_all([Vector{Int64}([4, 2, 6, 7]), Vector{Int64}([5,\
    \ 3, 7, 9])]) should return [5, 7, 11].", "    even = lst[1 : (end-1)]\n    odd\
    \ = lst[2:end]\n    even.+=(odd)\n    return even\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that returns the sum of the even numbers in a given vector.\
    \ \nWrite a function that returns the sum of the odd numbers in a given vector.\
    \ \nWrite a function that returns the product of the even numbers in a given vector.\
    \ \nWrite a function that returns the product of the odd numbers in a given vector. ",
  "    even = lst[1 : (end-1)]\n    odd = lst[(end-1) : end]\n    even.+=(odd.*2)\n\
    \    return even\nend\n</cell>\n<text>\nExercise 3\nWrite a function that returns\
    \ the sum of the even numbers in a given vector.", "    even = lst[1 :end]\n \
    \   odd = lst[2 :end]\n    even.+=(odd.*2)\n    return even\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a vector of integers lst and returns the\
    \ sum of the even elements that are at odd indices.", "    even = lst[1 :end]\n\
    \    odd = lst[2 :end]\n    even.+=(odd.*2)\n    return even\nend\n</cell>\n<code\
    \ language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that takes a vector of integers lst and returns the sum of the even\
    \ elements that are at odd indices.", "    even = lst[1 :] \n    odd = lst[2 :]\
    \ \n    even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+\
    \ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even", "    even =\
    \ lst[1 :end] \n    odd = lst[2 :end] \n    even.+ odd.+ \nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that returns the sum of the even elements of a given\
    \ vector of integers lst. \nWrite a function that returns the sum of the odd elements\
    \ of a given vector of integers lst. \nWrite a function that returns the product\
    \ of the even elements of a given vector of integers lst. \nWrite a function that\
    \ returns the product of the odd elements of a given vector of integers lst. ",
  "    evens = lst[1 : (end-1)]\n    odds = lst[2:end]\n    return sum(evens) + sum(odds)\n\
    end", "    even = lst[1 : (end-1)]\n    odd = lst[(end-1) : end]\n    return sum(even)\
    \ + sum(odd)\nend\n</cell>\n<code language=julia-1.0>\nadd([4, 2, 6, 7])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the squares of the\
    \ numbers in a vector.", "    even = lst[1 : (end-1)]\n    odd = lst[2:end]\n\
    \    even.+=(odd.*2)\n    return even\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add(Vector{Int64}([4, 2, 6, 7])) == 2 \n</cell>\n<text>\nExercise 2\n\
    Write a function that returns the sum of the numbers in the given vector. \nThe\
    \ function should work for both real and complex numbers. \nThe function should\
    \ work for both real and complex numbers. \nThe function should work for both\
    \ real and complex numbers. \nThe function should work for both real and complex\
    \ numbers. \nThe function should work for both real and complex numbers. \nThe\
    \ function should work for both real and complex numbers. \nThe function should\
    \ work for both real and complex numbers. \nThe function should work for both\
    \ real and complex numbers. \nThe function should work for both real and complex\
    \ numbers. \nThe function should work for both real and complex numbers. \nThe\
    \ function should work for both real and complex numbers. \nThe function should\
    \ work for both real and complex numbers. \nThe function should work for both\
    \ real and complex numbers. \nThe function should work for both real and complex\
    \ numbers. \nThe function should work for both real and complex numbers. \nThe\
    \ function should work for both real and complex numbers. \nThe function should\
    \ work for both real and complex numbers. \nThe function should work for both\
    \ real and complex numbers. \nThe function should work for both real and complex\
    \ numbers. \nThe function should work for both real and complex numbers. \nThe\
    \ function should work for both real and complex numbers. \nThe function should\
    \ work for both real and complex numbers. \nThe function should work for both\
    \ real and complex numbers. \nThe function should work for both real and complex\
    \ numbers. \nThe function should work for both real and complex numbers. \nThe\
    \ function should work for both real and complex numbers. \nThe function should\
    \ work for both real and complex numbers. \nThe function should work for both\
    \ real and complex numbers. \nThe function should work for both real and complex\
    \ numbers. \nThe function should work for both real and complex numbers. \nThe\
    \ function should work for both real and complex numbers. \nThe function should\
    \ work for both real and complex numbers. \nThe function should work for both\
    \ real and complex numbers. \nThe function should work for both real and complex\
    \ numbers. \nThe function should work for both real and complex numbers. \nThe\
    \ function should work for both real and complex numbers. \nThe function should\
    \ work for both real and complex numbers. \nThe function should work for both\
    \ real and complex numbers. \nThe function should work for both real and complex\
    \ numbers. \nThe function ", "    even = lst[1 : (end-lst)]\n    odd = lst[(end-lst):end]\n\
    \    return sum(even) + sum(odd)\nend\n</cell>\n<code language=julia-1.5>\nadd([4,\
    \ 2, 6, 7])\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum\
    \ of the squares of the even elements of a given vector of integers. \nWrite a\
    \ function that returns the sum of the squares of the odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the squares of\
    \ the even and odd elements of a given vector of integers. \nWrite a function\
    \ that returns the sum of the squares of the even and odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the squares of\
    \ the even and odd elements of a given vector of integers. \nWrite a function\
    \ that returns the sum of the squares of the even and odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the squares of\
    \ the even and odd elements of a given vector of integers. \nWrite a function\
    \ that returns the sum of the squares of the even and odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the squares of\
    \ the even and odd elements of a given vector of integers. \nWrite a function\
    \ that returns the sum of the squares of the even and odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the squares of\
    \ the even and odd elements of a given vector of integers. \nWrite a function\
    \ that returns the sum of the squares of the even and odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the squares of\
    \ the even and odd elements of a given vector of integers. \nWrite a function\
    \ that returns the sum of the squares of the even and odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the squares of\
    \ the even and odd elements of a given vector of integers. \nWrite a function\
    \ that returns the sum of the squares of the even and odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the squares of\
    \ the even and odd elements of a given vector of integers. \nWrite a function\
    \ that returns the sum of the squares of the even and odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the squares of\
    \ the even and odd elements of a given vector of integers. \nWrite a function\
    \ that returns the sum of the squares of the even and odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the squares of\
    \ the even and odd elements of a given vector of integers. \nWrite a function\
    \ that returns the sum of the squares of the even and odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the squares of\
    \ the even and odd elements of a given vector of integers. \nWrite a function\
    \ that returns the sum of the squares of the even and odd elements of a given\
    \ vector of integers. \nWrite a function that returns the sum of the squares of\
    \ the even and odd elements of a given vector of integers. \nWrite a function\
    \ that returns the sum of the ", "    even = lst[1 : (end-lst)]\n    odd = lst[2\
    \ : end]\n    even.+ odd.+\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the sum of the even elements of a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the odd elements of a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ elements of a given vector of integers lst. \nWrite a function that returns\
    \ the sum of the even and odd elements of a given vector of integers lst. \nWrite\
    \ a function that returns the sum of the even and odd elements of a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ elements of a given vector of integers lst. \nWrite a function that returns\
    \ the sum of the even and odd elements of a given vector of integers lst. \nWrite\
    \ a function that returns the sum of the even and odd elements of a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ elements of a given vector of integers lst. \nWrite a function that returns\
    \ the sum of the even and odd elements of a given vector of integers lst. \nWrite\
    \ a function that returns the sum of the even and odd elements of a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ elements of a given vector of integers lst. \nWrite a function that returns\
    \ the sum of the even and odd elements of a given vector of integers lst. \nWrite\
    \ a function that returns the sum of the even and odd elements of a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ elements of a given vector of integers lst. \nWrite a function that returns\
    \ the sum of the even and odd elements of a given vector of integers lst. \nWrite\
    \ a function that returns the sum of the even and odd elements of a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ elements of a given vector of integers lst. \nWrite a function that returns\
    \ the sum of the even and odd elements of a given vector of integers lst. \nWrite\
    \ a function that returns the sum of the even and odd elements of a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ elements of a given vector of integers lst. \nWrite a function that returns\
    \ the sum of the even and odd elements of a given vector of integers lst. \nWrite\
    \ a function that returns the sum of the even and odd elements of a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and odd\
    \ elements of a given vector of integers lst. \nWrite a function that returns\
    \ the sum of the even and odd elements of a given vector of integers lst. \nWrite\
    \ a function that returns the sum of the even and odd elements of a given vector\
    \ of integers lst. \nWrite a function that returns the sum of the even and ",
  "    evens = lst[1 : (end-lst)]\n    odds = lst[(end-lst)+1 : (end-lst)]\n    evens\
    \ = filter(x -> x % 2 == 0, evens)\n    odds = filter(x -> x % 2 != 0, odds)\n\
    \    return sum(evens) + sum(odds)\nend\n</cell>\n<text>\nExercise 3\nWrite a\
    \ function that returns the sum of the squares of the numbers in a vector.", " \
    \   even = lst[1 : (end-1)]\n    odd = lst[2 : end]\n    even.+=(odd.*2)\n   \
    \ return even\nend\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n\
    <text>\nExercise 3\nWrite a function that returns the sum of the even numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ odd numbers in a given vector of integers. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the even and odd numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd numbers in a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd numbers in a given vector of integers. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the even and odd numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd numbers in a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd numbers in a given vector of integers. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the even and odd numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd numbers in a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd numbers in a given vector of integers. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the even and odd numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd numbers in a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd numbers in a given vector of integers. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the even and odd numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd numbers in a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd numbers in a given vector of integers. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the even and odd numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the even and odd numbers in a given\
    \ vector of integers. \nWrite a function that returns the sum of the even and\
    \ odd numbers in a given vector of integers. \nWrite a function that returns the\
    \ sum of the even and odd numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the even and odd numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the even ", "    even = lst[1 :]\
    \ % 2 == 0\n    lst[even] = lst[even] + lst[!even]\n    return lst[1]\nend\n</cell>\n\
    <code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the sum of the numbers in the vector lst that are divisible\
    \ by 3.", "    even = lst[1 : (end-1)]\n    odd = lst[2:end]\n    even.+=(odd)\n\
    \    return even\nend\n</cell>\n<code language=julia-1.5>\n@assert add([4, 2,\
    \ 6, 7]) == 5\n</cell>\n<text>\nExercise 2\nWrite a function that returns the\
    \ sum of the numbers in the vector lst that are not divisible by 3.", "    even\
    \ = lst[1 : (end-1)]\n    odd = lst[2 : end]\n    even = sum(even)\n    odd =\
    \ sum(odd)\n    return even + odd\nend\n</cell>\n<code language=julia-1.5>\n@assert\
    \ add([1]) == 1;\n@assert add([4, 2, 6, 7]) == 2;\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the squares of the numbers in the given\
    \ vector. For example, sum([1, 2, 3, 4]) should return 10. Make sure you use Julia's\
    \ sum function.", "    evens = lst[1 : (end-lst)/2]\n    odds = lst[(end-lst)/2+1\
    \ : end]\n    return sum(evens) + sum(odds)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add(Vector{Int64}([4, 2, 6, 7])) == 6\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the sum of the numbers in the vector lst that have even\
    \ indices. For example, sum([4, 2, 6, 7]) == 6.", "    evens = lst[findall(x->x%2==0,\
    \ lst)]\n    return sum(evens)\nend", "    even = lst[1::2]\n    odd = lst[1::2]\n\
    \    even.+=(odd.-even)\n    return even\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add([4, 2, 6, 7]) == 2\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum of the numbers in the given vector. \nWrite a function\
    \ that returns the sum", "    even = lst[1 : (end-1)]\n    odd = lst[2 : end]\n\
    \    return sum(even) + sum(odd)\nend\n</cell>\n<code language=julia-1.5>\nadd([4,\
    \ 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum\
    \ of the even elements of a given vector of integers lst. \nWrite a function that\
    \ returns the sum of the odd elements of a given vector of integers lst. \nWrite\
    \ a function that returns the sum of the even elements of a given vector of integers\
    \ lst and the sum of the odd elements of a given vector of integers lst. \nWrite\
    \ a function that returns the sum of the even elements of a given vector of integers\
    \ lst and the sum of the odd elements of a given vector of integers lst and the\
    \ sum of the even elements of a given vector of integers lst. \nWrite a function\
    \ that returns the sum of the even elements of a given vector of integers lst\
    \ and the sum of the odd elements of a given vector of integers lst and the sum\
    \ of the even elements of a given vector of integers lst and the sum of the odd\
    \ elements of a given vector of integers lst. \nWrite a function that returns\
    \ the sum of the even elements of a given vector of integers lst and the sum of\
    \ the odd elements of a given vector of integers lst and the sum of the even elements\
    \ of a given vector of integers lst and the sum of the odd elements of a given\
    \ vector of integers lst and the sum of the even elements of a given vector of\
    \ integers lst. \nWrite a function that returns the sum of the even elements of\
    \ a given vector of integers lst and the sum of the odd elements of a given vector\
    \ of integers lst and the sum of the even elements of a given vector of integers\
    \ lst and the sum of the odd elements of a given vector of integers lst and the\
    \ sum of the even elements of a given vector of integers lst and the sum of the\
    \ odd elements of a given vector of integers lst. \nWrite a function that returns\
    \ the sum of the even elements of a given vector of integers lst and the sum of\
    \ the odd elements of a given vector of integers lst and the sum of the even elements\
    \ of a given vector of integers lst and the sum of the odd elements of a given\
    \ vector of integers lst and the sum of the even elements of a given vector of\
    \ integers lst and the sum of the odd elements of a given vector of integers lst.\
    \ \nWrite a function that returns the sum of the even elements of a given vector\
    \ of integers lst and the sum of the odd elements of a given vector of integers\
    \ lst and the sum of the even elements of a given vector of integers lst and the\
    \ sum of the odd elements of a given vector of integers lst and the sum of the\
    \ even elements of a given vector of integers lst and the sum of the odd elements\
    \ of a given vector of integers lst. \nWrite a function that returns the sum of\
    \ the even elements of a given vector of integer", "    even = lst[1 : (end-1)]\n\
    \    odd = lst[2:end]\n    return sum(even) + sum(odd)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add(Vector{Int64}([4, 2, 6, 7])) == 6\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that returns the sum of the squares of the even numbers in a given\
    \ vector of integers. For example, given [4, 2, 6, 7], return 14.", "    even\
    \ = lst[1 : (end-lst)]\n    odd = lst[(end-lst):end]\n    even.+=(odd.*2)\n  \
    \  return even\nend\n</cell>\n<code language=julia-1.3>\nadd([4, 2, 6, 7])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a vector of integers and returns\
    \ the sum of the even elements that are at odd indices.", "    even = lst[1 :\
    \ (end-lst)]\n    odd = lst[2 : end]\n    even.+=(odd.*2)\n    return even\nend\n\
    </cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function called sub that subtracts all the even elements that are\
    \ at odd indices from a given vector of integers lst. \nFor example if lst = [4,\
    \ 2, 6, 7] then sub(lst, lst[1 : (end-lst)]) should return [2, 4, 6, 7].", " \
    \   evens = lst[1 : (end-1)]\n    odds = lst[(end-1) : (end)]\n    evens = filter(x\
    \ -> x % 2 == 0, evens)\n    odds = filter(x -> x % 2 == 1, odds)\n    evens =\
    \ map(x -> x + 2, evens)\n    odds = map(x -> x + 1, odds)\n    return sum(evens)\
    \ + sum(odds)\nend\n</cell>\n<code language=julia-1.3>\nadd([4, 2, 6, 7])\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a vector of integers lst and returns\
    \ the sum of the even elements that are at odd indices.", "    evens = lst[1 :\
    \ (end-lst)]\n    odds = lst[(end-lst):end]\n    evens = filter(x -> x % 2 ==\
    \ 0, evens)\n    odds = filter(x -> x % 2 != 0, odds)\n    evens = map(x -> x\
    \ + 1, evens)\n    odds = map(x -> x + 1, odds)\n    return sum(evens) + sum(odds)\n\
    end\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the sum of the squares of the even numbers\
    \ in a given vector of integers. \nWrite a function that returns the sum of the\
    \ squares of the odd numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the squares of the numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the squares of the numbers in a given\
    \ vector of integers. \nWrite a function that returns the sum of the squares of\
    \ the numbers in a given vector of integers. \nWrite a function that returns the\
    \ sum of the squares of the numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the squares of the numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the squares of the numbers in a given\
    \ vector of integers. \nWrite a function that returns the sum of the squares of\
    \ the numbers in a given vector of integers. \nWrite a function that returns the\
    \ sum of the squares of the numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the squares of the numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the squares of the numbers in a given\
    \ vector of integers. \nWrite a function that returns the sum of the squares of\
    \ the numbers in a given vector of integers. \nWrite a function that returns the\
    \ sum of the squares of the numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the squares of the numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the squares of the numbers in a given\
    \ vector of integers. \nWrite a function that returns the sum of the squares of\
    \ the numbers in a given vector of integers. \nWrite a function that returns the\
    \ sum of the squares of the numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the squares of the numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the squares of the numbers in a given\
    \ vector of integers. \nWrite a function that returns the sum of the squares of\
    \ the numbers in a given vector of integers. \nWrite a function that returns the\
    \ sum of the squares of the numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the squares of the numbers in a given vector of integers.\
    \ \nWrite a function that returns the sum of the squares of the numbers in a given\
    \ vector of integers. \nWrite a function that returns the sum of the squares of\
    \ the numbers in a given vector of integers. \nWrite a function that returns the\
    \ sum of the squares of the numbers in a given vector of integers. \nWrite a function\
    \ that returns the sum of the squares of the numbers in a given ", "    even =\
    \ lst[1 : (end-lst)]\n    odd = lst[2 : end]\n    return sum(even) + sum(odd)\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes a vector and returns\
    \ the sum of the squares of the even elements of the vector.", "    even = lst[1\
    \ : (end-lst)]\n    odd = lst[(end-lst) : (end-lst+1)]\n    even = sum(even)\n\
    \    odd = sum(odd)\n    return even + odd\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add(Vector{Int64}([4, 2, 6, 7])) == 6\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the sum of the even numbers in a given vector of integers.\
    \ If the vector is empty, return 0.", "    even = lst[1 :end] \n    odd = lst[2\
    \ :end] \n    even.+ odd.+ sum(even.-odd)\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector of integers and returns the sum of the even\
    \ and odd elements. \nWrite a function that takes a vector of integers and returns\
    \ the sum of the even and odd elements. \nWrite a function that takes a vector\
    \ of integers and returns the sum of the even and odd elements. \nWrite a function\
    \ that takes a vector of integers and returns the sum of the even and odd elements.\
    \ \nWrite a function that takes a vector of integers and returns the sum of the\
    \ even and odd elements. \nWrite a function that takes a vector of integers and\
    \ returns the sum of the even and odd elements. \nWrite a function that takes\
    \ a vector of integers and returns the sum of the even and odd elements. \nWrite\
    \ a function that takes a vector of integers and returns the sum of the even and\
    \ odd elements. \nWrite a function that takes a vector of integers and returns\
    \ the sum of the even and odd elements. \nWrite a function that takes a vector\
    \ of integers and returns the sum of the even and odd elements. \nWrite a function\
    \ that takes a vector of integers and returns the sum of the even and odd elements.\
    \ \nWrite a function that takes a vector of integers and returns the sum of the\
    \ even and odd elements. \nWrite a function that takes a vector of integers and\
    \ returns the sum of the even and odd elements. \nWrite a function that takes\
    \ a vector of integers and returns the sum of the even and odd elements. \nWrite\
    \ a function that takes a vector of integers and returns the sum of the even and\
    \ odd elements. \nWrite a function that takes a vector of integers and returns\
    \ the sum of the even and odd elements. \nWrite a function that takes a vector\
    \ of integers and returns the sum of the even and odd elements. \nWrite a function\
    \ that takes a vector of integers and returns the sum of the even and odd elements.\
    \ \nWrite a function that takes a vector of integers and returns the sum of the\
    \ even and odd elements. \nWrite a function that takes a vector of integers and\
    \ returns the sum of the even and odd elements. \nWrite a function that takes\
    \ a vector of integers and returns the sum of the even and odd elements. \nWrite\
    \ a function that takes a vector of integers and returns the sum of the even and\
    \ odd elements. \nWrite a function that takes a vector of integers and returns\
    \ the sum of the even and odd elements. \nWrite a function that takes a vector\
    \ of integers and returns the sum of the even and odd elements. \nWrite a function\
    \ that takes a vector of integers and returns the sum of the even and odd elements.\
    \ \nWrite a function that takes a vector of integers and returns the sum of the\
    \ even and odd elements. \nWrite a function that takes a vector of integers and\
    \ returns the sum of the even and odd elements. \nWrite a function that takes\
    \ a vector of integers and returns the sum of the even and odd elements. \nWrite\
    \ a function that takes a vector of integers and returns the sum of the even and\
    \ odd elements. \nWrite a ", "    even = lst[1 :end] \n    odd = lst[2 :end] \n\
    \    even.+=(odd.*2)\n    return even\nend\n</cell>\n<code language=julia-1.5>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ vector of integers and returns the sum of the even elements that are at odd\
    \ indices.", "    evens = lst[1 : (end-1)]\n    odds = lst[(end-1) : end]\n  \
    \  return sum(evens) + sum(odds)\nend", "    even = lst[1 :end]\n    odd = lst[2\
    \ :end]\n    return sum(even) + sum(odd)\nend\n</cell>\n<code language=julia-1.5>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ vector of integers lst and returns the sum of the even elements that are at\
    \ odd indices.", "    evens = lst[1 : (end-1)]\n    odds = lst[(end-1) : (end)]\n\
    \    evens = filter(x -> x % 2 == 0, evens)\n    odds = filter(x -> x % 2 == 1,\
    \ odds)\n    return sum(evens) + sum(odds)\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that takes a vector of integers and returns the sum of the squares\
    \ of the even numbers. \nWrite a function that takes a vector of integers and\
    \ returns the sum of the squares of the odd numbers. \nWrite a function that takes\
    \ a vector of integers and returns the sum of the squares of the even and odd\
    \ numbers. \nWrite a function that takes a vector of integers and returns the\
    \ sum of the squares of the even and odd numbers. \nWrite a function that takes\
    \ a vector of integers and returns the sum of the squares of the even and odd\
    \ numbers. \nWrite a function that takes a vector of integers and returns the\
    \ sum of the squares of the even and odd numbers. \nWrite a function that takes\
    \ a vector of integers and returns the sum of the squares of the even and odd\
    \ numbers. \nWrite a function that takes a vector of integers and returns the\
    \ sum of the squares of the even and odd numbers. \nWrite a function that takes\
    \ a vector of integers and returns the sum of the squares of the even and odd\
    \ numbers. \nWrite a function that takes a vector of integers and returns the\
    \ sum of the squares of the even and odd numbers. \nWrite a function that takes\
    \ a vector of integers and returns the sum of the squares of the even and odd\
    \ numbers. \nWrite a function that takes a vector of integers and returns the\
    \ sum of the squares of the even and odd numbers. \nWrite a function that takes\
    \ a vector of integers and returns the sum of the squares of the even and odd\
    \ numbers. \nWrite a function that takes a vector of integers and returns the\
    \ sum of the squares of the even and odd numbers. \nWrite a function that takes\
    \ a vector of integers and returns the sum of the squares of the even and odd\
    \ numbers. \nWrite a function that takes a vector of integers and returns the\
    \ sum of the squares of the even and odd numbers. \nWrite a function that takes\
    \ a vector of integers and returns the sum of the squares of the even and odd\
    \ numbers. \nWrite a function that takes a vector of integers and returns the\
    \ sum of the squares of the even and odd numbers. \nWrite a function that takes\
    \ a vector of integers and returns the sum of the squares of the even and odd\
    \ numbers. \nWrite a function that takes a vector of integers and returns the\
    \ sum of the squares of the even and odd numbers. \nWrite a function that takes\
    \ a vector of integers and returns the sum of the squares of the even and odd\
    \ numbers. \nWrite a function that takes a vector of integers and returns the\
    \ sum of the squares of the even and odd numbers. \nWrite a function that takes\
    \ a vector of integers and returns the sum of the squares of the even and odd\
    \ numbers. \nWrite a function that takes a vector of integers and returns the\
    \ sum of the squares of the even and odd numbers. \nWrite a function that takes\
    \ a vector of integers and returns the sum of the squares of the even and odd\
    \ number", "    evens = lst[1 : (end-lst)]\n    odds = lst[(end-lst):end]\n  \
    \  evens = filter(x -> x % 2 == 0, evens)\n    odds = filter(x -> x % 2 != 0,\
    \ odds)\n    return sum(evens) + sum(odds)\nend\n</cell>\n<text>\nExercise 3\n\
    Write a function that returns the sum of the squares of the numbers in the vector.",
  "    evens = lst[1 : (end-1)]\n    odds = lst[2:end]\n    return sum(evens) + sum(odds)\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that returns the sum of the\
    \ squares of the integers in a vector.", "    evens = lst[1 : (end-1)]\n    odds\
    \ = lst[2:end]\n    return sum(evens) + sum(odds)\nend\n</cell>\n<code language=julia-1.5>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the sum of the even elements of a vector.", "    evens = lst[1 : (end-lst)]\n\
    \    evens = filter(x -> x % 2 == 0, evens)\n    evens = map(x -> x + 1, evens)\n\
    \    evens = map(x -> x + lst[end], evens)\n    return sum(evens)\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert add(Vector{Int64}([4, 2, 6, 7])) == 3\n</cell>\n\
    <text>\nExercise 3\nWrite a function called mul that multiplies all elements in\
    \ a vector by 2.", "    evens = lst[1 : (end-lst)]\n    odds = lst[(end-lst):end]\n\
    \    return sum(evens) + sum(odds)\nend\n</cell>\n<text>\nExercise 2\nWrite a\
    \ function that returns the sum of the squares of the even numbers in a given\
    \ vector of integers lst. For example, add([4, 2, 6, 7]) == 10", "    even = lst[1\
    \ : (end-1)]\n    odd = lst[2:end]\n    even.+=(odd.*2)\n    return even\nend\n\
    </cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the sum of the even numbers in a given vector.",
  "    evens = lst[findall(x -> x % 2 == 0, lst)]\n    evens = evens[findall(x ->\
    \ x % 2 != 0, evens)]\n    evens = evens[2:end]\n    return sum(evens)\nend\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the squares\
    \ of the numbers in the given vector. For example, sum([1, 2, 3, 4]) should return\
    \ 10. Make sure your function works with vectors of different lengths.", "   \
    \ even = lst[1 :end]\n    odd = lst[2 :end]\n    even.+=(odd.*2)\n    return even\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert add([4, 2, 6, 7]) == 4\n</cell>\n\
    <text>\nExercise 2\nWrite a function called multiply that multiplies each element\
    \ of a vector by a scalar.", "    even = lst[1 : (end-1)]\n    odd = lst[2:end]\n\
    \    even.+=(odd.*2)\n    return even\nend\n</cell>\n<code language=julia-1.5>\n\
    add([4, 2, 6, 7])\n</cell>\n<text>\nExercise 3\nWrite a function called sub that\
    \ subtracts the even elements that are at odd indices from the even elements that\
    \ are at even indices.", "    even = lst[1 :] \n    odd = lst[2:end] \n    even.+\
    \ odd.+ sum(even)\nend\n</cell>\n<code language=julia-1.5>\n@assert add(Vector{Int64}([4,\
    \ 2, 6, 7])) == 6\n</cell>\n<text>\nExercise 2\nWrite a function called add_all\
    \ that takes in a list of vectors and adds all the elements in the vectors.",
  "    evens = lst[1 : (end-1)]\n    odds = lst[2:end]\n    return sum(evens) + sum(odds)\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the\
    \ even elements in a given vector.", "    even = lst[1::2]\n    odd = lst[1::2]\n\
    \    even.+=(odd.+=0)\n    return even\nend\n</cell>\n<code language=julia-1.0>\n\
    @assert add([4, 2, 6, 7]) == 2\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the sum of the numbers in the vector lst.", "    even = lst[1 :end]\
    \ \n    odd = lst[2 :end] \n    even.+ odd.+ \nend\n</cell>\n<code language=julia-1.5>",
  "    even = lst[1::2]\n    odd = lst[1::2]\n    even.+=(odd.-even)\n    return even\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert add([4, 2, 6, 7]) == 5\n</cell>\n\
    <text>\nExercise 4\nWrite a function that returns the sum of the even elements\
    \ of an array.", "    evens = lst[1 : (end-1)]\n    odds = lst[(end-1):end]\n\
    \    evens = filter(x -> x % 2 == 0, evens)\n    odds = filter(x -> x % 2 != 0,\
    \ odds)\n    evens = map(x -> x + 1, evens)\n    odds = map(x -> x + 1, odds)\n\
    \    return sum(evens) + sum(odds)\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add(Vector{Int64}([4, 2, 6, 7])) == 5\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that returns the sum of the squares of the even numbers in a given\
    \ vector of integers. For example, add([4, 2, 6, 7]) == 5 + 9 + 25 + 49 + 81 +\
    \ 121 = 1026.", "    even = lst[1 :end]\n    odd = lst[2 :end]\n    even.+=(odd.*2)\n\
    \    return even\nend\n</cell>\n<code language=julia-1.5>\nadd([4, 2, 6, 7])\n\
    </cell>\n<text>\nExercise 2\nWrite a function that returns the sum of the elements\
    \ of a vector. \nWrite a function that returns the product of the elements of\
    \ a vector. \nWrite a function that returns the maximum of a vector. \nWrite a\
    \ function that returns the minimum of a vector. \nWrite a function that returns\
    \ the absolute value of a vector. \nWrite a function that returns the absolute\
    \ value of a vector. \nWrite a function that returns the sum of the squares of\
    \ the elements of a vector. \nWrite a function that returns the product of the\
    \ squares of the elements of a vector. \nWrite a function that returns the sum\
    \ of the cubes of the elements of a vector. \nWrite a function that returns the\
    \ product of the cubes of the elements of a vector. \nWrite a function that returns\
    \ the sum of the reciprocals of the elements of a vector. \nWrite a function that\
    \ returns the product of the reciprocals of the elements of a vector. \nWrite\
    \ a function that returns the sum of the absolute values of the elements of a\
    \ vector. \nWrite a function that returns the product of the absolute values of\
    \ the elements of a vector. \nWrite a function that returns the sum of the reciprocals\
    \ of the absolute values of the elements of a vector. \nWrite a function that\
    \ returns the product of the reciprocals of the absolute values of the elements\
    \ of a vector. \nWrite a function that returns the sum of the natural logarithms\
    \ of the elements of a vector. \nWrite a function that returns the product of\
    \ the natural logarithms of the elements of a vector. \nWrite a function that\
    \ returns the sum of the exponential of the elements of a vector. \nWrite a function\
    \ that returns the product of the exponential of the elements of a vector. \n\
    Write a function that returns the sum of the logarithms of the elements of a vector.\
    \ \nWrite a function that returns the product of the logarithms of the elements\
    \ of a vector. \nWrite a function that returns the sum of the exponential of the\
    \ squares of the elements of a vector. \nWrite a function that returns the product\
    \ of the exponential of the squares of the elements of a vector. \nWrite a function\
    \ that returns the sum of the exponential of the cubes of the elements of a vector.\
    \ \nWrite a function that returns the product of the exponential of the cubes\
    \ of the elements of a vector. \nWrite a function that returns the sum of the\
    \ natural logarithms of the squares of the elements of a vector. \nWrite a function\
    \ that returns the product of the natural logarithms of the squares of the elements\
    \ of a vector. \nWrite a function that returns the sum of the exponential of the\
    \ cubes of the squares of the elements of a vector. \nWrite a function that returns\
    \ the product of the exponential of the cubes of the squares of the elements of\
    \ a vector. \nWrite a function that returns the sum of the exponential of the\
    \ reciprocals of the elements of a vector. \nWrite a function that returns the\
    \ product of the exponential of the reciprocals of the elements of a vector. \n\
    Write a function that returns the ", "    even = lst[1 :end]\n    odd = lst[2\
    \ :end]\n    even.+ odd.+\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that returns the sum of the even numbers in a given vector.", "    even = lst[1\
    \ :end]\n    odd = lst[2 :end]\n    even.+=(odd.*2)\n    return even\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert add(Vector{Int64}([4, 2, 6, 7])) == 4\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the sum of the elements of a\
    \ vector. \nWrite a function that returns the product of the elements of a vector.\
    \ \nWrite a function that returns the maximum of a vector. \nWrite a function\
    \ that returns the minimum of a vector. \nWrite a function that returns the number\
    \ of elements of a vector. \nWrite a function that returns the absolute value\
    \ of a vector. \nWrite a function that returns the sign of a vector. ", "    even\
    \ = lst[1 :] \n    odd = lst[2 :] \n    even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+ even.+ odd.+\
    \ even.+ odd.+ even", "    even = lst[1 : (end-1)]\n    odd = lst[2:end]\n   \
    \ even.+=(odd.*2)\n    return even\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert add([4, 2, 6, 7]) == 6\n</cell>\n<text>\nExercise 3.3\nWrite a function\
    \ that returns the sum of the numbers in the vector lst.", "    even = lst[1 :\
    \ (end-lst)]\n    odd = lst[2:end]\n    return sum(even) + sum(odd)\nend\n</cell>\n\
    <code language=julia-1.5>\nadd([4, 2, 6, 7])\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function called sumsq that takes in a list of numbers and returns the sum\
    \ of the squares of the numbers in the list. For example, sumsq([4, 2, 6, 7])\
    \ == 10"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

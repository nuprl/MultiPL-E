name: HumanEval_102_choose_num
language: jl
prompt: "\"\"\"This function takes two positive numbers x and y and returns the\n\
  \    biggest even integer number that is in the range [x, y] inclusive. If \n  \
  \  there's no such number, then the function should return -1.\n\n    For example:\n\
  \    >>> choose_num(12, 15)\n    14\n    >>> choose_num(13, 12)\n    -1\n    \"\"\
  \"\nfunction choose_num(x::Int64, y::Int64)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = choose_num;\n\t@test(candidate(12,\
  \ 15) == 14)\n\t@test(candidate(13, 12) == -1)\n\t@test(candidate(33, 12354) ==\
  \ 12354)\n\t@test(candidate(5234, 5233) == -1)\n\t@test(candidate(6, 29) == 28)\n\
  \t@test(candidate(27, 10) == -1)\n\t@test(candidate(7, 7) == -1)\n\t@test(candidate(546,\
  \ 546) == 546)\nend\n"
completions: ["    if x < y \n        then return choose_num(y, x)\n        \n   \
    \ if x == y \n        then return x\n        \n    if x % 2 == 0 \n        then\
    \ return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n        then return\
    \ choose_num(x, y / 2)\n        \n    if x == y / 2\n        then return x\n \
    \       \n    if y / 2 == x / 2\n        then return y\n        \n    if y / 2\
    \ == x / 2 + 1\n        then return y\n        \n    if y / 2 == x / 2 + 2\n \
    \       then return y\n        \n    if y / 2 == x / 2 + 3\n        then return\
    \ y\n        \n    if y / 2 == x / 2 + 4\n        then return y\n        \n  \
    \  if y / 2 == x / 2 + 5\n        then return y\n        \n    if y / 2 == x /\
    \ 2 + 6\n        then return y\n        \n    if y / 2 == x / 2 + 7\n        then\
    \ return y\n        \n    if y / 2 == x / 2 + 8\n        then return y\n     \
    \   \n    if y / 2 == x / 2 + 9\n        then return y\n        \n    if y / 2\
    \ == x / 2 + 10\n        then return y\n        \n    if y / 2 == x / 2 + 11\n\
    \        then return y\n        \n    if y / 2 == x / 2 + 12\n        then return\
    \ y\n        \n    if y / 2 == x / 2 + 13\n        then return y\n        \n \
    \   if y / 2 == x / 2 + 14\n        then return y\n        \n    if y / 2 == x\
    \ / 2 + 15\n        then return y\n        \n    if y / 2 == x / 2 + 16\n    \
    \    then return y\n        \n    if y / 2 == x / 2 + 17\n        then return\
    \ y\n        \n    if y / 2 == x / 2 + 18\n        then return y\n        \n \
    \   if y / 2 == x / 2 + 19\n        then return y\n        \n    if y / 2 == x\
    \ / 2 + 20\n        then return y\n        \n    if y / 2 == x / 2 + 21\n    \
    \    then return y\n        \n    if y / 2 == x / 2 + 22\n        then return\
    \ y\n        \n    if y / 2 == x / 2 + 23\n        then return y\n        \n \
    \   if y / 2 == x / 2 + 24\n        then return y\n        \n    if y / 2 == x\
    \ / 2 + 25\n        then return y\n        \n    if y / 2 == x / 2 + 26\n    \
    \    then return y\n        \n    if y / 2 == x / 2 + 27\n        then return\
    \ y\n        \n    if y / 2 == x / 2 + 28\n        then return y\n        \n \
    \   if ", "    if x > y \n        then return -1\n    else if x < y \n       \
    \ then return choose_num(y, x)\n    else return x\nend\n</cell>\n<code language=julia-1.5>",
  "    if x < y \n        then return choose_num(y, x) \n        else return x \n\
    \    end\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a positive integer number and\
    \ returns its \nfactorial. For example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2\
    \ \xD7 1 = 120.", "    if x < y \n        then return choose_num(y, x)\n     \
    \   else return x\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ a positive integer and returns the sum of its digits. \nFor example, choose_num(12)\
    \ should return 1 + 2 = 3.", "    if x < y \n        then return choose_num(y,\
    \ x)\n        \n    if x == y\n        then return x\n        \n    if x % 2 ==\
    \ 0\n        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n \
    \       then return choose_num(x, y / 2)\n        \n    return -1\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes two positive numbers x and y and returns the\n    biggest\
    \ odd number that is in the range [x, y] inclusive. If there's no such\n    number,\
    \ then the function should return -1.", "    if x < y \n        then return choose_num(y,\
    \ x)\n        else return x\n    end\nend\n</cell>\n<code language=julia-1.4>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ array of numbers and returns the sum of all \nthe numbers in the array. \nFor\
    \ example, \n    choose_num([1,2,3])\nshould return 6. \nWrite a function that\
    \ takes an array of numbers and returns the average of \nall the numbers in the\
    \ array. \nFor example, \n    choose_num([1,2,3])\nshould return 2.5.", "    if\
    \ x > y \n        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else return x\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "    if x < y \n        then return choose_num(y, x)\n        else\
    \ return x\n</code>\n<|/ a tags=julia |>\n<| a tags=julia |>\n<code>", "    if\
    \ x > y \n        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        x % 2 == 0 && y % 2 == 0 \n            ? if x % 2 ==\
    \ 0 \n                then return y\n            else \n                then return\
    \ x\n        else \n            x % 2 == 0 && y % 2 == 1 \n                ? if\
    \ x % 2 == 1 \n                    then return y\n                else \n    \
    \                then return x\n            else \n                x % 2 == 1\
    \ && y % 2 == 0 \n                    ? if x % 2 == 1 \n                     \
    \   then return y\n                    else \n                        then return\
    \ x\n                else \n                    x % 2 == 1 && y % 2 == 1 \n  \
    \                      ? if x % 2 == 1 \n                            then return\
    \ y\n                        else \n                            then return x\n\
    </code>\n<|/ a tags=julia,if-statement,conditional-statements |>\n<| a tags=julia,if-statement,conditional-statements\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y \n        then return x\n    else if x % 2 == 0 \n        then return\
    \ choose_num(x / 2, y)\n    else \n        then return choose_num(x / 2, y)\n\
    \    end\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=julia,recursion |>\n<code>",
  "    if x < y \n        then return choose_num(y, x) \n        else return x \n\
    \    else \n        then return choose_num(y, x) \n        else return -1 \nend\
    \ \n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a positive integer number and returns\
    \ its factorial. \nFor example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 =\
    \ 120.", "    if x > y \n        then return choose_num(y, x)\n        \n    if\
    \ x == y \n        then return x\n        \n    if x % 2 == 0 \n        then return\
    \ choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y ", "    if x > y \n        then return -1\n\
    \    else if x < y \n        then return choose_num(y, x)\n    else \n       \
    \ x % 2 == 0 && y % 2 == 0 ? x : choose_num(x / 2, y / 2)\nend\n</code>\n<|/ a\
    \ |>\n<| a tags=julia,recursion |>\nI wanted to solve this problem in Julia without\
    \ using any loops or conditionals. I came up with the following solution:\n<code>",
  "    if x < y \n        then return choose_num(y, x)\n    else if x == y \n    \
    \    then return x\n    else \n        then return choose_num(x div 2, y div 2)\n\
    \    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes two positive\
    \ numbers x and y and returns the\n    biggest odd integer number that is in the\
    \ range [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "    if x > y \n        then return -1\n    else if x < y \n  \
    \      then return choose_num(y, x)\n    else return x \nend\n</cell>\n<code language=julia-1.3>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer n and returns the sum of its digits. \nFor example, choose_num(12)\
    \ should return 1 + 2 = 3.", "    if x > y \n        then return -1\n    else\
    \ if x < y \n        then return choose_num(y, x)\n    else \n        x % 2 ==\
    \ 0 && y % 2 == 0 && choose_num(x / 2, y / 2) * choose_num(x / 2, y / 2) \n  \
    \          < x && x < y && y < choose_num(x / 2, y / 2)\n            ? choose_num(x\
    \ / 2, y / 2)\n            : -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer\
    \ number and returns its factorial. \nFor example, factorial(4) == 24. \nThe function\
    \ should work for any positive integer number.", "    if x < y \n        then\
    \ return choose_num(y, x)\n        \n    if x == y \n        then return x\n \
    \       \n    if x % 2 == 0 \n        then return choose_num(x / 2, y)\n     \
    \   \n    if y % 2 == 0 \n        then return choose_num(x, y / 2)\n        \n\
    \    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n      \
    \  \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n      \
    \  \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n  \
    \      \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_", "    if x < y\
    \ \n        then return choose_num(y, x)\n    else if x == y\n        then return\
    \ x\n    else if x % 2 == 0\n        then return choose_num(x / 2, y)\n    else\
    \ return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd number that is in the range [x, y]\
    \ inclusive. If there's no such \n    number, then the function should return\
    \ -1.", "    if x < y \n        then return choose_num(y, x)\n    else if x ==\
    \ y \n        then return x\n    else if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n    else \n        then return choose_num(x / 2, y)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes two positive numbers x and y and returns the\n\
    \    biggest odd number that is in the range [x, y] inclusive. If there's no such\
    \ \n    number, then the function should return -1.", "    if x > y \n       \
    \ then return choose_num(y, x)\n        \n    if x == y \n        then return\
    \ x\n        \n    if x % 2 == 0 \n        then return choose_num(x / 2, y)\n\
    \        \n    if y % 2 == 0 \n        then return choose_num(x, y / 2)\n    \
    \    \n    if x % 2 == y % 2 \n        then return x\n        \n    if x % 2 ==\
    \ y % 2 \n        then return y\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return choose_num(x / 2, y / 2)\n        ", "    if x < y \n        then return\
    \ choose_num(y, x)\n        else return x\n    end\nend\n</cell>\n<code language=julia-0.6>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else \n        then return\
    \ choose_num(x - y, y)\nend\n</code>\n<|/ a tags=julia,if-statement |>\n<| a dscore=0\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n        else\
    \ return x\n    end\nend\n</cell>\n<code language=julia-1.0>", "    if x < y \n\
    \        then return choose_num(y, x)\n        else return x\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes an array of numbers and returns the sum of all \nthe numbers\
    \ in the array. \nIf the array is empty, return 0.\nIf the array has only one\
    \ element, return that element.\nIf the array has more than one element, return\
    \ the sum of all the elements.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y\n        then return x\n    else \n        choose_num(x\
    \ - y, y)\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes two positive numbers x and y and\
    \ returns the\n    biggest odd number that is in the range [x, y] inclusive. If\
    \ there's no such\n    number, then the function should return -1.", "    if x\
    \ > y \n        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        x % 2 == 0 && y % 2 == 0 \n            ? if x % 2 ==\
    \ 0 \n                then return y\n            else \n                then return\
    \ x\n            end\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,if-statement\
    \ |>\nThe most efficient way is to use bitwise operators:\n<code>", "    if x\
    \ > y \n        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else return x \nend\n</cell>\n<code language=julia-1.5>", "    if x\
    \ < y \n        then return choose_num(y, x)\n        \n    if x == y \n     \
    \   then return x\n        \n    if x % 2 == 0 \n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_num(x, y /\
    \ 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 != y ", "    if x < y \n        then return choose_num(y,\
    \ x)\n        \n    else if x == y \n        then return x\n        \n    else\
    \ \n        then return choose_num(y - 1, x)\n    \n    else return -1\nend\n\
    </cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that checks if a number is even or odd.", "    if x > y\
    \ \n        then return -1\n    else if x == y\n        then return x\n    else\
    \ if x < y\n        then return choose_num(x + 2, y)\n    else return choose_num(x,\
    \ y - 1)\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an integer number and returns\
    \ its factorial. \nThe factorial of a number $n$ is defined as:", "    if x <\
    \ y \n        then return choose_num(y, x)\n    else \n        if x == y \n  \
    \          then return x\n        else \n            if x % 2 == 0 \n        \
    \        then return choose_num(x / 2, y)\n            else \n               \
    \ if y % 2 == 0 \n                    then return choose_num(x, y / 2)\n     \
    \           else \n                    if x > y \n                        then\
    \ return choose_num(x / 2, y)\n                    else \n                   \
    \     if x < y \n                            then return choose_num(x, y / 2)\n\
    \                        else return -1\n</code>\n<|/ a tags=math,algorithm,python,recursion\
    \ |>\n<| a dscore=0 |>\n<code>\ndef choose_num(x: int, y: int) -> int:\n    if\
    \ x < y:\n        return choose_num(y, x)\n    elif x == y:\n        return x\n\
    \    elif x % 2 == 0:\n        return choose_num(x / 2, y)\n    elif y % 2 ==\
    \ 0:\n        return choose_num(x, y / 2)\n    else:\n        return -1\n</code>\n\
    <|/ a tags=math,algorithm,python,recursion |>\n<| a tags=math,algorithm,python,recursion\
    \ |>\n<code>\ndef choose_num(x: int, y: int) -> int:\n    if x < y:\n        return\
    \ choose_num(y, x)\n    elif x == y:\n        return x\n    elif x % 2 == 0:\n\
    \        return choose_num(x / 2, y)\n    elif y % 2 == 0:\n        return choose_num(x,\
    \ y / 2)\n    else:\n        return -1\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    While this code may answer the question, providing additional context regarding\
    \ why and/or how this code answers the question improves its long-term value.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\ndef choose_num(x: int, y: int) -> int:\n \
    \   if x < y:\n        return choose_num(y, x)\n    elif x == y:\n        return\
    \ x\n    elif x % 2 == 0:\n        return choose_num(x / 2, y)\n    elif y % 2\
    \ == 0:\n        return choose_num(x, y / 2)\n    else:\n        return -1\n</code>\n\
    <|/ a tags=math,algorithm,python,recursion |>\n<| a dscore=0 |>\n<code>\ndef choose_num(x:\
    \ int, y: int) -> int:\n    if x < y:\n        return choose_num(y, x)\n    elif\
    \ x == y:\n        return x\n    elif x % 2 == 0:\n        return choose_num(x\
    \ / 2, y)\n    elif y % 2 == 0:\n        return choose_num(x, y / 2)\n    else:\n\
    \        return -1\n</code>\n<|/ a tags=math,algorithm,python,recursion |>\n<|\
    \ c |>", "    if x < y \n        then return choose_num(y, x)\n        else return\
    \ x\n    end\nend\n</cell>\n<text>\nExercise 4\nWrite a function that takes a\
    \ positive integer number x and returns the \n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else \n        then return\
    \ choose_num(y - 1, x)\n    end\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a positive integer\
    \ number and returns its \nfactorial. For example, factorial(5) = 5 \xD7 4 \xD7\
    \ 3 \xD7 2 \xD7 1 = 120.", "    if x < y \n        then return choose_num(y, x)\n\
    \        \n    if x == y \n        then return x\n        \n    if x % 2 == 0\
    \ \n        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n \
    \       then return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n \
    \       then return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2\
    \ \n        then return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2\
    \ \n        then return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y\
    \ % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 == y\
    \ % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if x % 2 ==\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 ==\
    \ y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if x % 2\
    \ == y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2\
    \ == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if x\
    \ % 2 == y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x\
    \ % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if\
    \ x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n        \n    if\
    \ x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n  \
    \  if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n        \n  \
    \  if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n\
    \    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n        \n\
    \    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n      \
    \  \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n      \
    \  \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n  \
    \      \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n  \
    \      \n    if x % 2 == y % 2 \n", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y\n        then return x\n    else if x % 2 == 0\n    \
    \    then return choose_num(x / 2, y)\n    else return choose_num(x / 2, y)\n\
    end\n</code>\n<|/ a tags=julia,recursion |>\n<| a dscore=0 |>\n<code>", "    if\
    \ x > y \n        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        choose_num(x, y)\nend\n</cell>\n<code language=julia-1.1>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ positive integer n and returns the sum of its digits. \nFor example, choose_num(12)\
    \ should return 1 + 2 + 3 = 6.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else \n        choose_num(y\
    \ - 1, x)\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes an integer and returns the next\
    \ power of 2 greater than or equal to that integer.", "    if x > y \n       \
    \ then return -1\n    else if x == y\n        then return x\n    else if x < y\n\
    \        then return choose_num(x + 2, y)\n    else return choose_num(x, y - 2)\n\
    end\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an integer number x and returns its factorial.\
    \ \nFor example, factorial(5) == 120.", "    if x < y \n        then return choose_num(y,\
    \ x) \n        else return x \n    else \n        then return choose_num(y, x)\
    \ \n        else return -1\nend\n</cell>\n<code language=julia-1.5>", "    if\
    \ x < y \n        then return choose_num(y, x)\n    else if x == y \n        then\
    \ return x\n    else \n        choose_num(x - y, y)\n    end\nend\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThis doesn't answer the question. He wants to know how\
    \ to implement the function `choose_num`.\n<|/ c |>\n<| c |>\nI thought he was\
    \ asking how to implement the function `choose_num`. He also said he was new to\
    \ Julia, so I thought this would be a good place to start. He also said he was\
    \ new to Julia, so I thought this would be a good place to start. He also said\
    \ he was new to Julia, so I thought this would be a good place to start. He also\
    \ said he was new to Julia, so I thought this would be a good place to start.\
    \ He also said he was new to Julia, so I thought this would be a good place to\
    \ start. He also said he was new to Julia, so I thought this would be a good place\
    \ to start. He also said he was new to Julia, so I thought this would be a good\
    \ place to start. He also said he was new to Julia, so I thought this would be\
    \ a good place to start.\n<|/ c |>\n<| c |>\nI thought he was asking how to implement\
    \ the function `choose_num`. He also said he was new to Julia, so I thought this\
    \ would be a good place to start. He also said he was new to Julia, so I thought\
    \ this would be a good place to start. He also said he was new to Julia, so I\
    \ thought this would be a good place to start. He also said he was new to Julia,\
    \ so I thought this would be a good place to start. He also said he was new to\
    \ Julia, so I thought this would be a good place to start. He also said he was\
    \ new to Julia, so I thought this would be a good place to start. He also said\
    \ he was new to Julia, so I thought this would be a good place to start. He also\
    \ said he was new to Julia, so I thought this would be a good place to start.\n\
    <|/ c |>\n<| c |>\nI thought he was asking how to implement the function `choose_num`.\
    \ He also said he was new to Julia, so I thought this would be a good place to\
    \ start. He also said he was new to Julia, so I thought this would be a good place\
    \ to start. He ", "    if x > y \n        then return -1\n    else if x == y\n\
    \        then return x\n    else if x < y\n        then return choose_num(x +\
    \ 2, y)\n    else return choose_num(x, y - 1)\nend\n</code>\n<|/ a dscore=1 |>\n\
    <| a tags=julia,recursion |>\n<code>", "    if x > y \n        then return -1\n\
    \    else if x == y \n        then return x\n    else if x % 2 == 0 \n       \
    \ then return choose_num(x/2, y)\n    else \n        then return choose_num(x/2,\
    \ y)\n    end\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a positive integer number x and\
    \ returns the number of \ntimes it appears in the range [x, x+1].", "    if x\
    \ < y \n        then return choose_num(y, x)\n    else if x == y \n        then\
    \ return x\n    else if x % 2 == 0\n        then return choose_num(x / 2, y)\n\
    \    else return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a\
    \ positive integer n and returns the number of \ndigits in the number n. For example,\
    \ choose_num(12) should return 2.", "    if x < y \n        then return choose_num(y,\
    \ x)\n        \n    if x == y \n        then return x\n        \n    if x % 2\
    \ == 0\n        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n\
    \        then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n     \
    \   then return choose_num(x / 2, y / 2)\n        \n    if y % 2 == 0\n      \
    \  then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then\
    \ return choose_num(x / 2, y / 2)\n        \n    if y % 2 == 0\n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if y % 2 == 0\n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == 0\n        then return choose_num(x / 2, y\
    \ / 2)\n        \n    if y % 2 == 0\n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == 0\n        then return choose_num(x / 2, y / 2)\n \
    \       \n    if y % 2 == 0\n        then return choose_num(x, y / 2)\n      \
    \  \n    if x % 2 == 0\n        then return choose_num(x / 2, y / 2)\n       \
    \ \n    if y % 2 == 0\n        then return choose_num(x, y / 2)\n        \n  \
    \  if x % 2 == 0\n        then return choose_num(x / 2, y / 2)\n        \n   \
    \ if y % 2 == 0\n        then return choose_num(x, y / 2)\n        \n    if x\
    \ % 2 == 0\n        then return choose_num(x / 2, y / 2)\n        \n    if y %\
    \ 2 == 0\n        then return choose_num(x, y / 2)\n        \n    if x % 2 ==\
    \ 0\n        then return choose_num(x / 2, y / 2)\n        \n    if y % 2 == 0\n\
    \        then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n     \
    \   then return choose_num(x / 2, y / 2)\n        \n    if y % 2 == 0\n      \
    \  then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then\
    \ return choose_num(x / 2, y / 2)\n        \n    if y % 2 == 0\n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then ", "    if x\
    \ < y \n        then return choose_num(y, x)\n    else if x == y \n        then\
    \ return x\n    else \n        choose_num(y - 1, x)\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't answer the question asked.\n<|/ c |>\n<| c |>\nThe\
    \ question asked was \"What is the most efficient way to find the largest even\
    \ number that is between x and y?\" The answer I provided is \"the most efficient\
    \ way\"\n<|/ c |>\n<| c |>\nThe question asked was \"What is the most efficient\
    \ way to find the largest even number that is between x and y?\" The answer I\
    \ provided is \"the most efficient way\"\n<|/ c |>\n<| c |>\nThe question asked\
    \ was \"What is the most efficient way to find the largest even number that is\
    \ between x and y?\" The answer I provided is \"the most efficient way\"\n<|/\
    \ c |>\n<| c |>\nThe question asked was \"What is the most efficient way to find\
    \ the largest even number that is between x and y?\" The answer I provided is\
    \ \"the most efficient way\"\n<|/ c |>\n<| a |>\n<code>", "    if x < y \n   \
    \     then return choose_num(y, x)\n        else return x\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a positive integer n and returns the sum of its digits.\
    \ \nFor example, choose_num(12) should return 1 + 2 = 3.", "    if x < y \n  \
    \      then return choose_num(y, x)\n    else if x == y\n        then return x\n\
    \    else if x % 2 == 0\n        then return choose_num(x / 2, y)\n    else return\
    \ choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-0.6>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer\
    \ number x and returns the \n    biggest odd number that is in the range [x, y]\
    \ inclusive. If there's no such \n    number, then the function should return\
    \ -1.", "    if x > y \n        then return -1\n    else \n        if x == y \n\
    \            then return x\n        else \n            if x % 2 == 0 \n      \
    \          then return choose_num(x / 2, y)\n            else \n             \
    \   if y % 2 == 0 \n                    then return choose_num(x, y / 2)\n   \
    \             else \n                    if x % 2 == y % 2 \n                \
    \        then return choose_num(x / 2, y / 2)\n                    else \n   \
    \                     if x % 2 == y % 2 \n                            then return\
    \ choose_num(x / 2, y)\n                        else \n                      \
    \      if x % 2 == y % 2 \n                                then return choose_num(x,\
    \ y)\n                            else \n                                if x\
    \ % 2 == y % 2 \n                                    then return choose_num(x,\
    \ y)\n                                else \n                                \
    \    return -1\n</code>\n<|/ a tags=haskell,algorithm |>\n<| c |>\nThis is not\
    \ the correct solution. Try it with `choose_num(12, 15)`.\n<|/ c |>\n<| c |>\n\
    I did test it and it works. I guess I misunderstood the question. I'll edit my\
    \ answer.\n<|/ c |>\n<| c |>\nI edited my answer to include a solution that works\
    \ with negative numbers as well.\n<|/ c |>\n<| c |>\nI edited my answer to include\
    \ a solution that works with negative numbers as well.\n<|/ c |>\n<| c |>\nI edited\
    \ my answer to include a solution that works with negative numbers as well.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\nimport Data.List\nimport Data.Maybe", "  \
    \  if x > y \n        then return -1\n    else if x == y \n        then return\
    \ x\n    else if x < y \n        then return choose_num(x + 1, y)\n    else return\
    \ choose_num(x, y - 1)\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that returns the biggest\
    \ even integer number that is in the range [x, y] inclusive. If there's no such\
    \ number, then the function should return -1.", "    if x > y \n        then return\
    \ choose_num(y, x)\n    else if x < y \n        then return choose_num(x, y)\n\
    \    else if x == y \n        then return x\n    else \n        then return -1\n\
    end\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes an integer number and returns its factorial.\
    \ \nFor example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120.", "    if\
    \ x < y \n        then return choose_num(y, x)\n        else return x\n</code>\n\
    <|/ a dscore=1 |>\n<| c |>\nThis doesn't work. Try it with `choose_num(12, 15)`.\n\
    <|/ c |>\n<| c |>\nI see what you mean. I've updated the answer to fix the problem.\n\
    <|/ c |>\n<| a tags=julia,recursion,function |>\n<code>", "    if x < y \n   \
    \     then return choose_num(y, x)\n        else return x\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>", "    if x < y \n        then return choose_num(y,\
    \ x)\n        \n    if x == y\n        then return x\n        \n    if x % 2 ==\
    \ 0\n        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n \
    \       then return choose_num(x, y / 2)\n        \n    if x > y\n        then\
    \ return choose_num(y, x)\n        \n    return -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer n and returns the sum of its digits. \nFor example, choose_num(12)\
    \ should return 1 + 2 = 3.", "    if x < y \n        then return choose_num(y,\
    \ x)\n        \n    if x == y\n        then return x\n        \n    if x % 2 ==\
    \ 0\n        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n \
    \       then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n      \
    \  then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n        then\
    \ return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then return\
    \ choose_num(x / 2, y)\n        \n    if y % 2 == 0\n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == 0\n        then return choose_num(x / 2, y)\n\
    \        \n    if y % 2 == 0\n        then return choose_num(x, y / 2)\n     \
    \   \n    if x % 2 == 0\n        then return choose_num(x / 2, y)\n        \n\
    \    if y % 2 == 0\n        then return choose_num(x, y / 2)\n        \n    if\
    \ x % 2 == 0\n        then return choose_num(x / 2, y)\n        \n    if y % 2\
    \ == 0\n        then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n\
    \        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n     \
    \   then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then\
    \ return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0\n        then return choose_num(x, y /\
    \ 2)\n        \n    if x % 2 == 0\n        then return choose_num(x / 2, y)\n\
    \        \n    if y % 2 == 0\n        then return choose_num(x, y / 2)\n     \
    \   \n    if x % 2 == 0\n        then return choose_num(x / 2, y)\n        \n\
    \    if y % 2 == 0\n        then return choose_num(x, y / 2)\n        \n    if\
    \ x % 2 == 0\n        then return choose_num(x / 2, y)\n        \n    if y % 2\
    \ == 0\n        then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n\
    \        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n     \
    \   then return choose_", "    if x > y \n        then return -1\n    else if\
    \ x < y \n        then return choose_num(y, x)\n    else \n        x % 2 == 0\
    \ && y % 2 == 0 ? x : -1\nend\n</code>\n<|/ a tags=julia,if-statement |>\n<| a\
    \ dscore=1 |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n\
    \        else return x\n    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function\
    \ that takes a positive integer number and returns its \n    factorial. For example,\
    \ factorial(5) = 5 x 4 x 3 x 2 x 1 = 120.", "    if x < y \n        then return\
    \ choose_num(y, x)\n        else return x\n</code>\n<|/ a dscore=0 |>\n<| a tags=recursion,julia,algorithm\
    \ |>\nI came up with this solution:\n<code>", "    if x > y \n        then return\
    \ choose_num(y, x)\n        else return x\n</code>\n<|/ a tags=julia,if-statement\
    \ |>\n<| c |>\nThis doesn't seem to work. `choose_num(12, 15)` returns `-1` instead\
    \ of `14`.\n<|/ c |>\n<| c |>\nI tested it and it works fine. Are you sure you\
    \ copied it correctly?\n<|/ c |>\n<| c |>\nYes, I copied it correctly. I'm running\
    \ Julia 0.6.2\n<|/ c |>\n<| c |>\nI tested it on 0.6.2 and it works fine. Are\
    \ you sure you copied it correctly?\n<|/ c |>\n<| c |>\nYes, I copied it correctly.\
    \ I'm running Julia 0.6.2\n<|/ c |>\n<| a tags=julia,if-statement |>\nThe function\
    \ choose_num is recursive, but you only need an iterative solution. \n<code>",
  "    if x < y \n        then return choose_num(y, x)\n    else if x == y \n    \
    \    then return x\n    else \n        choose_num(y - 1, x)\n    end\nend\n</cell>\n\
    <code language=julia-1.4>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a positive integer number and returns its factorial. \n\
    For example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120.", "    if x >\
    \ y \n        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        choose_num(x, y)\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else if x % 2 == 0\n   \
    \     then return choose_num(x / 2, y)\n    else return choose_num(x / 2, y)\n\
    end\n</code>\n<|/ a tags=julia,recursion |>\n<| c |>\nI appreciate your answer,\
    \ but this does not answer the question. Your code does not use recursion.\n<|/\
    \ c |>\n<| c |>\nI guess I misunderstood the question. I thought the question\
    \ was about how to implement the recursive function `choose_num` without using\
    \ recursion.\n<|/ c |>\n<| c |>\nI guess I misunderstood the question. I thought\
    \ the question was about how to implement the recursive function `choose_num`\
    \ without using recursion.\n<|/ c |>\n<| c |>\nI guess I misunderstood the question.\
    \ I thought the question was about how to implement the recursive function `choose_num`\
    \ without using recursion.\n<|/ c |>\n<| c |>\nI guess I misunderstood the question.\
    \ I thought the question was about how to implement the recursive function `choose_num`\
    \ without using recursion.\n<|/ c |>\n<| a tags=julia,recursion |>\nThe answer\
    \ is quite simple:\n<code>", "    if x < y \n        then return choose_num(y,\
    \ x)\n        else return x\n    end\nend\n</cell>\n<code language=julia-1.1>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\nbiggest odd number that is in the\
    \ range [x, y] inclusive. If there's no such \nnumber, then the function should\
    \ return -1.", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y\n        then return x\n    else if x % 2 == 0\n        then return\
    \ choose_num(x / 2, y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n<code\
    \ language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a positive integer number x and returns the number of\
    \ \ntimes it appears in the list [x, x + 1, ..., x + 100]. For example, \nchoose_num(12)\
    \ should return 3.", "    if x < y \n        then return choose_num(y, x) \n \
    \       else return x \n    else \n        then return choose_num(y, x) \n   \
    \     else return -1 \nend \n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 12)\n</cell>\n<code\
    \ language=julia-1.0>\nchoose_num(13, 15)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 17)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 18)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 19)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 20)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 21)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 22)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 23)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 24)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 25)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 26)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 27)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 28)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 29)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 30)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 31)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 32)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 33)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 34)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 35)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 36)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 37)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 38)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 39)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 40)\n</cell>\n", "    if x > y \n  \
    \      then return choose_num(y, x) \n        else return x \n    else \n    \
    \    then return choose_num(y, x) \n        else return -1\nend\n</cell>\n<text>\n\
    Exercise 4\nWrite a function that takes two positive numbers x and y and returns\
    \ True if x is less than or equal to y, and False otherwise. \nWrite a function\
    \ that takes two positive numbers x and y and returns True if x is greater than\
    \ or equal to y, and False otherwise. \nWrite a function that takes two positive\
    \ numbers x and y and returns True if x is equal to y, and False otherwise. \n\
    Write a function that takes two positive numbers x and y and returns True if x\
    \ is less than y, and False otherwise. \nWrite a function that takes two positive\
    \ numbers x and y and returns True if x is greater than y, and False otherwise.\
    \ \nWrite a function that takes two positive numbers x and y and returns True\
    \ if x is equal to y, and False otherwise. \nWrite a function that takes two positive\
    \ numbers x and y and returns True if x is less than or equal to y, and False\
    \ otherwise. \nWrite a function that takes two positive numbers x and y and returns\
    \ True if x is greater than or equal to y, and False otherwise. ", "    if x <\
    \ y \n        then return choose_num(y, x)\n        else return x\n    end\nend\n\
    </cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 12)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    if x < y \n        then return choose_num(y,\
    \ x)\n        \n    else if x == y \n        then return x\n        \n    else\
    \ if x % 2 == 0\n        then return choose_num(x / 2, y)\n        \n    else\
    \ return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the \n    biggest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "    if x > y \n        then return -1\n    else if x < y \n  \
    \      then return choose_num(y, x)\n    else return x\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer n and returns the factorial of n. \nFor example, factorial(5)\
    \ = 5 * 4 * 3 * 2 * 1 = 120.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else \n        then return\
    \ choose_num(x - y, y)\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer\
    \ number and returns its factorial. \nFor example, factorial(5) = 5 \xD7 4 \xD7\
    \ 3 \xD7 2 \xD7 1 = 120.", "    if x < y \n        then return choose_num(y, x)\n\
    \        \n    if x == y \n        then return x\n        \n    if x % 2 == 0\
    \ \n        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n \
    \       then return choose_num(x, y / 2)\n        \n    if x == y / 2\n      \
    \  then return x\n        \n    if y / 2 == x / 2\n        then return y\n   \
    \     \n    if y / 2 == x / 2 + 1\n        then return y\n        \n    if y /\
    \ 2 == x / 2 + 2\n        then return y\n        \n    if y / 2 == x / 2 + 3\n\
    \        then return y\n        \n    if y / 2 == x / 2 + 4\n        then return\
    \ y\n        \n    if y / 2 == x / 2 + 5\n        then return y\n        \n  \
    \  if y / 2 == x / 2 + 6\n        then return y\n        \n    if y / 2 == x /\
    \ 2 + 7\n        then return y\n        \n    if y / 2 == x / 2 + 8\n        then\
    \ return y\n        \n    if y / 2 == x / 2 + 9\n        then return y\n     \
    \   \n    if y / 2 == x / 2 + 10\n        then return y\n        \n    if y /\
    \ 2 == x / 2 + 11\n        then return y\n        \n    if y / 2 == x / 2 + 12\n\
    \        then return y\n        \n    if y / 2 == x / 2 + 13\n        then return\
    \ y\n        \n    if y / 2 == x / 2 + 14\n        then return y\n        \n \
    \   if y / 2 == x / 2 + 15\n        then return y\n        \n    if y / 2 == x\
    \ / 2 + 16\n        then return y\n        \n    if y / 2 == x / 2 + 17\n    \
    \    then return y\n        \n    if y / 2 == x / 2 + 18\n        then return\
    \ y\n        \n    if y / 2 == x / 2 + 19\n        then return y\n        \n \
    \   if y / 2 == x / 2 + 20\n        then return y\n        \n    if y / 2 == x\
    \ / 2 + 21\n        then return y\n        \n    if y / 2 == x / 2 + 22\n    \
    \    then return y\n        \n    if y / 2 == x / 2 + 23\n        then return\
    \ y\n        \n    if y / 2 == x / 2 + 24\n        then return y\n        \n \
    \   if y / 2 == x / 2 + 25\n        then return y\n        \n    if y / 2 == x\
    \ / 2 + 26\n        then return y\n        \n    if y / 2 == x / 2 + 27\n    \
    \    then return y\n        \n    if y / 2 == x / 2 + 28\n        then return\
    \ y\n        \n    if ", "    if x > y \n        then return -1\n    else if x\
    \ < y\n        then return choose_num(y, x)\n    else \n        x % 2 == 0 &&\
    \ y % 2 == 0 ? \n            choose_num(x / 2, y / 2) + x % 2 \n            :\
    \ choose_num(x / 2, y / 2) + y % 2\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer $n$ and returns the number of digits in $n$. \nFor example,\
    \ \n$$ f(n) = \\begin{cases} \nn \\text{ has } 0 \\text{ digits} \\\nn \\text{\
    \ has } 1 \\text{ digit} \\\nn \\text{ has } 2 \\text{ digits} \\\nn \\text{ has\
    \ } 3 \\text{ digits} \\\nn \\text{ has } 4 \\text{ digits} \\\nn \\text{ has\
    \ } 5 \\text{ digits} \\\nn \\text{ has } 6 \\text{ digits} \\\nn \\text{ has\
    \ } 7 \\text{ digits} \\\nn \\text{ has } 8 \\text{ digits} \\\nn \\text{ has\
    \ } 9 \\text{ digits} \\\n\\end{cases}\n$$\nWrite a function that takes a positive\
    \ integer $n$ and returns the number of digits in $n$. \nFor example, \n$$ f(n)\
    \ = \\begin{cases} \nn \\text{ has } 0 \\text{ digits} \\\nn \\text{ has } 1 \\\
    text{ digit} \\\nn \\text{ has } 2 \\text{ digits} \\\nn \\text{ has } 3 \\text{\
    \ digits} \\\nn \\text{ has } 4 \\text{ digits} \\\nn \\text{ has } 5 \\text{\
    \ digits} \\\nn \\text{ has } 6 \\text{ digits} \\\nn \\text{ has } 7 \\text{\
    \ digits} \\\nn \\text{ has } 8 \\text{ digits} \\\nn \\text{ has } 9 \\text{\
    \ digits} \\\n\\end{cases}\n$$\nWrite a function that takes a positive integer\
    \ $n$ and returns the number of digits in $n$. \nFor example, \n$$ f(n) = \\begin{cases}\
    \ \nn \\text{ has } 0 \\text{ digits} \\\nn \\text{ has } 1 \\text{ digit} \\\n\
    n \\text{ has } 2 \\text{ digits} \\\nn \\text{ has } 3 \\text{ digits", "   \
    \ if x < y \n        then return choose_num(y, x)\n        \n    else if x ==\
    \ y \n        then return x\n        \n    else if x % 2 == 0 \n        then return\
    \ choose_num(x / 2, y)\n        \n    else return choose_num(x / 2, y)\nend\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes two positive numbers x and y and returns the\n\
    \    biggest odd number that is in the range [x, y] inclusive. If there's no such\
    \ \n    number, then the function should return -1.", "    if x < y \n       \
    \ then return choose_num(y, x)\n    else if x == y\n        then return x\n  \
    \  else if x % 2 == 0\n        then return choose_num(x / 2, y)\n    else \n \
    \       then return choose_num(x / 2, y)\n    else return -1\nend\n</cell>\n<code\
    \ language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a positive integer number and returns its \n    factorial.\
    \ For example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120.", "    if x\
    \ < y \n        then return choose_num(y, x)\n    else if x == y\n        then\
    \ return x\n    else if x % 2 == 0\n        then return choose_num(x / 2, y)\n\
    \    else return choose_num(x / 2, y)\nend\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a positive integer number and returns its factorial. \n\
    For example, factorial(5) = 5 x 4 x 3 x 2 x 1 = 120.", "    if x < y \n      \
    \  then return choose_num(y, x)\n        else return x\n</code>\n<|/ a |>\n<|\
    \ a dscore=0 |>\n<code>", "    if x > y \n        then return choose_num(y, x)\n\
    \        \n    if x == y \n        then return x\n        \n    if x % 2 == 0\
    \ \n        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n \
    \       then return choose_num(x, y / 2)\n        \n    if x % 2 == 0 \n     \
    \   then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n        then\
    \ return choose_num(x, y / 2)\n        \n    if x % 2 == 0 \n        then return\
    \ choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == 0 \n        then return choose_num(x / 2,\
    \ y)\n        \n    if y % 2 == 0 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == 0 \n        then return choose_num(x / 2, y)\n    \
    \    \n    if y % 2 == 0 \n        then return choose_num(x, y / 2)\n        \n\
    \    if x % 2 == 0 \n        then return choose_num(x / 2, y)\n        \n    if\
    \ y % 2 == 0 \n        then return choose_num(x, y / 2)\n        \n    if x %\
    \ 2 == 0 \n        then return choose_num(x / 2, y)\n        \n    if y % 2 ==\
    \ 0 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 == 0 \n\
    \        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n    \
    \    then return choose_num(x, y / 2)\n        \n    if x % 2 == 0 \n        then\
    \ return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == 0 \n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_num(x, y /\
    \ 2)\n        \n    if x % 2 == 0 \n        then return choose_num(x / 2, y)\n\
    \        \n    if y % 2 == 0 \n        then return choose_num(x, y / 2)\n    \
    \    \n    if x % 2 == 0 \n        then return choose_num(x / 2, y)\n        \n\
    \    if y % 2 == 0 \n        then return choose_num(x, y / 2)\n        \n    if\
    \ x % 2 == 0 \n        then return choose_num(x / 2, y)\n        \n    if y %\
    \ 2 == 0 \n        then return choose_", "    if x > y \n        then return -1\n\
    \    else if x < y \n        then return choose_num(y, x)\n    else return x \n\
    end\n</cell>\n<code language=julia-0.6>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes two positive numbers x and y and returns\
    \ the \n    biggest odd number that is in the range [x, y] inclusive. If there's\
    \ no such \n    number, then the function should return -1.", "    if x < y \n\
    \        then return choose_num(y, x)\n    else if x == y\n        then return\
    \ x\n    else if x % 2 == 0\n        then return choose_num(x / 2, y)\n    else\
    \ return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 12)\n</cell>\n<code\
    \ language=julia-1.0>\nchoose_num(13, 13)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 14)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 15)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 16)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 17)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 18)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 19)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 20)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 21)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 22)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 23)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 24)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 25)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 26)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 27)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 28)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 29)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 30)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 31)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 32)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 33)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 34)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 35)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 36)\n</cell>",
  "    if x < y \n        then return choose_num(y, x)\n    else if x == y \n    \
    \    then return x\n    else \n        x % 2 == 0 ? x : choose_num(x / 2, y)\n\
    end\n</cell>\n<text>\nExercise 3\nWrite a function that takes a positive integer\
    \ number and returns its factorial. \nFor example, factorial(5) = 5 x 4 x 3 x\
    \ 2 x 1 = 120", "    if x < y \n        then return choose_num(y, x)\n       \
    \ \n    if x == y \n        then return x\n        \n    if x % 2 == 0 \n    \
    \    then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n        then\
    \ return choose_num(x, y / 2)\n        \n    if x % 2 == 0 \n        then return\
    \ choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == 1 \n        then return choose_num(x / 2,\
    \ y)\n        \n    if y % 2 == 1 \n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == 1 \n        then return choose_num(x / 2, y)\n    \
    \    \n    if y % 2 == 1 \n        then return choose_num(x, y / 2)\n        \n\
    \    if x % 2 == 0 \n        then return choose_num(x / 2, y)\n        \n    if\
    \ y % 2 == 0 \n        then return choose_num(x, y / 2)\n        \n    if x %\
    \ 2 == 0 \n        then return choose_num(x / 2, y)\n        \n    if y % 2 ==\
    \ 0 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 == 1 \n\
    \        then return choose_num(x / 2, y)\n        \n    if y % 2 == 1 \n    \
    \    then return choose_num(x, y / 2)\n        \n    if x % 2 == 1 \n        then\
    \ return choose_num(x / 2, y)\n        \n    if y % 2 == 1 \n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == 0 \n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_num(x, y /\
    \ 2)\n        \n    if x % 2 == 0 \n        then return choose_num(x / 2, y)\n\
    \        \n    if y % 2 == 0 \n        then return choose_num(x, y / 2)\n    \
    \    \n    if x % 2 == 1 \n        then return choose_num(x / 2, y)\n        \n\
    \    if y % 2 == 1 \n        then return choose_num(x, y / 2)\n        \n    if\
    \ x % 2 == 1 \n        then return choose_num(x / 2, y)\n        \n    if y %\
    \ 2 == 1 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 ==\
    \ 0 \n        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n\
    \        then return choose_", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y\n        then return x\n    else if x % 2 == 0\n    \
    \    then return choose_num(x / 2, y)\n    else return choose_num(x / 2, y)\n\
    end\n</cell>\n<code language=julia-0.6>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that returns the biggest even number that is in the\
    \ range [x, y] inclusive.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else \n        choose_num(x\
    \ + 1, y)\n    end\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer number\
    \ and returns its factorial. \nFor example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7\
    \ 2 \xD7 1 = 120", "    if x > y \n        then return -1\n    else if x < y \n\
    \        then return choose_num(y, x)\n    else return x\nend\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a positive number x and returns the number\
    \ of digits\nof x. For example, choose_num(12) should return 2.", "    if x <=\
    \ y \n        then return x\n    else return y\nend\n</cell>\n<code language=julia-1.3>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 12)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a positive integer n and returns\
    \ True if n is \n    even, and False otherwise.", "    if x < y \n        then\
    \ return choose_num(y, x)\n    else if x == y\n        then return x\n    else\
    \ if x % 2 == 0\n        then return choose_num(x / 2, y)\n    else return choose_num(x\
    \ / 2, y)\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a positive integer number and\
    \ returns its factorial. \nFor example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2\
    \ \xD7 1", "    if x < y \n        then return choose_num(y, x) \n        else\
    \ return x \n    end\n    return -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer number and returns its factorial. \nThe factorial of a number\
    \ $n$ is defined as:", "    if x < y \n        then return choose_num(y, x)\n\
    \        \n    if x == y \n        then return x\n        \n    if x % 2 == 0\n\
    \        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n     \
    \   then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then\
    \ return choose_num(x / 2, y / 2)\n        \n    if y % 2 == 0\n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if y % 2 == 0\n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == 0\n        then return choose_num(x / 2, y\
    \ / 2)\n        \n    if y % 2 == 0\n        then return choose_num(x, y / 2)\n\
    \        \n    if x % 2 == 0\n        then return choose_num(x / 2, y / 2)\n \
    \       \n    if y % 2 == 0\n        then return choose_num(x, y / 2)\n      \
    \  \n    if x % 2 == 0\n        then return choose_num(x / 2, y / 2)\n       \
    \ \n    if y % 2 == 0\n        then return choose_num(x, y / 2)\n        \n  \
    \  if x % 2 == 0\n        then return choose_num(x / 2, y / 2)\n        \n   \
    \ if y % 2 == 0\n        then return choose_num(x, y / 2)\n        \n    if x\
    \ % 2 == 0\n        then return choose_num(x / 2, y / 2)\n        \n    if y %\
    \ 2 == 0\n        then return choose_num(x, y / 2)\n        \n    if x % 2 ==\
    \ 0\n        then return choose_num(x / 2, y / 2)\n        \n    if y % 2 == 0\n\
    \        then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n     \
    \   then return choose_num(x / 2, y / 2)\n        \n    if y % 2 == 0\n      \
    \  then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then\
    \ return choose_num(x / 2, y / 2)\n        \n    if y % 2 == 0\n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if y % 2 == 0\n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == 0\n        then ", "    if x < y \n      \
    \  then return choose_num(y, x)\n        else return x\n    end\n    return -1\n\
    end\n</cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd number that is in the range [x, y]\
    \ inclusive. If there's no such\n    number, then the function should return -1.",
  "    if x > y \n        then return -1\n    else \n        if x == 0\n         \
    \   then return y\n        else \n            if y % 2 == 0\n                then\
    \ return choose_num(x / 2, y)\n            else \n                return choose_num(x,\
    \ y / 2)\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the number of integers in the\
    \ range [x, y] inclusive that satisfy the equation $x \\le y \\le x + y$. For\
    \ example:\n$$\n\\begin{align}\n\\text{Number of integers in the range [12, 15]}\
    \ & = 4 \\\n\\text{Number of integers in the range [13, 12]} & = 2 \\\n\\text{Number\
    \ of integers in the range [14, 13]} & = 2 \\\n\\text{Number of integers in the\
    \ range [15, 14]} & = 2 \\\n\\text{Number of integers in the range [16, 15]} &\
    \ = 2 \\\n\\text{Number of integers in the range [17, 16]} & = 2 \\\n\\text{Number\
    \ of integers in the range [18, 17]} & = 2 \\\n\\text{Number of integers in the\
    \ range [19, 18]} & = 2 \\\n\\text{Number of integers in the range [20, 19]} &\
    \ = 2 \\\n\\text{Number of integers in the range [21, 20]} & = 2 \\\n\\text{Number\
    \ of integers in the range [22, 21]} & = 2 \\\n\\text{Number of integers in the\
    \ range [23, 22]} & = 2 \\\n\\text{Number of integers in the range [24, 23]} &\
    \ = 2 \\\n\\text{Number of integers in the range [25, 24]} & = 2 \\\n\\text{Number\
    \ of integers in the range [26, 25]} & = 2 \\\n\\text{Number of integers in the\
    \ range [27, 26]} & = 2 \\\n\\text{Number of integers in the range [28, 27]} &\
    \ = 2 \\\n\\text{Number of integers in the range [29, 28]} & = 2 \\\n\\text{Number\
    \ of integers in the range [30, 29]} & = 2 \\\n\\text{Number of integers in the\
    \ range [31, 30]} & = 2 \\\n\\text{Number of integers in the range [32, 31]} &\
    \ = 2 \\\n\\text{Number of integers in the range [33, 32]} & = 2 \\\n\\text{Number\
    \ of integers in the range [34, 33]} & = 2 \\\n\\text{Number of integers in the\
    \ range [35, 34]} & = 2 \\\n\\text{Number of integers in the range [36, 35]",
  "    if x < y \n        then return choose_num(y, x)\n    else if x == y \n    \
    \    then return x\n    else \n        then return choose_num(x - y, y)\n    end\n\
    end\n</cell>\n<code language=julia-1.4>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a positive integer number and returns\
    \ its \n    factorial. Factorial of a number is equal to multiplication of all\
    \ \n    positive integers less than or equal to it. For example:\n    >>> factorial(5)\n\
    \    120\n    >>> factorial(10)\n    3628800\n    >>> factorial(100)\n    130767436800\n\
    \    >>> factorial(-1)\n    -1\n    >>> factorial(0)\n    1\n    >>> factorial(1)\n\
    \    1\n    \"\"\"", "    if x > y \n        then return -1\n    else if x < y\
    \ \n        then return choose_num(y, x)\n    else if x == y \n        then return\
    \ x\n    else \n        choose_num(x - y, y)\nend\n</code>\n<|/ a |>\n<| a |>\n\
    <code>", "    if x < y \n        then return choose_num(y, x)\n        \n    if\
    \ x == y \n        then return x\n        \n    if x % 2 == 0 \n        then return\
    \ choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_num(x,\
    \ y / 2)\n        \n    return -1\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the \n    biggest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y \n        then return x\n    else \n        then return choose_num(x\
    \ - y, y)\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nThis doesn't work if x\
    \ is greater than y\n<|/ c |>\n<| c |>\nIt does work if x is greater than y\n\
    <|/ c |>\n<| c |>\nIt does work if x is greater than y\n<|/ c |>\n<| c |>\nIt\
    \ does work if x is greater than y\n<|/ c |>\n<| c |>\nIt does work if x is greater\
    \ than y\n<|/ c |>\n<| a dscore=2 |>\n<code>", "    if x < y \n        then return\
    \ choose_num(y, x)\n    else if x == y \n        then return x\n    else \n  \
    \      then return choose_num(x div 2, y div 2)\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd number that is in\
    \ the range [x, y] inclusive. If there's no such\n    number, then the function\
    \ should return -1.", "    if x < y \n        then return choose_num(y, x)\n \
    \       \n    if x == y\n        then return x\n        \n    if x % 2 == 0\n\
    \        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n     \
    \   then return choose_num(x, y / 2)\n        \n    if x > y\n        then return\
    \ choose_num(y, x)\n        \n    return -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer number x and returns the sum of its digits. \nFor example,\
    \ choose_num(12) should return 1 + 2 = 3.", "    if x < y \n        then return\
    \ choose_num(y, x)\n    else \n        if x % 2 == 0 \n            then return\
    \ x\n        else \n            if y % 2 == 0 \n                then return y\n\
    \            else \n                if x % 2 == y % 2 \n                    then\
    \ return x\n                else \n                    if x % 2 != y % 2 \n  \
    \                      then return -1\n                    else \n           \
    \             if x == y \n                            then return x\n        \
    \                else \n                            if x > y \n              \
    \                  then return choose_num(y, x)\n                            else\
    \ \n                                if x < y \n                              \
    \      then return choose_num(y, x)\n                                else \n \
    \                                   return -1\nend\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an integer x and returns the number of digits\
    \ in x. \nFor example, choose_num(12) should return 2.", "    if x > y \n    \
    \    then return -1\n    else if x < y\n        then return choose_num(y, x)\n\
    \    else \n        choose_num(x, y)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n\
    \    else if x == y\n        then return x\n    else if x % 2 == 0\n        then\
    \ return choose_num(x / 2, y)\n    else return choose_num(x / 2, y)\nend\n</code>\n\
    <|/ a tags=julia,recursion,algorithm |>\n<| c |>\nThis doesn't work. Try `choose_num(12,\
    \ 15)`.\n<|/ c |>\n<| c |>\nThanks for pointing that out. I've fixed it.\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>", "    if x < y \n        then return choose_num(y,\
    \ x)\n        \n    if x == y \n        then return x\n        \n    if x % 2\
    \ == 0 \n        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\
    \ \n        then return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2\
    \ \n        then return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y\
    \ % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if x % 2 !=\
    \ y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    return -1\n\
    end\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 12)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 13)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 14)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 16)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 17)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 18)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 19)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 20)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 21)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 22)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 23)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 24)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 25)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 26)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 27)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 28)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 29)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 30)\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 31)\n</cell>\n\
    <code language=julia-1.5>", "    if x <= y \n        then return x\n        else\
    \ return y\n    else return -1\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd number that is in the range [x, y]\
    \ inclusive. If there's no such\n    number, then the function should return -1.",
  "    if x < y \n        then return choose_num(y, x)\n    else if x == y \n    \
    \    then return x\n    else if x % 2 == 0\n        then return choose_num(x /\
    \ 2, y)\n    else \n        then return choose_num(x / 2, y)\n    end\nend\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes two positive numbers x and y and returns the\n    biggest\
    \ odd integer number that is in the range [x, y] inclusive. If \n    there's no\
    \ such number, then the function should return -1.", "    if x < y \n        then\
    \ return choose_num(y, x)\n        \n    else if x == y \n        then return\
    \ x\n        \n    else if x % 2 == 0\n        then return choose_num(x / 2, y)\n\
    \        \n    else \n        then return choose_num(x / 2, y)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes a positive integer n and returns the sum of its\
    \ digits. \nFor example, choose_num(12) should return 1 + 2 + 3 = 6.", "    if\
    \ x < y \n        then return choose_num(y, x)\n    else if x == y \n        then\
    \ return x\n    else \n        then return choose_num(x - y, y)\nend\n</cell>\n\
    <code language=julia-1.0>", "    if x > y \n        then return -1\n    else \n\
    \        if x == y \n            then return x\n        else \n            if\
    \ x % 2 == 0 \n                then return choose_num(x / 2, y)\n            else\
    \ \n                if y % 2 == 0 \n                    then return choose_num(x,\
    \ y / 2)\n                else \n                    if x % 2 == y % 2 \n    \
    \                    then return choose_num(x / 2, y / 2)\n                  \
    \  else \n                        if x % 2 == y % 2 \n                       \
    \     then return choose_num(x / 2, y)\n                        else \n      \
    \                      if x % 2 == y % 2 \n                                then\
    \ return choose_num(x, y / 2)\n                            else \n           \
    \                     if x % 2 == y % 2 \n                                   \
    \ then return choose_num(x, y)\n                                else \n      \
    \                              return -1\n</code>\n<|/ a tags=python,algorithm\
    \ |>\n<| a tags=python,algorithm |>\n<code>\ndef choose_num(x: int, y: int) ->\
    \ int:\n    if x > y:\n        return -1\n    elif x == y:\n        return x\n\
    \    elif x % 2 == 0 and y % 2 == 0:\n        return choose_num(x / 2, y / 2)\n\
    \    elif x % 2 == y % 2:\n        return choose_num(x / 2, y)\n    elif x % 2\
    \ == y % 2:\n        return choose_num(x, y)\n    elif x % 2 == y % 2:\n     \
    \   return choose_num(x / 2, y / 2)\n    else:\n        return -1\n</code>\n<|/\
    \ a dscore=1 |>\n<| a dscore=1 |>\n<code>\ndef choose_num(x: int, y: int) -> int:\n\
    \    if x > y:\n        return -1\n    elif x == y:\n        return x\n    elif\
    \ x % 2 == 0 and y % 2 == 0:\n        return choose_num(x / 2, y / 2)\n    elif\
    \ x % 2 == y % 2:\n        return choose_num(x / 2, y)\n    elif x % 2 == y %\
    \ 2:\n        return choose_num(x, y)\n    elif x % 2 == y % 2:\n        return\
    \ choose_num(x / 2, y / 2)\n    else:\n        return -1\n</code>\n<|/ a tags=python,algorithm\
    \ |>\n<| a dscore=1 |>\n<code>\ndef choose_num(x: int, y: int) -> int:\n    if\
    \ x > y:\n        return -1\n    elif x == y:\n        return x\n    elif x %\
    \ 2 == 0 and y % 2 == 0:\n        return choose_num(x / 2, y / 2)\n    elif x\
    \ % 2 == y % 2:\n        return choose_num(x / 2, y)\n    elif x % 2 == y % 2:\n\
    \        return choose_num(x, y)\n    elif x % 2 == y % 2:\n        return choose_num(x\
    \ / 2, y / 2)\n    else:\n        return -1\n", "    if x > y \n        then return\
    \ -1\n    else if x < y \n        then return choose_num(y, x)\n    else if x\
    \ == y \n        then return x\n    else \n        choose_num(x - y, y)\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes an integer $n$ and returns\
    \ the number of digits in $n$. \nFor example, choose_num(12) should return 2.",
  "    if x > y \n        then return -1\n    else if x == y \n        then return\
    \ x\n    else if x % 2 == 0\n        then return choose_num(x / 2, y)\n    else\
    \ \n        then return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-0.6>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-0.6>\nchoose_num(13, 12)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a positive integer number and\
    \ returns its factorial. \nFor example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2\
    \ \xD7 1 = 120.", "    if x < y \n        then return choose_num(y, x)\n     \
    \   \n    if x == y \n        then return x\n        \n    if x % 2 == 0 \n  \
    \      then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n      \
    \  then return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n      \
    \  then return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n  \
    \      then return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n  \
    \      then return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2 \n\
    \        then return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2\
    \ \n        then return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y\
    \ % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if x % 2 ==\
    \ y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if x % 2\
    \ == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if x\
    \ % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if\
    \ x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n  \
    \  if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n\
    \    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n      \
    \  \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n  \
    \      \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_", "    if x < y\
    \ \n        then return choose_num(y, x)\n    else \n        if x == y \n    \
    \        then return x\n        else \n            if x % 2 == 0 \n          \
    \      then return choose_num(x / 2, y)\n            else \n                if\
    \ y % 2 == 0 \n                    then return choose_num(x, y / 2)\n        \
    \        else \n                    if x > y \n                        then return\
    \ choose_num(x / 2, y / 2)\n                    else \n                      \
    \  return -1\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a positive integer number x and\
    \ returns the \n    biggest odd integer number that is in the range [x, y] inclusive.\
    \ If \n    there's no such number, then the function should return -1.", "   \
    \ if x < y \n        then return choose_num(y, x)\n        else return x\n   \
    \ end\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a positive\
    \ number x and returns the smallest even integer number that is in the range [x,\
    \ y] inclusive. If there's no such number, then the function should return -1.",
  "    if x > y \n        then return -1\n    else if x < y \n        then return\
    \ choose_num(y, x)\n    else \n        x % 2 == 0 && y % 2 == 0 ? x : -1\nend\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes a positive integer $n$\
    \ and returns $n$ if it is even, \n$n+1$ if it is odd, and $-1$ otherwise.", " \
    \   if x <= y \n        then return x\n        else return y\n    end\n    ",
  "    if x < y \n        then return choose_num(y, x)\n    else if x == y \n    \
    \    then return x\n    else \n        choose_num(x - 2, y - 1)\nend\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a positive integer number and returns its \nfactorial.\
    \ For example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120.", "    if x\
    \ < y \n        then return choose_num(y, x)\n    else if x == y \n        then\
    \ return x\n    else if x % 2 == 0 \n        then return choose_num(x / 2, y)\n\
    \    else \n        then return choose_num(x / 2, y)\n    end\nend\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes two positive numbers x and y and returns the\n    biggest\
    \ odd integer number that is in the range [x, y] inclusive. If \n    there's no\
    \ such number, then the function should return -1.", "    if x > y \n        then\
    \ return -1\n    else if x < y \n        then return choose_num(y, x)\n    else\
    \ return x\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(14, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(14, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(14, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(15, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(15, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(15, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(16, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(16, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(16, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(17, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(17, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(17, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(18, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(18, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(18, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(19, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(19, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(19, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(20, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(20, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(20, 14)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(21, 12)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(21, 13)\n</cell>\n<code language=julia-1.5>\nchoose_num(21, 14)\n</cell>\n\
    <code language=", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y\n        then return x\n    else \n        choose_num(y - 1, x)\n\
    \    end\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes a positive\
    \ integer n and returns the sum of all \nthe even numbers from 1 to n.", "   \
    \ if x < y \n        then return choose_num(y, x)\n        \n    if x == y \n\
    \        then return x\n        \n    if x % 2 == 0 \n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_num(x, y /\
    \ 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x\
    \ / 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return ", "    if\
    \ x > y \n        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        x % 2 == 0 && y % 2 == 0 \n            ? if x % 2 ==\
    \ 0 \n                then return y\n            else \n                choose_num(x\
    \ / 2, y / 2)\n    end\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "    if x > y \n        then return -1\n    else if x < y \n  \
    \      then return choose_num(y, x)\n    else \n        then return x\nend\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a positive integer number and returns its \nfactorial.\
    \ For example, factorial(4) == 24. Make sure your function \nworks correctly for\
    \ negative numbers as well.", "    if x < y \n        then return choose_num(y,\
    \ x)\n        else return x\nend\n</cell>\n<code language=julia-1.5>", "    if\
    \ x < y \n        then return choose_num(y, x)\n        \n    if x == y \n   \
    \     then return x\n        \n    if x % 2 == 0 \n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_num(x, y /\
    \ 2)\n        \n    if x % 2 == y % 2 \n        then return x\n        \n    if\
    \ x % 2 == y % 2 \n        then return y\n        \n    if x % 2 == y % 2 \n \
    \       then return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y % 2\
    \ \n        then return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2\
    \ \n        then return choose_num(x / 2, y / 2)\n        \n    if x % 2 == y\
    \ % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 == y\
    \ % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if x % 2 ==\
    \ y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2 ==\
    \ y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if x % 2\
    \ == y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x % 2\
    \ == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if x\
    \ % 2 == y % 2 \n        then return choose_num(x, y / 2)\n        \n    if x\
    \ % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n    if\
    \ x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n        \n    if\
    \ x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n  \
    \  if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n        \n  \
    \  if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n        \n\
    \    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n        \n\
    \    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n      \
    \  \n    if x % 2 == y % 2 \n        then return choose_num(x, y / 2)\n      \
    \  \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n  \
    \      ", "    if x < y \n        then return choose_num(y, x)\n        \n   \
    \ if x == y\n        then return x\n        \n    if x % 2 == 0\n        then\
    \ return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n        then return\
    \ choose_num(x, y / 2)\n        \n    if x == y % 2\n        then return x\n \
    \       \n    if x % 2 == y % 2\n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2\n        then return choose_num(x, y / 2)\n \
    \       \n    if x % 2 == 0\n        then return choose_num(x / 2, y / 2)\n  \
    \      \n    if y % 2 == 0\n        then return choose_num(x / 2, y)\n       \
    \ \n    if x == y % 2\n        then return choose_num(x / 2, y / 2)\n        \n\
    \    if x == y % 2\n        then return choose_num(x / 2, y / 2)\n        \n \
    \   if x == y % 2\n        then return choose_num(x / 2, y / 2)\n        \n  \
    \  if x == y % 2\n        then return choose_num(x / 2, y / 2)\n        \n   \
    \ if x == y % 2\n        then return choose_num(x / 2, y / 2)\n        \n    if\
    \ x == y % 2\n        then return choose_num(x / 2, y / 2)\n        \n    if x\
    \ == y % 2\n        then return choose_num(x / 2, y / 2)\n        \n    if x ==\
    \ y % 2\n        then return choose_num(x / 2, y / 2)\n        \n    if x == y\
    \ % 2\n        then return choose_num(x / 2, y / 2)\n        \n    if x == y %\
    \ 2\n        then return choose_num(x / 2, y / 2)\n        \n    if x == y % 2\n\
    \        then return choose_num(x / 2, y / 2)\n        \n    if x == y % 2\n \
    \       then return choose_num(x / 2, y / 2)\n        \n    if x == y % 2\n  \
    \      then return choose_num(x / 2, y / 2)\n        \n    if x == y % 2\n   \
    \     then return choose_num(x / 2, y / 2)\n        \n    if x == y % 2\n    \
    \    then return choose_num(x / 2, y / 2)\n        \n    if x == y % 2\n     \
    \   then return choose_num(x / 2, y / 2)\n        \n    if x == y % 2\n      \
    \  then return choose_num(x / 2, ", "    if x < y \n        then return choose_num(y,\
    \ x)\n        \n    if x == y \n        then return x\n        \n    if x % 2\
    \ == 0\n        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n\
    \        then return choose_num(x, y / 2)\n        \n    if x > y \n        then\
    \ return choose_num(y, x)\n        \n    return -1\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ integer x and returns the number of digits in x.", "    if x > y \n        then\
    \ return -1\n    else if x < y \n        then return choose_num(y, x)\n    else\
    \ \n        x % 2 == 0 && y % 2 == 0\n            ? if x % 2 == 0 \n         \
    \       then return y\n            else\n                x % 2 == 1\n        \
    \            ? return choose_num(y, x)\n                    : choose_num(y, x)\n\
    \    end\nend\n</cell>\n<code language=julia-1.4>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes two positive numbers x and y and\
    \ returns the\n    biggest odd integer number that is in the range [x, y] inclusive.\
    \ If \n    there's no such number, then the function should return -1.", "   \
    \ if x < y \n        then return choose_num(y, x)\n        \n    if x == y \n\
    \        then return x\n        \n    if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0\n        then return choose_num(x, y /\
    \ 2)\n        \n    if x % 2 == 0\n        then return choose_num(x / 2, y)\n\
    \        \n    if y % 2 == 0\n        then return choose_num(x, y / 2)\n     \
    \   \n    if x % 2 == 0\n        then return choose_num(x / 2, y)\n        \n\
    \    if y % 2 == 0\n        then return choose_num(x, y / 2)\n        \n    if\
    \ x % 2 == 0\n        then return choose_num(x / 2, y)\n        \n    if y % 2\
    \ == 0\n        then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n\
    \        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n     \
    \   then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then\
    \ return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0\n        then return choose_num(x, y /\
    \ 2)\n        \n    if x % 2 == 0\n        then return choose_num(x / 2, y)\n\
    \        \n    if y % 2 == 0\n        then return choose_num(x, y / 2)\n     \
    \   \n    if x % 2 == 0\n        then return choose_num(x / 2, y)\n        \n\
    \    if y % 2 == 0\n        then return choose_num(x, y / 2)\n        \n    if\
    \ x % 2 == 0\n        then return choose_num(x / 2, y)\n        \n    if y % 2\
    \ == 0\n        then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n\
    \        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n     \
    \   then return choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then\
    \ return choose_num(x / 2, y)\n        \n    if y % 2 == 0\n        then return\
    \ choose_num(x, y / 2)\n        \n    if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0\n        then return choose_", "    if\
    \ x > y \n        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else return x \nend \n</code>\n<|/ a dscore=0 |>\n<| a tags=julia,if-statement\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ \n        if x == y \n            then return x\n        else \n           \
    \ if x % 2 == 0 \n                then return choose_num(x / 2, y)\n         \
    \   else \n                if y % 2 == 0 \n                    then return choose_num(x,\
    \ y / 2)\n                else \n                    if x % 2 == y % 2 \n    \
    \                    then return choose_num(x / 2, y / 2)\n                  \
    \  else \n                        if x % 2 == y % 2 \n                       \
    \     then return choose_num(x / 2, y / 2)\n                        else \n  \
    \                          if x % 2 == 0 \n                                then\
    \ return choose_num(x / 2, y)\n                            else \n           \
    \                     if y % 2 == 0 \n                                    then\
    \ return choose_num(x, y / 2)\n                                else \n       \
    \                             return -1\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    Please don't post only code as an answer, but also provide an explanation of what\
    \ your code does and how it solves the problem of the question. Answers with an\
    \ explanation are usually more helpful and of better quality, and are more likely\
    \ to attract upvotes.\n<|/ c |>\n<| c |>\nI added some explanation.\n<|/ c |>\n\
    <| c |>\nThe code is not correct, since it returns -1 for choose_num(12, 15).\n\
    <|/ c |>\n<| c |>\nI fixed the code. Thanks for pointing out.\n<|/ c |>\n<| c\
    \ |>\nThe code is not correct, since it returns -1 for choose_num(12, 15).\n<|/\
    \ c |>\n<| a tags=recursion,math,haskell |>\n<code>\nchoose_num :: Int -> Int\
    \ -> Int\nchoose_num x y = if x < y then choose_num (y + 1) x else if x == y then\
    \ x else if x % 2 == 0 then choose_num (x / 2) y else if y % 2 == 0 then choose_num\
    \ (x / 2) x else if x % 2 == y % 2 then choose_num (x / 2) (y / 2) else -1\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nPlease don't post only code as an answer, but also\
    \ provide an explanation of what your code does and how it solves the problem\
    \ of the question. Answers with an explanation are usually more helpful and of\
    \ better quality, and are more likely to attract upvotes.\n<|/ c |>\n<| a dscore=0\
    \ |>\n<code>\nchoose_num :: Int -> Int -> Int\nchoose_", "    if x < y \n    \
    \    then return choose_num(y, x) \n        else return x \n    else return y\
    \ \nend \n</cell>\n<code language=julia-1.5>", "    if x < y \n        then return\
    \ choose_num(y, x)\n        else return x\n    end\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis doesn't work. Try it with `choose_num(12, 15)`.\n<|/ c |>\n\
    <| c |>\nI tested it and it works fine. Did you try it with the example I provided?\n\
    <|/ c |>\n<| c |>\nYes, I did. `choose_num(12, 15)` returns `14`, not `-1`.\n\
    <|/ c |>\n<| c |>\nOh, I see. My mistake. I thought you were looking for the biggest\
    \ even number in the range [x, y] inclusive. I'll edit my answer.\n<|/ c |>\n\
    <| c |>\nI edited my answer again. Sorry for the confusion.\n<|/ c |>\n<| a tags=julia,if-statement\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y\n        then return x\n    else if x % 2 == 0\n        then return\
    \ choose_num(x / 2, y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes two positive numbers x and y and returns the\n    biggest\
    \ odd number that is in the range [x, y] inclusive. If there's no such\n    number,\
    \ then the function should return -1.", "    if x < y \n        then return choose_num(y,\
    \ x)\n        \n    else if x == y \n        then return x\n        \n    else\
    \ \n        choose_num(x - 2, y - 1)\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes an\
    \ integer $n$ and returns the number of digits in $n$. \nFor example, \n$$ f(10)\
    \ = 2 $$\n$$ f(100) = 3 $$\n$$ f(1000) = 4 $$\n$$ f(10000) = 5 $$\n$$ f(100000)\
    \ = 6 $$\n$$ f(1000000) = 7 $$\n$$ f(10000000) = 8 $$\n$$ f(100000000) = 9 $$\n\
    $$ f(1000000000) = 10 $$\n$$ f(10000000000) = 11 $$\n$$ f(100000000000) = 12 $$\n\
    $$ f(1000000000000) = 13 $$\n$$ f(10000000000000) = 14 $$\n$$ f(100000000000000)\
    \ = 15 $$\n$$ f(1000000000000000) = 16 $$\n$$ f(10000000000000000) = 17 $$\n$$\
    \ f(100000000000000000) = 18 $$\n$$ f(1000000000000000000) = 19 $$\n$$ f(10000000000000000000)\
    \ = 20 $$\n$$ f(100000000000000000000) = 21 $$\n$$ f(1000000000000000000000) =\
    \ 22 $$\n$$ f(10000000000000000000000) = 23 $$\n$$ f(100000000000000000000000)\
    \ = 24 $$\n$$ f(1000000000000000000000000) = 25 $$\n$$ f(10000000000000000000000000)\
    \ = 26 $$\n$$ f(100000000000000000000000000) = 27 $$\n$$ f(1000000000000000000000000000)\
    \ = 28 $$\n$$ f(10000000000000000000000000000) = 29 $$\n$$ f(100000000000000000000000000000)\
    \ = 30 $$\n$$ f(1000000000000000000000000000000) = 31 $$\n$$ f(10000000000000000000000000000000)\
    \ = 32 $$\n$$ f(100000000000000000000000000000000) = 33 $$\n$$ f(1000000000000000000000000000000000)\
    \ = 34 $$\n$$ f(10000000000000000000000000000000000) = 35 $$\n$$ f(100000000000000000000000000000000000)\
    \ = 36 $$\n$$ f(1000000000000000000000000000000000000) = 37 $$\n$$ f(10000000000000000000000000000000000000)\
    \ = 38 $$\n$$ f(100000000000000000000000000000000000000) = 39 $$\n$$ f(1000000000000000000000000000000000000000)\
    \ = 40 $$\n$$ f(10000000000000000000000000000000000000000) = 41 $$\n", "    if\
    \ x < y \n        then return choose_num(y, x)\n    else if x == y \n        then\
    \ return x\n    else if x % 2 == 0\n        then return choose_num(x / 2, y)\n\
    \    else \n        then return choose_num(x / 2, y)\n    end\nend\n</code>\n\
    <|/ a |>\n<| a tags=julia,recursion,function |>\n<code>", "    if x > y \n   \
    \     then return choose_num(y, x)\n    else if x == y \n        then return x\n\
    \    else if x % 2 == 0 \n        then return choose_num(x / 2, y)\n    else \n\
    \        then return choose_num(x / 2, y)\n    end\nend\n</cell>\n<code language=julia-1.3>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ integer number and returns its factorial. \nThe factorial of a number $n$ is\
    \ defined as:", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y \n        then return x\n    else \n        then return choose_num(y\
    \ - 1, x)\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes a positive integer n and returns\
    \ the number of \ntimes it appears in the Fibonacci sequence. \nFor example, \n\
    if n is 5, then the function should return 3.\nIf n is 10, then the function should\
    \ return 5.", "    if x < y \n        then return choose_num(y, x)\n    else if\
    \ x == y\n        then return x\n    else if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.4>\n\
    choose_num(12, 15)\n</cell>\n<code language=julia-1.4>\nchoose_num(13, 12)\n</cell>\n\
    <text>\nProblem 3\nWrite a function that takes two positive numbers x and y and\
    \ returns the\n    biggest odd integer number that is in the range [x, y] inclusive.\
    \ If \n    there's no such number, then the function should return -1.", "   \
    \ if x < y \n        then return choose_num(y, x)\n        else return x\nend\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise\
    \ 3\nWrite a function that takes an integer n and returns the number of digits\
    \ in n. \nFor example, choose_num(12) should return 2, because there are two digits\
    \ in 12.", "    if x < y \n        then return choose_num(y, x)\n    else \n \
    \       if x == y \n            then return x\n        else \n            if x\
    \ % 2 == 0 \n                then return choose_num(x / 2, y)\n            else\
    \ \n                if y % 2 == 0 \n                    then return choose_num(x,\
    \ y / 2)\n                else \n                    if x > y \n             \
    \           then return choose_num(y, x)\n                    else return -1\n\
    end\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes two positive numbers x and y and returns\
    \ the\n    biggest odd number that is in the range [x, y] inclusive. If there's\
    \ no such \n    number, then the function should return -1.", "    if x < y \n\
    \        then return choose_num(y, x)\n    else if x == y \n        then return\
    \ x\n    else \n        x % 2 == 0 && y % 2 == 0 \n            ? choose_num(x\
    \ / 2, y / 2)\n            : -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "    if x < y \n        then return choose_num(y, x)\n        \n\
    \    if x == y \n        then return x\n        \n    if x % 2 == 0 \n       \
    \ then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n        then\
    \ return choose_num(x, y / 2)\n        \n    if x % 2 == y % 2 \n        then\
    \ return x\n        \n    if x % 2 == y % 2 \n        then return y\n        \n\
    \    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n      \
    \  \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n  \
    \      \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2, y / 2)\n\
    \        \n    if x % 2 == ", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else \n        then return\
    \ choose_num(x + 1, y)\n    end\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 12)\n</cell>\n<code\
    \ language=julia-1.0>\nchoose_num(12, 13)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 14)\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 14)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 15)\n</cell>\n<code language=julia-1.0>\nchoose_num(14, 15)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(15, 15)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(16, 15)\n</cell>\n<code language=julia-1.0>\nchoose_num(17, 15)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(18, 15)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(19, 15)\n</cell>\n<code language=julia-1.0>\nchoose_num(20, 15)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(21, 15)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(22, 15)\n</cell>\n<code language=julia-1.0>\nchoose_num(23, 15)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(24, 15)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(25, 15)\n</cell>\n<code language=julia-1.0>\nchoose_num(26, 15)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(27, 15)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(28, 15)\n</cell>\n<code language=julia-1.0>\nchoose_num(29, 15)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(30, 15)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(31, 15)\n</cell>\n<code language=julia-1.0>\nchoose_num(32, 15)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(33, 15)\n</cell>\n<code language=julia-1.0>\n\
    cho", "    if x < y \n        then return choose_num(y, x)\n    else if x == y\n\
    \        then return x\n    else if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-1.5>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that returns\
    \ the biggest odd number that is in the range [x, y] inclusive. If there's no\
    \ such number, then the function should return -1.", "    if x > y \n        then\
    \ return choose_num(y, x)\n        else return x\n    end\n    if x == y\n   \
    \     then return x\n    end\n    if x % 2 == 0 && y % 2 == 0\n        then return\
    \ choose_num(x / 2, y / 2)\n    end\n    if x % 2 == 0 && y % 2 != 0\n       \
    \ then return choose_num(x / 2, y)\n    end\n    if x % 2 != 0 && y % 2 == 0\n\
    \        then return choose_num(x, y / 2)\n    end\n    if x % 2 != 0 && y % 2\
    \ != 0\n        then return choose_num(x, y)\n    end\n    return -1\nend\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n<text>\nProblem 3\nWrite\
    \ a function that takes two positive numbers x and y and returns the\n    biggest\
    \ odd number that is in the range [x, y] inclusive. If there's no such\n    number,\
    \ then the function should return -1.", "    if x > y \n        then return -1\n\
    \    else \n        if x == y \n            then return x\n        else \n   \
    \         if x % 2 == 0 \n                then return choose_num(x / 2, y)\n \
    \           else \n                if y % 2 == 0 \n                    then return\
    \ choose_num(x, y / 2)\n                else \n                    if x % 2 ==\
    \ 0 \n                        then return choose_num(x / 2, y / 2)\n         \
    \           else \n                        if y % 2 == 0 \n                  \
    \          then return choose_num(x / 2, y)\n                        else \n \
    \                           if x % 2 == 1 \n                                then\
    \ return choose_num(x / 2, y / 2)\n                            else \n       \
    \                         if y % 2 == 1 \n                                   \
    \ then return choose_num(x, y / 2)\n                                else \n  \
    \                                  return -1\nend\n</cell>\n<code language=julia-1.3>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd number that is in\
    \ the range [x, y] inclusive. If there's no such \n    number, then the function\
    \ should return -1.", "    if x > y \n        then return choose_num(y, x)\n \
    \   else if x < y \n        then return choose_num(x, y)\n    else if x == y \n\
    \        then return x\n    else if x % 2 == 0 \n        then return choose_num(x\
    \ / 2, y)\n    else if y % 2 == 0 \n        then return choose_num(x, y / 2)\n\
    \    else return -1\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nExercise 3\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y \n        then return x\n    else \n        choose_num(x + 1, y)\n\
    end\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a positive integer n and returns the number\
    \ of \n    digits in n. For example, choose_num(12) should return 2.", "    if\
    \ x < y \n        then return choose_num(y, x)\n    else if x == y \n        then\
    \ return x\n    else \n        then return choose_num(y - 1, x)\n    end\nend\n\
    </code>\n<|/ a |>\n<| a dscore=0 |>\n<code>", "    if x < y \n        then return\
    \ choose_num(y, x)\n        else return x\n</code>\n<|/ a dscore=1 |>\n<| c |>\n\
    This doesn't work. Try it with `choose_num(12, 15)`.\n<|/ c |>\n<| c |>\nI tested\
    \ it and it works. I edited the answer to include a link to the full code.\n<|/\
    \ c |>\n<| c |>\nI tested it and it works. I edited the answer to include a link\
    \ to the full code.\n<|/ c |>\n<| c |>\nI tested it and it works. I edited the\
    \ answer to include a link to the full code.\n<|/ c |>\n<| c |>\nI tested it and\
    \ it works. I edited the answer to include a link to the full code.\n<|/ c |>\n\
    <| a dscore=1 |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n\
    \    else if x == y \n        then return x\n    else \n        then return choose_num(x\
    \ - y, y)\n    end\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n\
    </cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer number\
    \ x and returns the number of digits in x. If x is negative, return -1.", "  \
    \  if x < y \n        then return choose_num(y, x)\n        \n    if x == y \n\
    \        then return x\n        \n    if x % 2 == 0 \n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_num(x, y /\
    \ 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x /\
    \ 2, y / 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x,\
    \ y / 2)\n        \n    if x % 2 == y % 2 \n", "    if x < y \n        then return\
    \ choose_num(y, x)\n    else if x == y \n        then return x\n    else if x\
    \ % 2 == 0 \n        then return choose_num(x / 2, y)\n    else return choose_num(x\
    \ / 2, y)\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis doesn't work if you\
    \ pass it negative numbers. Try `choose_num(-10, 10)` for example\n<|/ c |>\n\
    <| c |>\nI believe it does work. Try it yourself. It returns `-1` when `choose_num(-10,\
    \ 10)` is called.\n<|/ c |>\n<| c |>\nIt doesn't work for negative numbers. Try\
    \ `choose_num(-10, -10)`\n<|/ c |>\n<| c |>\nIt returns `-1` when `choose_num(-10,\
    \ -10)` is called. Try it yourself. It returns `-1` when `choose_num(-10, 10)`\
    \ is called.\n<|/ c |>\n<| c |>\nIt returns `-1` when `choose_num(-10, -10)` is\
    \ called. Try it yourself. It returns `-1` when `choose_num(-10, 10)` is called.\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else \n        then return\
    \ choose_num(x - y, y)\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y\n        then return x\n    else if x % 2 == 0\n        then return\
    \ choose_num(x / 2, y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n<text>\n\
    Exercise 3\nWrite a function that takes a positive integer and returns the sum\
    \ of its digits. \nFor example, choose_num(12) should return 1 + 2 + 3 = 6.",
  "    if x < y \n        then return choose_num(y, x)\n        \n    else if x ==\
    \ y \n        then return x\n        \n    else if x % 2 == 0 \n        then return\
    \ choose_num(x / 2, y)\n        \n    else if y % 2 == 0 \n        then return\
    \ choose_num(x, y / 2)\n        \n    else return -1\nend\n</cell>\n<code language=julia-1.3>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ integer number x and returns the number of \ntimes it appears in the list [x,\
    \ x + 1, ..., x + n] where n is some \npositive integer.", "    if x < y \n  \
    \      then return choose_num(y, x)\n    else \n        if x == y \n         \
    \   then return x\n        else \n            if x % 2 == 0 \n               \
    \ then return choose_num(x / 2, y)\n            else \n                if y %\
    \ 2 == 0 \n                    then return choose_num(x, y / 2)\n            \
    \    else \n                    if x > y \n                        then return\
    \ choose_num(x / 2, y)\n                    else \n                        if\
    \ x < y \n                            then return choose_num(x, y / 2)\n     \
    \                   else return -1\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease\
    \ don't post only code as an answer, but also provide an explanation of what your\
    \ code does and how it solves the problem of the question. Answers with an explanation\
    \ are usually more helpful and of better quality, and are more likely to attract\
    \ upvotes.\n<|/ c |>\n<| a tags=math,algorithm,python,recursion |>\n<code>\ndef\
    \ choose_num(x: int, y: int) -> int:\n    if x < y:\n        return choose_num(y,\
    \ x)\n    elif x == y:\n        return x\n    elif x % 2 == 0:\n        return\
    \ choose_num(x / 2, y)\n    elif y % 2 == 0:\n        return choose_num(x, y /\
    \ 2)\n    else:\n        return -1\n</code>\n<|/ a dscore=0 |>\n<| a tags=math,algorithm,python,recursion\
    \ |>\n<code>\ndef choose_num(x, y):\n    if x < y:\n        return choose_num(y,\
    \ x)\n    elif x == y:\n        return x\n    elif x % 2 == 0:\n        return\
    \ choose_num(x / 2, y)\n    elif y % 2 == 0:\n        return choose_num(x, y /\
    \ 2)\n    else:\n        return -1\n</code>\n<|/ a dscore=0 |>\n<| c |>\nPlease\
    \ don't post only code as an answer, but also provide an explanation of what your\
    \ code does and how it solves the problem of the question. Answers with an explanation\
    \ are usually more helpful and of better quality, and are more likely to attract\
    \ upvotes.\n<|/ c |>\n<| a dscore=0 |>\n<code>\ndef choose_num(x, y):\n    if\
    \ x < y:\n        return choose_num(y, x)\n    elif x == y:\n        return x\n\
    \    elif x % 2 == 0:\n        return choose_num(x / 2, y)\n    elif y % 2 ==\
    \ 0:\n        return choose_num(x, y / 2)\n    else:\n        return -1\n</code>\n\
    <|/ a tags=math,algorithm,python,recursion |>\n<| a tags=math,algorithm,python,recursion\
    \ |>\n<code>\ndef choose_", "    if x < y \n        then return choose_num(y,\
    \ x)\n        \n    if x == y \n        then return x\n        \n    if x % 2\
    \ == 0 \n        then return choose_num(x / 2, y)\n        \n    if y % 2 == 0\
    \ \n        then return choose_num(x, y / 2)\n        \n    if x == y / 2\n  \
    \      then return x\n        \n    if y / 2 == x / 2\n        then return y\n\
    \        \n    return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes a positive integer\
    \ number x and returns the number of \ntimes it appears in the list [x, x + 1,\
    \ ..., x + n] inclusive.", "    if x < y \n        then return choose_num(y, x)\n\
    \    else \n        if x == y\n            then return x\n        else return\
    \ choose_num(y - 1, x)\nend\n</code>\n<|/ a |>\n<| c |>\nThis does not provide\
    \ an answer to the question. To critique or request clarification from an author,\
    \ leave a comment below their post. - [From Review](/review/low-quality-posts/29805290)\n\
    <|/ c |>\n<| c |>\nI believe this does answer the question. He asked how to find\
    \ the biggest even number in a range, and this does exactly that. He also asked\
    \ how to do it without using an if statement, and this does exactly that. He also\
    \ asked how to do it without using recursion, and this does exactly that. He also\
    \ asked how to do it without using loops, and this does exactly that. He also\
    \ asked how to do it without using any kind of loop, and this does exactly that.\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/29805290)\n<|/ c |>\n<| c |>\nThis does\
    \ not provide an answer to the question. To critique or request clarification\
    \ from an author, leave a comment below their post. - [From Review](/review/low-quality-posts/29805290)\n\
    <|/ c |>\n<| c |>\nThis does not provide an answer to the question. To critique\
    \ or request clarification from an author, leave a comment below their post. -\
    \ [From Review](/review/low-quality-posts/29805290)\n<|/ c |>\n<| a |>\n<code>",
  "    if x > y \n        then return choose_num(y, x) \n        else return x \n\
    \    else \n        then return choose_num(y, x) \n        else return -1\nend\n\
    </cell>\n<code language=julia-0.6>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes two positive numbers x and y and returns the\n\
    \    biggest odd integer number that is in the range [x, y] inclusive. If \n \
    \   there's no such number, then the function should return -1.", "    if x >\
    \ y \n        then return -1\n    else if x < y \n        then return choose_num(y,\
    \ x)\n    else return x \nend \n</cell>\n<code language=julia-1.3>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "    if x < y \n        then return choose_num(y, x)\n        \n\
    \    if x == y \n        then return x\n        \n    if x % 2 == 0 \n       \
    \ then return choose_num(x / 2, y)\n        \n    if y % 2 == 0 \n        then\
    \ return choose_num(x, y / 2)\n        \n    if x > y \n        then return choose_num(y,\
    \ x)\n        \n    return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd number that is in the range [x, y]\
    \ inclusive. If there's no such number, then the function should return -1.",
  "    if x < y \n        then return choose_num(y, x)\n        \n    if x == y \n\
    \        then return x\n        \n    if x % 2 == 0 \n        then return choose_num(x\
    \ / 2, y)\n        \n    if y % 2 == 0 \n        then return choose_num(x, y /\
    \ 2)\n        \n    if x % 2 == y % 2 \n        then return choose_num(x / 2,\
    \ y / 2)\n        \n    return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd number that is in the range [x, y]\
    \ inclusive. If there's no such \n    number, then the function should return\
    \ -1.", "    if x < y \n        then return choose_num(y, x)\n    else if x ==\
    \ y \n        then return x\n    else \n        then return choose_num(y - 1,\
    \ x)\n    end\nend\n</cell>\n<code language=julia-1.4>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes an array of numbers and returns\
    \ the sum of all the\n    numbers in the array. \n    \n    For example:\n   \
    \ >>> sum_nums([1, 2, 3, 4])\n    10\n    \"\"\"", "    if x < y \n        then\
    \ return choose_num(y, x)\n        else return x\n    end\nend\n</cell>\n<code\
    \ language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes a positive integer number x and returns the sum of its\
    \ digits. \nFor example, if the input number is 123, then the output should be\
    \ 1 + 2 + 3 = 6.", "    if x > y \n        then return choose_num(y, x)\n    else\
    \ if x < y \n        then return choose_num(x, y)\n    else return x\nend\n</cell>\n\
    <code language=julia-1.4>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite\
    \ a function that takes two positive numbers x and y and returns the\n    biggest\
    \ odd integer number that is in the range [x, y] inclusive. If \n    there's no\
    \ such number, then the function should return -1.", "    if x < y \n        then\
    \ return choose_num(y, x)\n    else if x == y \n        then return x\n    else\
    \ \n        choose_num(y - 1, x)\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<code\
    \ language=julia-1.5>\nchoose_num(13, 13)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 14)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 15)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 16)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 17)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 18)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 19)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 20)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 21)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 22)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 23)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 24)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 25)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 26)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 27)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 28)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 29)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 30)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 31)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 32)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 33)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 34)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 35)\n</cell>\n<code language=julia-1.5>\nchoose_num(13, 36)\n</cell>\n\
    <code language=julia-1.5>\nchoose_num(13, 37)\n</cell>", "    if x > y \n    \
    \    then return -1\n    else if x == y \n        then return x\n    else \n \
    \       choose_num(x + 1, y)\n    end\nend\n</code>\n<|/ a dscore=1 |>\n<| a tags=julia,recursion\
    \ |>\n<code>", "    if x < y \n        then return choose_num(y, x)\n        else\
    \ return x\n    end\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(13, 12)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes a positive integer n and returns the number of\
    \ \ndigits in the number n. For example, choose_num(12) should return 2.", " \
    \   if x > y \n        then return choose_num(y, x)\n    else if x < y \n    \
    \    then return choose_num(x, y)\n    else if x == y \n        then return x\n\
    \    else return -1\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n\
    </cell>\n<code language=julia-1.3>\nchoose_num(13, 12)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 13)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 14)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 15)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 16)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 17)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 18)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 19)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 20)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 21)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 22)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 23)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 24)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 25)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 26)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 27)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 28)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 29)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 30)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 31)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 32)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 33)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 34)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 35)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 36)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(", "    if x < y \n        then return choose_num(y, x) \n        else\
    \ return x \n    else \n        then return choose_num(y, x) \n        else return\
    \ -1 \nend \n</cell>\n<code language=julia-0.6>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that returns the factorial of a given number.\
    \ \nThe function should take one number as an argument. \nIf the given number\
    \ is 0, then it should return 1 \nIf the given number is negative, then it should\
    \ return -1. \nIf the given number is positive, then it should return the factorial\
    \ of the given number. \nThe function should return -1 if the given number is\
    \ out of range.", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y \n        then return x\n    else \n        then return choose_num(y\
    \ - 1, x)\n    end\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\n<code>",
  "    if x < y \n        then return choose_num(y, x)\n    else if x == y \n    \
    \    then return x\n    else \n        then return choose_num(y - 1, x)\n    end\n\
    end\n</cell>\n<code language=julia-1.5>", "    if x < y \n        then return\
    \ choose_num(y, x)\n        else return x\nend\n</cell>\n<code language=julia-1.5>",
  "    if x < y \n        then return choose_num(y, x)\n    else if x == y\n     \
    \   then return x\n    else if x % 2 == 0\n        then return choose_num(x /\
    \ 2, y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n<code language=julia-0.6>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd number that is in\
    \ the range [x, y] inclusive. If there's no such\n    number, then the function\
    \ should return -1.", "    if x < y \n        then return choose_num(y, x)\n \
    \       else return x\n    end\n    if x == y \n        then return x\n      \
    \  else return -1\n    end\nend\n</cell>\n<code language=julia-1.0>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 3\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y \n        then return x\n    else \n        then return choose_num(y\
    \ - 1, x)\n    end\nend\n</code>\n<|/ a tags=julia |>\n<| a tags=julia |>\n<code>",
  "    if x > y \n        then return choose_num(y, x)\n    else if x < y \n     \
    \   then return choose_num(y, x)\n    else if x == y\n        then return x\n\
    \    else if x % 2 == 0\n        then return choose_num(x / 2, y)\n    else if\
    \ y % 2 == 0\n        then return choose_num(x, y / 2)\n    else return -1\nend\n\
    </cell>\n<code language=julia-1.4>\nchoose_num(12, 15)\n</cell>\n<text>\nProblem\
    \ 3\nWrite a function that takes a positive integer $n$ and returns the number\
    \ of \ndigits in the number $n$. For example, if the number is 123, then the function\
    \ should return 3.", "    if x < y \n        then return choose_num(y, x)\n  \
    \  else if x == y \n        then return x\n    else \n        then return choose_num(x\
    \ + 1, y)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes an integer\
    \ $n$ and returns the number of digits in $n$. \nFor example, choose_num(12) should\
    \ return 2, because there are 2 digits in 12.", "    if x < y \n        then return\
    \ choose_num(y, x)\n    else if x == y\n        then return x\n    else if x %\
    \ 2 == 0\n        then return choose_num(x / 2, y)\n    else return choose_num(x\
    \ / 2, y)\nend\n</cell>\n<code language=julia-1.1>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes a positive integer $n$ and returns\
    \ the number of digits\nof $n$. For example, choose_num(12) should return 2, because\
    \ $12$ is two digits\nlong.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else \n        if x == y \n            then return x\n        else \n\
    \            if x % 2 == 0 \n                then return choose_num(x / 2, y)\n\
    \            else \n                if y % 2 == 0 \n                    then return\
    \ choose_num(x, y / 2)\n                else \n                    if x > y \n\
    \                        then return choose_num(y, x)\n                    else\
    \ return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nProblem 3\nWrite a function that takes a positive integer number x and\
    \ returns the sum of its digits. \nIf the number is negative, return 0.", "  \
    \  if x < y \n        then return choose_num(y, x)\n    else if x == y \n    \
    \    then return x\n    else if x % 2 == 0\n        then return choose_num(x /\
    \ 2, y)\n    else \n        then return choose_num(x / 2, y)\n    end\nend\n</cell>\n\
    <text>\nExercise 3\nWrite a function that takes two positive numbers x and y and\
    \ returns the\n    biggest odd number that is in the range [x, y] inclusive. If\
    \ there's no such\n    number, then the function should return -1.", "    if x\
    \ < y \n        then return choose_num(y, x)\n        else return x\n    end\n\
    end\n</cell>\n<code language=julia-1.5>", "    if x < y \n        then return\
    \ choose_num(y, x)\n    else if x == y \n        then return x\n    else \n  \
    \      then return choose_num(y - 1, x)\n    end\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer n and returns the sum of its digits. \nFor example, choose_num(12)\
    \ should return 1 + 2 = 3.", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y\n        then return x\n    else if x % 2 == 0\n    \
    \    then return choose_num(x / 2, y)\n    else return choose_num(x / 2, y)\n\
    end\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a positive integer number x and returns\
    \ the number that \nis divisible by 3 or 5 but not both. For example:\n>>> choose_num(12)\n\
    3\n>>> choose_num(15)\n5\n>>> choose_num(17)\n5\n>>> choose_num(18)\n3\n>>> choose_num(19)\n\
    3\n>>> choose_num(20)\n5\n>>> choose_num(21)\n5\n>>> choose_num(22)\n3\n>>> choose_num(23)\n\
    3\n>>> choose_num(24)\n5\n>>> choose_num(25)\n5\n>>> choose_num(26)\n3\n>>> choose_num(27)\n\
    3\n>>> choose_num(28)\n5\n>>> choose_num(29)\n5\n>>> choose_num(30)\n3\n>>> choose_num(31)\n\
    3\n>>> choose_num(32)\n5\n>>> choose_num(33)\n5\n>>> choose_num(34)\n3\n>>> choose_num(35)\n\
    3\n>>> choose_num(36)\n5\n>>> choose_num(37)\n5\n>>> choose_num(38)\n3\n>>> choose_num(39)\n\
    3\n>>> choose_num(40)\n5\n>>> choose_num(41)\n5\n>>> choose_num(42)\n3\n>>> choose_num(43)\n\
    3\n>>> choose_num(44)\n5\n>>> choose_num(45)\n5\n>>> choose_num(46)\n3\n>>> choose_num(47)\n\
    3\n>>> choose_num(48)\n5\n>>> choose_num(49)\n5\n>>> choose_num(50)\n3\n>>> choose_num(51)\n\
    3\n>>> choose_num(52)\n5\n>>> choose_num(53)\n5\n>>> choose_num(54)\n3\n>>> choose_num(55)\n\
    3\n>>> choose_num(56)\n5\n>>> cho", "    if x > y \n        then return -1\n \
    \   else if x < y \n        then return choose_num(y, x)\n    else return x\n\
    end\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.5>\n\
    choose_num(13, 12)\n</cell>\n<text>\nExercise\nWrite a function that takes two\
    \ positive numbers x and y and returns the\n    biggest odd integer number that\
    \ is in the range [x, y] inclusive. If \n    there's no such number, then the\
    \ function should return -1.", "    if x > y \n        then return -1\n    else\
    \ if x < y\n        then return choose_num(y, x)\n    else \n        x % 2 ==\
    \ 0 && y % 2 == 0\n            ? return choose_num(x / 2, y / 2)\n           \
    \ : x % 2 == 0 && y % 2 != 0\n                ? return choose_num(x / 2, y)\n\
    \                : x % 2 != 0 && y % 2 == 0\n                    ? return choose_num(x,\
    \ y / 2)\n                    : x % 2 != 0 && y % 2 != 0\n                   \
    \     ? return choose_num(x, y)\n                        : -1\nend\n</cell>\n\
    <code language=julia-1.5>", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else \n        then return\
    \ choose_num(x - y, y)\n    end\nend\n</cell>\n<code language=julia-1.1>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer\
    \ number and returns its \nfactorial. For example, factorial(5) = 5 \xD7 4 \xD7\
    \ 3 \xD7 2 \xD7 1 = 120.", "    if x > y \n        then return -1\n    else \n\
    \        if x == y \n            then return x\n        else \n            if\
    \ x % 2 == 0 \n                then return choose_num(x / 2, y)\n            else\
    \ \n                if y % 2 == 0 \n                    then return choose_num(x,\
    \ y / 2)\n                else \n                    if x > y \n             \
    \           then return choose_num(x / 2, y)\n                    else \n    \
    \                    if x < y \n                            then return choose_num(x,\
    \ y / 2)\n                        else return -1\n</code>\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\n<code>", "    if x > y \n        then return -1\n    else if\
    \ x < y \n        then return choose_num(y, x)\n    else return x\nend\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise 3\nWrite\
    \ a function that takes a positive integer n and returns True if n is even, False\
    \ otherwise.", "    if x < y \n        then return choose_num(y, x)\n    else\
    \ if x == y\n        then return x\n    else if x % 2 == 0\n        then return\
    \ choose_num(x / 2, y)\n    else return choose_num(x / 2, y)\nend\n</cell>\n<code\
    \ language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 12)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 13)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 14)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 15)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 16)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 17)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 18)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 19)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 20)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 21)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 22)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 23)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 24)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 25)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 26)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 27)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 28)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 29)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 30)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 31)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 32)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 33)\n</cell>\n<code language=julia-1.0>\nchoose_num(13, 34)\n</cell>\n\
    <code language=julia-1.0>\nchoose_num(13, 35)\n</cell>\n<code language=julia-1.0>\n\
    choose_num(13, 36)\n</cell>", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else \n        then return\
    \ choose_num(y - 1, x)\n    end\nend\n</cell>\n<text>\nExercise 3\nWrite a function\
    \ that takes two positive numbers x and y and returns the\n    biggest odd number\
    \ that is in the range [x, y] inclusive. If there's no such\n    number, then\
    \ the function should return -1.", "    if x > y \n        then return -1\n  \
    \  else if x == y \n        then return x\n    else \n        choose_num(x + 1,\
    \ y)\nend\n</cell>\n<text>\nExercise 3\nWrite a function that takes a positive\
    \ integer number and returns its factorial. \nFor example, factorial(5) = 5 x\
    \ 4 x 3 x 2 x 1 = 120", "    if x < y \n        then return choose_num(y, x)\n\
    \    else if x == y \n        then return x\n    else \n        choose_num(y -\
    \ 1, x)\n    end\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nThis doesn't work\
    \ if x is negative and y is positive.\n<|/ c |>\n<| c |>\nYes, I forgot about\
    \ that case. I've added a version that does work. Thanks!\n<|/ c |>\n<| a |>\n\
    <code>", "    if x < y \n        then return choose_num(y, x)\n    else if x ==\
    \ y\n        then return x\n    else if x % 2 == 0\n        then return choose_num(x\
    \ / 2, y)\n    else return choose_num(x / 2, y)\nend\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 |>\n<code>", "    if x < y \n        then return choose_num(y,\
    \ x)\n    else if x == y \n        then return x\n    else \n        choose_num(y\
    \ - 1, x)\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n\
    <text>\nExercise 2\nWrite a function that takes two positive numbers x and y and\
    \ returns the\n    biggest odd integer number that is in the range [x, y] inclusive.\
    \ If \n    there's no such number, then the function should return -1.", "   \
    \ if x < y \n        then return choose_num(y, x)\n    else if x == y \n     \
    \   then return x\n    else \n        choose_num(x - 2, y + 1)\n    end\nend\n\
    </cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes two positive numbers x and y and returns the\n\
    \    biggest odd integer number that is in the range [x, y] inclusive. If \n \
    \   there's no such number, then the function should return -1.", "    if x >\
    \ y \n        then return choose_num(y, x)\n        \n    else if x < y \n   \
    \     then return choose_num(x, y)\n        \n    else if x == y \n        then\
    \ return x\n        \n    else if x % 2 == 0\n        then return choose_num(x/2,\
    \ y)\n        \n    else if y % 2 == 0\n        then return choose_num(x, y/2)\n\
    \        \n    else return -1\nend\n</cell>\n<code language=julia-1.4>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a positive integer\
    \ and returns the next bigger even number.", "    if x > y \n        then return\
    \ -1\n    else if x < y\n        then return choose_num(y, x)\n    else return\
    \ x\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes a positive integer number and returns\
    \ its factorial. \nFor example, factorial(5) = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1",
  "    if x < y \n        then return choose_num(y, x)\n        else return x\n  \
    \  end\nend\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 12)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(12, 13)\n</cell>\n<code language=julia-1.3>\nchoose_num(12, 15)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 14)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 15)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 16)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 17)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 18)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 19)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 20)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 21)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 22)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 23)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 24)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 25)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 26)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 27)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 28)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 29)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 30)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 31)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 32)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 33)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 34)\n</cell>\n\
    <code language=julia-1.3>\nchoose_num(13, 35)\n</cell>\n<code language=julia-1.3>\n\
    choose_num(13, 36)\n</cell>\n<code language=julia-1.3>\nchoose_num(13, 37)\n</cell>",
  "    if x > y \n        then return -1\n    else if x < y \n        then return\
    \ choose_num(y, x)\n    else return x\nend\n</cell>\n<code language=julia-1.3>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes a\
    \ positive integer number and returns its \nfactorial. For example, factorial(5)\
    \ = 5 \xD7 4 \xD7 3 \xD7 2 \xD7 1 = 120.", "    if x > y \n        then return\
    \ choose_num(y, x)\n        \n    else if x < y \n        then return choose_num(y,\
    \ x)\n        \n    else if x == y \n        then return x\n        \n    else\
    \ \n        then return -1\nend\n</cell>\n<code language=julia-1.5>\nchoose_num(12,\
    \ 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes two positive numbers\
    \ x and y and returns the\n    biggest odd integer number that is in the range\
    \ [x, y] inclusive. If \n    there's no such number, then the function should\
    \ return -1.", "    if x > y \n        then return -1\n    else if x < y \n  \
    \      then return choose_num(y, x)\n    else return x\nend\n</cell>\n<code language=julia-1.0>\n\
    choose_num(12, 15)\n</cell>\n<text>\nExercise 2\nWrite a function that takes an\
    \ integer n and returns n raised to the power of 2. \nFor example, choose_num(2)\
    \ should return 4.", "    if x <= y \n        then return x\n    else return y\n\
    end\n</cell>\n<code language=julia-1.0>\nchoose_num(12, 15)\n</cell>\n<text>\n\
    Exercise 2\nWrite a function that takes two positive numbers x and y and returns\
    \ the\n    biggest odd integer number that is in the range [x, y] inclusive. If\
    \ \n    there's no such number, then the function should return -1."]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"
